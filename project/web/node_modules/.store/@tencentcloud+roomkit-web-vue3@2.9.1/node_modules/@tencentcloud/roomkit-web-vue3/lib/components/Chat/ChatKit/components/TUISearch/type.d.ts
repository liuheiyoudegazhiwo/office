export type SEARCH_TYPE = 'global' | 'conversation';
export declare const messageTypeAbstractMap: Record<string, string>;
export declare const searchResultItemDisplayType: {
    INFO: string;
    BUBBLE: string;
    FILE: string;
    IMAGE: string;
};
export type searchResultItemDisplayTypeKeys = keyof typeof searchResultItemDisplayType;
export type searchResultItemDisplayTypeValues = typeof searchResultItemDisplayType[searchResultItemDisplayTypeKeys];
export declare const searchMessageType: {
    ALL_MESSAGE: string;
    TEXT_MESSAGE: string;
    IMAGE_MESSAGE: string;
    FILE_MESSAGE: string;
    OTHER_MESSAGE: string;
};
export type searchMessageTypeKeys = keyof typeof searchMessageType;
export type searchMessageTypeValues = typeof searchMessageType[searchMessageTypeKeys];
export interface ISearchInputValue {
    value: string;
    searchType: SEARCH_TYPE;
}
export interface ISearchTypeTab {
    key: string;
    label: string;
    value: string | string[];
}
export interface ISearchMessageType {
    value: ISearchTypeTab;
    searchType: SEARCH_TYPE;
}
export interface ISearchTimeTab {
    key: string;
    label: string;
    value: {
        timePosition: number;
        timePeriod: number;
    };
}
export interface ISearchMessageTime {
    value: ISearchTimeTab;
    searchType: SEARCH_TYPE;
}
export interface ISearchingStatus {
    isSearching: boolean;
    searchType: string;
}
export interface IHighlightContent {
    text: string;
    isHighlight: boolean;
}
