import { LAYOUT } from '../constants/render';
import { TUINetwork } from '../../../node_modules/@tencentcloud/tuiroom-engine-js';

type SideBarType = 'chat' | 'invite' | 'manage-member' | 'more' | 'transfer-leave' | 'apply' | 'aiTranscription' | '';
type SceneType = 'chat' | 'default';
interface BasicState {
    sdkAppId: number;
    userId: string;
    userSig: string;
    userName: string;
    avatarUrl?: string;
    useStringRoomId: boolean;
    roomId: string;
    roomMode: 'FreeSpeech' | 'ApplySpeech';
    isSidebarOpen: boolean;
    showSettingDialog: boolean;
    showApplyUserList: boolean;
    activeSettingTab: string;
    layout: LAYOUT;
    isLocalStreamMirror: boolean;
    isFrontCamera: boolean;
    sidebarName: SideBarType;
    masterUserId: string;
    localQuality: number;
    networkInfo: TUINetwork;
    lang: string;
    defaultTheme: string;
    isSupportSwitchTheme: boolean;
    showHeaderTool: boolean;
    shareLink: string;
    isRoomLinkVisible: boolean;
    isSchemeLinkVisible: boolean;
    isShowScreenShareAntiFraud: boolean;
    isExperiencedAI: boolean;
    isOpenMic: boolean;
    scene: SceneType;
    componentConfig: {
        InviteControl: {
            visible?: boolean;
            [key: string]: any;
        };
        SwitchTheme: {
            visible?: boolean;
            [key: string]: any;
        };
        RoomLink: {
            visible?: boolean;
            [key: string]: any;
        };
        [key: string]: {
            visible?: boolean;
            [key: string]: any;
        };
    };
    showRoomTool: boolean;
}
export declare const useBasicStore: import('pinia').StoreDefinition<"basic", BasicState, {}, {
    setSdkAppId(sdkAppId: number): void;
    setUserId(userId: string): void;
    setUserSig(userSig: string): void;
    setUserName(userName: string): void;
    setAvatarUrl(avatarUrl: string): void;
    setRoomId(roomId: string): void;
    setSidebarOpenStatus(isOpen: boolean): void;
    setSidebarName(name: SideBarType): void;
    setLayout(layout: LAYOUT): void;
    setShowSettingDialog(show: boolean): void;
    setShowApplyUserList(show: boolean): void;
    setActiveSettingTab(tabName: string): void;
    setIsLocalStreamMirror(mirror: boolean): void;
    setIsFrontCamera(isFront: boolean): void;
    setDefaultTheme(defaultTheme: string): void;
    setIsSupportSwitchTheme(isSupportSwitchTheme: boolean): void;
    setShowHeaderTool(showHeaderTool: boolean): void;
    setShareLink(shareLink: string): void;
    setIsRoomLinkVisible(isRoomLinkVisible: boolean): void;
    setIsSchemeLinkVisible(isSchemeLinkVisible: boolean): void;
    setIsShowScreenShareAntiFraud(isShowScreenShareAntiFraud: boolean): void;
    setIsExperiencedAI(isExperiencedAI: boolean): void;
    setBasicInfo(infoObj: any): void;
    setMasterUserId(userId: string): void;
    setLocalQuality(userNetworkList: any[]): void;
    setNetworkInfo(networkInfo: TUINetwork): void;
    setLang(lang: string): void;
    setIsOpenMic(isOpen: boolean): void;
    setScene(scene: SceneType): void;
    setShowRoomTool(isShow: boolean): void;
    reset(): void;
}>;
export {};
