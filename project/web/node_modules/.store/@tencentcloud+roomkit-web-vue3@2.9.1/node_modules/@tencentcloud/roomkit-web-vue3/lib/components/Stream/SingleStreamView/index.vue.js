"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const StreamRegionPC = require("../common/StreamRegion/StreamRegionPC.vue.js");
const environment = require("../../../utils/environment.js");
const mediaManager = require("../../../services/manager/mediaManager.js");
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  props: {
    streamInfo: {},
    fillMode: {},
    supportTouchScale: { type: Boolean }
  },
  emits: ["stream-view-dblclick"],
  setup(__props) {
    const aspectRatio = Vue.ref(environment.isPC ? "16:9" : "auto");
    return (_ctx, _cache) => {
      return _ctx.streamInfo ? (Vue.openBlock(), Vue.createBlock(Vue.unref(StreamRegionPC.default), {
        key: 0,
        "stream-info": _ctx.streamInfo,
        "fill-mode": _ctx.fillMode,
        "support-touch-scale": _ctx.supportTouchScale,
        "stream-play-quality": Vue.unref(mediaManager.StreamPlayQuality).HIGH,
        "aspect-ratio": aspectRatio.value,
        onStreamViewDblclick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("stream-view-dblclick"))
      }, null, 8, ["stream-info", "fill-mode", "support-touch-scale", "stream-play-quality", "aspect-ratio"])) : Vue.createCommentVNode("", true);
    };
  }
});
exports.default = _sfc_main;
