"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const AudioControl = require("../AudioControl.vue.js");
const VideoControl = require("../VideoControl.vue.js");
const ManageMemberControl_vue_vue_type_script_setup_true_lang = require("../ManageMemberControl.vue.js");
const ChatControl_vue_vue_type_script_setup_true_lang = require("../ChatControl.vue.js");
const ManageStageControl_vue_vue_type_script_setup_true_lang = require("../ManageStageControl.vue.js");
const MemberApplyControl = require("../ApplyControl/MemberApplyControl.vue.js");
const index = require("../MoreControl/index.js");
const useMitt = require("../../../hooks/useMitt.js");
const vTap = require("../../../directives/vTap.js");
const useRoomFooterHooks = require("./useRoomFooterHooks.js");
const _hoisted_1 = { class: "footer-container" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "indexH5",
  emits: ["show-overlay"],
  setup(__props, { emit: __emit }) {
    const { roomStore, isMaster, isAdmin, isAudience } = useRoomFooterHooks.default();
    const emit = __emit;
    function handleControlClick(name) {
      useMitt.default.emit("experience-communication", name);
    }
    function handleShowOverlay(data) {
      emit("show-overlay", data);
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        !Vue.unref(isAudience) || Vue.unref(isAdmin) ? Vue.withDirectives((Vue.openBlock(), Vue.createBlock(AudioControl.default, { key: 0 }, null, 512)), [
          [Vue.unref(vTap.default), () => handleControlClick("audioControl")]
        ]) : Vue.createCommentVNode("", true),
        !Vue.unref(isAudience) || Vue.unref(isAdmin) ? Vue.withDirectives((Vue.openBlock(), Vue.createBlock(VideoControl.default, { key: 1 }, null, 512)), [
          [Vue.unref(vTap.default), () => handleControlClick("videoControl")]
        ]) : Vue.createCommentVNode("", true),
        !Vue.unref(roomStore).isSpeakAfterTakingSeatMode ? Vue.withDirectives((Vue.openBlock(), Vue.createBlock(ChatControl_vue_vue_type_script_setup_true_lang.default, { key: 2 }, null, 512)), [
          [Vue.unref(vTap.default), () => handleControlClick("chatControl")]
        ]) : Vue.createCommentVNode("", true),
        Vue.unref(roomStore).isSpeakAfterTakingSeatMode && (Vue.unref(isMaster) || Vue.unref(isAdmin)) ? Vue.withDirectives((Vue.openBlock(), Vue.createBlock(ManageStageControl_vue_vue_type_script_setup_true_lang.default, { key: 3 }, null, 512)), [
          [Vue.unref(vTap.default), () => handleControlClick("MasterApplyControl")]
        ]) : Vue.createCommentVNode("", true),
        Vue.unref(roomStore).isSpeakAfterTakingSeatMode && !Vue.unref(isMaster) ? Vue.withDirectives((Vue.openBlock(), Vue.createBlock(MemberApplyControl.default, { key: 4 }, null, 512)), [
          [Vue.unref(vTap.default), () => handleControlClick("MemberApplyControl")]
        ]) : Vue.createCommentVNode("", true),
        Vue.withDirectives(Vue.createVNode(ManageMemberControl_vue_vue_type_script_setup_true_lang.default, null, null, 512), [
          [Vue.unref(vTap.default), () => handleControlClick("manageMemberControl")]
        ]),
        Vue.withDirectives(Vue.createVNode(Vue.unref(index.default), { onShowOverlay: handleShowOverlay }, null, 512), [
          [Vue.unref(vTap.default), () => handleControlClick("moreControl")]
        ])
      ]);
    };
  }
});
exports.default = _sfc_main;
