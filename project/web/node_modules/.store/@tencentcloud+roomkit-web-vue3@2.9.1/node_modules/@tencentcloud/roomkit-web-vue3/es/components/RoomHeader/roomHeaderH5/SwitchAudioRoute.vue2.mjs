import { defineComponent, ref, computed, createElementBlock, openBlock, withDirectives, createVNode, unref } from "vue";
import useDeviceManager from "../../../hooks/useDeviceManager.mjs";
import SvgIcon from "../../common/base/SvgIcon.vue.mjs";
import SpeakerPhoneIcon from "../../common/icons/SpeakerPhoneIcon.vue.mjs";
import EarpieceIcon from "../../common/icons/EarpieceIcon.vue.mjs";
import { TUIAudioRoute } from "@tencentcloud/tuiroom-engine-js";
import vTap from "../../../directives/vTap.mjs";
const _hoisted_1 = { class: "audio-route-icon" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "SwitchAudioRoute",
  setup(__props) {
    const { deviceManager } = useDeviceManager();
    const currentAudioRoute = ref(
      TUIAudioRoute.kAudioRouteSpeakerphone
    );
    const icon = computed(
      () => currentAudioRoute.value === TUIAudioRoute.kAudioRouteSpeakerphone ? SpeakerPhoneIcon : EarpieceIcon
    );
    async function handleSwitchAudioRoute() {
      var _a;
      const audioRoute = currentAudioRoute.value === TUIAudioRoute.kAudioRouteSpeakerphone ? TUIAudioRoute.kAudioRouteEarpiece : TUIAudioRoute.kAudioRouteSpeakerphone;
      await ((_a = deviceManager.instance) == null ? void 0 : _a.setAudioRoute({
        route: audioRoute
      }));
      currentAudioRoute.value = audioRoute;
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        withDirectives(createVNode(SvgIcon, { icon: icon.value }, null, 8, ["icon"]), [
          [unref(vTap), handleSwitchAudioRoute]
        ])
      ]);
    };
  }
});
export {
  _sfc_main as default
};
