declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    userInfo: {
        userId: string;
        userName: string;
        avatarUrl: string;
    };
    showEditNameInPc: boolean;
    roomId: string;
    enableScheduledConference: boolean;
    isShowLogo?: boolean;
    isShowHeaderInfo?: boolean;
}>, {
    userInfo: () => {
        userId: string;
        userName: string;
        avatarUrl: string;
    };
    showEditNameInPc: boolean;
    roomId: string;
    enableScheduledConference: boolean;
    isShowLogo: boolean;
    isShowHeaderInfo: boolean;
}>>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "on-create-room": (...args: any[]) => void;
    "on-enter-room": (...args: any[]) => void;
    "on-update-user-name": (...args: any[]) => void;
    "on-logout": (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    userInfo: {
        userId: string;
        userName: string;
        avatarUrl: string;
    };
    showEditNameInPc: boolean;
    roomId: string;
    enableScheduledConference: boolean;
    isShowLogo?: boolean;
    isShowHeaderInfo?: boolean;
}>, {
    userInfo: () => {
        userId: string;
        userName: string;
        avatarUrl: string;
    };
    showEditNameInPc: boolean;
    roomId: string;
    enableScheduledConference: boolean;
    isShowLogo: boolean;
    isShowHeaderInfo: boolean;
}>>> & Readonly<{
    "onOn-create-room"?: ((...args: any[]) => any) | undefined;
    "onOn-enter-room"?: ((...args: any[]) => any) | undefined;
    "onOn-update-user-name"?: ((...args: any[]) => any) | undefined;
    "onOn-logout"?: ((...args: any[]) => any) | undefined;
}>, {
    roomId: string;
    userInfo: {
        userId: string;
        userName: string;
        avatarUrl: string;
    };
    enableScheduledConference: boolean;
    showEditNameInPc: boolean;
    isShowLogo: boolean;
    isShowHeaderInfo: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
