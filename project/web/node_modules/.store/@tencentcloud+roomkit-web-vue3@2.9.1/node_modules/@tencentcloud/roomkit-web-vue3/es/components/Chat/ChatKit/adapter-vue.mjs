var _a, _b, _c, _d, _e, _f;
import * as Vue from "vue";
export * from "vue";
let vueVersion;
let framework = "vue2";
let createVNode = (arg1, arg2) => {
  return {};
};
let render = (arg1, arg2) => {
  return;
};
try {
  if (((_a = Vue == null ? void 0 : Vue.default) == null ? void 0 : _a.version) && ((_c = (_b = Vue == null ? void 0 : Vue.default) == null ? void 0 : _b.version) == null ? void 0 : _c.startsWith("2.7."))) {
    vueVersion = 2.7;
  } else if (((_d = Vue == null ? void 0 : Vue.default) == null ? void 0 : _d.version) && ((_f = (_e = Vue == null ? void 0 : Vue.default) == null ? void 0 : _e.version) == null ? void 0 : _f.startsWith("2."))) {
    vueVersion = 2;
  } else {
    vueVersion = 3;
    framework = "vue3";
    createVNode = Vue == null ? void 0 : Vue.createVNode;
    render = Vue == null ? void 0 : Vue.render;
  }
} catch (error) {
  vueVersion = 3;
  framework = "vue3";
  createVNode = Vue == null ? void 0 : Vue.createVNode;
  render = Vue == null ? void 0 : Vue.render;
}
console.warn(`[adapter-vue]: vue version is ${vueVersion}`);
export {
  createVNode,
  framework,
  render,
  vueVersion
};
