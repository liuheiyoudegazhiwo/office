import { defineComponent, createElementBlock, openBlock, createElementVNode, withDirectives, toDisplayString, unref, createTextVNode, Fragment, renderList, createVNode } from "vue";
import useRoomMoreHooks from "./useRoomMoreHooks.mjs";
import SvgIcon from "../common/base/SvgIcon.vue.mjs";
import copyIcon from "../common/icons/CopyIcon.vue.mjs";
import vTap from "../../directives/vTap.mjs";
const _hoisted_1 = { class: "contact-container-main" };
const _hoisted_2 = { class: "contact-title-main" };
const _hoisted_3 = { class: "cancel" };
const _hoisted_4 = { class: "contact-title" };
const _hoisted_5 = { class: "contact-content" };
const _hoisted_6 = { class: "contact-bottom" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "indexH5",
  emits: ["on-close-contact"],
  setup(__props, { emit: __emit }) {
    const { t, onCopy, contactContentList } = useRoomMoreHooks();
    const emit = __emit;
    function handleCloseContact() {
      emit("on-close-contact");
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createElementVNode("div", _hoisted_2, [
          createElementVNode("div", null, toDisplayString(unref(t)("Contact us")), 1),
          withDirectives((openBlock(), createElementBlock("span", _hoisted_3, [
            createTextVNode(toDisplayString(unref(t)("Cancel")), 1)
          ])), [
            [unref(vTap), handleCloseContact]
          ])
        ]),
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(contactContentList), (item) => {
          return openBlock(), createElementBlock("div", {
            key: item.id,
            class: "contact-content-main"
          }, [
            createElementVNode("span", _hoisted_4, toDisplayString(unref(t)(item.title)), 1),
            createElementVNode("span", _hoisted_5, toDisplayString(item.content), 1),
            withDirectives(createVNode(SvgIcon, {
              icon: copyIcon,
              class: "copy"
            }, null, 512), [
              [unref(vTap), () => unref(onCopy)(item.copyLink)]
            ])
          ]);
        }), 128)),
        createElementVNode("span", _hoisted_6, toDisplayString(unref(t)(
          "If you have any questions, please feel free to join our QQ group or send an email"
        )), 1)
      ]);
    };
  }
});
export {
  _sfc_main as default
};
