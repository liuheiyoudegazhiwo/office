"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const IconButton = require("../common/base/IconButton.vue.js");
const basic = require("../../stores/basic.js");
const MoreIcon = require("../common/icons/MoreIcon.vue.js");
const pinia = require("pinia");
const index = require("../../locales/index.js");
const environment = require("../../utils/environment.js");
const index$1 = require("../RoomMore/index.js");
const _hoisted_1 = { class: "more-control-container" };
const _hoisted_2 = {
  key: 0,
  class: "contact-container"
};
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "ContactControl",
  setup(__props) {
    const basicStore = basic.useBasicStore();
    const { sidebarName } = pinia.storeToRefs(basicStore);
    const { t } = index.useI18n();
    const isShowContactTab = Vue.ref(false);
    const contactRef = Vue.ref();
    function toggleContactSidebar() {
      if (!environment.isMobile) {
        if (basicStore.setSidebarOpenStatus && basicStore.sidebarName === "more") {
          basicStore.setSidebarOpenStatus(false);
          basicStore.setSidebarName("");
          return;
        }
        basicStore.setSidebarOpenStatus(true);
        basicStore.setSidebarName("more");
      } else {
        isShowContactTab.value = true;
        if (basicStore.sidebarName === "more") {
          basicStore.setSidebarName("");
          return;
        }
        basicStore.setSidebarName("more");
      }
    }
    function handleOnCloseContact() {
      isShowContactTab.value = false;
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.createVNode(IconButton.default, {
          icon: MoreIcon.default,
          "is-active": Vue.unref(sidebarName) === "more",
          title: Vue.unref(t)("Contact us"),
          onClickIcon: toggleContactSidebar
        }, null, 8, ["is-active", "title"]),
        isShowContactTab.value ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_2, [
          Vue.createVNode(Vue.unref(index$1.default), {
            ref_key: "contactRef",
            ref: contactRef,
            onOnCloseContact: handleOnCloseContact
          }, null, 512)
        ])) : Vue.createCommentVNode("", true)
      ]);
    };
  }
});
exports.default = _sfc_main;
