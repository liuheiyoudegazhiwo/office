"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const TUIChatEngine = require("@tencentcloud/chat-uikit-engine");
require("../../../../adapter-vue.js");
const index = require("../toolbar-item-container/index.vue.js");
const fileLight = require("../../../../assets/icon/file-light.svg.js");
const fileDark = require("../../../../assets/icon/file-dark.svg.js");
const env = require("../../../../utils/env.js");
const utils = require("../../utils/utils.js");
const index$1 = require("../../offlinePushInfoManager/index.js");
const config = require("../../config.js");
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  setup(__props) {
    const fileIcon = config.default.getTheme() === "dark" ? fileDark.default : fileLight.default;
    const inputRef = Vue.ref();
    const currentConversation = Vue.ref();
    TUIChatEngine.TUIStore.watch(TUIChatEngine.StoreName.CONV, {
      currentConversation: (conversation) => {
        currentConversation.value = conversation;
      }
    });
    const onIconClick = () => {
      var _a, _b;
      if (env.isUniFrameWork) {
        return;
      } else {
        ((_a = inputRef == null ? void 0 : inputRef.value) == null ? void 0 : _a.click) && ((_b = inputRef == null ? void 0 : inputRef.value) == null ? void 0 : _b.click());
      }
    };
    const sendFileMessage = (e) => {
      var _a, _b, _c, _d, _e, _f, _g;
      if (((_b = (_a = e == null ? void 0 : e.target) == null ? void 0 : _a.files) == null ? void 0 : _b.length) <= 0) {
        return;
      }
      const options = {
        to: ((_d = (_c = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _c.groupProfile) == null ? void 0 : _d.groupID) || ((_f = (_e = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _e.userProfile) == null ? void 0 : _f.userID),
        conversationType: (_g = currentConversation == null ? void 0 : currentConversation.value) == null ? void 0 : _g.type,
        payload: {
          file: e == null ? void 0 : e.target
        },
        needReadReceipt: utils.isEnabledMessageReadReceiptGlobal()
      };
      const offlinePushInfoCreateParams = {
        conversation: currentConversation.value,
        payload: options.payload,
        messageType: TUIChatEngine.TYPES.MSG_FILE
      };
      const sendMessageOptions = {
        offlinePushInfo: index$1.default.create(offlinePushInfoCreateParams)
      };
      TUIChatEngine.TUIChatService.sendFileMessage(options, sendMessageOptions);
      e.target.value = "";
    };
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(index.default, {
        iconFile: Vue.unref(fileIcon),
        title: "文件",
        iconWidth: Vue.unref(env.isUniFrameWork) ? "32px" : "20px",
        iconHeight: Vue.unref(env.isUniFrameWork) ? "25px" : "18px",
        needDialog: false,
        onOnIconClick: onIconClick
      }, {
        default: Vue.withCtx(() => [
          Vue.createElementVNode("div", {
            class: Vue.normalizeClass(["file-upload", !Vue.unref(env.isPC) && "file-upload-h5"])
          }, [
            Vue.createElementVNode("input", {
              ref_key: "inputRef",
              ref: inputRef,
              title: "文件",
              type: "file",
              "data-type": "file",
              accept: "*",
              onChange: sendFileMessage
            }, null, 544)
          ], 2)
        ]),
        _: 1
      }, 8, ["iconFile", "iconWidth", "iconHeight"]);
    };
  }
});
exports.default = _sfc_main;
