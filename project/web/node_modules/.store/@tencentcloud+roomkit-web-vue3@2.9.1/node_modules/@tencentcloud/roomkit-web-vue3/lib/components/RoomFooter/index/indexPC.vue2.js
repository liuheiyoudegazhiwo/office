"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const AudioControl = require("../AudioControl.vue.js");
const Index = require("../ScreenShareControl/Index.vue.js");
const FullScreenControl_vue_vue_type_script_setup_true_lang = require("../FullScreenControl.vue.js");
const InviteControl = require("../InviteControl.vue.js");
const VideoControl = require("../VideoControl.vue.js");
const ManageMemberControl_vue_vue_type_script_setup_true_lang = require("../ManageMemberControl.vue.js");
const ChatControl_vue_vue_type_script_setup_true_lang = require("../ChatControl.vue.js");
const ManageStageControl_vue_vue_type_script_setup_true_lang = require("../ManageStageControl.vue.js");
const MemberApplyControl = require("../ApplyControl/MemberApplyControl.vue.js");
const index = require("../MoreControl/index.js");
const index$1 = require("../EndControl/index.js");
const SettingControl_vue_vue_type_script_setup_true_lang = require("../SettingControl.vue.js");
const WhiteboardControl = require("../WhiteboardControl.vue.js");
const VirtualBackground = require("../VirtualBackground.vue.js");
const AIControl = require("../AIControl.vue.js");
const BasicBeauty = require("../BasicBeauty.vue.js");
const useMitt = require("../../../hooks/useMitt.js");
const useRoomFooterHooks = require("./useRoomFooterHooks.js");
const environment = require("../../../utils/environment.js");
const _hoisted_1 = { class: "footer-container" };
const _hoisted_2 = { class: "left-container" };
const _hoisted_3 = { class: "center-container" };
const _hoisted_4 = { class: "right-container" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "indexPC",
  setup(__props) {
    const { roomStore, isMaster, isAdmin, isAudience } = useRoomFooterHooks.default();
    function handleControlClick(name) {
      useMitt.default.emit("experience-communication", name);
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.createElementVNode("div", _hoisted_2, [
          !Vue.unref(isAudience) || Vue.unref(isAdmin) ? (Vue.openBlock(), Vue.createBlock(AudioControl.default, {
            key: 0,
            class: "left-container-item",
            onClick: _cache[0] || (_cache[0] = ($event) => handleControlClick("audioControl"))
          })) : Vue.createCommentVNode("", true),
          !Vue.unref(isAudience) || Vue.unref(isAdmin) ? (Vue.openBlock(), Vue.createBlock(VideoControl.default, {
            key: 1,
            class: "left-container-item",
            onClick: _cache[1] || (_cache[1] = ($event) => handleControlClick("videoControl"))
          })) : Vue.createCommentVNode("", true),
          Vue.unref(roomStore).isSpeakAfterTakingSeatMode && !Vue.unref(isMaster) ? (Vue.openBlock(), Vue.createBlock(MemberApplyControl.default, {
            key: 2,
            class: "left-container-item",
            onClick: _cache[2] || (_cache[2] = ($event) => handleControlClick("MemberApplyControl"))
          })) : Vue.createCommentVNode("", true)
        ]),
        Vue.createElementVNode("div", _hoisted_3, [
          Vue.createVNode(Index.default, {
            class: "center-container-item",
            onClick: _cache[3] || (_cache[3] = ($event) => handleControlClick("screenShareControl"))
          }),
          Vue.unref(environment.isElectron) ? (Vue.openBlock(), Vue.createBlock(WhiteboardControl.default, {
            key: 0,
            class: "center-container-item",
            onClick: _cache[4] || (_cache[4] = ($event) => handleControlClick("whiteboard"))
          })) : Vue.createCommentVNode("", true),
          Vue.createVNode(FullScreenControl_vue_vue_type_script_setup_true_lang.default, {
            class: "center-container-item",
            onClick: _cache[5] || (_cache[5] = ($event) => handleControlClick("fullScreenControl"))
          }),
          Vue.createVNode(ManageMemberControl_vue_vue_type_script_setup_true_lang.default, {
            class: "center-container-item",
            onClick: _cache[6] || (_cache[6] = ($event) => handleControlClick("manageMemberControl"))
          }),
          Vue.createVNode(InviteControl.default, {
            class: "center-container-item",
            onClick: _cache[7] || (_cache[7] = ($event) => handleControlClick("inviteControl"))
          }),
          Vue.createVNode(ChatControl_vue_vue_type_script_setup_true_lang.default, {
            class: "center-container-item",
            onClick: _cache[8] || (_cache[8] = ($event) => handleControlClick("chatControl"))
          }),
          Vue.unref(roomStore).isSpeakAfterTakingSeatMode && (Vue.unref(isMaster) || Vue.unref(isAdmin)) ? (Vue.openBlock(), Vue.createBlock(ManageStageControl_vue_vue_type_script_setup_true_lang.default, {
            key: 1,
            class: "center-container-item",
            onClick: _cache[9] || (_cache[9] = ($event) => handleControlClick("MasterApplyControl"))
          })) : Vue.createCommentVNode("", true),
          Vue.createVNode(Vue.unref(index.default), {
            class: "center-container-item",
            onClick: _cache[10] || (_cache[10] = ($event) => handleControlClick("moreControl"))
          }),
          Vue.createVNode(AIControl.default, {
            class: "center-container-item",
            onClick: _cache[11] || (_cache[11] = ($event) => handleControlClick("AIControl"))
          }),
          Vue.createVNode(SettingControl_vue_vue_type_script_setup_true_lang.default, {
            class: "center-container-item",
            onClick: _cache[12] || (_cache[12] = ($event) => handleControlClick("settingControl"))
          }),
          Vue.createVNode(VirtualBackground.default, { class: "center-container-item" }),
          !Vue.unref(environment.isElectron) ? (Vue.openBlock(), Vue.createBlock(BasicBeauty.default, {
            key: 2,
            class: "center-container-item"
          })) : Vue.createCommentVNode("", true)
        ]),
        Vue.createElementVNode("div", _hoisted_4, [
          Vue.createVNode(Vue.unref(index$1.default))
        ])
      ]);
    };
  }
});
exports.default = _sfc_main;
