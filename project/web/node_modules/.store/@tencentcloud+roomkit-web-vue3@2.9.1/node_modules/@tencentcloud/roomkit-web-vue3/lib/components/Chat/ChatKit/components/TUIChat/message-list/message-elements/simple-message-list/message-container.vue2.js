"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../../../adapter-vue.js");
const TUIChatEngine = require("@tencentcloud/chat-uikit-engine");
const index = require("../../../../common/Avatar/index.vue.js");
const utils = require("../../../utils/utils.js");
const _hoisted_1 = { class: "simple-message-container" };
const _hoisted_2 = { class: "simple-message-avatar" };
const _hoisted_3 = { class: "simple-message-sender" };
const _hoisted_4 = { class: "simple-message-body" };
const _hoisted_5 = { class: "timestamp" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "message-container",
  props: {
    sender: { default: "" },
    avatar: { default: "" },
    type: {},
    time: {}
  },
  setup(__props) {
    const props = __props;
    const TYPES = TUIChatEngine.TYPES;
    const isNoPadding = Vue.computed(() => {
      return [TYPES.MSG_IMAGE, TYPES.MSG_VIDEO, TYPES.MSG_MERGER].includes(props.type);
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.createElementVNode("div", _hoisted_2, [
          Vue.createVNode(index.default, {
            url: props.avatar
          }, null, 8, ["url"])
        ]),
        Vue.createElementVNode("div", null, [
          Vue.createElementVNode("div", _hoisted_3, Vue.toDisplayString(props.sender), 1),
          Vue.createElementVNode("div", _hoisted_4, [
            Vue.createElementVNode("div", {
              class: Vue.normalizeClass({
                "simple-message-content": true,
                "no-padding": Vue.unref(isNoPadding)
              })
            }, [
              Vue.renderSlot(_ctx.$slots, "default", {}, void 0, true)
            ], 2),
            Vue.createElementVNode("div", _hoisted_5, Vue.toDisplayString(Vue.unref(utils.calculateTimestamp)(props.time * 1e3)), 1)
          ])
        ])
      ]);
    };
  }
});
exports.default = _sfc_main;
