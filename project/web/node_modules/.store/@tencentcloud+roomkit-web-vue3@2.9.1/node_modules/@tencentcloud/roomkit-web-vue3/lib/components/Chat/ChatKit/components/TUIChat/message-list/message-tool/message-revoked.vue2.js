"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../../adapter-vue.js");
const TUIChatEngine = require("@tencentcloud/chat-uikit-engine");
const _hoisted_1 = { class: "revoke" };
const _hoisted_2 = { key: 0 };
const _hoisted_3 = { key: 1 };
const _hoisted_4 = { key: 2 };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "message-revoked",
  props: {
    isEdit: {
      type: Boolean,
      default: () => false
    },
    messageItem: {
      type: Object,
      default: () => ({})
    }
  },
  emits: ["messageEdit"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const message = Vue.ref();
    const isEditMsg = Vue.ref(false);
    const emits = __emit;
    Vue.watchEffect(() => {
      message.value = props.messageItem;
      isEditMsg.value = props.isEdit;
    });
    const messageEdit = () => {
      emits("messageEdit");
    };
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.unref(message).flow === "in" ? (Vue.openBlock(), Vue.createElementBlock("span", _hoisted_2, Vue.toDisplayString(Vue.unref(message).nick || Vue.unref(message).from), 1)) : Vue.unref(message).from === Vue.unref(message).revoker ? (Vue.openBlock(), Vue.createElementBlock("span", _hoisted_3, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.您")), 1)) : (Vue.openBlock(), Vue.createElementBlock("span", _hoisted_4, Vue.toDisplayString(Vue.unref(message).revoker), 1)),
        Vue.createElementVNode("span", null, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.撤回了一条消息")), 1),
        Vue.unref(message).flow === "out" && Vue.unref(isEditMsg) ? (Vue.openBlock(), Vue.createElementBlock("span", {
          key: 3,
          class: "edit",
          onClick: messageEdit
        }, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.重新编辑")), 1)) : Vue.createCommentVNode("", true)
      ]);
    };
  }
});
exports.default = _sfc_main;
