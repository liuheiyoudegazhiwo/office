"use strict";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const _WidgetsManager = class _WidgetsManager {
  constructor(service) {
    __publicField(this, "service");
    __publicField(this, "notification", null);
    this.service = service;
  }
  static getInstance(ctx) {
    if (!_WidgetsManager.instance) {
      _WidgetsManager.instance = new _WidgetsManager(ctx);
    }
    return _WidgetsManager.instance;
  }
  static destroyInstance() {
    if (!_WidgetsManager.instance) return;
    _WidgetsManager.instance = void 0;
  }
  registerNotificationProvider(provider) {
    this.notification = provider.notification;
  }
};
__publicField(_WidgetsManager, "instance");
let WidgetsManager = _WidgetsManager;
exports.WidgetsManager = WidgetsManager;
