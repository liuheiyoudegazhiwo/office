import { IMessageModel } from '../../../../../../../../node_modules/@tencentcloud/chat-uikit-engine';

interface IProps {
    isGroup: boolean;
    groupID: string;
    isNotInGroup: boolean;
    isMultipleSelectMode: boolean;
}
declare function scrollToLatestMessage(): Promise<void>;
declare function mergeForwardMessage(): void;
declare function oneByOneForwardMessage(): void;
declare const _default: import('vue').DefineComponent<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<IProps>, {
    isGroup: boolean;
    groupID: string;
    isNotInGroup: boolean;
    isMultipleSelectMode: boolean;
}>>, {
    oneByOneForwardMessage: typeof oneByOneForwardMessage;
    mergeForwardMessage: typeof mergeForwardMessage;
    scrollToLatestMessage: typeof scrollToLatestMessage;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    closeInputToolBar: () => void;
    toggleMultipleSelectMode: () => void;
    handleEditor: (message: IMessageModel, type: string) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<IProps>, {
    isGroup: boolean;
    groupID: string;
    isNotInGroup: boolean;
    isMultipleSelectMode: boolean;
}>>> & Readonly<{
    onToggleMultipleSelectMode?: (() => any) | undefined;
    onCloseInputToolBar?: (() => any) | undefined;
    onHandleEditor?: ((message: IMessageModel, type: string) => any) | undefined;
}>, {
    groupID: string;
    isGroup: boolean;
    isMultipleSelectMode: boolean;
    isNotInGroup: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
