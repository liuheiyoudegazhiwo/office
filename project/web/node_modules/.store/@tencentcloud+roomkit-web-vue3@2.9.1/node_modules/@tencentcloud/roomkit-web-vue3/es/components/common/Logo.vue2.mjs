import { defineComponent, computed, createElementBlock, openBlock, createCommentVNode, unref, createVNode, createElementVNode, normalizeClass } from "vue";
import i18n from "../../locales/index.mjs";
import { isMobile } from "../../utils/environment.mjs";
import SvgIcon from "./base/SvgIcon.vue.mjs";
import { useBasicStore } from "../../stores/basic.mjs";
import { storeToRefs } from "pinia";
import LogoOfPCInChineseBlackIcon from "./icons/LogoOfPCInChineseBlackIcon.vue.mjs";
import LogoOfPCInChineseWhiteIcon from "./icons/LogoOfPCInChineseWhiteIcon.vue.mjs";
import LogoOfMobileInChinese from "./icons/LogoOfMobileInChinese.vue.mjs";
import LogoTitleOfMobileInChinese from "./icons/LogoTitleOfMobileInChinese.vue.mjs";
import LogoInEnglish from "./icons/LogoInEnglish.vue.mjs";
import LogoTitleInEnglish from "./icons/LogoTitleInEnglish.vue.mjs";
import { useUIKit } from "@tencentcloud/uikit-base-component-vue3";
const _hoisted_1 = { class: "logo-container" };
const _hoisted_2 = { key: 0 };
const _hoisted_3 = { key: 1 };
const _hoisted_4 = {
  key: 2,
  class: "mobile-zh-logo"
};
const _hoisted_5 = { class: "title" };
const _hoisted_6 = { class: "logo" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Logo",
  setup(__props) {
    const { theme } = useUIKit();
    const basicStore = useBasicStore();
    const { defaultTheme } = storeToRefs(basicStore);
    const isEN = computed(() => i18n.global.locale.value === "en-US");
    const isZH = computed(() => i18n.global.locale.value === "zh-CN");
    const isDarkTheme = computed(
      () => theme.value ? theme.value === "dark" : defaultTheme.value === "dark"
    );
    const isLightTheme = computed(
      () => theme.value ? theme.value === "light" : defaultTheme.value === "light"
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        !unref(isMobile) && isZH.value && isDarkTheme.value ? (openBlock(), createElementBlock("div", _hoisted_2, [
          createVNode(SvgIcon, { icon: LogoOfPCInChineseBlackIcon })
        ])) : createCommentVNode("", true),
        !unref(isMobile) && isZH.value && isLightTheme.value ? (openBlock(), createElementBlock("div", _hoisted_3, [
          createVNode(SvgIcon, { icon: LogoOfPCInChineseWhiteIcon })
        ])) : createCommentVNode("", true),
        unref(isMobile) && isZH.value ? (openBlock(), createElementBlock("div", _hoisted_4, [
          createElementVNode("span", {
            class: normalizeClass(["logo", isLightTheme.value ? "light" : "dark"])
          }, [
            createVNode(SvgIcon, { icon: LogoOfMobileInChinese })
          ], 2),
          createElementVNode("span", _hoisted_5, [
            createVNode(SvgIcon, { icon: LogoTitleOfMobileInChinese })
          ])
        ])) : createCommentVNode("", true),
        isEN.value ? (openBlock(), createElementBlock("div", {
          key: 3,
          class: normalizeClass(["pc-en-logo", { mobile: unref(isMobile) }])
        }, [
          createElementVNode("span", _hoisted_6, [
            createVNode(SvgIcon, { icon: LogoInEnglish })
          ]),
          createElementVNode("span", {
            class: normalizeClass(["title", isLightTheme.value ? "light" : "dark"])
          }, [
            createVNode(SvgIcon, { icon: LogoTitleInEnglish })
          ], 2)
        ], 2)) : createCommentVNode("", true)
      ]);
    };
  }
});
export {
  _sfc_main as default
};
