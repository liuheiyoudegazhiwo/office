"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const Avatar = require("../../../common/Avatar.vue.js");
const ApplyStageLabelIcon = require("../../../common/icons/ApplyStageLabelIcon.vue.js");
const useMasterApplyControl = require("../../../../hooks/useMasterApplyControl.js");
const SvgIcon = require("../../../common/base/SvgIcon.vue.js");
require("../../../../services/main.js");
const roomService = require("../../../../services/roomService.js");
require("../../../../locales/index.js");
require("@tencentcloud/tuiroom-engine-js");
require("../../../../utils/environment.js");
require("mitt");
require("../../../../services/manager/roomActionManager.js");
require("@tencentcloud/tui-core");
const _hoisted_1 = { class: "apply-control-container" };
const _hoisted_2 = {
  key: 0,
  class: "apply-list-mobile"
};
const _hoisted_3 = { class: "user-info" };
const _hoisted_4 = { class: "stage-info" };
const _hoisted_5 = ["title"];
const _hoisted_6 = { class: "apply-tip" };
const _hoisted_7 = { class: "control-container" };
const _hoisted_8 = ["onClick"];
const _hoisted_9 = ["onClick"];
const _hoisted_10 = {
  key: 1,
  class: "apply-control-nobody"
};
const _hoisted_11 = { class: "apply-text" };
const _hoisted_12 = { class: "apply-list-footer" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "MasterApplyControlH5",
  setup(__props) {
    const {
      t,
      applyToAnchorList,
      handleAllUserApply,
      handleUserApply,
      applyToAnchorUserCount
    } = useMasterApplyControl.default();
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.unref(applyToAnchorUserCount) ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_2, [
          (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, null, Vue.renderList(Vue.unref(applyToAnchorList), (item) => {
            return Vue.openBlock(), Vue.createElementBlock("div", {
              key: item.userId,
              class: "apply-item"
            }, [
              Vue.createElementVNode("div", _hoisted_3, [
                Vue.createVNode(Avatar.default, {
                  class: "avatar-url",
                  "img-src": item.avatarUrl
                }, null, 8, ["img-src"]),
                Vue.createElementVNode("div", _hoisted_4, [
                  Vue.createElementVNode("span", {
                    class: "user-name",
                    title: Vue.unref(roomService.roomService).getDisplayName(item)
                  }, Vue.toDisplayString(Vue.unref(roomService.roomService).getDisplayName(item)), 9, _hoisted_5),
                  Vue.createElementVNode("span", _hoisted_6, Vue.toDisplayString(Vue.unref(t)("Apply for the stage")), 1)
                ])
              ]),
              Vue.createElementVNode("div", _hoisted_7, [
                Vue.createElementVNode("div", {
                  class: "reject-button",
                  onClick: ($event) => Vue.unref(handleUserApply)(item.userId, false)
                }, Vue.toDisplayString(Vue.unref(t)("Reject")), 9, _hoisted_8),
                Vue.createElementVNode("div", {
                  class: "agree-button",
                  onClick: ($event) => Vue.unref(handleUserApply)(item.userId, true)
                }, Vue.toDisplayString(Vue.unref(t)("Agree")), 9, _hoisted_9)
              ])
            ]);
          }), 128))
        ])) : (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_10, [
          Vue.createVNode(SvgIcon.default, { icon: ApplyStageLabelIcon.default }),
          Vue.createElementVNode("span", _hoisted_11, Vue.toDisplayString(Vue.unref(t)("Currently no member has applied to go on stage")), 1)
        ])),
        Vue.createElementVNode("div", _hoisted_12, [
          Vue.createElementVNode("div", {
            class: Vue.normalizeClass(["action-button", { disabled: Vue.unref(applyToAnchorUserCount) === 0 }]),
            onClick: _cache[0] || (_cache[0] = ($event) => Vue.unref(handleAllUserApply)(false))
          }, Vue.toDisplayString(Vue.unref(t)("Reject All")), 3),
          Vue.createElementVNode("div", {
            class: Vue.normalizeClass(["action-button agree", { disabled: Vue.unref(applyToAnchorUserCount) === 0 }]),
            onClick: _cache[1] || (_cache[1] = ($event) => Vue.unref(handleAllUserApply)(true))
          }, Vue.toDisplayString(Vue.unref(t)("Agree All")), 3)
        ])
      ]);
    };
  }
});
exports.default = _sfc_main;
