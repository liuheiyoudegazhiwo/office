import {
  __commonJS,
  __toESM
} from "./chunk-ANIWD3T6.js";

// D:/code/web/node_modules/@tencentcloud/chat/index.js
var require_chat = __commonJS({
  "D:/code/web/node_modules/@tencentcloud/chat/index.js"(exports, module) {
    !function(e4, t4) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t4() : "function" == typeof define && define.amd ? define(t4) : (e4 = "undefined" != typeof globalThis ? globalThis : e4 || self).TencentCloudChat = t4();
    }(exports, function() {
      function l4(e5, t5) {
        (null == t5 || t5 > e5.length) && (t5 = e5.length);
        for (var n5 = 0, o5 = Array(t5); n5 < t5; n5++)
          o5[n5] = e5[n5];
        return o5;
      }
      function b2(e5) {
        if (Array.isArray(e5))
          return e5;
      }
      function i4(e5, t5, n5) {
        t5 = x2(t5);
        var o5 = e5, t5 = V2() ? Reflect.construct(t5, n5 || [], x2(e5).constructor) : t5.apply(e5, n5);
        if (!t5 || "object" != typeof t5 && "function" != typeof t5) {
          if (void 0 !== t5)
            throw new TypeError("Derived constructors may only return object or undefined");
          if (void 0 === (t5 = o5))
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return t5;
      }
      function p4(e5, t5) {
        if (!(e5 instanceof t5))
          throw new TypeError("Cannot call a class as a function");
      }
      function w3(e5, t5) {
        for (var n5 = 0; n5 < t5.length; n5++) {
          var o5 = t5[n5];
          o5.enumerable = o5.enumerable || false, o5.configurable = true, "value" in o5 && (o5.writable = true), Object.defineProperty(e5, J2(o5.key), o5);
        }
      }
      function e4(e5, t5, n5) {
        return t5 && w3(e5.prototype, t5), n5 && w3(e5, n5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
      }
      function F2(e5, t5) {
        var n5, o5, i5, a5, s5 = "undefined" != typeof Symbol && e5[Symbol.iterator] || e5["@@iterator"];
        if (s5)
          return i5 = !(o5 = true), { s: function() {
            s5 = s5.call(e5);
          }, n: function() {
            var e6 = s5.next();
            return o5 = e6.done, e6;
          }, e: function(e6) {
            i5 = true, n5 = e6;
          }, f: function() {
            try {
              o5 || null == s5.return || s5.return();
            } finally {
              if (i5)
                throw n5;
            }
          } };
        if (Array.isArray(e5) || (s5 = X2(e5)) || t5 && e5 && "number" == typeof e5.length)
          return s5 && (e5 = s5), a5 = 0, { s: t5 = function() {
          }, n: function() {
            return a5 >= e5.length ? { done: true } : { done: false, value: e5[a5++] };
          }, e: function(e6) {
            throw e6;
          }, f: t5 };
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function q2(e5, t5, n5) {
        return (t5 = J2(t5)) in e5 ? Object.defineProperty(e5, t5, { value: n5, enumerable: true, configurable: true, writable: true }) : e5[t5] = n5, e5;
      }
      function x2(e5) {
        return (x2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e6) {
          return e6.__proto__ || Object.getPrototypeOf(e6);
        })(e5);
      }
      function t4(e5, t5) {
        if ("function" != typeof t5 && null !== t5)
          throw new TypeError("Super expression must either be null or a function");
        e5.prototype = Object.create(t5 && t5.prototype, { constructor: { value: e5, writable: true, configurable: true } }), Object.defineProperty(e5, "prototype", { writable: false }), t5 && Y2(e5, t5);
      }
      function V2() {
        try {
          var e5 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (e6) {
        }
        return (V2 = function() {
          return !!e5;
        })();
      }
      function B2(e5) {
        if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"])
          return Array.from(e5);
      }
      function H2() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function K2(t5, e5) {
        var n5, o5 = Object.keys(t5);
        return Object.getOwnPropertySymbols && (n5 = Object.getOwnPropertySymbols(t5), e5 && (n5 = n5.filter(function(e6) {
          return Object.getOwnPropertyDescriptor(t5, e6).enumerable;
        })), o5.push.apply(o5, n5)), o5;
      }
      function y2(t5) {
        for (var e5 = 1; e5 < arguments.length; e5++) {
          var n5 = null != arguments[e5] ? arguments[e5] : {};
          e5 % 2 ? K2(Object(n5), true).forEach(function(e6) {
            q2(t5, e6, n5[e6]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(n5)) : K2(Object(n5)).forEach(function(e6) {
            Object.defineProperty(t5, e6, Object.getOwnPropertyDescriptor(n5, e6));
          });
        }
        return t5;
      }
      function W2(e5, t5) {
        if (null == e5)
          return {};
        var n5, o5 = function(e6, t6) {
          if (null == e6)
            return {};
          var n6, o6 = {};
          for (n6 in e6)
            if ({}.hasOwnProperty.call(e6, n6)) {
              if (0 <= t6.indexOf(n6))
                continue;
              o6[n6] = e6[n6];
            }
          return o6;
        }(e5, t5);
        if (Object.getOwnPropertySymbols)
          for (var i5 = Object.getOwnPropertySymbols(e5), a5 = 0; a5 < i5.length; a5++)
            n5 = i5[a5], 0 <= t5.indexOf(n5) || {}.propertyIsEnumerable.call(e5, n5) && (o5[n5] = e5[n5]);
        return o5;
      }
      function Y2(e5, t5) {
        return (Y2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e6, t6) {
          return e6.__proto__ = t6, e6;
        })(e5, t5);
      }
      function j2(e5, t5) {
        return b2(e5) || function(e6, t6) {
          var n5 = null == e6 ? null : "undefined" != typeof Symbol && e6[Symbol.iterator] || e6["@@iterator"];
          if (null != n5) {
            var o5, i5, a5, s5, r5 = [], c5 = true, u5 = false;
            try {
              if (a5 = (n5 = n5.call(e6)).next, 0 === t6) {
                if (Object(n5) !== n5)
                  return;
                c5 = false;
              } else
                for (; !(c5 = (o5 = a5.call(n5)).done) && (r5.push(o5.value), r5.length !== t6); c5 = true)
                  ;
            } catch (e7) {
              u5 = true, i5 = e7;
            } finally {
              try {
                if (!c5 && null != n5.return && (s5 = n5.return(), Object(s5) !== s5))
                  return;
              } finally {
                if (u5)
                  throw i5;
              }
            }
            return r5;
          }
        }(e5, t5) || X2(e5, t5) || H2();
      }
      function d3(e5) {
        return function(e6) {
          if (Array.isArray(e6))
            return l4(e6);
        }(e5) || B2(e5) || X2(e5) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function J2(e5) {
        e5 = function(e6) {
          if ("object" != typeof e6 || !e6)
            return e6;
          var t5 = e6[Symbol.toPrimitive];
          if (void 0 === t5)
            return String(e6);
          t5 = t5.call(e6, "string");
          if ("object" != typeof t5)
            return t5;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }(e5);
        return "symbol" == typeof e5 ? e5 : e5 + "";
      }
      function z2(e5) {
        return (z2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e6) {
          return typeof e6;
        } : function(e6) {
          return e6 && "function" == typeof Symbol && e6.constructor === Symbol && e6 !== Symbol.prototype ? "symbol" : typeof e6;
        })(e5);
      }
      function X2(e5, t5) {
        var n5;
        if (e5)
          return "string" == typeof e5 ? l4(e5, t5) : "Map" === (n5 = "Object" === (n5 = {}.toString.call(e5).slice(8, -1)) && e5.constructor ? e5.constructor.name : n5) || "Set" === n5 ? Array.from(e5) : "Arguments" === n5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n5) ? l4(e5, t5) : void 0;
      }
      function Z2(e5) {
        var n5 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
        return function(e6) {
          if (null === e6 || !function(t6) {
            try {
              return -1 !== Function.toString.call(t6).indexOf("[native code]");
            } catch (e7) {
              return "function" == typeof t6;
            }
          }(e6))
            return e6;
          if ("function" != typeof e6)
            throw new TypeError("Super expression must either be null or a function");
          if (void 0 !== n5) {
            if (n5.has(e6))
              return n5.get(e6);
            n5.set(e6, t5);
          }
          function t5() {
            return function(e7, t6, n6) {
              var o5;
              return V2() ? Reflect.construct.apply(null, arguments) : ((o5 = [null]).push.apply(o5, t6), t6 = new (e7.bind.apply(e7, o5))(), n6 && Y2(t6, n6.prototype), t6);
            }(e6, arguments, x2(this).constructor);
          }
          return t5.prototype = Object.create(e6.prototype, { constructor: { value: t5, enumerable: false, writable: true, configurable: true } }), Y2(t5, e6);
        }(e5);
      }
      var h4 = { SDK_READY: "sdkStateReady", SDK_NOT_READY: "sdkStateNotReady", SDK_DESTROY: "sdkDestroy", MESSAGE_RECEIVED: "onMessageReceived", ROOM_CUSTOM_DATA_RECEIVED: "onRoomCustomDataReceived", MESSAGE_MODIFIED: "onMessageModified", MESSAGE_REVOKED: "onMessageRevoked", MESSAGE_READ_BY_PEER: "onMessageReadByPeer", MESSAGE_READ_RECEIPT_RECEIVED: "onMessageReadReceiptReceived", MESSAGE_EXTENSIONS_UPDATED: "onMessageExtensionsUpdated", MESSAGE_EXTENSIONS_DELETED: "onMessageExtensionsDeleted", MESSAGE_REACTIONS_UPDATED: "onMessageReactionsUpdated", CONVERSATION_LIST_UPDATED: "onConversationListUpdated", TOTAL_UNREAD_MESSAGE_COUNT_UPDATED: "onTotalUnreadMessageCountUpdated", CONVERSATION_GROUP_LIST_UPDATED: "onConversationGroupListUpdated", CONVERSATION_IN_GROUP_UPDATED: "onConversationInGroupUpdated", GROUP_LIST_UPDATED: "onGroupListUpdated", GROUP_ATTRIBUTES_UPDATED: "groupAttributesUpdated", GROUP_COUNTER_UPDATED: "onGroupCounterUpdated", TOPIC_CREATED: "onTopicCreated", TOPIC_DELETED: "onTopicDeleted", TOPIC_UPDATED: "onTopicUpdated", PROFILE_UPDATED: "onProfileUpdated", USER_STATUS_UPDATED: "onUserStatusUpdated", BLACKLIST_UPDATED: "blacklistUpdated", FRIEND_LIST_UPDATED: "onFriendListUpdated", FRIEND_GROUP_LIST_UPDATED: "onFriendGroupListUpdated", FRIEND_APPLICATION_LIST_UPDATED: "onFriendApplicationListUpdated", MY_FOLLOWERS_LIST_UPDATED: "onMyFollowersListUpdated", MY_FOLLOWING_LIST_UPDATED: "onMyFollowingListUpdated", MUTUAL_FOLLOWERS_LIST_UPDATED: "onMutualFollowersListUpdated", KICKED_OUT: "kickedOut", ERROR: "error", NET_STATE_CHANGE: "netStateChange", ALL_RECEIVE_MESSAGE_OPT_UPDATED: "onAllReceiveMessageOptUpdated" }, R3 = { MSG_TEXT: "TIMTextElem", MSG_IMAGE: "TIMImageElem", MSG_SOUND: "TIMSoundElem", MSG_AUDIO: "TIMSoundElem", MSG_FILE: "TIMFileElem", MSG_FACE: "TIMFaceElem", MSG_VIDEO: "TIMVideoFileElem", MSG_GEO: "TIMLocationElem", MSG_LOCATION: "TIMLocationElem", MSG_GRP_TIP: "TIMGroupTipElem", MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem", MSG_CUSTOM: "TIMCustomElem", MSG_MERGER: "TIMRelayElem", MSG_PRIORITY_HIGH: "High", MSG_PRIORITY_NORMAL: "Normal", MSG_PRIORITY_LOW: "Low", MSG_PRIORITY_LOWEST: "Lowest", CONV_C2C: "C2C", CONV_GROUP: "GROUP", CONV_TOPIC: "TOPIC", CONV_SYSTEM: "@TIM#SYSTEM", CONV_AT_ME: 1, CONV_AT_ALL: 2, CONV_AT_ALL_AT_ME: 3, CONV_MARK_TYPE_STAR: 1, CONV_MARK_TYPE_UNREAD: 2, CONV_MARK_TYPE_FOLD: 4, CONV_MARK_TYPE_HIDE: 8, GRP_PRIVATE: "Private", GRP_WORK: "Private", GRP_PUBLIC: "Public", GRP_CHATROOM: "ChatRoom", GRP_MEETING: "ChatRoom", GRP_AVCHATROOM: "AVChatRoom", GRP_COMMUNITY: "Community", GRP_ROOM: "Room", GRP_LIVE: "Live", GRP_MBR_ROLE_OWNER: "Owner", GRP_MBR_ROLE_ADMIN: "Admin", GRP_MBR_ROLE_MEMBER: "Member", GRP_MBR_ROLE_CUSTOM: "Custom", GRP_TIP_MBR_JOIN: 1, GRP_TIP_MBR_QUIT: 2, GRP_TIP_MBR_KICKED_OUT: 3, GRP_TIP_MBR_SET_ADMIN: 4, GRP_TIP_MBR_CANCELED_ADMIN: 5, GRP_TIP_GRP_PROFILE_UPDATED: 6, GRP_TIP_MBR_PROFILE_UPDATED: 7, GRP_TIP_BAN_AVCHATROOM_MEMBER: 10, GRP_TIP_UNBAN_AVCHATROOM_MEMBER: 11, MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify", MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify", MSG_REMIND_DISCARD: "Discard", RECEIVE_WITH_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt", NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt", NOT_RECEIVE_MSG_EXCEPT_AT: "NotReceiveMsgExceptAt", GENDER_UNKNOWN: "Gender_Type_Unknown", GENDER_FEMALE: "Gender_Type_Female", GENDER_MALE: "Gender_Type_Male", KICKED_OUT_MULT_ACCOUNT: "multipleAccount", KICKED_OUT_MULT_DEVICE: "multipleDevice", KICKED_OUT_USERSIG_EXPIRED: "userSigExpired", KICKED_OUT_REST_API: "REST_API_Kick", ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny", ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm", ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny", FORBID_TYPE_NONE: "AdminForbid_Type_None", FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut", JOIN_OPTIONS_FREE_ACCESS: "FreeAccess", JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission", JOIN_OPTIONS_DISABLE_APPLY: "DisableApply", JOIN_STATUS_SUCCESS: "JoinedSuccess", JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup", JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval", INVITE_OPTIONS_DISABLE_INVITE: "DisableInvite", INVITE_OPTIONS_NEED_PERMISSION: "NeedPermission", INVITE_OPTIONS_FREE_ACCESS: "FreeAccess", GRP_PROFILE_OWNER_ID: "ownerID", GRP_PROFILE_CREATE_TIME: "createTime", GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime", GRP_PROFILE_MEMBER_NUM: "memberNum", GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum", GRP_PROFILE_JOIN_OPTION: "joinOption", GRP_PROFILE_INVITE_OPTION: "inviteOption", GRP_PROFILE_INTRODUCTION: "introduction", GRP_PROFILE_NOTIFICATION: "notification", GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers", SNS_ADD_TYPE_SINGLE: "Add_Type_Single", SNS_ADD_TYPE_BOTH: "Add_Type_Both", SNS_DELETE_TYPE_SINGLE: "Delete_Type_Single", SNS_DELETE_TYPE_BOTH: "Delete_Type_Both", SNS_APPLICATION_TYPE_BOTH: "Pendency_Type_Both", SNS_APPLICATION_SENT_TO_ME: "Pendency_Type_ComeIn", SNS_APPLICATION_SENT_BY_ME: "Pendency_Type_SendOut", SNS_APPLICATION_AGREE: "Response_Action_Agree", SNS_APPLICATION_AGREE_AND_ADD: "Response_Action_AgreeAndAdd", SNS_CHECK_TYPE_BOTH: "CheckResult_Type_Both", SNS_CHECK_TYPE_SINGLE: "CheckResult_Type_Single", SNS_TYPE_NO_RELATION: "CheckResult_Type_NoRelation", SNS_TYPE_A_WITH_B: "CheckResult_Type_AWithB", SNS_TYPE_B_WITH_A: "CheckResult_Type_BWithA", SNS_TYPE_BOTH_WAY: "CheckResult_Type_BothWay", NET_STATE_CONNECTED: "connected", NET_STATE_CONNECTING: "connecting", NET_STATE_DISCONNECTED: "disconnected", MSG_AT_ALL: "__kImSDK_MesssageAtALL__", READ_ALL_C2C_MSG: "readAllC2CMessage", READ_ALL_GROUP_MSG: "readAllGroupMessage", READ_ALL_MSG: "readAllMessage", USER_STATUS_UNKNOWN: 0, USER_STATUS_ONLINE: 1, USER_STATUS_OFFLINE: 2, USER_STATUS_UNLOGINED: 3, IOS_OFFLINE_PUSH_NO_SOUND: "push.no_sound", IOS_OFFLINE_PUSH_DEFAULT_SOUND: "default" }, _3 = { NEW_INVITATION_RECEIVED: "newInvitationReceived", INVITEE_ACCEPTED: "ts_invitee_accepted", INVITEE_REJECTED: "ts_invitee_rejected", INVITATION_CANCELLED: "ts_invitation_cancelled", INVITATION_TIMEOUT: "ts_invitation_timeout", INVITATION_MODIFIED: "ts_invitation_modified", ACTION_TYPE_UNKNOWN: 0, ACTION_TYPE_INVITE: 1, ACTION_TYPE_CANCEL_INVITE: 2, ACTION_TYPE_ACCEPT_INVITE: 3, ACTION_TYPE_REJECT_INVITE: 4, ACTION_TYPE_INVITE_TIMEOUT: 5 }, Q2 = e4(function e5() {
        p4(this, e5), this.cache = [], this.options = null;
      }, [{ key: "use", value: function(e5) {
        if ("function" != typeof e5)
          throw "middleware must be a function";
        return this.cache.push(e5), this;
      } }, { key: "next", value: function(e5) {
        if (this.middlewares && 0 < this.middlewares.length)
          return this.middlewares.shift().call(this, this.options, this.next.bind(this));
      } }, { key: "run", value: function(e5) {
        return this.middlewares = this.cache.map(function(e6) {
          return e6;
        }), this.options = e5, this.next();
      } }]), $2 = e4(function e5() {
        var t5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, n5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
        p4(this, e5), this.high = t5, this.low = n5;
      }, [{ key: "equal", value: function(e5) {
        return null !== e5 && this.low === e5.low && this.high === e5.high;
      } }, { key: "toString", value: function() {
        var e5 = Number(this.high).toString(16), t5 = Number(this.low).toString(16);
        if (t5.length < 8)
          for (var n5 = 8 - t5.length; n5; )
            t5 = "0" + t5, n5--;
        return e5 + t5;
      } }]), ee2 = { TEST: { CHINA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, OVERSEA: { DEFAULT: "wss://wss-dev.tim.qq.com" }, SINGAPORE: { DEFAULT: "wss://wsssgp-dev.im.qcloud.com" }, KOREA: { DEFAULT: "wss://wsskr-dev.im.qcloud.com" }, GERMANY: { DEFAULT: "wss://wssger-dev.im.qcloud.com" }, IND: { DEFAULT: "wss://wssind-dev.im.qcloud.com" }, JPN: { DEFAULT: "wss://wssjpn-dev.im.qcloud.com" }, USA: { DEFAULT: "wss://wssusa-dev.im.qcloud.com" }, INDONESIA: { DEFAULT: "wss://wssidn-dev.im.qcloud.com" } }, PRODUCTION: { CHINA: { DEFAULT0: "wss://*w4c.my-imcloud.com", DEFAULT: "wss://wss.im.qcloud.com", IPV6: "wss://wssv6.im.qcloud.com", BACKUP: "wss://wss.tim.qq.com", BACKUP_WEB: "wss://*w4c.my-cpaas.com", STAT: "https://events.im.qcloud.com", ANYCAST: "wss://162.14.13.203" }, OVERSEA: { DEFAULT0: "wss://*w4c.my-imcloud.com", DEFAULT: "wss://wss.im.qcloud.com", IPV6: "wss://wssv6.im.qcloud.com", BACKUP: "wss://wss.my-imcloud.com", BACKUP_WEB: "wss://*w4c.my-cpaas.com", STAT: "https://api.my-imcloud.com" }, SINGAPORE: { DEFAULT0: "wss://*w4s.my-imcloud.com", DEFAULT: "wss://wsssgp.im.qcloud.com", IPV6: "wss://wsssgpv6.im.qcloud.com", BACKUP: "wss://wsssgp.my-imcloud.com", BACKUP_WEB: "wss://*w4s.my-cpaas.com", STAT: "https://apisgp.my-imcloud.com", ANYCAST: "wss://162.14.19.159" }, KOREA: { DEFAULT0: "wss://*w4k.my-imcloud.com", DEFAULT: "wss://wsskr.im.qcloud.com", IPV6: "wss://wsskrv6.im.qcloud.com", BACKUP: "wss://wsskr.my-imcloud.com", BACKUP_WEB: "wss://*w4k.my-cpaas.com", STAT: "https://apikr.my-imcloud.com", ANYCAST: "wss://162.14.13.104" }, GERMANY: { DEFAULT0: "wss://*w4g.my-imcloud.com", DEFAULT: "wss://wssger.im.qcloud.com", IPV6: "wss://wssgerv6.im.qcloud.com", BACKUP: "wss://wssger.my-imcloud.com", BACKUP_WEB: "wss://*w4g.my-cpaas.com", STAT: "https://apiger.my-imcloud.com", ANYCAST: "wss://162.14.3.17" }, IND: { DEFAULT0: "wss://*w4i.my-imcloud.com", DEFAULT: "wss://wssind.my-imcloud.com", IPV6: "wss://wssindv6.im.qcloud.com", BACKUP: "wss://wssind.im.qcloud.com", BACKUP_WEB: "wss://*w4i.my-cpaas.com", STAT: "https://apiind.my-imcloud.com", ANYCAST: "wss://162.14.19.46" }, JPN: { DEFAULT0: "wss://*w4j.my-imcloud.com", DEFAULT: "wss://wssjpn.im.qcloud.com", IPV6: "wss://wssjpnv6.im.qcloud.com", BACKUP: "wss://wssjpn.my-imcloud.com", BACKUP_WEB: "wss://*w4j.my-cpaas.com", STAT: "https://apijpn.my-imcloud.com" }, USA: { DEFAULT0: "wss://*w4u.my-imcloud.com", DEFAULT: "wss://wssusa.im.qcloud.com", IPV6: "wss://wssusav6.im.qcloud.com", BACKUP: "wss://wssusa.my-imcloud.com", BACKUP_WEB: "wss://*w4u.my-cpaas.com", STAT: "https://apiusa.my-imcloud.com", ANYCAST: "wss://162.14.10.42" }, INDONESIA: { DEFAULT0: "wss://*w4y.my-imcloud.com", DEFAULT: "wss://wssidn.im.qcloud.com", IPV6: "wss://wssidnv6.im.qcloud.com", BACKUP: "wss://wssidn.my-imcloud.com", BACKUP_WEB: "wss://*w4y.my-cpaas.com", STAT: "https://apiidn.my-imcloud.com", ANYCAST: "wss://43.129.34.169" } } }, te2 = { ANDROID: 2, IOS: 3, MAC: 4, WEB: 7, WX_MP: 8, QQ_MP: 9, TT_MP: 10, BAIDU_MP: 11, ALI_MP: 12, IPAD: 13, UNI_NATIVE_APP: 15, DONUT_NATIVE_APP: 19, NS_NATIVE_APP: 20, RN_NATIVE_APP: 21 }, ne2 = "1.7.3", oe2 = 537048168, ae2 = "CHINA", a4 = { HOST: { CURRENT: { DEFAULT: "wss://wss.im.qcloud.com", STAT: "https://events.im.qcloud.com" }, setCurrent: function() {
        this.CURRENT = ee2.PRODUCTION[0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ae2];
      } }, NAME: { OPEN_IM: "openim", OPEN_IM_MSG_EXT: "openim_msg_ext_http_svc", GRP: "group_open_http_svc", GRP_AV: "group_open_avchatroom_http_svc", GRP_COMMUNITY: "million_group_open_http_svc", GRP_ATTR: "group_open_attr_http_svc", FD: "sns", PROFILE: "profile", RECENT_CONTACT: "recentcontact", PIC: "openpic", BIG_GRP_NO_AUTH: "group_open_http_noauth_svc", BIG_GRP_POLLING: "group_open_long_polling_http_svc", BIG_GRP_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc", IM_OPEN_STAT: "imopenstat", WEB_IM: "webim", IM_COS_SIGN: "im_cos_sign_svr", CUSTOM_UPLOAD: "im_cos_msg", HEARTBEAT: "heartbeat", IM_OPEN_PUSH: "im_open_push", IM_OPEN_STATUS: "im_open_status", IM_LONG_MSG: "im_long_msg", IM_CONFIG_MANAGER: "im_sdk_config_mgr", STAT_SERVICE: "StatSvc", OVERLOAD_PUSH: "OverLoadPush", IM_MSG_AUDIT_MGR: "im_msg_audit_mgr", TUIROOM_SVR: "tui_room_svr", IM_OPEN_TRANSLATE: "im_open_translate", IM_OPEN_SPEECH: "im_open_speech", MSG_SEARCH: "message_search", GRP_SEARCH: "group_search", GRP_MEMBER_SEARCH: "group_member_search", USER_SEARCH: "user_search", FOLLOW: "follow", OFFLINE_PUSH_REPORT: "offline_push_report", IM_MSG_LOGIC: "im_msg_db_logic" } }, g4 = { SEARCH_GRP_SNS: new $2(0, Math.pow(2, 1)).toString(), AV_HISTORY_MSG: new $2(0, Math.pow(2, 2)).toString(), GRP_COMMUNITY: new $2(0, Math.pow(2, 3)).toString(), MSG_TO_SPECIFIED_GRP_MBR: new $2(0, Math.pow(2, 4)).toString(), AV_MBR_LIST: new $2(0, Math.pow(2, 6)).toString(), USER_STATUS: new $2(0, Math.pow(2, 7)).toString(), CONV_MARK: new $2(0, Math.pow(2, 9)).toString(), CONV_GROUP: new $2(0, Math.pow(2, 10)).toString(), AV_BAN_MBR: new $2(0, Math.pow(2, 11)).toString(), MSG_EXT: new $2(0, Math.pow(2, 13)).toString(), GRP_COUNTER: new $2(0, Math.pow(2, 15)).toString(), PLUGIN_TRANSLATE: new $2(Math.pow(2, 6)).toString(), PLUGIN_VOICE_TO_TEXT: new $2(Math.pow(2, 7)).toString(), PLUGIN_CS: new $2(Math.pow(2, 8)).toString(), PLUGIN_PUSH: new $2(Math.pow(2, 9)).toString(), PLUGIN_BOT: new $2(Math.pow(2, 10)).toString(), MSG_REACTION: new $2(Math.pow(2, 16)).toString(), FOLLOW: new $2(Math.pow(2, 20)).toString() }, se2 = "group_profile", re2 = ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember", "InviteJoinOption"], ce2 = ["Role", "JoinTime", "MsgSeq", "MsgFlag"];
      a4.HOST.setCurrent(ae2);
      for (var ue2, le2 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), de2 = le2 && "function" == typeof wx.createGamePortal, pe2 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), _e2 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), he2 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), ge2 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), n4 = "undefined" != typeof jd && "function" == typeof jd.getSystemInfoSync, fe2 = "undefined" != typeof uni && "undefined" == typeof window && "function" == typeof uni.requireNativePlugin, o4 = le2 && "object" === z2(wx.miniapp), me2 = "undefined" != typeof uni, v3 = le2 || pe2 || _e2 || he2 || ge2 || fe2 || n4, s4 = "undefined" == typeof window && !v3 && "undefined" != typeof global && void 0 !== global.NativeScriptGlobals, ve2 = "undefined" != typeof global && (void 0 !== global.nativeModuleProxy || void 0 !== global.ReactNative), Ie2 = "undefined" != typeof uni ? !v3 : "undefined" != typeof window && !v3 && !ve2, I3 = pe2 ? qq : _e2 ? tt : he2 ? swan : ge2 ? my : le2 ? wx : fe2 ? uni : n4 ? jd : {}, Me2 = Ie2 && window && window.navigator && window.navigator.userAgent || "", ye2 = (n4 = "WEB", /(micromessenger|webbrowser)/i.test(Me2) ? n4 = "WEB" : pe2 ? n4 = "QQ_MP" : _e2 ? n4 = "TT_MP" : he2 ? n4 = "BAIDU_MP" : ge2 ? n4 = "ALI_MP" : le2 ? n4 = o4 ? "DONUT_NATIVE_APP" : "WX_MP" : fe2 ? n4 = "UNI_NATIVE_APP" : s4 ? n4 = "NS_NATIVE_APP" : ve2 && (n4 = "RN_NATIVE_APP"), te2[n4]), o4 = /iPad/i.test(Me2), s4 = /iPhone/i.test(Me2) && !o4, n4 = /iPod/i.test(Me2), Ce2 = s4 || o4 || n4, Te2 = (s4 = Me2.match(/OS (\d+)_/i)) && s4[1] ? s4[1] : null, De2 = /Android/i.test(Me2), Ee2 = (o4 = Me2.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i)) ? (n4 = o4[1] && parseFloat(o4[1]), s4 = o4[2] && parseFloat(o4[2]), n4 && s4 ? parseFloat(o4[1] + "." + o4[2]) : n4 || null) : null, s4 = /Edge/i.test(Me2), o4 = !s4 && /Chrome/i.test(Me2), Le2 = /MSIE/.test(Me2) || -1 < Me2.indexOf("Trident") && -1 < Me2.indexOf("rv:11.0"), Se2 = n4 = !(n4 = (n4 = /MSIE\s(\d+)\.\d/.exec(Me2)) && parseFloat(n4[1])) && /Trident\/7.0/i.test(Me2) && /rv:11.0/.test(Me2) ? 11 : n4, n4 = /Safari/i.test(Me2) && !o4 && !De2 && !s4, ke2 = /Windows/i.test(Me2), Re2 = /MAC OS X/i.test(Me2), Ae2 = Ie2 && "undefined" != typeof Worker && !Le2, Oe2 = De2 || Ce2, Ne2 = Ie2 && void 0 !== window.tencent_cloud_im_csig_flutter_for_web_25F_cy, Ge2 = "undefined" != typeof window && void 0 !== window.navigator && (o4 = window.navigator.standalone, !(!Ce2 || o4 || n4)), Pe2 = "undefined" != typeof console ? console : "undefined" != typeof global && global.console ? global.console : "undefined" != typeof window && window.console ? window.console : {}, Ue2 = function() {
      }, be2 = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], we2 = be2.length; we2--; )
        ue2 = be2[we2], console[ue2] || (Pe2[ue2] = Ue2);
      function Fe2() {
        var e5 = /* @__PURE__ */ new Date();
        return e5.setTime(He2()), e5;
      }
      function qe2() {
        Be2 = 0;
      }
      function xe2() {
        return Math.floor(He2() / 1e3);
      }
      var Ve2 = Pe2, Be2 = 0, He2 = function() {
        return (/* @__PURE__ */ new Date()).getTime() + Be2;
      }, Ke2 = 0;
      function We2() {
        return Zt2() ? "%c Chat %c" : "Chat";
      }
      function Ye2() {
        var e5 = Fe2();
        return e5.toLocaleTimeString("en-US", { hour12: false }) + "." + function(e6) {
          var t5;
          switch (e6.toString().length) {
            case 1:
              t5 = "00" + e6;
              break;
            case 2:
              t5 = "0" + e6;
              break;
            default:
              t5 = e6;
          }
          return t5;
        }(e5.getMilliseconds());
      }
      var M3 = { arguments2String: function(e5) {
        var t5 = "";
        if (1 === e5.length)
          t5 = e5[0];
        else
          for (var n5 = 0, o5 = e5.length; n5 < o5; n5++) {
            if (Mt2(e5[n5]))
              try {
                t5 += yt2(e5[n5]) ? JSON.stringify(e5[n5], ["message", "code"]) : JSON.stringify(e5[n5]);
              } catch (e6) {
                t5 += e6 ? e6.message : "";
                break;
              }
            else
              t5 += e5[n5];
            t5 += " ";
          }
        return t5;
      }, _exec: function(e5, t5) {
        Zt2() ? Ve2[e5](We2(), "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", Ye2(), t5) : Ve2[e5]("".concat(We2(), " ").concat(Ye2(), " ").concat(t5));
      }, d: function() {
        var e5;
        Ke2 <= -1 && (e5 = this.arguments2String(arguments), this._exec("debug", e5));
      }, l: function() {
        var e5;
        Ke2 <= 0 && (e5 = this.arguments2String(arguments), this._exec("log", e5));
      }, log: function() {
        var e5;
        Ke2 <= 0 && (e5 = this.arguments2String(arguments), this._exec("log", e5));
      }, i: function() {
        var e5;
        Ke2 <= 1 && (e5 = this.arguments2String(arguments), this._exec("info", e5));
      }, w: function() {
        var e5;
        Ke2 <= 2 && (e5 = this.arguments2String(arguments), this._exec("warn", e5));
      }, e: function() {
        var e5;
        Ke2 <= 3 && (e5 = this.arguments2String(arguments), this._exec("error", e5));
      }, setLevel: function(e5) {
        e5 < 4 && this._exec("log", "set level from " + Ke2 + " to " + e5), Ke2 = e5;
      }, getLevel: function() {
        return Ke2;
      } }, je2 = { JPG: 1, JPEG: 1, GIF: 2, PNG: 3, BMP: 4, UNKNOWN: 255 }, s4 = "Tag_Profile_IM_", f3 = { NICK: "".concat(s4, "Nick"), GENDER: "".concat(s4, "Gender"), BIRTHDAY: "".concat(s4, "BirthDay"), LOCATION: "".concat(s4, "Location"), SELFSIGNATURE: "".concat(s4, "SelfSignature"), ALLOWTYPE: "".concat(s4, "AllowType"), LANGUAGE: "".concat(s4, "Language"), AVATAR: "".concat(s4, "Image"), MESSAGESETTINGS: "".concat(s4, "MsgSettings"), ADMINFORBIDTYPE: "".concat(s4, "AdminForbidType"), LEVEL: "".concat(s4, "Level"), ROLE: "".concat(s4, "Role") }, Je2 = { GROUP: "".concat("Tag_SNS_IM_", "Group"), REMARK: "".concat("Tag_SNS_IM_", "Remark"), ADDSOURCE: "".concat("Tag_SNS_IM_", "AddSource"), ADDWORDING: "".concat("Tag_SNS_IM_", "Wording"), ADDTIME: "".concat("Tag_SNS_IM_", "AddTime") }, o4 = "Gender_Type_", ze2 = { UNKNOWN: "".concat(o4, "Unknown"), FEMALE: "".concat(o4, "Female"), MALE: "".concat(o4, "Male") }, Xe2 = { NONE: "".concat("AdminForbid_Type_", "None"), SEND_OUT: "".concat("AdminForbid_Type_", "SendOut") }, Ze2 = { NEED_CONFIRM: "".concat("AllowType_Type_", "NeedConfirm"), ALLOW_ANY: "".concat("AllowType_Type_", "AllowAny"), DENY_ANY: "".concat("AllowType_Type_", "DenyAny") }, Qe2 = "JoinedSuccess", $e2 = "WaitAdminApproval", et2 = "@TOPIC#_", nt2 = Object.prototype.hasOwnProperty;
      function S3(e5) {
        if (null == e5)
          return true;
        if ("boolean" == typeof e5)
          return false;
        if ("number" == typeof e5)
          return 0 === e5;
        if ("string" == typeof e5)
          return 0 === e5.length;
        if ("function" == typeof e5)
          return 0 === e5.length;
        if (Array.isArray(e5))
          return 0 === e5.length;
        if (e5 instanceof Error)
          return "" === e5.message;
        if (m3(e5)) {
          for (var t5 in e5)
            if (nt2.call(e5, t5))
              return false;
          return true;
        }
        return !!(ot2(e5) || it2(e5) || at2(e5)) && 0 === e5.size;
      }
      function ot2(e5) {
        return "map" === Ct2(e5);
      }
      function it2(e5) {
        return "set" === Ct2(e5);
      }
      function at2(e5) {
        return "file" === Ct2(e5);
      }
      function A3(e5) {
        return null !== e5 && ("number" == typeof e5 && !isNaN(+e5) || "object" === z2(e5) && e5.constructor === Number);
      }
      function st2(e5) {
        return null !== e5 && "object" === z2(e5);
      }
      function m3(e5) {
        if ("object" === z2(e5) && null !== e5) {
          if (null === (e5 = Object.getPrototypeOf(e5)))
            return 1;
          for (var t5 = e5; null !== Object.getPrototypeOf(t5); )
            t5 = Object.getPrototypeOf(t5);
          return e5 === t5;
        }
      }
      function O3(e5) {
        return "function" == typeof Array.isArray ? Array.isArray(e5) : "array" === Ct2(e5);
      }
      function rt2(e5) {
        return O3(e5) && 0 < e5.length;
      }
      function ct2(e5) {
        return "function" == typeof e5;
      }
      function ut2(e5) {
        return "filelist" === Ct2(e5);
      }
      function lt2(e5) {
        return "string" == typeof e5 && (e5 = e5[0], !/[^a-zA-Z0-9]/.test(e5));
      }
      function dt2(e5, t5, n5, o5) {
        if (!Mt2(e5) || !Mt2(t5))
          return 0;
        for (var i5, a5 = 0, s5 = Object.keys(t5), r5 = 0, c5 = s5.length; r5 < c5; r5++)
          if (i5 = s5[r5], !(N3(t5[i5]) || n5 && n5.includes(i5)))
            if (Mt2(e5[i5]) && Mt2(t5[i5]))
              a5 += dt2(e5[i5], t5[i5], n5, o5);
            else {
              if (o5 && o5.includes(t5[i5]))
                continue;
              e5[i5] !== t5[i5] && (e5[i5] = t5[i5], a5 += 1);
            }
        return a5;
      }
      function pt2(e5, t5) {
        var n5, o5 = /* @__PURE__ */ new Map(), i5 = F2(e5.entries());
        try {
          for (i5.s(); !(n5 = i5.n()).done; ) {
            var a5 = j2(n5.value, 2), s5 = a5[0], r5 = a5[1];
            r5 && o5.set(s5, t5 ? JSON.stringify(r5) : JSON.parse(JSON.stringify(r5)));
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        return o5;
      }
      function _t2(e5) {
        if (0 === e5.length)
          return 0;
        for (var t5 = 0, n5 = 0, o5 = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e5[t5]; )
          n5 += e5[t5++].charCodeAt[t5] <= 255 ? 1 : false === o5 ? 3 : 2;
        return n5;
      }
      function ht2(e5) {
        return e5 = e5 || 99999999, Math.round(Math.random() * e5);
      }
      function gt2() {
        for (var e5 = "", t5 = 32; 0 < t5; --t5)
          e5 += Tt2[Math.floor(Math.random() * Dt2)];
        return e5;
      }
      function ft2(e5, t5) {
        for (var n5 in e5)
          if (e5[n5] === t5)
            return 1;
      }
      function mt2(e5) {
        return -1 === e5.indexOf("http://") || -1 === e5.indexOf("https://") ? "https://" + e5 : e5.replace(/https|http/, "https");
      }
      function vt2(e5) {
        if (0 === Object.getOwnPropertyNames(e5).length)
          return /* @__PURE__ */ Object.create(null);
        var t5, n5, o5 = Array.isArray(e5) ? [] : /* @__PURE__ */ Object.create(null);
        for (n5 in e5)
          null !== e5[n5] ? void 0 !== e5[n5] ? (t5 = z2(e5[n5]), 0 <= ["string", "number", "function", "boolean"].indexOf(t5) ? o5[n5] = e5[n5] : o5[n5] = vt2(e5[n5])) : o5[n5] = void 0 : o5[n5] = null;
        return o5;
      }
      var It2 = ["url"], C4 = function(e5) {
        return "string" == typeof e5;
      }, N3 = function(e5) {
        return void 0 === e5;
      }, Mt2 = function(e5) {
        return O3(e5) || st2(e5);
      }, yt2 = function(e5) {
        return e5 instanceof Error;
      }, Ct2 = function(e5) {
        return Object.prototype.toString.call(e5).match(/^\[object (.*)\]$/)[1].toLowerCase();
      }, Tt2 = (Date.now || (Date.now = function() {
        return (/* @__PURE__ */ new Date()).getTime();
      }), "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), Dt2 = Tt2.length, Et2 = {};
      function Lt2(o5, e5) {
        var i5;
        return !(!O3(o5) || !O3(e5)) && (i5 = false, e5.forEach(function(e6) {
          var t5 = e6.key, e6 = e6.value, n5 = o5.find(function(e7) {
            return e7.key === t5;
          });
          n5 ? n5.value !== e6 && (n5.value = e6, i5 = true) : (o5.push({ key: t5, value: e6 }), i5 = true);
        }), i5);
      }
      function St2(e5) {
        return S3(e5) ? [] : e5.filter(function(e6) {
          return true === e6.isModified;
        });
      }
      function kt2(e5) {
        if (m3(e5) && m3(e5.webhookInfo)) {
          var t5 = [];
          if (e5.webhookInfo.disableCloudMessagePreHook && t5.push("ForbidBeforeSendMsgCallback"), e5.webhookInfo.disableCloudMessagePostHook && t5.push("ForbidAfterSendMsgCallback"), 0 !== t5.length)
            return t5;
        }
      }
      function Rt2(e5) {
        return S3(e5) ? [] : e5.filter(function(e6) {
          return false === e6.isModified;
        });
      }
      function At2(e5) {
        return e5 === R3.GRP_AVCHATROOM;
      }
      function Ot2(e5) {
        var t5 = e5.type, e5 = e5.groupID;
        return t5 === R3.GRP_COMMUNITY || "".concat(e5).startsWith("@TGS#_") && !"".concat(e5).includes(et2);
      }
      function Nt2(e5) {
        return "".concat(e5).startsWith("@TGS#_") && "".concat(e5).includes(et2);
      }
      function Gt2(e5) {
        return C4(e5) && e5.slice(0, 3) === R3.CONV_C2C;
      }
      function Pt2(e5) {
        return C4(e5) && e5.slice(0, 5) === R3.CONV_GROUP;
      }
      function Ut2(e5) {
        return C4(e5) && e5 === R3.CONV_SYSTEM;
      }
      function bt2(t5, n5) {
        var o5 = {};
        return Object.keys(t5).forEach(function(e5) {
          o5[e5] = n5(t5[e5], e5);
        }), o5;
      }
      function wt2(o5) {
        return ve2 ? Promise.resolve({ width: 0, height: 0 }) : v3 ? new Promise(function(t5, e5) {
          I3.getImageInfo({ src: o5, success: function(e6) {
            t5({ width: e6.width, height: e6.height });
          }, fail: function() {
            t5({ width: 0, height: 0 });
          } });
        }) : Le2 && 9 === Se2 ? Promise.resolve({ width: 0, height: 0 }) : new Promise(function(e5, t5) {
          var n5 = new Image();
          n5.onload = function() {
            e5({ width: this.width, height: this.height }), n5 = null;
          }, n5.onerror = function() {
            e5({ width: 0, height: 0 }), n5 = null;
          }, n5.src = o5;
        });
      }
      function Ft2() {
        function e5() {
          return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
        }
        return "".concat(e5() + e5()).concat(e5()).concat(e5()).concat(e5()).concat(e5()).concat(e5()).concat(e5());
      }
      function qt2() {
        var e5 = De2 ? "android" : Ce2 ? "ios" : ke2 ? "windows" : Re2 ? "mac" : "unknown";
        if (v3)
          try {
            var t5 = I3.getSystemInfoSync().platform;
            void 0 !== t5 && (e5 = t5);
          } catch (e6) {
          }
        return e5;
      }
      function xt2(e5, t5) {
        e5 = e5.split("."), t5 = t5.split(".");
        for (var n5 = Math.max(e5.length, t5.length); e5.length < n5; )
          e5.push("0");
        for (; t5.length < n5; )
          t5.push("0");
        for (var o5 = 0; o5 < n5; o5++) {
          var i5 = parseInt(e5[o5]), a5 = parseInt(t5[o5]);
          if (a5 < i5)
            return 1;
          if (i5 < a5)
            return -1;
        }
        return 0;
      }
      function Vt2(e5) {
        var t5 = e5.originUrl, t5 = void 0 === t5 ? void 0 : t5, n5 = e5.originWidth, o5 = e5.originHeight, e5 = e5.min, e5 = void 0 === e5 ? 198 : e5, n5 = parseInt(n5), o5 = parseInt(o5), i5 = { url: void 0, width: 0, height: 0 };
        return (n5 <= o5 ? n5 : o5) <= e5 ? (i5.url = t5, i5.width = n5, i5.height = o5) : (o5 <= n5 ? (i5.width = Math.ceil(n5 * e5 / o5), i5.height = e5) : (i5.width = e5, i5.height = Math.ceil(o5 * e5 / n5)), o5 = t5 && -1 < t5.indexOf("?") ? "".concat(t5, "&") : "".concat(t5, "?"), i5.url = "".concat(o5, 198 === e5 ? "imageView2/3/w/198/h/198" : "imageView2/3/w/720/h/720")), N3(t5) ? W2(i5, It2) : i5;
      }
      function Bt2(e5) {
        var t5 = e5[2];
        e5[2] = e5[1], e5[1] = t5;
        for (var n5 = 0; n5 < e5.length; n5++)
          e5[n5].setType(n5);
      }
      function Ht2(e5) {
        e5 = e5.servcmd;
        return e5.slice(e5.indexOf(".") + 1);
      }
      function Kt2(e5, t5) {
        return Math.round(Number(e5) * Math.pow(10, t5)) / Math.pow(10, t5);
      }
      function Wt2(e5, t5) {
        return e5.includes(t5);
      }
      function Yt2(e5, t5) {
        return e5.includes(t5);
      }
      function jt2(e5) {
        return e5.split(et2)[0];
      }
      function Jt2(e5, t5, n5) {
        if (N3(t5))
          return "";
        switch (e5) {
          case R3.MSG_TEXT:
            return t5.text;
          case R3.MSG_IMAGE:
            return n5 ? "[Image]" : "[图片]";
          case R3.MSG_LOCATION:
            return n5 ? "[Location]" : "[位置]";
          case R3.MSG_AUDIO:
            return n5 ? "[Voice]" : "[语音]";
          case R3.MSG_VIDEO:
            return n5 ? "[Video]" : "[视频]";
          case R3.MSG_FILE:
            return n5 ? "[File]" : "[文件]";
          case R3.MSG_CUSTOM:
            return n5 ? "[Custom Messages]" : "[自定义消息]";
          case R3.MSG_GRP_TIP:
            return n5 ? "[Group Notification]" : "[群提示消息]";
          case R3.MSG_GRP_SYS_NOTICE:
            return n5 ? "[Group System Message]" : "[群系统通知]";
          case R3.MSG_FACE:
            return n5 ? "[Animated Sticker]" : "[动画表情]";
          case R3.MSG_MERGER:
            return n5 ? "[Chat Record]" : "[聊天记录]";
          default:
            return "";
        }
      }
      function zt2(e5) {
        return e5 === R3.MSG_TEXT || e5 === R3.MSG_CUSTOM || e5 === R3.MSG_LOCATION || e5 === R3.MSG_FACE;
      }
      function Xt2(e5) {
        var t5 = [];
        if (C4(e5)) {
          var n5 = e5.length;
          if (0 !== n5)
            for (var o5 = n5 - 1; 0 <= o5; o5--)
              "1" === e5[o5] && t5.push(Math.pow(2, n5 - o5 - 1));
        }
        return t5;
      }
      function Zt2() {
        return !Le2 && !v3;
      }
      function Qt2(e5) {
        return "the length of userIDList cannot exceed ".concat(e5);
      }
      function $t2(e5) {
        var t5;
        if (O3(e5) && 0 !== e5.length)
          return t5 = 0, e5.forEach(function(e6) {
            t5 += e6;
          }), t5.toFixed(0);
      }
      function en(e5) {
        var t5;
        if (O3(e5) && 0 !== e5.length)
          return t5 = 0, e5.forEach(function(e6) {
            t5 += e6;
          }), (t5 / e5.length).toFixed(0);
      }
      function tn(e5, t5, n5) {
        var t5 = !(1 < arguments.length && void 0 !== t5) || t5, n5 = !(2 < arguments.length && void 0 !== n5) || n5, o5 = Date.now();
        return t5 ? n5 ? "".concat(o5 - e5, " ms") : "".concat(Math.round((o5 - e5) / 1e3), " s") : n5 ? o5 - e5 : Math.round((o5 - e5) / 1e3);
      }
      function nn(e5) {
        return e5 && 1 < e5 ? true : false;
      }
      function on(e5, t5, n5, o5) {
        var i5, a5, s5;
        return void 0 === t5 || (i5 = true, t5.required && S3(e5) && (M3.e("[".concat(n5, '] Missing required params: "').concat(o5, '".')), i5 = false), S3(e5) || (a5 = Ct2(e5)) === (s5 = t5.type.toLowerCase()) || "asyncfunction" === a5 && "function" === s5 || (M3.e("[".concat(n5, '] Invalid params: type check failed for "').concat(o5, '". Expected ').concat(t5.type, ".")), i5 = false), t5.validator && !t5.validator(e5, n5, o5) && (M3.e("[".concat(n5, '] Invalid params: custom validator check failed for "').concat(o5, '".')), i5 = false), i5);
      }
      function an(e5) {
        return !(!e5 || !(Gt2(e5) || Pt2(e5) || Ut2(e5)) && ((e5 = u4("InvalidConversationID", e5)) && M3.w(e5), 1));
      }
      function r4(e5) {
        "" !== e5.desc && "" !== u4("API_REFER") && M3.w("[".concat(e5.api, "] | ").concat(e5.paramName, " | ").concat(e5.desc, ", ").concat(u4("API_REFER")).concat(e5.api));
      }
      function sn() {
        return u4("StringRequiredLog");
      }
      function rn(e5) {
        return u4("NonEmptyStringRequiredLog", e5);
      }
      function cn() {
        return u4("NumberRequiredLog");
      }
      function un() {
        return u4("UndefinedNotAllowedLog");
      }
      function ln() {
        return u4("FileRequiredLog");
      }
      function dn() {
        return u4("FunctionRequiredLog");
      }
      function pn() {
        return u4("ArrayRequiredLog");
      }
      function _n() {
        return u4("NonEmptyArrayLog");
      }
      function hn() {
        return u4("CallbackMissingLog");
      }
      function gn() {
        return u4("PositiveIntegerRequiredLog");
      }
      function fn(e5, t5) {
        return u4("StringNotLongerThanLog", e5, t5);
      }
      function mn(e5, t5) {
        return u4("NumberGreaterThanLog", e5, t5);
      }
      function vn(e5, t5) {
        return u4("NumberGreaterOrEqualLog", e5, t5);
      }
      function In(e5) {
        return u4("KeyValueStringRequiredLog", e5);
      }
      function Mn() {
        return u4("PlainObjectRequiredLog");
      }
      function yn() {
        return u4("NonEmptyContentRequiredLog");
      }
      function Cn() {
        return u4("FileNotSelectedLog");
      }
      function Tn() {
        return u4("MessageInstanceRequiredLog");
      }
      function Dn() {
        return u4("NonAnonymousFunctionLog");
      }
      function En() {
        return u4("MessageExtensionNotAvailableLog");
      }
      function Ln() {
        return u4("MessageReactionRequiredLog");
      }
      function Sn(e5, t5) {
        return u4("ContainsUnsupportedTypeLog", e5, t5);
      }
      function kn(e5, t5, n5, o5) {
        var i5 = o5.allowUndefined, a5 = o5.allowEmpty, o5 = o5.maxLength;
        return N3(e5) ? !!i5 || (r4({ api: t5, paramName: n5, desc: un() }), false) : O3(e5) ? !(0 === e5.length && (r4({ api: t5, paramName: n5, desc: _n() }), !a5) || o5 && e5.length > o5 && (r4({ api: t5, paramName: n5, desc: u4("MaximumArrayLengthLog", n5, o5) }), 1)) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      }
      function Rn(e5, t5, n5, o5) {
        var i5 = o5.allowUndefined, a5 = o5.min, o5 = o5.max;
        return N3(e5) ? !!i5 || (r4({ api: t5, paramName: n5, desc: un() }), false) : A3(e5) ? A3(a5) && e5 < a5 ? (r4({ api: t5, paramName: n5, desc: 0 === a5 ? vn(n5, a5) : mn(n5, a5 - 1) }), false) : !(A3(o5) && o5 < e5 && (r4({ api: t5, paramName: n5, desc: u4("MaximumNumberLog", n5, o5) }), 1)) : (r4({ api: t5, paramName: n5, desc: cn() }), false);
      }
      function T4(e5) {
        return { code: 0, data: e5 || {} };
      }
      function D2(e5) {
        return Promise.resolve(T4(e5));
      }
      function E4(e5) {
        var t5, n5 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        return e5 instanceof L3 ? (n5 && null !== Vn && Vn.emit(h4.ERROR, e5), Promise.reject(e5)) : e5 instanceof Error ? (t5 = new L3({ code: k2.UNCAUGHT_ERROR }), n5 && null !== Vn && Vn.emit(h4.ERROR, t5), Promise.reject(t5)) : N3(e5) || N3(e5.code) ? Promise.reject(new L3({ code: k2.UNCAUGHT_ERROR })) : (t5 = new L3(e5), n5 && null !== Vn && Vn.emit(h4.ERROR, t5), Promise.reject(t5));
      }
      var An = "unSend", On = "success", Nn = "fail", Gn = "notStart", Pn = "pending", Un = "resolved", bn = "rejected", n4 = { type: "String", required: true }, s4 = { type: "Array", required: true }, o4 = { type: "Object", required: true }, wn = { type: "Boolean", required: true }, c4 = { type: "number", required: true }, Fn = { keywordListForMsg: { type: "Array", required: false, validator: function(e5, t5, n5) {
        return kn(e5, t5, n5, { allowUndefined: true, allowEmpty: true, maxLength: 5 });
      } }, keywordListExceptMsg: { type: "Array", required: true, validator: function(e5, t5, n5) {
        return kn(e5, t5, n5, { allowUndefined: false, allowEmpty: false, maxLength: 5 });
      } }, keywordListMatchType: { type: "String", required: false, validator: function(e5, t5, n5) {
        return !e5 || "or" === e5 || "and" === e5 || r4({ api: t5, paramName: n5, desc: "".concat(e5, " is invalid match type") });
      } }, cursor: { type: "String", required: false }, count: { type: "Number", required: false, validator: function(e5, t5, n5) {
        return Rn(e5, t5, n5, { allowUndefined: true, min: 1, max: 100 });
      } }, groupTypeList: { type: "Array", required: false, validator: function(e5, t5, n5) {
        var o5;
        return !e5 || !(!kn(e5, t5, n5, { allowUndefined: true, allowEmpty: true }) || (o5 = [R3.GRP_PUBLIC, R3.GRP_COMMUNITY, R3.GRP_WORK, R3.GRP_MEETING], 0 < e5.filter(function(e6) {
          return -1 === o5.indexOf(e6);
        }).length && (r4({ api: t5, paramName: n5, desc: Sn(n5, "group") }), 1)));
      } } }, u4 = null, qn = { hookGetAPITips: function(e5) {
        u4 = e5;
      }, login: { userID: n4, userSig: n4 }, addToBlacklist: { userIDList: s4 }, removeFromBlacklist: { userIDList: s4 }, on: [{ name: "eventName", type: "String", validator: function(e5, t5, n5) {
        return "string" == typeof e5 && 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: rn(n5) }), false);
      } }, { name: "handler", type: "Function", validator: function(e5, t5, n5) {
        return "function" != typeof e5 ? (r4({ api: t5, paramName: n5, desc: dn() }), false) : ("" === e5.name && r4({ api: t5, paramName: n5, desc: Dn() }), true);
      } }], once: [{ name: "eventName", type: "String", validator: function(e5, t5, n5) {
        return "string" == typeof e5 && 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: rn(n5) }), false);
      } }, { name: "handler", type: "Function", validator: function(e5, t5, n5) {
        return "function" != typeof e5 ? (r4({ api: t5, paramName: n5, desc: dn() }), false) : ("" === e5.name && r4({ api: t5, paramName: n5, desc: Dn() }), true);
      } }], off: [{ name: "eventName", type: "String", validator: function(e5, t5, n5) {
        return "string" == typeof e5 && 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: rn(n5) }), false);
      } }, { name: "handler", type: "Function", validator: function(e5, t5, n5) {
        return "function" != typeof e5 ? (r4({ api: t5, paramName: n5, desc: dn() }), false) : ("" === e5.name && r4({ api: t5, paramName: n5, desc: Dn() }), true);
      } }], sendMessage: [y2({ name: "message" }, o4)], setMessageExtensions: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On && true === e5.isSupportExtension || (r4({ api: t5, paramName: n5, desc: En() }), false);
      } }), y2({ name: "extensions" }, s4)], getMessageExtensions: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On && true === e5.isSupportExtension || (r4({ api: t5, paramName: n5, desc: En() }), false);
      } })], deleteMessageExtensions: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On && true === e5.isSupportExtension || (r4({ api: t5, paramName: n5, desc: En() }), false);
      } })], addMessageReaction: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On || (r4({ api: t5, paramName: n5, desc: Ln() }), false);
      } }), y2({ name: "reactionID" }, n4)], removeMessageReaction: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On || (r4({ api: t5, paramName: n5, desc: Ln() }), false);
      } }), y2({ name: "reactionID" }, n4)], getMessageReactions: { messageList: y2({}, s4) }, getAllUserListOfMessageReaction: { message: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return e5.status === On || (r4({ api: t5, paramName: n5, desc: Ln() }), false);
      } }), reactionID: y2({}, n4), nextSeq: { type: "Number" }, count: { type: "Number" } }, getMessageList: { conversationID: y2(y2({}, n4), {}, { validator: an }), nextReqMessageID: { type: "String" }, count: { type: "Number", validator: function(e5, t5, n5) {
        return !(!N3(e5) && !/^[1-9][0-9]*$/.test(e5) && (r4({ api: t5, paramName: n5, desc: gn() }), 1));
      } } }, getMessageListHopping: { conversationID: y2(y2({}, n4), {}, { validator: an }), sequence: { type: "Number" }, time: { type: "Number" }, direction: { type: "Number", validator: function(e5, t5, n5) {
        return !(!N3(e5) && 0 !== e5 && 1 !== e5 && (r4({ api: t5, paramName: n5, desc: u4("0Or1RequiredLog") }), 1));
      } }, count: { type: "Number", validator: function(e5, t5, n5) {
        return !(!N3(e5) && !/^[1-9][0-9]*$/.test(e5) && (r4({ api: t5, paramName: n5, desc: gn }), 1));
      } } }, setMessageRead: { conversationID: y2(y2({}, n4), {}, { validator: an }) }, setAllMessageRead: { scope: { type: "String", required: false, validator: function(e5, t5, n5) {
        return !e5 || -1 !== [R3.READ_ALL_C2C_MSG, R3.READ_ALL_GROUP_MSG, R3.READ_ALL_MSG].indexOf(e5) || (r4({ api: t5, paramName: n5, desc: u4("ValidScopeRequired") }), false);
      } } }, getConversationProfile: [y2(y2({ name: "conversationID" }, n4), {}, { validator: an })], clearHistoryMessage: [y2(y2({ name: "conversationID" }, n4), {}, { validator: an })], pinConversation: { conversationID: y2(y2({}, n4), {}, { validator: an }), isPinned: y2({}, wn) }, setConversationDraft: { conversationID: y2(y2({}, n4), {}, { validator: an }), draftText: { type: "String", validator: function(e5, t5, n5) {
        return !!C4(e5) || (r4({ api: t5, paramName: n5, desc: sn() }), false);
      } } }, setConversationCustomData: { conversationIDList: y2({}, s4), customData: { type: "String", validator: function(e5, t5, n5) {
        return C4(e5) ? !(256 < e5.length && (r4({ api: t5, paramName: n5, desc: fn(n5, 256) }), 1)) : (r4({ api: t5, paramName: n5, desc: sn() }), false);
      } } }, markConversation: { conversationIDList: y2({}, s4), markType: { type: "number", validator: function(e5, t5, n5) {
        return A3(e5) ? e5 <= 0 ? (r4({ api: t5, paramName: n5, desc: mn(n5, 0) }), false) : !(e5 >= Math.pow(2, 64) && (r4({ api: t5, paramName: n5, desc: u4("NumberLessThanLog", n5, "Math.pow(2,64)") }), 1)) : (r4({ api: t5, paramName: n5, desc: cn() }), false);
      } }, enableMark: y2({}, wn) }, createConversationGroup: { conversationIDList: y2({}, s4), groupName: y2(y2({}, n4), {}, { validator: function(e5, t5, n5) {
        return !(!e5 || 32 < e5.length && (r4({ api: t5, paramName: n5, desc: fn(n5, 32) }), 1));
      } }) }, deleteConversationGroup: [y2({ name: "groupName" }, n4)], renameConversationGroup: { oldName: y2({}, n4), newName: y2(y2({}, n4), {}, { validator: function(e5, t5, n5) {
        return !(!e5 || 32 < e5.length && (r4({ api: t5, paramName: n5, desc: fn(n5, 32) }), 1));
      } }) }, addConversationsToGroup: { conversationIDList: y2({}, s4), groupName: y2({}, n4) }, deleteConversationsFromGroup: { conversationIDList: y2({}, s4), groupName: y2({}, n4) }, getGroupList: { groupProfileFilter: { type: "Array" } }, getGroupProfile: { groupID: n4, groupCustomFieldFilter: { type: "Array" }, memberCustomFieldFilter: { type: "Array" } }, getGroupProfileAdvance: { groupIDList: s4 }, createGroup: { name: n4 }, joinGroup: { groupID: n4, type: { type: "String" }, applyMessage: { type: "String" } }, quitGroup: [y2({ name: "groupID" }, n4)], handleApplication: { message: o4, handleAction: n4, handleMessage: { type: "String" } }, changeGroupOwner: { groupID: n4, newOwnerID: n4 }, updateGroupProfile: { groupID: n4, muteAllMembers: { type: "Boolean" } }, dismissGroup: [y2({ name: "groupID" }, n4)], searchGroupByID: [y2({ name: "groupID" }, n4)], getGroupOnlineMemberCount: [y2({ name: "groupID" }, n4)], initGroupAttributes: { groupID: n4, groupAttributes: y2(y2({}, o4), {}, { validator: function(t5, n5, o5) {
        var i5 = true;
        return Object.keys(t5).forEach(function(e5) {
          if (!C4(t5[e5]))
            return r4({ api: n5, paramName: o5, desc: In("value") }), i5 = false;
        }), i5;
      } }) }, setGroupAttributes: { groupID: n4, groupAttributes: y2(y2({}, o4), {}, { validator: function(t5, n5, o5) {
        var i5 = true;
        return Object.keys(t5).forEach(function(e5) {
          if (!C4(t5[e5]))
            return r4({ api: n5, paramName: o5, desc: In("value") }), i5 = false;
        }), i5;
      } }) }, deleteGroupAttributes: { groupID: n4, keyList: { type: "Array", validator: function(e5, t5, n5) {
        var o5;
        return N3(e5) || !O3(e5) ? (r4({ api: t5, paramName: n5, desc: pn() }), false) : !!S3(e5) || (o5 = true, e5.forEach(function(e6) {
          if (!C4(e6))
            return r4({ api: t5, paramName: n5, desc: u4("StringArrayRequiredLog") }), o5 = false;
        }), o5);
      } } }, getGroupAttributes: { groupID: n4, keyList: { type: "Array", validator: function(e5, t5, n5) {
        var o5;
        return N3(e5) || !O3(e5) ? (r4({ api: t5, paramName: n5, desc: pn() }), false) : !!S3(e5) || (o5 = true, e5.forEach(function(e6) {
          if (!C4(e6))
            return r4({ api: t5, paramName: n5, desc: In("key") }), o5 = false;
        }), o5);
      } } }, setGroupCounters: { groupID: n4, counters: o4 }, increaseGroupCounter: { groupID: n4, key: n4, value: c4 }, decreaseGroupCounter: { groupID: n4, key: n4, value: c4 }, getGroupCounters: { groupID: n4 }, getGroupMemberList: { groupID: n4, count: { type: "Number" } }, getGroupMemberProfile: { groupID: n4, userIDList: s4, memberCustomFieldFilter: { type: "Array" } }, addGroupMember: { groupID: n4, userIDList: s4 }, setGroupMemberRole: { groupID: n4, userID: n4, role: n4 }, setGroupMemberMuteTime: { groupID: n4, userID: n4, muteTime: { type: "Number", validator: function(e5) {
        return 0 <= e5;
      } } }, setGroupMemberNameCard: { groupID: n4, userID: { type: "String" }, nameCard: { type: "String", validator: function(e5, t5, n5) {
        return C4(e5) ? (e5.length, true) : (r4({ api: t5, paramName: n5, desc: sn() }), false);
      } } }, setGroupMemberCustomField: { groupID: n4, userID: { type: "String" }, memberCustomField: s4 }, deleteGroupMember: { groupID: n4 }, markGroupMemberList: { groupID: n4, markType: { type: "number", validator: function(e5, t5, n5) {
        return A3(e5) ? !(e5 < 1e3 && (r4({ api: t5, paramName: n5, desc: vn(n5, 1e3) }), 1)) : (r4({ api: t5, paramName: n5, desc: cn() }), false);
      } }, userIDList: y2({}, s4), enableMark: y2({}, wn) }, createTextMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? C4(e5.text) ? 0 !== e5.text.length || (r4({ api: t5, paramName: "payload.text", desc: yn() }), false) : (r4({ api: t5, paramName: "payload.text", desc: sn() }), false) : (r4({ api: t5, paramName: n5, desc: Mn() }), false);
      } }) }, createTextAtMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? C4(e5.text) ? 0 === e5.text.length ? (r4({ api: t5, paramName: "payload.text", desc: yn() }), false) : !(e5.atUserList && !O3(e5.atUserList) && (r4({ api: t5, paramName: "payload.atUserList", desc: pn() }), 1)) : (r4({ api: t5, paramName: "payload.text", desc: sn() }), false) : (r4({ api: t5, paramName: n5, desc: Mn() }), false);
      } }) }, createCustomMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? e5.data && !C4(e5.data) ? (r4({ api: t5, paramName: "payload.data", desc: sn() }), false) : e5.description && !C4(e5.description) ? (r4({ api: t5, paramName: "payload.description", desc: sn() }), false) : !(e5.extension && !C4(e5.extension) && (r4({ api: t5, paramName: "payload.extension", desc: sn() }), 1)) : (r4({ api: t5, paramName: "payload", desc: Mn() }), false);
      } }) }, createImageMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        if (!m3(e5))
          return r4({ api: t5, paramName: n5, desc: Mn() }), false;
        if (N3(e5.file))
          return r4({ api: t5, paramName: "payload.file", desc: un() }), false;
        if (Ie2) {
          if (!(e5.file instanceof HTMLInputElement || at2(e5.file)))
            return m3(e5.file) && "undefined" != typeof uni ? 0 !== e5.file.tempFilePaths.length && 0 !== e5.file.tempFiles.length || (r4({ api: t5, paramName: "payload.file", desc: Cn() }), false) : (r4({ api: t5, paramName: "payload.file", desc: ln() }), false);
          if (e5.file instanceof HTMLInputElement && 0 === e5.file.files.length)
            return r4({ api: t5, paramName: "payload.file", desc: Cn() }), false;
        }
        return true;
      }, onProgress: { type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: hn() }), true;
      } } }) }, createAudioMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return !!m3(e5) || (r4({ api: t5, paramName: n5, desc: Mn() }), false);
      } }), onProgress: { type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: hn() }), true;
      } } }, createVideoMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        if (!m3(e5))
          return r4({ api: t5, paramName: n5, desc: Mn() }), false;
        if (N3(e5.file))
          return r4({ api: t5, paramName: "payload.file", desc: un() }), false;
        if (Ie2) {
          if (!(e5.file instanceof HTMLInputElement || at2(e5.file)))
            return m3(e5.file) && "undefined" != typeof uni ? !!at2(e5.file.tempFile) || (r4({ api: t5, paramName: "payload.file", desc: Cn() }), false) : (r4({ api: t5, paramName: "payload.file", desc: ln() }), false);
          if (e5.file instanceof HTMLInputElement && 0 === e5.file.files.length)
            return r4({ api: t5, paramName: "payload.file", desc: Cn() }), false;
        }
        return true;
      } }), onProgress: { type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: hn() }), true;
      } } }, createFaceMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? A3(e5.index) ? !!C4(e5.data) || (r4({ api: t5, paramName: "payload.data", desc: sn() }), false) : (r4({ api: t5, paramName: "payload.index", desc: cn() }), false) : (r4({ api: t5, paramName: n5, desc: Mn() }), false);
      } }) }, createFileMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        if (!m3(e5))
          return r4({ api: t5, paramName: n5, desc: Mn() }), false;
        if (N3(e5.file))
          return r4({ api: t5, paramName: "payload.file", desc: un() }), false;
        if (Ie2) {
          if (!(e5.file instanceof HTMLInputElement || at2(e5.file)))
            return m3(e5.file) && "undefined" != typeof uni ? 0 !== e5.file.tempFilePaths.length && 0 !== e5.file.tempFiles.length || (r4({ api: t5, paramName: "payload.file", desc: Cn() }), false) : (r4({ api: t5, paramName: "payload.file", desc: ln() }), false);
          if (e5.file instanceof HTMLInputElement && 0 === e5.file.files.length)
            return r4({ api: t5, paramName: "payload.file", desc: Cn() }), false;
        }
        return true;
      } }), onProgress: { type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: hn() }), true;
      } } }, createLocationMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? C4(e5.description) ? A3(e5.longitude) ? !!A3(e5.latitude) || (r4({ api: t5, paramName: "payload.latitude", desc: cn() }), false) : (r4({ api: t5, paramName: "payload.longitude", desc: cn() }), false) : (r4({ api: t5, paramName: "payload.description", desc: sn() }), false) : (r4({ api: t5, paramName: n5, desc: Mn() }), false);
      } }) }, createMergerMessage: { to: n4, conversationType: n4, payload: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        var o5;
        return S3(e5.messageList) ? (r4({ api: t5, paramName: "payload.messageList", desc: _n() }), false) : S3(e5.compatibleText) ? (r4({ api: t5, paramName: "payload.compatibleText", desc: rn("compatibleText") }), false) : (o5 = false, e5.messageList.forEach(function(e6) {
          e6.status === Nn && (o5 = true);
        }), !o5 || (r4({ api: t5, paramName: "payload.messageList", desc: u4("MergeFailedMessageLog") }), false));
      } }) }, revokeMessage: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return S3(e5) ? (r4({ api: t5, paramName: n5, desc: Tn() }), false) : e5.conversationType === R3.CONV_SYSTEM ? (r4({ api: t5, paramName: n5, desc: u4("MessageCanBeRevokedDesc") }), false) : true !== e5.isRevoked || (r4({ api: t5, paramName: n5, desc: u4("MessageRevokedLog") }), false);
      } })], deleteMessage: [y2(y2({ name: "messageList" }, s4), {}, { validator: function(e5, t5, n5) {
        return !S3(e5) || (r4({ api: t5, paramName: n5, desc: _n() }), false);
      } })], translateText: { sourceTextList: s4, sourceLanguage: n4, targetLanguage: n4 }, convertVoiceToText: { message: y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return S3(e5) ? (r4({ api: t5, paramName: n5, desc: Tn() }), false) : e5.type === R3.MSG_AUDIO && e5.status === On || (r4({ api: t5, paramName: n5, desc: u4("AudioMessageRequiredLog") }), false);
      } }) }, modifyMessage: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return S3(e5) ? (r4({ api: t5, paramName: n5, desc: Tn() }), false) : e5.conversationType === R3.CONV_SYSTEM ? (r4({ api: t5, paramName: n5, desc: u4("MessageCanBeModifiedLog") }), false) : true !== e5._onlineOnlyFlag || (r4({ api: t5, paramName: n5, desc: u4("OnlineMessageNotSupportLog") }), false);
      } })], searchCloudMessages: { keywordList: Fn.keywordListForMsg, keywordListMatchType: Fn.keywordListMatchType, cursor: Fn.cursor, senderUserIDList: { type: "Array", required: false, validator: function(e5, t5, n5) {
        return kn(e5, t5, n5, { allowUndefined: true, allowEmpty: true, maxLength: 5 });
      } }, messageTypeList: { type: "Array", required: false, validator: function(e5, t5, n5) {
        var o5;
        return !e5 || !(!kn(e5, t5, n5, { allowUndefined: true, allowEmpty: true }) || (o5 = [R3.MSG_TEXT, R3.MSG_IMAGE, R3.MSG_AUDIO, R3.MSG_FILE, R3.MSG_VIDEO, R3.MSG_LOCATION, R3.MSG_CUSTOM, R3.MSG_MERGER], 0 < e5.filter(function(e6) {
          return -1 === o5.indexOf(e6);
        }).length && (r4({ api: t5, paramName: n5, desc: Sn(n5, "message") }), 1)));
      } }, conversationID: { type: "String", required: false, validator: function(e5) {
        return !e5 || an(e5);
      } }, timePosition: { type: "number", required: false, validator: function(e5, t5, n5) {
        return Rn(e5, t5, n5, { allowUndefined: true, min: 0 });
      } }, timePeriod: { type: "number", required: false, validator: function(e5, t5, n5) {
        return Rn(e5, t5, n5, { allowUndefined: true, min: 0 });
      } } }, searchCloudUsers: { keywordList: Fn.keywordListExceptMsg, keywordListMatchType: Fn.keywordListMatchType, cursor: Fn.cursor, count: Fn.count, miniBirthday: { type: "Number", required: false, validator: function(e5, t5, n5) {
        return Rn(e5, t5, n5, { allowUndefined: true, min: 0 });
      } }, maxBirthday: { type: "Number", required: false, validator: function(e5, t5, n5) {
        return Rn(e5, t5, n5, { allowUndefined: true, min: 0 });
      } }, gender: { type: "String", required: false, validator: function(e5, t5, n5) {
        return !e5 || e5 === R3.GENDER_FEMALE || e5 === R3.GENDER_MALE || r4({ api: t5, paramName: n5, desc: "".concat(e5, " is invalid match type") });
      } } }, searchCloudGroups: { keywordList: Fn.keywordListExceptMsg, keywordListMatchType: Fn.keywordListMatchType, cursor: Fn.cursor, count: Fn.count, groupTypeList: Fn.groupTypeList }, searchCloudGroupMembers: { keywordList: Fn.keywordListExceptMsg, keywordListMatchType: Fn.keywordListMatchType, cursor: Fn.cursor, count: Fn.count, groupTypeList: Fn.groupTypeList, groupIDList: { type: "Array", required: false, validator: function(e5, t5, n5) {
        return kn(e5, t5, n5, { allowUndefined: true, allowEmpty: true });
      } } }, getUserProfile: { userIDList: { type: "Array", validator: function(e5, t5, n5) {
        return O3(e5) ? (0 === e5.length && r4({ api: t5, paramName: n5, desc: _n() }), true) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, updateMyProfile: { profileCustomField: { type: "Array", validator: function(e5, t5, n5) {
        return !!N3(e5) || !!O3(e5) || (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, setSelfStatus: { customStatus: { type: "String", validator: function(e5, t5, n5) {
        return !!C4(e5) || (r4({ api: t5, paramName: n5, desc: sn() }), false);
      } } }, getUserStatus: { userIDList: { type: "Array", validator: function(e5, t5, n5) {
        return O3(e5) ? 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: _n() }), false) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, subscribeUserStatus: { userIDList: { type: "Array", validator: function(e5, t5, n5) {
        return O3(e5) ? 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: _n() }), false) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, unsubscribeUserStatus: { userIDList: { type: "Array", validator: function(e5, t5, n5) {
        return !e5 || !!O3(e5) || (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, addFriend: { to: n4, source: { type: "String", required: true, validator: function(e5, t5, n5) {
        return !(!e5 || (e5.startsWith("AddSource_Type_") ? 8 < e5.replace("AddSource_Type_", "").length && (r4({ api: t5, paramName: n5, desc: fn("keyword", 8) }), 1) : (r4({ api: t5, paramName: n5, desc: u4("SourcePrefixLog") }), 1)));
      } }, remark: { type: "String", required: false, validator: function(e5, t5, n5) {
        return !(C4(e5) && 96 < e5.length && (r4({ api: t5, paramName: n5, desc: fn(n5, 96) }), 1));
      } } }, deleteFriend: { userIDList: s4 }, checkFriend: { userIDList: s4 }, getFriendProfile: { userIDList: s4 }, updateFriend: { userID: n4, remark: { type: "String", required: false, validator: function(e5, t5, n5) {
        return !(C4(e5) && 96 < e5.length && (r4({ api: t5, paramName: n5, desc: fn(n5, 96) }), 1));
      } }, friendCustomField: { type: "Array", required: false, validator: function(e5, t5, n5) {
        var o5;
        return !e5 || (O3(e5) ? (o5 = true, e5.forEach(function(e6) {
          return C4(e6.key) && -1 !== e6.key.indexOf("Tag_SNS_Custom") ? C4(e6.value) ? 8 < e6.key.replace("Tag_SNS_Custom_", "").length ? (r4({ api: t5, paramName: n5, desc: fn("keyword", 8) }), o5 = false) : void 0 : (r4({ api: t5, paramName: n5, desc: In("value") }), o5 = false) : (r4({ api: t5, paramName: n5, desc: u4("FriendCustomFieldPrefixLog") }), o5 = false);
        }), o5) : (r4({ api: t5, paramName: n5, desc: pn() }), false));
      } } }, acceptFriendApplication: { userID: n4 }, refuseFriendApplication: { userID: n4 }, deleteFriendApplication: { userID: n4 }, createFriendGroup: { name: n4 }, deleteFriendGroup: { name: n4 }, addToFriendGroup: { name: n4, userIDList: s4 }, removeFromFriendGroup: { name: n4, userIDList: s4 }, renameFriendGroup: { oldName: n4, newName: n4 }, sendMessageReadReceipt: [{ name: "messageList", type: "Array", validator: function(e5, t5, n5) {
        return O3(e5) ? 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: _n() }), false) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } }], getMessageReadReceiptList: [{ name: "messageList", type: "Array", validator: function(e5, t5, n5) {
        return O3(e5) ? 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: _n() }), false) : (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } }], createTopicInCommunity: { groupID: n4, topicName: n4 }, deleteTopicFromCommunity: { groupID: n4, topicIDList: { type: "Array", validator: function(e5, t5, n5) {
        return !e5 || !!O3(e5) || (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, updateTopicProfile: { groupID: n4, topicID: n4 }, getTopicList: { groupID: n4, topicIDList: { type: "Array", validator: function(e5, t5, n5) {
        return !e5 || !!O3(e5) || (r4({ api: t5, paramName: n5, desc: pn() }), false);
      } } }, followUser: [y2({ name: "userIDList" }, s4)], unfollowUser: [y2({ name: "userIDList" }, s4)], getMyFollowingList: [y2(y2({ name: "startIndex" }, n4), {}, { required: false })], getMyFollowersList: [y2(y2({ name: "startIndex" }, n4), {}, { required: false })], getMutualFollowersList: [y2(y2({ name: "startIndex" }, n4), {}, { required: false })], getUserFollowInfo: [y2(y2({ name: "userIDList" }, s4), {}, { required: false })], checkFollowType: [y2({ name: "userIDList" }, s4)], addSignalingListener: [{ name: "eventName", type: "String", validator: function(e5, t5, n5) {
        return "string" == typeof e5 && 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: rn(n5) }), false);
      } }, { name: "handler", type: "Function", validator: function(e5, t5, n5) {
        return "function" != typeof e5 ? (r4({ api: t5, paramName: n5, desc: dn() }), false) : ("" === e5.name && r4({ api: t5, paramName: n5, desc: Dn() }), true);
      } }], removeSignalingListener: [{ name: "eventName", type: "String", validator: function(e5, t5, n5) {
        return "string" == typeof e5 && 0 !== e5.length || (r4({ api: t5, paramName: n5, desc: rn(n5) }), false);
      } }, { name: "handler", type: "Function", validator: function(e5, t5, n5) {
        return "function" != typeof e5 ? (r4({ api: t5, paramName: n5, desc: dn() }), false) : ("" === e5.name && r4({ api: t5, paramName: n5, desc: Dn() }), true);
      } }], invite: { userID: n4 }, inviteSync: [y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? !!C4(e5.userID) || (r4({ api: t5, paramName: "options.userID", desc: sn() }), false) : (r4({ api: t5, paramName: "options", desc: Mn() }), false);
      } }), { name: "successCb", type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: dn() }), true;
      } }, { name: "errorCb", type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: dn() }), true;
      } }], inviteInGroup: { groupID: n4, inviteeList: s4 }, inviteInGroupSync: [y2(y2({}, o4), {}, { validator: function(e5, t5, n5) {
        return m3(e5) ? C4(e5.groupID) ? !!O3(e5.inviteeList) || (r4({ api: t5, paramName: "options.inviteeList", desc: pn() }), false) : (r4({ api: t5, paramName: "options.groupID", desc: sn() }), false) : (r4({ api: t5, paramName: "options", desc: Mn() }), false);
      } }), { name: "successCb", type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: dn() }), true;
      } }, { name: "errorCb", type: "Function", required: false, validator: function(e5, t5, n5) {
        return N3(e5) && r4({ api: t5, paramName: n5, desc: dn() }), true;
      } }], accept: { inviteID: n4 }, reject: { inviteID: n4 }, getSignalingInfo: [y2(y2({ name: "message" }, o4), {}, { validator: function(e5, t5, n5) {
        return !S3(e5) || (r4({ api: t5, paramName: n5, desc: Tn() }), false);
      } })], modifyInvitation: { inviteID: n4, data: n4 } }, xn = { login: 1, logout: 1, getLoginUser: 1, getServerTime: 1, on: 1, once: 1, off: 1, setLogLevel: 1, registerPlugin: 1, destroy: 1, isReady: 1, createTextMessage: 1, createTextAtMessage: 1, createImageMessage: 1, createAudioMessage: 1, createVideoMessage: 1, createCustomMessage: 1, createFaceMessage: 1, createFileMessage: 1, createLocationMessage: 1, createMergerMessage: 1, downloadMergerMessage: 1, createForwardMessage: 1, sendMessage: 1, resendMessage: 1, revokeMessage: 1, deleteMessage: 1, translateText: 1, convertVoiceToText: 1, modifyMessage: 1, sendMessageReadReceipt: 1, getGroupMessageReadMemberList: 1, getMessageReadReceiptList: 1, setMessageExtensions: 1, getMessageExtensions: 1, deleteMessageExtensions: 1, addMessageReaction: 1, removeMessageReaction: 1, getMessageReactions: 1, getAllUserListOfMessageReaction: 1, getMessageList: 1, findMessage: 1, getMessageListHopping: 1, setMessageRead: 1, setAllMessageRead: 1, getConversationList: 1, getConversationProfile: 1, deleteConversation: 1, setConversationDraft: 1, pinConversation: 1, getTotalUnreadMessageCount: 1, setConversationCustomData: 1, markConversation: 1, createConversationGroup: 1, getConversationGroupList: 1, deleteConversationGroup: 1, renameConversationGroup: 1, addConversationsToGroup: 1, deleteConversationsFromGroup: 1, clearHistoryMessage: 1, setMessageRemindType: 1, setAllReceiveMessageOpt: 1, getAllReceiveMessageOpt: 1, getGroupList: 1, getGroupProfile: 1, createGroup: 1, joinGroup: 1, updateGroupProfile: 1, quitGroup: 1, dismissGroup: 1, changeGroupOwner: 1, searchGroupByID: 1, getGroupApplicationList: 1, handleGroupApplication: 1, initGroupAttributes: 1, setGroupAttributes: 1, deleteGroupAttributes: 1, getGroupAttributes: 1, setGroupCounters: 1, increaseGroupCounter: 1, decreaseGroupCounter: 1, getGroupCounters: 1, getJoinedCommunityList: 1, createTopicInCommunity: 1, deleteTopicFromCommunity: 1, updateTopicProfile: 1, getTopicList: 1, getGroupMemberProfile: 1, getGroupMemberList: 1, addGroupMember: 1, deleteGroupMember: 1, setGroupMemberNameCard: 1, setGroupMemberMuteTime: 1, setGroupMemberRole: 1, setGroupMemberCustomField: 1, getGroupOnlineMemberCount: 1, markGroupMemberList: 1, getMyProfile: 1, getUserProfile: 1, updateMyProfile: 1, setSelfStatus: 1, getUserStatus: 1, subscribeUserStatus: 1, unsubscribeUserStatus: 1, getBlacklist: 1, addToBlacklist: 1, removeFromBlacklist: 1, searchCloudMessages: 1, searchCloudUsers: 1, searchCloudGroups: 1, searchCloudGroupMembers: 1, getFriendList: 1, addFriend: 1, deleteFriend: 1, checkFriend: 1, updateFriend: 1, getFriendProfile: 1, getFriendApplicationList: 1, refuseFriendApplication: 1, deleteFriendApplication: 1, acceptFriendApplication: 1, setFriendApplicationRead: 1, getFriendGroupList: 1, createFriendGroup: 1, renameFriendGroup: 1, deleteFriendGroup: 1, addToFriendGroup: 1, removeFromFriendGroup: 1, followUser: 1, unfollowUser: 1, getMyFollowingList: 1, getMyFollowersList: 1, getMutualFollowersList: 1, getUserFollowInfo: 1, checkFollowType: 1, callExperimentalAPI: 1, addSignalingListener: 1, removeSignalingListener: 1, invite: 1, inviteSync: 1, inviteInGroup: 1, inviteInGroupSync: 1, cancel: 1, accept: 1, reject: 1, getSignalingInfo: 1, modifyInvitation: 1 }, L3 = (t4(io, Z2(Error)), e4(io)), k2 = { NO_SDKAPPID: 2e3, NO_ACCOUNT_TYPE: 2001, NO_IDENTIFIER: 2002, NO_USERSIG: 2003, NO_TINYID: 2022, NO_A2KEY: 2023, USER_NOT_LOGGED_IN: 2024, REPEAT_LOGIN: 2025, COS_UNDETECTED: 2040, COS_GET_SIG_FAIL: 2041, MSG_SEND_FAIL: 2100, MSG_SEND_FAIL_NOT_IN_AV: 2101, MSG_INSTANCE_REQUIRED: 2105, MSG_INVALID_CONV_TYPE: 2106, MSG_F_IS_EMPTY: 2108, MSG_ONPROGRESS_ERR: 2109, MSG_REVOKE_FAIL: 2110, MSG_DELETE_FAIL: 2111, MSG_UNREAD_ALL_FAIL: 2112, READ_RECEIPT_MSG_LIST_EMPTY: 2114, MSG_SEND_GRP_WITH_TOPIC_FAIL: 2115, CANNOT_DELETE_GRP_SYSTEM_NOTICE: 2116, TRANSLATE_TEXT_FAIL: 2117, VOICE_TO_TEXT_FAIL: 2118, UNSUPPORTED_VOICE_FORMAT: 2119, MSG_I_SELECT_F_FIRST: 2251, MSG_I_TYPES_LIMIT: 2252, MSG_I_SIZE_LIMIT: 2253, MSG_A_UPLOAD_FAIL: 2300, MSG_A_SIZE_LIMIT: 2301, MSG_V_UPLOAD_FAIL: 2350, MSG_V_SIZE_LIMIT: 2351, MSG_V_TYPES_LIMIT: 2352, MSG_F_UPLOAD_FAIL: 2400, MSG_F_SELECT_F_FIRST: 2401, MSG_F_SIZE_LIMIT: 2402, MSG_F_URL_IS_EMPTY: 2403, MSG_MERGER_TYPE_INVALID: 2450, MSG_MERGER_KEY_INVALID: 2451, MSG_MERGER_DOWNLOAD_FAIL: 2452, MSG_FORWARD_TYPE_INVALID: 2453, MSG_FORWARD_INVALID_ELEMENTS: 2454, MSG_MODIFY_CONFLICT: 2480, MSG_MODIFY_DISABLED_IN_AV: 2481, CONV_NOT_FOUND: 2500, USER_OR_GRP_NOT_FOUND: 2501, CONV_UN_RECORDED_TYPE: 2502, INVALID_CONV_ID: 2503, ILLEGAL_GRP_TYPE: 2600, ILLEGAL_GRP_ID: 2602, CANNOT_FIND_GRP: 2603, CANNOT_CHANGE_OWNER_IN_AV: 2620, CANNOT_CHANGE_OWNER_TO_SELF: 2621, MEMBER_NOT_IN_GRP: 2623, JOIN_GRP_FAIL: 2660, CANNOT_ADD_MEMBER_IN_AV: 2661, CANNOT_JOIN_NON_AV_WITHOUT_LOGIN: 2662, NOT_OWNER: 2681, INVALID_MEMBER_ROLE: 2683, CANNOT_SET_SELF_MEMBER_ROLE: 2684, CANNOT_MUTE_SELF: 2685, BAN_DURATION_INVALID: 2686, OPERATION_NOT_SUPPORTED_IN_AV: 2687, NOT_MY_FRIEND: 2700, ALREADY_MY_FRIEND: 2701, FRIEND_GRP_EXISTED: 2710, FRIEND_GRP_NOT_EXIST: 2711, FRIEND_APPLICATION_NOT_EXIST: 2716, UPDATE_PROFILE_INVALID_PARAM: 2721, UPDATE_PROFILE_NO_KEY: 2722, CANNOT_ADD_SELF_TO_BLACKLIST: 2742, NETWORK_ERROR: 2800, NETWORK_TIMEOUT: 2801, NO_NETWORK: 2805, UNCAUGHT_ERROR: 2903, INVALID_OPERATION: 2905, INVALID_TRTC_CMD: 2995, OVER_FREQUENCY_LIMIT: 2996, NO_PROTOCOL: 2997, NO_MODULE: 2998, SDK_IS_NOT_READY: 2999, LOGGING_IN: 3e3, LOGIN_FAILED: 3001, KICKED_OUT_MULT_DEVICE: 3002, KICKED_OUT_MULT_ACCOUNT: 3003, KICKED_OUT_USERSIG_EXPIRED: 3004, LOGGED_OUT: 3005, KICKED_OUT_REST_API: 3006, ILLEGAL_TOPIC_ID: 3021, NO_USE: 3122, PROFANITY_FOUND: 3123, OPTIONS_IS_EMPTY: 3153, MSG_A2KEY_EXPIRED: 20002, ACCOUNT_A2KEY_EXPIRED: 70001, HELLO_ANSWER_KICKED_OUT: 1002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, SIGNALING_INVALID_INVITE_ID: 8010, SIGNALING_NO_PERMISSION: 8011, SIGNALING_ALREADY_EXISTS: 8012, INVALID_CANCEL_MESSAGE: 8020 }, Vn = null, c4 = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "";
      }, [{ key: "isLoggedIn", value: function() {
        return this._m.get(12).isLoggedIn();
      } }, { key: "isOversea", value: function() {
        return this._m.get(12).isOversea();
      } }, { key: "isPrivateNetWork", value: function() {
        var e5 = this._m.get(12);
        return e5.isPrivateNetWork() && !e5.getFileDownloadProxy();
      } }, { key: "getFileDownloadProxy", value: function() {
        return this._m.get(12).getFileDownloadProxy();
      } }, { key: "getDownloadFileAuthKey", value: function() {
        return this._m.get(12).getDownloadFileAuthKey();
      } }, { key: "getMyUserID", value: function() {
        return this._m.get(12).getUserID();
      } }, { key: "getMyTinyID", value: function() {
        return this._m.get(12).getTinyID();
      } }, { key: "getSDKAppID", value: function() {
        return this._m.get(12).getSDKAppID();
      } }, { key: "isIntl", value: function() {
        return this._m.get(12).isIntl();
      } }, { key: "isUsingChatCore", value: function() {
        return this._m.get(12).isUsingChatCore();
      } }, { key: "isDevMode", value: function() {
        return this._m.get(12).isDevMode();
      } }, { key: "get", value: function(e5) {
        return this._m.get(e5);
      } }, { key: "getPlatform", value: function() {
        return ye2;
      } }, { key: "getCloudConfig", value: function(e5) {
        return this._m.get(23).getCloudConfig(e5);
      } }, { key: "emitOEvt", value: function(e5, t5) {
        this._m.getOEmitInst().emit(e5, t5);
      } }, { key: "emitIEvt", value: function(e5, t5) {
        this._m.getIEmitInst().emit(e5, t5);
      } }, { key: "getIEmitInst", value: function() {
        return this._m.getIEmitInst();
      } }, { key: "req", value: function(e5) {
        return this._m.get(20).req(e5);
      } }, { key: "canIUse", value: function(e5) {
        return this._m.get(27).canIUse(e5);
      } }, { key: "getErrMsg", value: function(e5, t5, n5) {
        return this._m.getErrMsg(e5, t5, n5);
      } }, { key: "warn", value: function(e5, t5, n5) {
        e5 = this.getErrMsg(e5, t5, n5);
        e5 && M3.w(e5);
      } }, { key: "noUse", value: function(e5) {
        var t5 = k2.NO_USE;
        return E4({ code: t5, message: this.getErrMsg(t5, e5) });
      } }]), G2 = { LOGIN: "wslogin", LOGOUT: "wslogout", HELLO: "wshello", KICK_OTHER: "KickOther", SYNC_UNREAD_MSG: "getmsg", SEND_C2C_MSG: "sendmsg", SEND_GRP_MSG: "send_group_msg", GET_USER_PROFILE: "portrait_get_all", UPDATE_MY_PROFILE: "portrait_set", GET_BL: "black_list_get", ADD_TO_BL: "black_list_add", RM_FROM_BL: "black_list_delete", GET_FD_LIST: "friend_get", GET_FD_PROFILE: "friend_get_specified", CHECK_FD: "friend_check", DEL_FD: "friend_delete", ADD_FD: "friend_add", UPDATE_FD: "friend_update", RESPOND_FD_APPLICATION: "friend_response", GET_FD_APPLICATION_LIST: "pendency_get", DEL_FD_APPLICATION: "pendency_delete", REFUSE_FD_APPLICATION: "pendency_refuse", REPORT_FD_APPLICATION: "pendency_report", GET_FD_GRP_LIST: "group_get", CREATE_FD_GRP: "group_add", DEL_FD_GRP: "group_delete", UPDATE_FD_GRP: "group_update", REVOKE_C2C_MSG: "msgwithdraw", SET_C2C_MSG_READ: "msgreaded", SET_C2C_PEER_MUTE_NOTIFICATIONS: "set_c2c_peer_mute_notifications", GET_C2C_PEER_MUTE_NOTIFICATIONS: "get_c2c_peer_mute_notifications", GET_C2C_ROAMING_MSG: "getroammsg", GET_C2C_PEER_READ_TIME: "get_peer_read_time", DEL_C2C_MSG: "delete_c2c_msg_ramble", MODIFY_C2C_MSG: "modify_c2c_msg", MODIFY_C2C_MSG_EXT: "set_key_values", GET_C2C_MSG_EXT: "get_key_values", ADD_C2C_MSG_REACTION: "reaction_add", RM_C2C_MSG_REACTION: "reaction_del", GET_C2C_MSG_REACTIONS: "reaction_multi_stat", GET_C2C_MSG_REACTION_USER_LIST: "reaction_iterate", PAGING_GET_CONV_LIST: "page_get", DEL_CONV: "batch_delete", CLEAR_HISTORY_MSG: "clear_msg", PIN_CONV: "top", DEL_GROUP_AT_TIPS: "deletemsg", SET_CONV_CUSTOM_DATA: "set_conv_custom_data", MARK_CONV: "mark_contact", CREATE_CONV_GRP: "create_contact_group", DEL_CONV_GRP: "del_contact_group", RENAME_CONV_GRP: "update_contact_group", ADD_CONV_TO_GRP: "add_conv_to_group", DEL_CONV_FROM_GRP: "del_conv_from_group", GET_CONV_GRP_LIST: "get_contact_group", SEARCH_CONV_GRP_MARK: "search_contact_group", GET_GRP_LIST: "get_joined_group_list", GET_GRP_PROFILE: "get_group_self_member_info", CREATE_GRP: "create_group", DISMISS_GRP: "destroy_group", UPDATE_GRP_PROFILE: "modify_group_base_info", APPLY_JOIN_GRP: "apply_join_group", APPLY_JOIN_GRP_NOAUTH: "apply_join_group_noauth", QUIT_GRP: "quit_group", SEARCH_GRP: "get_group_public_info", CHANGE_GRP_OWNER: "change_group_owner", HANDLE_GRP_APPLICATION: "handle_apply_join_group", HANDLE_INVITE_JOIN_GRP: "handle_invite_join_permission_group", HANDLE_GRP_INVITATION: "handle_invite_join_group", REVOKE_GRP_MSG: "group_msg_recall", SET_GRP_MSG_READ: "msg_read_report", SET_ALL_MSG_READ: "read_all_unread_msg", GET_GRP_ROAMING_MSG: "group_msg_get", GET_READ_RECEIPT: "get_group_msg_receipt", SEND_READ_RECEIPT: "group_msg_receipt", SEND_C2C_READ_RECEIPT: "c2c_msg_read_receipt", GET_READ_RECEIPT_DETAIL: "get_group_msg_receipt_detail", GET_GRP_RECEIPTS_BY_USERS: "get_group_msg_receipts_by_users", GET_GRP_PENDENCY: "get_pendency", DEL_GRP_SYSTEM_NOTICE: "deletemsg", AV_POLLING: "get_msg", AV_NOAUTH_POLLING: "get_msg_noauth", GET_ONLINE_MBR_NUM: "get_online_member_num", DEL_GRP_MSG: "delete_group_ramble_msg_by_seq", MODIFY_GRP_MSG: "modify_group_msg", SET_GRP_ATTR: "set_group_attr", MODIFY_GRP_ATTR: "modify_group_attr", DEL_GRP_ATTR: "delete_group_attr", CLEAR_GRP_ATTR: "clear_group_attr", GET_GRP_ATTR: "get_group_attr", MODIFY_GRP_MSG_EXT: "group_set_key_values", GET_GRP_MSG_EXT: "group_get_key_values", GET_GRP_NOTIFY: "batch_get_group_notify", UPDATE_GRP_COUNTER: "update_group_counter", GET_GRP_COUNTER: "get_group_counter", ADD_GRP_MSG_REACTION: "group_reaction_add", RM_GRP_MSG_REACTION: "group_reaction_del", GET_GRP_MSG_REACTIONS: "group_reaction_multi_stat", GET_GRP_MSG_REACTION_USER_LIST: "group_reaction_iterate", GET_GRP_MBR_LIST: "get_group_member_info", GET_AV_MBR_LIST: "get_members", GET_GRP_MBR_PROFILE: "get_specified_group_member_info", ADD_GRP_MBR: "add_group_member", DEL_GRP_MBR: "delete_group_member", BAN_AV_MBR: "ban_group_member", MODIFY_GRP_MBR_INFO: "modify_group_member_info", MARK_AV_MBR_INFO: "modify_user_info", COS_SIGN: "cos", COS_PRE_SIG: "pre_sig", SIMPLE_COS_PRE_SIG: "simple_sig", GET_IMAGE_INFO: "get_imageinfo", GET_IP: "get_final_ip", VIDEO_COVER: "video_cover", SSO_STAT: "tim_web_report_v2", PING: "alive", MSG_PUSH: "msg_push", CS: "query", GRP_CS: "query_grp", MBR_CS: "query_grp_member", USER_CS: "query_user", MULTI_MSG_PUSH: "multi_msg_push_ws", MSG_PUSH_ACK: "ws_msg_push_ack", STATUS_FORCE_OFFLINE: "stat_forceoffline", UPLOAD_MERGER_MSG: "save_relay_json_msg", DOWNLOAD_MERGER_MSG: "get_relay_json_msg", FETCH_CLOUD_CTRL_CONFIG: "fetch_config", PUSHED_CLOUD_CTRL_CONFIG: "push_configv2", FETCH_COMMERCIAL_CONFIG: "fetch_imsdk_purchase_bitsv2", PUSHED_COMMERCIAL_CONFIG: "push_imsdk_purchase_bitsv2", OVERLOAD_NOTIFY: "notify2", CREATE_TOPIC: "create_topic", DEL_TOPIC: "destroy_topic", UPDATE_TOPIC_PROFILE: "modify_topic", GET_TOPIC_LIST: "get_topic", SET_SELF_STATUS: "ws_set_custom_status", GET_USER_STATUS: "ws_get_user_status", SUB_USER_STATUS: "ws_status_subscribe", UNSUB_USER_STATUS: "ws_status_unsubscribe", STAT_BACKGROUND: "ws_stat_background", STAT_FOREGROUND: "ws_stat_foreground", SET_TOKEN: "ws_stat_settoken", PUSH_REPORT: "uniapp_sdk_report", GET_PROFANITY_LIST: "get_local_words", TRANSLATE_TEXT: "ws_batch_trans_text", VOICE_TO_TEXT: "ws_sentence_recognition", FOLLOW: "follow_add", UNFOLLOW: "follow_delete", GET_FOLLOW: "follow_get", GET_FOLLOW_INFO: "follow_get_info", CHECK_FOLLOW_TYPE: "follow_check", SET_ALL_RECEIVE_MSG_OPT: "ws_set_do_not_disturb", GET_ALL_RECEIVE_MSG_OPT: "ws_get_do_not_disturb" }, Bn = "networkRTT", Hn = "messageE2EDelay", Kn = "sendMessageC2C", Wn = "sendMessageGroup", Yn = "sendMessageGroupAV", jn = "sendMessageRichMedia", Jn = "cosUpload", zn = "messageReceivedGroup", Xn = "messageReceivedGroupAVPush", Zn = "messageReceivedGroupAVPull", Qn = q2(q2(q2(q2(q2(q2(q2(q2(q2(q2({}, Bn, 2), Hn, 3), Kn, 4), Wn, 5), Yn, 6), jn, 7), zn, 8), Xn, 9), Zn, 10), Jn, 11), $n = { info: 4, warning: 5, error: 6 }, eo = { wifi: 1, "2g": 2, "3g": 3, "4g": 4, "5g": 5, unknown: 6, none: 7, online: 8 }, to = { login: 4, plugin_search: 16, plugin_translate: 16, plugin_voice_to_text: 16, plugin_cs: 16, plugin_push: 16, plugin_bot: 16, plugin_emoji_reaction: 16, tui_key_features: 16 }, P3 = e4(oo, [{ key: "updateTimeStamp", value: function() {
        this.timestamp = He2();
      } }, { key: "start", value: function(e5) {
        return this._startts = e5, this;
      } }, { key: "end", value: function() {
        var e5, t5 = this, n5 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
        this._sentFlag || (this._netMonitorModule && (e5 = this._netMonitorModule.getNetworkType(), this.setNetworkType(e5)), e5 = He2(), 0 === this.costTime && (this.costTime = e5 - this._startts), this.setMoreMessage("startts:".concat(this._startts, " endts:").concat(e5)), n5 ? (this._sentFlag = true, this._eventStatModule && this._eventStatModule.pushIn(this)) : setTimeout(function() {
          t5._sentFlag = true, t5._eventStatModule && t5._eventStatModule.pushIn(t5);
        }, 0));
      } }, { key: "setError", value: function(e5) {
        var t5;
        return e5 instanceof Error ? this._sentFlag || (t5 = true, (t5 = this._netMonitorModule ? this._netMonitorModule.isOnline() : t5) ? (e5.code && this.setCode(e5.code), e5.message && this.setMoreMessage(e5.message)) : this.setCode(k2.NO_NETWORK), this.setLevel("error")) : M3.w("".concat(this._n, ".setError value not instanceof Error, please check!")), this;
      } }, { key: "setCode", value: function(e5) {
        return N3(e5) || this._sentFlag || ("ECONNABORTED" === e5 && (this.code = 103), A3(e5) ? this.code = e5 : M3.w("".concat(this._n, ".setCode value not a number, please check!"), e5, z2(e5))), this;
      } }, { key: "setMessage", value: function(e5) {
        return N3(e5) || this._sentFlag || (A3(e5) && (this.message = e5.toString()), C4(e5) && (this.message = e5)), this;
      } }, { key: "setCostTime", value: function(e5) {
        return this.costTime = e5, this;
      } }, { key: "setLevel", value: function(e5) {
        return N3(e5) || this._sentFlag || (this.level = $n[e5]), this;
      } }, { key: "setMoreMessage", value: function(e5) {
        return S3(this.moreMessage) ? this.moreMessage = "".concat(e5) : this.moreMessage += " ".concat(e5), this;
      } }, { key: "setNetworkType", value: function(e5) {
        return N3(e5) ? M3.w("".concat(this._n, ".setNetworkType value is undefined, please check!")) : (e5 = eo[e5.toLowerCase()], N3(e5) || (this.networkType = e5)), this;
      } }, { key: "getStartTs", value: function() {
        return this._startts;
      } }, { key: "setUIPlatform", value: function(e5) {
        return this.uiPlatform = e5, this;
      } }, { key: "setExtension", value: function(e5) {
        return this.extension = e5, this;
      } }, { key: "setEventType", value: function(e5) {
        return this.eventType = e5, this;
      } }], [{ key: "bindEventStatModule", value: function(e5) {
        oo.prototype._eventStatModule = e5;
      } }, { key: "bindNetMonitorModule", value: function(e5) {
        oo.prototype._netMonitorModule = e5;
      } }]), no = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_TEXT, this.content = { text: t5.text || "" };
      }, [{ key: "setText", value: function(e5) {
        this.content.text = e5;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.text.length;
      } }]);
      function oo(e5) {
        p4(this, oo), this._n = "SSOLogData", this.eventType = to[e5] || 0, this.timestamp = 0, this.networkType = 8, this.code = 0, this.message = "", this.moreMessage = "", this.extension = e5, this.costTime = 0, this.duplicate = false, this.level = 4, this.uiPlatform = void 0, this._sentFlag = false, this._startts = He2();
      }
      function io(e5) {
        p4(this, io), t5 = i4(this, io);
        var t5, n5 = e5.code, o5 = e5.message, e5 = e5.data;
        return t5.code = n5, o5 ? t5.message = o5 : t5._getErrMsg && (t5.message = t5._getErrMsg(t5.code)), t5.data = e5 || {}, t5;
      }
      function ao(e5, t5, n5, o5) {
        var i5, o5 = 3 < arguments.length && void 0 !== o5 ? o5 : [];
        return e5 && (i5 = e5, t5 && (e5.startsWith("http://") ? i5 = e5.replace(/^http:\/\/[^/]+/, t5) : e5.startsWith("https://") && (i5 = e5.replace(/^https:\/\/[^/]+/, t5))), n5 && -1 === i5.indexOf("authKey=") && co(i5, o5) ? (-1 < i5.indexOf("?") ? "".concat(i5, "&authKey=") : "".concat(i5, "?authKey=")).concat(n5) : i5);
      }
      function so(e5, t5, n5) {
        var o5 = 2 < arguments.length && void 0 !== n5 ? n5 : [], n5 = t5[0].content || t5[0].payload;
        return e5 === R3.MSG_IMAGE ? n5.imageInfoArray.forEach(function(e6) {
          co(e6.imageUrl, o5) && (e6.imageUrl = ro(e6.imageUrl));
        }) : e5 === R3.MSG_VIDEO ? (co(n5.snapshotUrl, o5) && (n5.snapshotUrl = ro(n5.snapshotUrl), n5.thumbUrl = ro(n5.thumbUrl)), co(n5.remoteVideoUrl, o5) && (n5.remoteVideoUrl = ro(n5.remoteVideoUrl))) : e5 === R3.MSG_AUDIO ? co(n5.remoteAudioUrl, o5) && (n5.remoteAudioUrl = ro(n5.remoteAudioUrl)) : e5 === R3.MSG_FILE ? co(n5.fileUrl, o5) && (n5.fileUrl = ro(n5.fileUrl)) : e5 === R3.MSG_MERGER && (e5 = (n5 = t5[0].content || t5[0].payload).downloadKey, n5 = void 0 === (n5 = n5.messageList) ? [] : n5, S3(void 0 === e5 ? "" : e5)) && n5.forEach(function(e6) {
          so(e6.messageBody[0].type, e6.messageBody, o5);
        }), t5;
      }
      function ro(e5) {
        if (!e5)
          return e5;
        if (-1 === e5.indexOf("authKey="))
          return e5;
        for (var e5 = e5.split("?"), t5 = e5[1].split("&"), n5 = 0, o5 = 0; o5 < t5.length; o5++)
          if (-1 < t5[o5].indexOf("authKey=")) {
            n5 = o5;
            break;
          }
        return t5.splice(n5, 1), 0 < t5.length ? "".concat(e5[0], "?").concat(t5.join("&")) : e5[0];
      }
      function co(e5, t5) {
        var n5 = false;
        if (e5) {
          var e5 = e5.match(/:\/\/([0-9]?\.)?(.[^/:]+)/), o5 = e5 && e5[2] || "";
          if (o5.includes("rich-dev"))
            return 1;
          for (var i5 = 0; i5 < t5.length; i5++)
            if (o5.endsWith(t5[i5])) {
              n5 = true;
              break;
            }
        }
        return n5;
      }
      var uo = e4(function e5(t5, n5, o5, i5) {
        p4(this, e5), this._imageMemoryURL = "", this._fileDownloadProxy = n5, this._authKey = o5, this._fileDNList = i5, v3 || ve2 ? this.createImageDataASURL(t5.file) : this.createImageDataASURLInWeb(t5.file), this._initImageInfoModel(), this.type = R3.MSG_IMAGE, this._percent = 0, this.content = { imageFormat: t5.imageFormat || je2.UNKNOWN, uuid: t5.uuid, imageInfoArray: [] }, this.initImageInfoArray(t5.imageInfoArray), this._autoFixUrl();
      }, [{ key: "_initImageInfoModel", value: function() {
        var t5 = this;
        this._ImageInfoModel = function(e5) {
          this.instanceID = ht2(9999999), this.sizeType = e5.type || 0, this.type = 0, this.size = e5.size || 0, this.width = e5.width || 0, this.height = e5.height || 0, this.imageUrl = e5.imageUrl || e5.url || "", this.url = ao(e5.url || t5._imageMemoryURL, t5._fileDownloadProxy, t5._authKey, t5._fileDNList);
        }, this._ImageInfoModel.prototype = { setSizeType: function(e5) {
          this.sizeType = e5;
        }, setType: function(e5) {
          this.type = e5;
        }, setImageUrl: function(e5) {
          e5 && (this.imageUrl = ao(e5, t5._fileDownloadProxy, t5._authKey, t5._fileDNList));
        }, getImageUrl: function() {
          return this.imageUrl;
        } };
      } }, { key: "initImageInfoArray", value: function(e5) {
        for (var t5, n5 = 0, o5 = null; n5 <= 2; )
          t5 = N3(e5) || N3(e5[n5]) ? { type: 0, size: 0, width: 0, height: 0, url: "" } : e5[n5], (o5 = new this._ImageInfoModel(t5)).setSizeType(n5 + 1), o5.setType(n5), this.addImageInfo(o5), n5++;
        this.updateAccessSideImageInfoArray();
      } }, { key: "updateImageInfoArray", value: function(e5) {
        for (var t5, n5 = this.content.imageInfoArray.length, o5 = 0; o5 < n5; o5++)
          t5 = this.content.imageInfoArray[o5], e5[o5].size && (t5.size = e5[o5].size), e5[o5].url && t5.setImageUrl(e5[o5].url), e5[o5].width && (t5.width = e5[o5].width), e5[o5].height && (t5.height = e5[o5].height);
      } }, { key: "_autoFixUrl", value: function() {
        for (var e5 = this.content.imageInfoArray.length, t5 = "", n5 = "", o5 = ["http", "https"], i5 = null, a5 = 0; a5 < e5; a5++)
          this.content.imageInfoArray[a5].url && "" !== (i5 = this.content.imageInfoArray[a5]).imageUrl && (n5 = i5.imageUrl.slice(0, i5.imageUrl.indexOf("://") + 1), t5 = i5.imageUrl.slice(i5.imageUrl.indexOf("://") + 1), o5.indexOf(n5) < 0 && (n5 = "https:"), this.content.imageInfoArray[a5].setImageUrl([n5, t5].join("")));
      } }, { key: "updatePercent", value: function(e5) {
        this._percent = e5, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateImageFormat", value: function(e5) {
        this.content.imageFormat = je2[e5.toUpperCase()] || je2.UNKNOWN;
      } }, { key: "createImageDataASURLInWeb", value: function(e5) {
        void 0 !== e5 && 0 < e5.files.length && (this._imageMemoryURL = window.URL.createObjectURL(e5.files[0]));
      } }, { key: "createImageDataASURL", value: function(e5) {
        e5 && e5.url && (this._imageMemoryURL = e5.url);
      } }, { key: "replaceImageInfo", value: function(e5, t5) {
        this.content.imageInfoArray[t5] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t5] = e5);
      } }, { key: "addImageInfo", value: function(e5) {
        3 <= this.content.imageInfoArray.length || this.content.imageInfoArray.push(e5);
      } }, { key: "updateAccessSideImageInfoArray", value: function() {
        var e5 = this.content.imageInfoArray, t5 = e5[0], n5 = t5.width, n5 = void 0 === n5 ? 0 : n5, t5 = t5.height, t5 = void 0 === t5 ? 0 : t5;
        0 !== n5 && 0 !== t5 && (Bt2(e5), Object.assign(e5[2], Vt2({ originWidth: n5, originHeight: t5, min: 720 })));
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.imageInfoArray.length && "" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size;
      } }]), lo = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_FACE, this.content = t5 || null;
      }, [{ key: "sendable", value: function() {
        return null !== this.content;
      } }]), po = e4(function e5(t5, n5, o5, i5) {
        p4(this, e5), this.type = R3.MSG_AUDIO, this._percent = 0, this._fileDownloadProxy = n5, this._authKey = o5, this._fileDNList = i5, this.content = { downloadFlag: 2, second: t5.second, size: t5.size, url: ao(t5.url, this._fileDownloadProxy, this._authKey, this._fileDNList), remoteAudioUrl: ao(t5.url || "", this._fileDownloadProxy, this._authKey, this._fileDNList), uuid: t5.uuid };
      }, [{ key: "updatePercent", value: function(e5) {
        this._percent = e5, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateAudioUrl", value: function(e5) {
        this.content.remoteAudioUrl = ao(e5, this._fileDownloadProxy, this._authKey, this._fileDNList);
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteAudioUrl;
      } }]), _o = { from: true, groupID: true, groupName: true, to: true }, ho = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_GRP_TIP, this.content = {}, this._initContent(t5);
      }, [{ key: "_initContent", value: function(t5) {
        var n5 = this;
        Object.keys(t5).forEach(function(e5) {
          switch (e5) {
            case "remarkInfo":
              break;
            case "groupProfile":
              n5.content.groupProfile = {}, n5._initGroupProfile(t5[e5]);
              break;
            case "operatorInfo":
              n5.content.operatorInfo = {}, n5._initOperatorInfo(t5[e5]);
              break;
            case "memberInfoList":
            case "msgMemberInfo":
              n5._updateMemberList(t5[e5]);
              break;
            case "memberExtraInfo":
            case "onlineMemberInfo":
              break;
            case "memberNum":
              n5.content[e5] = t5[e5], n5.content.memberCount = t5[e5];
              break;
            case "newGroupProfile":
              n5.content.newGroupProfile = {}, n5._initNewGroupProfile(t5[e5]);
              break;
            default:
              n5.content[e5] = t5[e5];
          }
        }), this.content.userIDList || (this.content.userIDList = [this.content.operatorID]);
      } }, { key: "_initGroupProfile", value: function(e5) {
        for (var t5 = Object.keys(e5), n5 = 0; n5 < t5.length; n5++) {
          var o5 = t5[n5];
          _o[o5] && (this.content.groupProfile[o5] = e5[o5]);
        }
      } }, { key: "_initOperatorInfo", value: function(e5) {
        for (var t5 = Object.keys(e5), n5 = 0; n5 < t5.length; n5++) {
          var o5 = t5[n5];
          this.content.operatorInfo[o5] = e5[o5];
        }
      } }, { key: "_updateMemberList", value: function(e5) {
        S3(this.content.memberList) ? this.content.memberList = e5 : this.content.memberList.forEach(function(t5) {
          e5.forEach(function(e6) {
            t5.userID === e6.userID && Object.assign(t5, e6);
          });
        });
      } }, { key: "_initNewGroupProfile", value: function(e5) {
        for (var t5 = Object.keys(e5), n5 = 0; n5 < t5.length; n5++) {
          var o5 = t5[n5];
          this.content.newGroupProfile[o5] = "muteAllMembers" !== o5 ? e5[o5] : 1 === e5[o5];
        }
      } }]), go = { from: true, groupID: true, groupName: true, to: true, groupType: true }, fo = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(t5);
      }, [{ key: "_initContent", value: function(t5) {
        var n5 = this;
        Object.keys(t5).forEach(function(e5) {
          switch (e5) {
            case "memberInfoList":
              break;
            case "remarkInfo":
              n5.content.handleMessage = t5[e5];
              break;
            case "groupProfile":
              n5.content.groupProfile = {}, n5._initGroupProfile(t5[e5]);
              break;
            default:
              n5.content[e5] = t5[e5];
          }
        });
      } }, { key: "_initGroupProfile", value: function(e5) {
        for (var t5 = Object.keys(e5), n5 = 0; n5 < t5.length; n5++) {
          var o5 = t5[n5];
          go[o5] && ("groupName" === o5 ? this.content.groupProfile.name = e5[o5] : this.content.groupProfile[o5] = e5[o5]);
        }
      } }]), mo = e4(function e5(t5, n5, o5, i5) {
        p4(this, e5), this.type = R3.MSG_FILE, this._percent = 0;
        var a5 = this._getFileInfo(t5);
        this.content = { downloadFlag: 2, fileUrl: ao(t5.url || t5.fileUrl, n5, o5, i5) || "", uuid: t5.uuid, fileName: a5.name || "", fileSize: a5.size || 0 };
      }, [{ key: "_getFileInfo", value: function(e5) {
        var t5, n5;
        return N3(e5.fileName) || N3(e5.fileSize) ? (t5 = e5.file.files[0], fe2 && (t5.path && -1 !== t5.path.indexOf(".") && (n5 = t5.path.slice(t5.path.lastIndexOf(".") + 1).toLowerCase(), t5.type = n5, t5.name || (t5.name = "".concat(ht2(999999), ".").concat(n5))), t5.name || (t5.type = "", t5.name = t5.path.slice(t5.path.lastIndexOf("/") + 1).toLowerCase()), t5.suffix && (t5.type = t5.suffix), t5.url || (t5.url = t5.path)), { size: t5.size, name: t5.name }) : { size: e5.fileSize, name: e5.fileName };
      } }, { key: "updatePercent", value: function(e5) {
        this._percent = e5, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateFileUrl", value: function(e5) {
        this.content.fileUrl = e5;
      } }, { key: "sendable", value: function() {
        return "" !== this.content.fileUrl && "" !== this.content.fileName && 0 !== this.content.fileSize;
      } }]), vo = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_CUSTOM, this.content = { data: t5.data || "", description: t5.description || "", extension: t5.extension || "" };
      }, [{ key: "setData", value: function(e5) {
        return this.content.data = e5, this;
      } }, { key: "setDescription", value: function(e5) {
        return this.content.description = e5, this;
      } }, { key: "setExtension", value: function(e5) {
        return this.content.extension = e5, this;
      } }, { key: "sendable", value: function() {
        return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length;
      } }]), Io = e4(function e5(t5, n5, o5, i5) {
        p4(this, e5), this.type = R3.MSG_VIDEO, this._percent = 0, this._fileDownloadProxy = n5, this._authKey = o5, this._fileDNList = i5, this.content = { remoteVideoUrl: ao(t5.remoteVideoUrl || t5.videoUrl || "", this._fileDownloadProxy, this._authKey, this._fileDNList), videoFormat: t5.videoFormat, videoSecond: parseInt(t5.videoSecond, 10), videoSize: t5.videoSize, videoUrl: ao(t5.videoUrl, this._fileDownloadProxy, this._authKey, this._fileDNList), videoDownloadFlag: 2, videoUUID: t5.videoUUID, thumbUUID: t5.thumbUUID, thumbFormat: t5.thumbFormat, thumbWidth: t5.thumbWidth, snapshotWidth: t5.thumbWidth, thumbHeight: t5.thumbHeight, snapshotHeight: t5.thumbHeight, thumbSize: t5.thumbSize, snapshotSize: t5.thumbSize, thumbDownloadFlag: 2, thumbUrl: ao(t5.thumbUrl, this._fileDownloadProxy, this._authKey, this._fileDNList), snapshotUrl: ao(t5.thumbUrl, this._fileDownloadProxy, this._authKey, this._fileDNList) };
      }, [{ key: "updatePercent", value: function(e5) {
        this._percent = e5, 1 < this._percent && (this._percent = 1);
      } }, { key: "updateVideoUrl", value: function(e5) {
        e5 && (this.content.remoteVideoUrl = ao(e5, this._fileDownloadProxy, this._authKey, this._fileDNList));
      } }, { key: "updateSnapshotInfo", value: function(e5) {
        var t5 = e5.snapshotUrl, n5 = e5.snapshotWidth, e5 = e5.snapshotHeight;
        S3(t5) || (this.content.thumbUrl = this.content.snapshotUrl = t5), S3(n5) || (this.content.thumbWidth = this.content.snapshotWidth = Number(n5)), S3(e5) || (this.content.thumbHeight = this.content.snapshotHeight = Number(e5));
      } }, { key: "sendable", value: function() {
        return "" !== this.content.remoteVideoUrl;
      } }]), Mo = e4(function e5(t5) {
        p4(this, e5), this.type = R3.MSG_LOCATION;
        var n5 = t5.description, o5 = t5.longitude, t5 = t5.latitude;
        this.content = { description: n5, longitude: o5, latitude: t5 };
      }, [{ key: "sendable", value: function() {
        return true;
      } }]), yo = e4(function e5(t5, n5, o5, i5) {
        var a5, s5;
        p4(this, e5), this.from = t5.from, this.messageSender = t5.from, this.time = t5.time, this.messageSequence = t5.sequence, this.clientSequence = t5.clientSequence || t5.sequence, this.messageRandom = t5.random, this.cloudCustomData = t5.cloudCustomData || "", this.clientTime = t5.clientTime || void 0, t5.ID ? (this.ID = t5.ID || "", this.nick = t5.nick || "", this.avatar = t5.avatar || "", t5.messageBody ? this.messageBody = JSON.parse(JSON.stringify(t5.messageBody)) : this.messageBody = [{ type: t5.type, payload: t5.payload }], t5.conversationType ? t5.conversationType.startsWith(R3.CONV_C2C) ? this.receiverUserID = t5.to : t5.conversationType.startsWith(R3.CONV_GROUP) && (this.receiverGroupID = t5.to) : t5.receiverGroupID ? this.receiverGroupID = t5.receiverGroupID : t5.receiverUserID && (this.receiverUserID = t5.receiverUserID), this.messageReceiver = t5.to || t5.messageReceiver) : (this.nick = t5.nick || "", this.avatar = t5.avatar || "", this.messageBody = [], a5 = t5.elements[0].type, s5 = t5.elements[0].content, this._patchRichMediaPayload(a5, s5), this._updateRichMediaDownloadUrl(a5, s5, n5, o5, i5), a5 === R3.MSG_MERGER ? this.messageBody.push({ type: a5, payload: new Co(s5, n5, o5, i5).content }) : this.messageBody.push({ type: a5, payload: s5 }), t5.groupID && (this.receiverGroupID = t5.groupID, this.messageReceiver = t5.groupID), t5.to && (this.receiverUserID = t5.to, this.messageReceiver = t5.to), this.ID = "".concat(t5.tinyID, "-").concat(t5.clientTime, "-").concat(t5.random));
      }, [{ key: "_patchRichMediaPayload", value: function(e5, t5) {
        e5 === R3.MSG_IMAGE ? t5.imageInfoArray.forEach(function(e6) {
          !e6.imageUrl && e6.url && (e6.imageUrl = e6.url, e6.sizeType = e6.type, 1 === e6.type ? e6.type = 0 : 3 === e6.type && (e6.type = 1));
        }) : e5 === R3.MSG_VIDEO ? !t5.remoteVideoUrl && t5.videoUrl && (t5.remoteVideoUrl = t5.videoUrl) : e5 === R3.MSG_AUDIO ? !t5.remoteAudioUrl && t5.url && (t5.remoteAudioUrl = t5.url) : e5 === R3.MSG_FILE && !t5.fileUrl && t5.url && (t5.fileUrl = t5.url, t5.url = void 0);
      } }, { key: "_updateRichMediaDownloadUrl", value: function(e5, t5, n5, o5, i5) {
        (n5 || o5) && (e5 === R3.MSG_IMAGE ? t5.imageInfoArray.forEach(function(e6) {
          e6.imageUrl = ao(e6.imageUrl, n5, o5, i5), e6.url = ao(e6.url, n5, o5, i5);
        }) : e5 === R3.MSG_VIDEO ? (t5.remoteVideoUrl = ao(t5.remoteVideoUrl, n5, o5, i5), t5.videoUrl = ao(t5.videoUrl, n5, o5, i5), t5.thumbUrl = ao(t5.thumbUrl, n5, o5, i5), t5.snapshotUrl = ao(t5.thumbUrl, n5, o5, i5), t5.snapshotHeight = t5.thumbHeight, t5.snapshotWidth = t5.thumbWidth) : e5 === R3.MSG_AUDIO ? (t5.remoteAudioUrl = ao(t5.remoteAudioUrl, n5, o5, i5), t5.url = ao(t5.url, n5, o5, i5)) : e5 === R3.MSG_FILE && (t5.fileUrl = ao(t5.fileUrl, n5, o5, i5)));
      } }]), Co = e4(function e5(t5, n5, o5, i5) {
        var a5, s5, r5, c5, u5, l5, d4;
        p4(this, e5), this.type = R3.MSG_MERGER, this.content = { downloadKey: "", pbDownloadKey: "", messageList: [], title: "", abstractList: [], compatibleText: "", version: 0, layersOverLimit: false }, t5.downloadKey ? (s5 = t5.downloadKey, r5 = t5.pbDownloadKey, c5 = t5.title, u5 = t5.abstractList, l5 = t5.compatibleText, a5 = t5.version, this.content.downloadKey = s5, this.content.pbDownloadKey = r5, this.content.title = c5, this.content.abstractList = u5, this.content.compatibleText = l5, this.content.version = a5 || 0) : S3(t5.messageList) ? 1 === t5.layersOverLimit && (this.content.layersOverLimit = true) : (s5 = t5.messageList, r5 = t5.title, c5 = t5.abstractList, u5 = t5.compatibleText, l5 = t5.version, d4 = [], s5.forEach(function(e6) {
          S3(e6) || (e6 = new yo(e6, n5, o5, i5), d4.push(e6));
        }), this.content.messageList = d4, this.content.title = r5, this.content.abstractList = c5, this.content.compatibleText = u5, this.content.version = l5 || 0);
      }, [{ key: "sendable", value: function() {
        return !S3(this.content.messageList) || !S3(this.content.downloadKey);
      } }]), To = { 1: R3.MSG_PRIORITY_HIGH, 2: R3.MSG_PRIORITY_NORMAL, 3: R3.MSG_PRIORITY_LOW, 4: R3.MSG_PRIORITY_LOWEST }, Do = e4(function e5(t5) {
        p4(this, e5), this.ID = "", this.conversationID = t5.conversationID || null, this.conversationType = t5.conversationType || R3.CONV_C2C, this.conversationSubType = t5.conversationSubType, this.time = t5.time || Math.ceil(Date.now() / 1e3), this.sequence = t5.sequence || 0, this.clientSequence = t5.clientSequence || t5.sequence || 0, this.random = t5.random || 0 === t5.random ? t5.random : ht2(), this.priority = this._computePriority(t5.priority), this.nick = t5.nick || "", this.avatar = t5.avatar || "", this.isPeerRead = false, this.nameCard = "", this.hasRiskContent = nn(t5.checkResult), this._elements = [], this.isPlaceMessage = t5.isPlaceMessage || 0, this.isRevoked = 2 === t5.isPlaceMessage || 8 === t5.msgFlagBits, this.from = t5.from || null, this.to = t5.to || null, this.flow = "", this.isSystemMessage = t5.isSystemMessage || false, this.protocol = t5.protocol || "JSON", this.isResend = false, this.isRead = false, this.status = t5.status || On, this._onlineOnlyFlag = false, this._groupAtInfoList = [], this._relayFlag = false, this.atUserList = [], this.cloudCustomData = t5.cloudCustomData || "", this.isDeleted = false, this.isModified = !!t5.messageVersion, this._isExcludedFromUnreadCount = !(!t5.messageControlInfo || 1 !== t5.messageControlInfo.excludedFromUnreadCount), this._isExcludedFromLastMessage = !(!t5.messageControlInfo || 1 !== t5.messageControlInfo.excludedFromLastMessage), this.clientTime = t5.clientTime || xe2() || 0, this.senderTinyID = t5.senderTinyID || t5.tinyID || "", this.readReceiptInfo = t5.readReceiptInfo || { readCount: void 0, unreadCount: void 0, isPeerRead: void 0, timestamp: 0 }, this.needReadReceipt = true === t5.needReadReceipt || 1 === t5.needReadReceipt, this.version = t5.messageVersion || 0, this.isBroadcastMessage = t5.isBroadcastMessage || false, this._receiverList = t5.receiverList || void 0, this.isSupportExtension = true === t5.isSupportExtension || 1 === t5.isSupportExtension, this._cmConfigID = t5.customModerationConfigurationID, this.revoker = t5.revokerInfo && t5.revokerInfo.revoker || "", this.revokerInfo = t5.revokerInfo || { userID: "", nick: "", avatar: "" }, this.revokeReason = t5.revokeReason || "", this.reInitialize(t5.currentUser), this.extractGroupInfo(t5.groupProfile || null), this.handleGroupAtInfo(t5), this.initC2CReadReceiptInfo(t5);
      }, [{ key: "elements", get: function() {
        return this._elements;
      } }, { key: "getElements", value: function() {
        return this._elements;
      } }, { key: "extractGroupInfo", value: function(e5) {
        null !== e5 && (C4(e5.nick) && (this.nick = e5.nick), C4(e5.avatar) && (this.avatar = e5.avatar), e5 = e5.messageFromAccountExtraInformation, m3(e5)) && C4(e5.nameCard) && (this.nameCard = e5.nameCard);
      } }, { key: "handleGroupAtInfo", value: function(e5) {
        var t5 = this;
        e5.payload && e5.payload.atUserList && e5.payload.atUserList.forEach(function(e6) {
          e6 !== R3.MSG_AT_ALL ? (t5._groupAtInfoList.push({ groupAtAllFlag: 0, groupAtUserID: e6 }), t5.atUserList.push(e6)) : (t5._groupAtInfoList.push({ groupAtAllFlag: 1 }), t5.atUserList.push(R3.MSG_AT_ALL));
        }), O3(e5.groupAtInfo) && e5.groupAtInfo.forEach(function(e6) {
          0 === e6.groupAtAllFlag ? t5.atUserList.push(e6.groupAtUserID) : 1 === e6.groupAtAllFlag && t5.atUserList.push(R3.MSG_AT_ALL);
        });
      } }, { key: "getGroupAtInfoList", value: function() {
        return this._groupAtInfoList;
      } }, { key: "_initProxy", value: function() {
        this._elements[0] && (this.payload = this._elements[0].content, this.type = this._elements[0].type);
      } }, { key: "reInitialize", value: function(e5) {
        e5 && (this.status = this.from ? On : An, !this.from) && (this.from = e5), this._initFlow(e5), this._initSequence(e5), this._concatConversationID(e5), this.generateMessageID();
      } }, { key: "isSendable", value: function() {
        return 0 !== this._elements.length && (true === this._relayFlag || "function" == typeof this._elements[0].sendable && this._elements[0].sendable());
      } }, { key: "_initTo", value: function(e5) {
        this.conversationType === R3.CONV_GROUP && (this.to = e5.groupID);
      } }, { key: "_initSequence", value: function(e5) {
        var t5, n5, o5;
        0 === this.clientSequence && e5 && (this.clientSequence = !!(e5 = e5) && (void 0 === Et2[e5] && (o5 = /* @__PURE__ */ new Date(), t5 = "3".concat(o5.getHours()).slice(-2), n5 = "0".concat(o5.getMinutes()).slice(-2), o5 = "0".concat(o5.getSeconds()).slice(-2), Et2[e5] = parseInt([t5, n5, o5, "0001"].join("")), o5 = n5 = t5 = null, M3.l("autoIncrementIndex start index:".concat(Et2[e5]))), Et2[e5]++)), 0 === this.sequence && this.conversationType === R3.CONV_C2C && (this.sequence = this.clientSequence);
      } }, { key: "generateMessageID", value: function() {
        this.from === R3.CONV_SYSTEM && (this.senderTinyID = "144115198244471703"), this.ID = "".concat(this.senderTinyID, "-").concat(this.clientTime, "-").concat(this.random);
      } }, { key: "_initFlow", value: function(e5) {
        "" !== e5 && (e5 === this.from ? (this.flow = "out", this.isRead = true) : this.flow = "in");
      } }, { key: "_concatConversationID", value: function(e5) {
        var t5 = this.to, n5 = this.conversationType;
        n5 !== R3.CONV_SYSTEM ? (e5 = n5 === R3.CONV_C2C ? e5 === this.from ? t5 : this.from : this.to, this.conversationID = e5 ? "".concat(n5).concat(e5) : null) : this.conversationID = R3.CONV_SYSTEM;
      } }, { key: "isElement", value: function(e5) {
        return e5 instanceof no || e5 instanceof uo || e5 instanceof lo || e5 instanceof po || e5 instanceof mo || e5 instanceof Io || e5 instanceof ho || e5 instanceof fo || e5 instanceof vo || e5 instanceof Mo || e5 instanceof Co;
      } }, { key: "setElement", value: function(e5, t5, n5, o5) {
        var i5 = this;
        if (this.isElement(e5))
          this._elements = [e5];
        else {
          var a5 = function(e6) {
            if (e6.type && e6.content)
              switch (e6.type) {
                case R3.MSG_TEXT:
                  i5.setTextElement(e6.content);
                  break;
                case R3.MSG_IMAGE:
                  i5.setImageElement(e6.content, t5, n5, o5);
                  break;
                case R3.MSG_AUDIO:
                  i5.setAudioElement(e6.content, t5, n5, o5);
                  break;
                case R3.MSG_FILE:
                  i5.setFileElement(e6.content, t5, n5, o5);
                  break;
                case R3.MSG_VIDEO:
                  i5.setVideoElement(e6.content, t5, n5, o5);
                  break;
                case R3.MSG_CUSTOM:
                  i5.setCustomElement(e6.content);
                  break;
                case R3.MSG_LOCATION:
                  i5.setLocationElement(e6.content);
                  break;
                case R3.MSG_GRP_TIP:
                  i5.setGroupTipElement(e6.content);
                  break;
                case R3.MSG_GRP_SYS_NOTICE:
                  i5.setGroupSystemNoticeElement(e6.content);
                  break;
                case R3.MSG_FACE:
                  i5.setFaceElement(e6.content);
                  break;
                case R3.MSG_MERGER:
                  i5.setMergerElement(e6.content, t5, n5, o5);
              }
          };
          if (O3(e5))
            for (var s5 = 0; s5 < e5.length; s5++)
              a5(e5[s5]);
          else
            a5(e5);
        }
        this._initProxy();
      } }, { key: "clearElement", value: function() {
        this._elements.length = 0;
      } }, { key: "setTextElement", value: function(e5) {
        e5 = "string" == typeof e5 ? e5 : e5.text, e5 = new no({ text: e5 });
        this._elements.push(e5);
      } }, { key: "setImageElement", value: function(e5, t5, n5, o5) {
        e5 = new uo(e5, t5, n5, o5);
        this._elements.push(e5);
      } }, { key: "setAudioElement", value: function(e5, t5, n5, o5) {
        e5 = new po(e5, t5, n5, o5);
        this._elements.push(e5);
      } }, { key: "setFileElement", value: function(e5, t5, n5, o5) {
        e5 = new mo(e5, t5, n5, o5);
        this._elements.push(e5);
      } }, { key: "setVideoElement", value: function(e5, t5, n5, o5) {
        e5 = new Io(e5, t5, n5, o5);
        this._elements.push(e5);
      } }, { key: "setLocationElement", value: function(e5) {
        e5 = new Mo(e5);
        this._elements.push(e5);
      } }, { key: "setCustomElement", value: function(e5) {
        e5 = new vo(e5);
        this._elements.push(e5);
      } }, { key: "setGroupTipElement", value: function(e5) {
        var t5, n5 = {}, o5 = e5.operationType;
        S3(e5.memberInfoList) ? e5.operatorInfo && (n5 = e5.operatorInfo) : o5 !== R3.GRP_TIP_MBR_JOIN && o5 !== R3.GRP_TIP_MBR_KICKED_OUT && o5 !== R3.GRP_TIP_MBR_SET_ADMIN && o5 !== R3.GRP_TIP_MBR_CANCELED_ADMIN || (n5 = e5.memberInfoList[0]), S3(e5.memberExtraInfo) || (t5 = e5.memberExtraInfo.reason, e5.msgMemberInfo.forEach(function(e6) {
          e6.reason = t5;
        }));
        o5 = n5.nick, n5 = n5.avatar, C4(o5) && (this.nick = o5), C4(n5) && (this.avatar = n5), o5 = new ho(e5);
        this._elements.push(o5);
      } }, { key: "setGroupSystemNoticeElement", value: function(e5) {
        e5 = new fo(e5);
        this._elements.push(e5);
      } }, { key: "setFaceElement", value: function(e5) {
        e5 = new lo(e5);
        this._elements.push(e5);
      } }, { key: "setMergerElement", value: function(e5, t5, n5, o5) {
        e5 = new Co(e5, t5, n5, o5);
        this._elements.push(e5);
      } }, { key: "setIsRead", value: function(e5) {
        this.isRead = e5;
      } }, { key: "setRelayFlag", value: function(e5) {
        this._relayFlag = e5;
      } }, { key: "_computePriority", value: function(e5) {
        if (!N3(e5)) {
          if (C4(e5) && -1 !== Object.values(To).indexOf(e5))
            return e5;
          if (A3(e5)) {
            e5 = "" + e5;
            if (-1 !== Object.keys(To).indexOf(e5))
              return To[e5];
          }
        }
        return R3.MSG_PRIORITY_NORMAL;
      } }, { key: "setNickAndAvatar", value: function(e5) {
        var t5 = e5.nick, e5 = e5.avatar;
        C4(t5) && (this.nick = t5), C4(e5) && (this.avatar = e5);
      } }, { key: "setNameCard", value: function(e5) {
        C4(e5) && (this.nameCard = e5);
      } }, { key: "initC2CReadReceiptInfo", value: function(e5) {
        var t5 = e5.readReceiptSentByPeer, e5 = e5.timestamp, e5 = void 0 === e5 ? 0 : e5;
        this.conversationType === R3.CONV_C2C && true === this.needReadReceipt && (this.readReceiptInfo.isPeerRead = 1 === (void 0 === t5 ? void 0 : t5), this.readReceiptInfo.timestamp = e5);
      } }]), Eo = ["sound", "FCMChannelID"];
      function Lo(e5) {
        if (m3(e5))
          return { pushFlag: true === e5.disablePush ? 1 : 0, title: e5.title || "", desc: e5.description || "", ext: e5.extension || "", apnsInfo: (n5 = void 0 === (n5 = (t5 = e5).apnsInfo) ? {} : n5, o5 = t5.ignoreIOSBadge, t5 = t5.disableVoipPush, o5 = true === n5.ignoreIOSBadge || true === (void 0 !== o5 && o5) ? 1 : 0, i5 = void 0, N3(t5) || (i5 = false === t5 ? 1 : 0), N3(n5.disableVoipPush) || (i5 = false === n5.disableVoipPush ? 1 : 0), y2(y2({}, n5), {}, { badgeMode: o5, isVoipPush: i5 })), androidInfo: (n5 = void 0 === (n5 = (t5 = e5).androidInfo) ? {} : n5, t5 = t5.androidOPPOChannelID, t5 = n5.OPPOChannelID || (void 0 === t5 ? "" : t5), o5 = void 0 === (o5 = n5.sound) ? "" : o5, i5 = void 0 === (i5 = n5.FCMChannelID) ? "" : i5, y2(y2({}, W2(n5, Eo)), {}, { Sound: -1 === (o5 = (n5 = o5).lastIndexOf(".")) ? n5 : n5.slice(0, o5), OPPOChannelID: t5, GoogleChannelID: i5 })) };
        var t5, n5, o5, i5;
      }
      t4(Ro, c4);
      var So = e4(Ro, [{ key: "onNewMessage", value: function(e5) {
        var t5 = e5.dataList, n5 = e5.isInstantMessage, o5 = e5.C2CRemainingUnreadList, i5 = e5.C2CPairUnreadList, e5 = e5.isSyncingEnded, t5 = (n5 || M3.l("".concat(this._n, ".onNewMessage C2CPairUnreadList:"), i5, "C2CRemainingUnreadList:", o5), this._assembly({ dataList: t5, C2CRemainingUnreadList: o5, C2CPairUnreadList: i5, isInstantMessage: n5 })), o5 = t5.conversationOptionsList, i5 = t5.messageList, t5 = t5.isUnreadC2CMessage, a5 = St2(i5), a5 = (0 < a5.length && this.emitOEvt(h4.MESSAGE_MODIFIED, a5), this.get(11).onNewMessage({ conversationOptionsList: o5, isInstantMessage: n5, isUnreadC2CMessage: t5, isSyncingEnded: e5 }), Rt2(i5));
        n5 && 0 < a5.length && this.emitOEvt(h4.MESSAGE_RECEIVED, a5), i5.length = 0;
      } }, { key: "_assembly", value: function(e5) {
        for (var t5 = e5.dataList, n5 = e5.C2CRemainingUnreadList, o5 = e5.C2CPairUnreadList, i5 = e5.isInstantMessage, a5 = null, s5 = [], r5 = [], c5 = {}, u5 = this.get(26), l5 = false, d4 = this.get(11), p5 = this.get(4), e5 = this.get(17), _4 = this.getFileDownloadProxy(), h5 = this.getDownloadFileAuthKey(), g5 = e5.getFileDNList(), f4 = 0, m4 = t5.length; f4 < m4; f4++)
          if (this._isC2CNotice(t5[f4]))
            this._noticeFromUnreadDBList.push(t5[f4].eventArray[0].c2CNotifyMsgArray[0]);
          else {
            var v4 = t5[f4], I4 = (v4.currentUser = this.getMyUserID(), v4.conversationType = R3.CONV_C2C, v4.isSystemMessage = !!v4.isSystemMessage, (N3(v4.nick) || N3(v4.avatar)) && (l5 = true), (a5 = new Do(v4)).setElement(v4.elements, _4, h5, g5), a5.setNickAndAvatar({ nick: v4.nick, avatar: v4.avatar }), a5.conversationID);
            if (i5) {
              if (this._msgFromUnreadDBMap.get(a5.ID))
                continue;
              var M4, y3, C5 = false, T5 = (a5.from !== this.getMyUserID() ? (y3 = d4.getLatestMessageSentByPeer(I4)) && (M4 = y3.nick, y3 = y3.avatar, l5 ? a5.setNickAndAvatar({ nick: M4, avatar: y3 }) : M4 === a5.nick && y3 === a5.avatar || (C5 = true)) : (M4 = d4.getLatestMessageSentByMe(I4)) && (y3 = M4.nick, T5 = M4.avatar, y3 === a5.nick && T5 === a5.avatar || (d4.modifyMessageSentByMe({ conversationID: I4, latestNick: a5.nick, latestAvatar: a5.avatar }), p5.mockOnNickAvatarModified(a5.nick, a5.avatar))), 1 === t5[f4].isModified);
              if (d4.isMessageSentByCurrentInstance(a5) ? a5.isModified = T5 : T5 = false, 0 === v4.msgLifeTime)
                a5._onlineOnlyFlag = true, d4.isMessageSentByCurrentInstance(a5) || r5.push(a5);
              else {
                if (!d4.pushIntoMessageList(r5, a5, T5))
                  continue;
                C5 && (d4.modifyMessageSentByPeer({ conversationID: I4, latestNick: a5.nick, latestAvatar: a5.avatar }), d4.updateUserProfileSpecifiedKey({ conversationID: I4, nick: a5.nick, avatar: a5.avatar }));
              }
              i5 && 0 < a5.clientTime && u5.addMessageDelay(a5.clientTime);
            } else
              this._msgFromUnreadDBMap.set(a5.ID, a5);
            if (0 !== v4.msgLifeTime) {
              if (false === a5._onlineOnlyFlag) {
                C5 = d4.getLastMessageTime(I4);
                if (A3(C5) && a5.time < C5)
                  continue;
                i5 && (N3(c5[I4]) ? (v4 = 0, "in" !== a5.flow || a5._isExcludedFromUnreadCount || (v4 = 1), c5[I4] = s5.push({ conversationID: I4, unreadCount: v4, type: a5.conversationType, subType: a5.conversationSubType, lastMessage: a5._isExcludedFromLastMessage ? "" : a5 }) - 1) : (v4 = c5[I4], s5[v4].type = a5.conversationType, s5[v4].subType = a5.conversationSubType, s5[v4].lastMessage = a5._isExcludedFromLastMessage ? "" : a5, "in" !== a5.flow || a5._isExcludedFromUnreadCount || s5[v4].unreadCount++));
              }
            } else
              a5._onlineOnlyFlag = true;
          }
        this._handleNoticeFromUnreadDB();
        var D3 = false;
        if (O3(o5) && 0 < o5.length)
          for (var E5 = 0, L4 = o5.length; E5 < L4; E5++)
            !function(t6) {
              if (o5[t6].from === R3.CONV_SYSTEM)
                return;
              D3 = true;
              var e6 = s5.find(function(e7) {
                return e7.conversationID === "".concat(R3.CONV_C2C).concat(o5[t6].from);
              });
              e6 ? e6.unreadCount = o5[t6].unreadCount : s5.push({ conversationID: "".concat(R3.CONV_C2C).concat(o5[t6].from), unreadCount: o5[t6].unreadCount, type: R3.CONV_C2C });
            }(E5);
        if (O3(n5))
          for (var S4 = 0, k3 = n5.length; S4 < k3; S4++)
            !function(t6) {
              s5.find(function(e6) {
                return e6.conversationID === "".concat(R3.CONV_C2C).concat(n5[t6].from);
              }) || s5.push({ conversationID: "".concat(R3.CONV_C2C).concat(n5[t6].from), type: R3.CONV_C2C, lastMsgTime: n5[t6].lastMsgTime });
            }(S4);
        return { conversationOptionsList: s5, messageList: r5, isUnreadC2CMessage: D3 };
      } }, { key: "getMessageListFromUnreadDB", value: function() {
        return d3(this._msgFromUnreadDBMap.values());
      } }, { key: "_isC2CNotice", value: function(e5) {
        e5 = e5.eventArray;
        return !(!O3(e5) || 10 !== e5[0].event);
      } }, { key: "_handleNoticeFromUnreadDB", value: function() {
        var t5, e5 = this._noticeFromUnreadDBList.length;
        0 !== e5 && (M3.l("".concat(this._n, "._handleNoticeFromUnreadDB count:").concat(e5)), t5 = [], this._noticeFromUnreadDBList.forEach(function(e6) {
          e6.hasOwnProperty("c2cMessageRevokedNotify") && t5.push(e6);
        }), this.onMsgRevoked({ dataList: t5 }), this._noticeFromUnreadDBList.length = 0, t5.length = 0);
      } }, { key: "onMsgRevoked", value: function(e5, t5) {
        var a5, s5 = this, r5 = this.get(11), c5 = [];
        e5.dataList.forEach(function(e6) {
          e6.c2cMessageRevokedNotify && (e6 = e6.c2cMessageRevokedNotify.revokedInfos, N3(e6) || e6.forEach(function(e7) {
            var t6 = s5.getMyUserID() === e7.from ? "".concat(R3.CONV_C2C).concat(e7.to) : "".concat(R3.CONV_C2C).concat(e7.from);
            a5 = r5.revoke(t6, e7.sequence, e7.random);
            var n5, o5 = e7.revokerInfo && e7.revokerInfo.revoker, i5 = e7.revokerInfo && e7.revokerInfo.reason || "";
            a5 ? n5 = a5 : (n5 = { conversationID: t6, sequence: e7.sequence }, e7.tinyID && e7.clientTime && e7.random && (n5.ID = "".concat(e7.tinyID, "-").concat(e7.clientTime, "-").concat(e7.random)), e7.time && (n5.time = e7.time)), n5 && (n5.revoker = o5, n5.revokeReason = i5, n5.revokerInfo = { userID: o5, nick: "", avatar: "" }, c5.push(n5));
          }));
        }), 0 !== c5.length && (M3.l("".concat(this._n, ".onMsgRevoked count:").concat(c5.length, " updateUnreadCount:").concat(t5)), r5.onMessageRevoked(c5, t5), r5.updateRevokerInfo(c5).then(function(e6) {
          s5.emitOEvt(h4.MESSAGE_REVOKED, e6);
        }));
      } }, { key: "onMsgReadReceipt", value: function(e5) {
        var i5 = this;
        e5.dataList.forEach(function(e6) {
          var o5;
          S3(e6.c2cMessageReadReceipt) || (o5 = e6.c2cMessageReadReceipt.to, e6.c2cMessageReadReceipt.uinPairReadArray.forEach(function(e7) {
            var e7 = e7.peerReadTime, t5 = (M3.l("".concat(i5._n, ".onMsgReadReceipt to:").concat(o5, " peerReadTime:").concat(e7)), "".concat(R3.CONV_C2C).concat(o5)), n5 = i5.get(11);
            n5.recordPeerReadTime(t5, e7), n5.updateMsgIsPeerReadProp(t5, e7);
          }));
        });
      } }, { key: "onMsgReadNotice", value: function(e5) {
        var o5 = this;
        e5.dataList.forEach(function(e6) {
          var n5;
          S3(e6.c2cMessageReadNotice) || (n5 = o5.get(11), e6.c2cMessageReadNotice.uinPairReadArray.forEach(function(e7) {
            var t5 = e7.from, e7 = e7.peerReadTime, t5 = (M3.l("".concat(o5._n, ".onMsgReadNotice from:").concat(t5, " lastReadTime:").concat(e7)), "".concat(R3.CONV_C2C).concat(t5));
            n5.updateIsReadAfterReadReport({ conversationID: t5, lastMessageTime: e7 }), n5.updateUnreadCount(t5);
          }));
        });
      } }, { key: "onMsgModified", value: function(e5) {
        M3.l("".concat(this._n, ".onMsgModified options:"), e5);
        var t5 = this.get(11);
        e5.dataList.forEach(function(e6) {
          t5.onMessageModified(y2(y2({}, e6), {}, { conversationType: R3.CONV_C2C }));
        });
      } }, { key: "onReadReceiptList", value: function(e5) {
        M3.l("".concat(this._n, ".onReadReceiptList options:"), e5), this.get(11).updateReadReceiptInfo(e5.dataList);
      } }, { key: "sendMessage", value: function(e5, t5) {
        e5 = this._createC2CMessagePack(e5, t5);
        return this.req(e5);
      } }, { key: "_createC2CMessagePack", value: function(e5, t5) {
        var n5 = null, o5 = (t5 && (t5.offlinePushInfo && (n5 = t5.offlinePushInfo), true === t5.onlineUserOnly) && (n5 ? n5.disablePush = true : n5 = { disablePush: true }), ""), i5 = (C4(e5.cloudCustomData) && 0 < e5.cloudCustomData.length && (o5 = e5.cloudCustomData), []), a5 = (m3(t5) && m3(t5.messageControlInfo) && (a5 = (r5 = t5.messageControlInfo).excludedFromUnreadCount, s5 = r5.excludedFromLastMessage, r5 = r5.excludedFromContentModeration, true === a5 && i5.push("NoUnread"), true === s5 && i5.push("NoLastMsg"), true === r5) && i5.push("NoMsgCheck"), this.isOnlineMessage(e5, t5) ? 0 : void 0), s5 = JSON.parse(JSON.stringify(e5.getElements())), r5 = this.get(17).getFileDNList();
        return { P: G2.SEND_C2C_MSG, data: { fromAccount: this.getMyUserID(), toAccount: e5.to, msgBody: so(e5.type, s5, r5), cloudCustomData: o5, msgSeq: e5.sequence, msgRandom: e5.random, msgLifeTime: a5, nick: e5.nick, avatar: e5.avatar, offlinePushInfo: Lo(n5), messageControlInfo: 0 !== a5 ? i5 : void 0, clientTime: e5.clientTime, needReadReceipt: true === e5.needReadReceipt ? 1 : 0, isSupportExtension: true === e5.isSupportExtension ? 1 : 0, isRelayMessage: true === e5._relayFlag ? 1 : 0, cmConfigID: e5._cmConfigID, forbidCallbackControl: kt2(t5) } };
      } }, { key: "isOnlineMessage", value: function(e5, t5) {
        return !(!t5 || true !== t5.onlineUserOnly);
      } }, { key: "revokeMessage", value: function(e5) {
        return this.req({ P: G2.REVOKE_C2C_MSG, data: { msgInfo: { fromAccount: e5.from, toAccount: e5.to, msgSeq: e5.sequence, msgRandom: e5.random, msgTimeStamp: e5.time } } });
      } }, { key: "deleteMessage", value: function(e5) {
        var t5 = e5.to, e5 = e5.keyList;
        return M3.l("".concat(this._n, ".deleteMessage toAccount:").concat(t5, " count:").concat(e5.length)), this.req({ P: G2.DEL_C2C_MSG, data: { fromAccount: this.getMyUserID(), to: t5, keyList: e5 } });
      } }, { key: "modifyRemoteMessage", value: function(e5) {
        var t5 = e5.from, n5 = e5.to, o5 = e5.version, o5 = void 0 === o5 ? 0 : o5, i5 = e5.sequence, a5 = e5.random, s5 = e5.time, r5 = e5.payload, c5 = e5.type, u5 = e5.cloudCustomData, e5 = e5._elements, l5 = void 0;
        return zt2(c5) && (1 < e5.length && e5.splice(0, 1, { type: c5, content: r5 }), l5 = e5), this.req({ P: G2.MODIFY_C2C_MSG, data: { from: t5, to: n5, version: o5, sequence: i5, random: a5, time: s5, elements: l5, cloudCustomData: u5 } });
      } }, { key: "setMessageRead", value: function(e5) {
        var t5 = this, n5 = e5.conversationID, o5 = e5.lastMessageTime, i5 = "".concat(this._n, ".").concat("setMessageRead"), e5 = "convID:".concat(n5, " lastMessageTime:").concat(o5), a5 = (M3.l("".concat(i5, " ").concat(e5)), A3(o5) || this.warn("DoNotModifyLastTime"), new P3("setMessageRead"));
        return a5.setMessage(e5), this.req({ P: G2.SET_C2C_MSG_READ, data: { C2CMsgReaded: { cookie: "", C2CMsgReadedItem: [{ toAccount: n5.replace("C2C", ""), lastMessageTime: o5, receipt: 1 }] } } }).then(function() {
          a5.end(), M3.l("".concat(i5, " ok"));
          var e6 = t5.get(11);
          return e6.updateIsReadAfterReadReport({ conversationID: n5, lastMessageTime: o5 }), e6.updateUnreadCount(n5), T4();
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.l("".concat(i5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getRoamingMessage", value: function(e5) {
        var s5 = this, r5 = "".concat(this._n, ".").concat("getRoamingMessage"), t5 = e5.peerAccount, c5 = e5.conversationID, n5 = e5.count, o5 = e5.lastMessageTime, e5 = e5.messageKey, u5 = "peerAccount:".concat(t5, " count:").concat(n5 || 15, " lastMessageTime:").concat(o5 || 0, " messageKey:").concat(e5), l5 = (M3.l("".concat(r5, " ").concat(u5)), new P3("getRoamingMessage"));
        return this.req({ P: G2.GET_C2C_ROAMING_MSG, data: { peerAccount: t5, count: n5 || 15, lastMessageTime: o5 || 0, messageKey: e5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.complete, n6 = e6.messageList, o6 = e6.messageKey, e6 = e6.lastMessageTime, i5 = (N3(n6) ? M3.l("".concat(r5, " ok. complete:").concat(t6, " but messageList is undefined!")) : M3.l("".concat(r5, " ok. complete:").concat(t6, " count:").concat(n6.length)), l5.setMessage("".concat(u5, " complete:").concat(t6, " length:").concat(n6.length)).end(), s5.get(11)), t6 = 1 === t6, a5 = (t6 && i5.setCompleted(c5), []), n6 = i5.onRoamingMessage(n6, c5, true, a5), o6 = (i5.modifyMessageList(c5), i5.updateIsRead(c5), i5.updateRoamingMsgKeyAndTime(c5, o6, e6), i5.getPeerReadTime(c5)), o6 = (M3.l("".concat(r5, " update isPeerRead property. convID:").concat(c5, " peerReadTime:").concat(o6)), o6 ? i5.updateMsgIsPeerReadProp(c5, o6) : (e6 = c5.replace(R3.CONV_C2C, ""), s5.getRemotePeerReadTime([e6]).then(function() {
            i5.updateMsgIsPeerReadProp(c5, i5.getPeerReadTime(c5));
          })), "");
          return 0 < n6.length ? o6 = n6[0].ID : (e6 = i5.getLocalOldestMessage(c5)) && (o6 = e6.ID), M3.l("".concat(r5, " nextReqID:").concat(o6, " storedMsgCount:").concat(n6.length)), { nextReqID: o6, storedMessageList: n6, assembledMessageList: a5, isPullingCompleted: t6 };
        }).catch(function(e6) {
          return l5.setMessage(u5).setError(e6).end(), M3.w("".concat(r5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(e5) {
        var a5 = this, s5 = "".concat(this._n, ".").concat("getRoamingMessagesHopping"), t5 = e5.peerAccount, n5 = e5.time, n5 = void 0 === n5 ? 0 : n5, o5 = e5.count, r5 = e5.direction, c5 = "".concat(R3.CONV_C2C).concat(t5), u5 = "peerAccount:".concat(t5, " count:").concat(o5, " time:").concat(n5, " direction:").concat(r5), l5 = (M3.l("".concat(s5, " ").concat(u5)), new P3("getRoamingMessagesHopping"));
        return this.req({ P: G2.GET_C2C_ROAMING_MSG, data: { peerAccount: t5, count: o5 + 1, lastMessageTime: n5, direction: r5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.complete, n6 = e6.messageList, n6 = void 0 === n6 ? [] : n6, e6 = e6.lastMessageTime, o6 = "complete:".concat(t6, " count:").concat(n6.length), i5 = (M3.l("".concat(s5, " ok. ").concat(o6)), l5.setMessage("".concat(u5, " ").concat(o6)).end(), 1 !== t6 && (1 === r5 ? n6.pop() : n6.shift()), a5.get(11)), o6 = i5.onRoamingMessage(n6, c5, false), n6 = (a5._modifyMessageList(c5, o6), a5._computeResult({ complete: t6, lastMessageTime: e6, resultList: o6 })), t6 = (i5.storeHoppingMessageList(n6.messageList), i5.getPeerReadTime(c5));
          return M3.l("".concat(s5, " update isPeerRead property. convID:").concat(c5, " peerReadTime:").concat(t6)), t6 ? i5.updateMsgIsPeerReadProp(c5, t6) : (e6 = c5.replace(R3.CONV_C2C, ""), a5.getRemotePeerReadTime([e6]).then(function() {
            i5.updateMsgIsPeerReadProp(c5, i5.getPeerReadTime(c5));
          })), T4(n6);
        }).catch(function(e6) {
          return l5.setMessage(u5).setError(e6).end(), M3.w("".concat(s5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_computeResult", value: function(e5) {
        var t5 = e5.complete, t5 = void 0 === t5 ? 0 : t5, n5 = e5.lastMessageTime, e5 = e5.resultList, e5 = { messageList: d3(void 0 === e5 ? [] : e5), isCompleted: false, nextMessageTime: "" };
        return 1 === t5 ? e5.isCompleted = true : e5.nextMessageTime = n5, e5;
      } }, { key: "_modifyMessageList", value: function(e5, t5) {
        e5 = this.get(11).getLocalConversation(e5);
        if (e5)
          for (var n5 = e5.userProfile.nick, o5 = e5.userProfile.avatar, e5 = this.get(4).getNickAndAvatarByUserID(this.getMyUserID()), i5 = e5.nick, a5 = e5.avatar, s5 = t5.length - 1; 0 <= s5; s5--) {
            var r5 = t5[s5];
            "in" === r5.flow && (r5.nick !== n5 && r5.setNickAndAvatar({ nick: n5 }), r5.avatar !== o5) && r5.setNickAndAvatar({ avatar: o5 }), "out" === r5.flow && (r5.nick !== i5 && r5.setNickAndAvatar({ nick: i5 }), r5.avatar !== a5) && r5.setNickAndAvatar({ avatar: a5 });
          }
      } }, { key: "getRemotePeerReadTime", value: function(a5) {
        var s5, r5 = this, c5 = "".concat(this._n, ".").concat("getRemotePeerReadTime");
        return S3(a5) ? Promise.resolve() : (s5 = new P3("getRemotePeerReadTime"), M3.l("".concat(c5, " userIDList:").concat(a5)), this.req({ P: G2.GET_C2C_PEER_READ_TIME, data: { userIDList: a5 } }).then(function(e5) {
          var t5 = e5.data.peerReadTimeList;
          M3.l("".concat(c5, " ok. peerReadTimeList:").concat(t5));
          for (var n5 = "", o5 = r5.get(11), i5 = 0; i5 < a5.length; i5++)
            n5 += "".concat(a5[i5], "-").concat(t5[i5], " "), 0 < t5[i5] && o5.recordPeerReadTime("".concat(R3.CONV_C2C).concat(a5[i5]), t5[i5]);
          s5.setMessage(n5).end();
        }).catch(function(e5) {
          s5.setError(e5).end(), M3.w("".concat(c5, " failed. error:"), e5);
        }));
      } }, { key: "sendReadReceipt", value: function(e5) {
        var t5, n5 = e5[0].conversationID.replace(R3.CONV_C2C, ""), o5 = new P3("sendReadReceipt"), i5 = (o5.setMessage("peerAccount:".concat(n5)), this.getMyUserID()), e5 = e5.filter(function(e6) {
          return e6.from !== i5 && true === e6.needReadReceipt;
        }).map(function(e6) {
          return { fromAccount: e6.from, toAccount: e6.to, sequence: e6.sequence, random: e6.random, time: e6.time, clientTime: e6.clientTime };
        });
        return 0 === e5.length ? E4({ code: k2.READ_RECEIPT_MSG_LIST_EMPTY }) : (t5 = "".concat(this._n, ".").concat("sendReadReceipt"), M3.l("".concat(t5, ". peerAccount:").concat(n5, " length:").concat(e5.length)), this.req({ P: G2.SEND_C2C_READ_RECEIPT, data: { peerAccount: n5, messageInfoList: e5 } }).then(function(e6) {
          return o5.end(), M3.l("".concat(t5, " ok")), T4();
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "getReadReceiptList", value: function(e5) {
        var t5 = e5[0].conversationID.replace(R3.CONV_C2C, "");
        return M3.l("".concat(this._n, ".getReadReceiptList peerAccount:").concat(t5, " msgCount:").concat(e5.length)), D2({ messageList: e5 });
      } }, { key: "getMessageExtensions", value: function(e5, t5) {
        return M3.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t5)), this.req({ P: G2.GET_C2C_MSG_EXT, data: { from: e5.from, to: e5.to, messageKey: this.getMessageKey(e5), startSequence: t5 } });
      } }, { key: "modifyMsgExts", value: function(e5, t5) {
        var n5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
        return M3.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n5)), this.req({ P: G2.MODIFY_C2C_MSG_EXT, data: { from: e5.from, to: e5.to, messageKey: this.getMessageKey(e5), extensionList: t5, operateType: n5 } });
      } }, { key: "getMessageKey", value: function(e5) {
        var t5 = e5.clientSequence, n5 = e5.random, e5 = e5.time;
        return "".concat(t5, "_").concat(n5, "_").concat(e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._msgFromUnreadDBMap.clear(), this._noticeFromUnreadDBList.length = 0;
      } }]), U3 = { A2KEY_AND_TINYID_UPDATED: "_inner".concat(1), CLOUD_CONFIG: "_inner".concat(2), PROFILE_UPDATED: "_inner".concat(3), CONV_SYNC_COMPLETED: "_inner".concat(4), C2C_UNREAD_HANDLE_COMPLETED: "_inner".concat(5) }, ko = e4(function e5(t5) {
        p4(this, e5), this._convM = t5, this._map = /* @__PURE__ */ new Map(), this._n = "MsgListHandler", this._latestMsgSentByPeerMap = /* @__PURE__ */ new Map(), this._latestMsgSentByMeMap = /* @__PURE__ */ new Map(), this._hoppingMsgMap = /* @__PURE__ */ new Map(), this.TOPIC_MSG_LIMIT = 1e3, this._convM.getIEmitInst().on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      }, [{ key: "_onCloudConfig", value: function() {
        var e5 = this._convM.getCloudConfig("topic_msg_limit");
        N3(e5) || (this.TOPIC_MSG_LIMIT = Number(e5)), M3.l("".concat(this._n, "._onCloudConfig topicMsgLimit:").concat(this.TOPIC_MSG_LIMIT));
      } }, { key: "onCheckTimer", value: function(e5) {
        if (e5 % 20 == 0 && 0 < this._map.size) {
          var t5, n5 = F2(this._map);
          try {
            for (n5.s(); !(t5 = n5.n()).done; ) {
              var o5 = j2(t5.value, 2), i5 = o5[0], a5 = o5[1];
              i5.includes(et2) && a5.size >= this.TOPIC_MSG_LIMIT && this._convM.clearMemMsg(i5, true);
            }
          } catch (e6) {
            n5.e(e6);
          } finally {
            n5.f();
          }
        }
      } }, { key: "pushIn", value: function(e5) {
        var t5 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], n5 = e5.conversationID, o5 = true, i5 = (this._map.has(n5) || this._map.set(n5, /* @__PURE__ */ new Map()), this._getUniqueIDOfMsg(e5));
        if (this._map.get(n5).has(i5)) {
          var a5 = this._map.get(n5).get(i5);
          if (!t5 || true === a5.isModified)
            return false;
        }
        return this._map.get(n5).set(i5, e5), this._setLatestMsgSentByPeer(n5, e5), this._setLatestMsgSentByMe(n5, e5), o5;
      } }, { key: "unshift", value: function(e5, t5) {
        var n5;
        if (O3(e5) ? 0 < e5.length && (n5 = e5[0].conversationID, this._unshiftMultipleMsgs(e5, t5)) : (n5 = e5.conversationID, this._unshiftSingleMsg(e5, t5)), n5) {
          var o5 = Array.from(this._map.get(n5).values()), e5 = o5.length;
          if (0 !== e5) {
            for (var i5 = e5 - 1; 0 <= i5; i5--)
              if ("out" === o5[i5].flow) {
                this._setLatestMsgSentByMe(n5, o5[i5]);
                break;
              }
            if (n5.startsWith(R3.CONV_C2C)) {
              for (var a5 = e5 - 1; 0 <= a5; a5--)
                if ("in" === o5[a5].flow) {
                  this._setLatestMsgSentByPeer(n5, o5[a5]);
                  break;
                }
            }
          }
        }
      } }, { key: "_unshiftSingleMsg", value: function(e5, t5) {
        var n5, o5, i5 = e5.conversationID, a5 = this._getUniqueIDOfMsg(e5);
        this._map.has(i5) ? (n5 = this._map.get(i5), o5 = Array.from(n5), n5.has(a5) || (o5.unshift([a5, e5]), this._map.set(i5, new Map(o5)), t5.push(e5))) : (this._map.set(i5, /* @__PURE__ */ new Map()), this._map.get(i5).set(a5, e5), t5.push(e5));
      } }, { key: "_unshiftMultipleMsgs", value: function(e5, t5) {
        for (var n5 = e5.length, o5 = [], i5 = e5[0].conversationID, a5 = this._map.get(i5), s5 = this._map.has(i5) ? Array.from(a5) : [], r5 = 0; r5 < n5; r5++) {
          var c5 = this._getUniqueIDOfMsg(e5[r5]);
          a5 && a5.has(c5) || (o5.push([c5, e5[r5]]), t5.push(e5[r5]));
        }
        this._map.set(i5, new Map(o5.concat(s5)));
      } }, { key: "remove", value: function(e5) {
        var t5 = e5.conversationID, e5 = this._getUniqueIDOfMsg(e5);
        this._map.has(t5) && this._map.get(t5).delete(e5);
      } }, { key: "revoke", value: function(e5, t5, n5) {
        var o5;
        return this._map.has(e5) ? (o5 = this._map.get(e5), this._updateMsgIsRevoked(o5, t5, n5)) : this._hoppingMsgMap.has(e5) ? (o5 = this._hoppingMsgMap.get(e5), this._updateMsgIsRevoked(o5, t5, n5)) : null;
      } }, { key: "_updateMsgIsRevoked", value: function(e5, t5, n5) {
        var o5, i5 = F2(e5);
        try {
          for (i5.s(); !(o5 = i5.n()).done; ) {
            var a5 = j2(o5.value, 2)[1];
            if (a5.sequence === t5 && (N3(n5) || a5.random === n5))
              return a5.isRevoked || (a5.isRevoked = true), a5;
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
      } }, { key: "removeByConvID", value: function(e5) {
        var t5 = this._map.has(e5);
        M3.l("".concat(this._n, ".removeByConvID convID:").concat(e5, " has:").concat(t5)), t5 && (this._map.delete(e5), this._latestMsgSentByPeerMap.delete(e5), this._latestMsgSentByMeMap.delete(e5));
      } }, { key: "findMessage", value: function(e5) {
        return this._findMsg(e5, this._map) || this._findMsg(e5, this._hoppingMsgMap);
      } }, { key: "_findMsg", value: function(e5, t5) {
        var n5, o5 = null, i5 = F2(t5);
        try {
          for (i5.s(); !(n5 = i5.n()).done; )
            for (var a5 = d3(j2(n5.value, 2)[1].values()), s5 = a5.length, r5 = 0; r5 < s5; r5++)
              if (a5[r5].ID === e5) {
                o5 = a5[r5];
                break;
              }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        return o5;
      } }, { key: "updateMsgIsPeerReadProp", value: function(e5, t5) {
        var n5, o5 = [];
        return this._map.has(e5) ? (n5 = this._map.get(e5), o5 = this._updateMsgIsPeerReadProp(n5, t5)) : this._hoppingMsgMap.has(e5) && (n5 = this._hoppingMsgMap.get(e5), o5 = this._updateMsgIsPeerReadProp(n5, t5)), M3.l("".concat(this._n, ".updateMsgIsPeerReadProp convID:").concat(e5, " peerReadTime:").concat(t5, " count:").concat(o5.length)), o5;
      } }, { key: "_updateMsgIsPeerReadProp", value: function(e5, t5) {
        var n5, o5 = [], i5 = F2(e5);
        try {
          for (i5.s(); !(n5 = i5.n()).done; ) {
            var a5 = j2(n5.value, 2)[1];
            a5.time <= t5 && !a5.isPeerRead && "out" === a5.flow && (a5.isPeerRead = true, o5.push(a5));
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        return o5;
      } }, { key: "updateMsgIsModifiedProp", value: function(e5) {
        var t5 = e5.conversationID;
        this._map.has(t5) && (e5 = this._getUniqueIDOfMsg(e5), t5 = this._map.get(t5).get(e5)) && (t5.isModified = true);
      } }, { key: "hasLocalMsgList", value: function(e5) {
        return this._map.has(e5);
      } }, { key: "getLocalMsgList", value: function(e5) {
        return this.hasLocalMsgList(e5) ? d3(this._map.get(e5).values()) : [];
      } }, { key: "getLocalMaxSeq", value: function(e5) {
        return this.hasLocalMsgList(e5) ? (e5 = d3(this._map.get(e5).values()).map(function(e6) {
          return e6.sequence;
        }), Math.max.apply(Math, d3(e5))) : 0;
      } }, { key: "getLocalMaxTime", value: function(e5) {
        return this.hasLocalMsgList(e5) ? (e5 = d3(this._map.get(e5).values()).map(function(e6) {
          return e6.time;
        }), Math.max.apply(Math, d3(e5))) : 0;
      } }, { key: "hasLocalMsg", value: function(e5, t5) {
        for (var n5 = false, o5 = this.getLocalMsgList(e5), i5 = o5.length, a5 = 0; a5 < i5; a5++)
          o5[a5].ID === t5 && (n5 = true);
        return n5;
      } }, { key: "getLocalMsg", value: function(e5, t5) {
        for (var n5 = null, o5 = this.getLocalMsgList(e5), i5 = o5.length, a5 = 0; a5 < i5; a5++)
          if (o5[a5].ID === t5) {
            n5 = o5[a5];
            break;
          }
        return n5;
      } }, { key: "getLocalLastMsg", value: function(e5) {
        e5 = this.getLocalMsgList(e5);
        return e5[e5.length - 1];
      } }, { key: "getLocalSecondLastMsg", value: function(e5) {
        e5 = this.getLocalMsgList(e5);
        return e5[e5.length - 2];
      } }, { key: "getLocalOldestMsg", value: function(e5) {
        return this.getLocalMsgList(e5)[0];
      } }, { key: "_setLatestMsgSentByPeer", value: function(e5, t5) {
        e5.startsWith(R3.CONV_C2C) && "in" === t5.flow && this._latestMsgSentByPeerMap.set(e5, t5);
      } }, { key: "_setLatestMsgSentByMe", value: function(e5, t5) {
        "out" === t5.flow && this._latestMsgSentByMeMap.set(e5, t5);
      } }, { key: "getLatestMsgSentByPeer", value: function(e5) {
        return this._latestMsgSentByPeerMap.get(e5);
      } }, { key: "getLatestMsgSentByMe", value: function(e5) {
        return this._latestMsgSentByMeMap.get(e5);
      } }, { key: "modifyMsgSentByPeer", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.latestNick, o5 = e5.latestAvatar, e5 = this._map.get(t5);
        if (!S3(e5)) {
          var i5 = Array.from(e5.values()), e5 = i5.length;
          if (0 !== e5) {
            for (var a5 = null, s5 = 0, r5 = false, c5 = e5 - 1; 0 <= c5; c5--)
              "in" === i5[c5].flow && ((a5 = i5[c5]).nick !== n5 && (a5.setNickAndAvatar({ nick: n5 }), r5 = true), a5.avatar !== o5 && (a5.setNickAndAvatar({ avatar: o5 }), r5 = true), r5) && (s5 += 1);
            M3.l("".concat(this._n, ".modifyMsgSentByPeer convID:").concat(t5, " count:").concat(s5));
          }
        }
      } }, { key: "modifyMsgSentByMe", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.latestNick, o5 = e5.latestAvatar, e5 = this._map.get(t5);
        if (!S3(e5)) {
          var i5 = Array.from(e5.values()), e5 = i5.length;
          if (0 !== e5) {
            for (var a5 = null, s5 = 0, r5 = false, c5 = e5 - 1; 0 <= c5; c5--)
              "out" === i5[c5].flow && ((a5 = i5[c5]).nick !== n5 && (a5.setNickAndAvatar({ nick: n5 }), r5 = true), a5.avatar !== o5 && (a5.setNickAndAvatar({ avatar: o5 }), r5 = true), r5) && (s5 += 1);
            M3.l("".concat(this._n, ".modifyMsgSentByMe convID:").concat(t5, " count:").concat(s5));
          }
        }
      } }, { key: "getTopicConvIDList", value: function(t5) {
        return d3(this._map.keys()).filter(function(e5) {
          return e5.startsWith("".concat(R3.CONV_GROUP).concat(t5));
        });
      } }, { key: "onMsgModified", value: function(e5, t5) {
        var n5, o5, i5, a5;
        return (this._map.has(e5) || this._hoppingMsgMap.has(e5)) && (n5 = "".concat(this._n, ".onMsgModified"), i5 = this._getUniqueIDOfMsg(t5), a5 = !!(o5 = this._getTargetMsg(e5, i5)), M3.l("".concat(n5, " convID:").concat(e5, " uniqueID:").concat(i5, " has:").concat(a5)), a5) ? (e5 = t5.messageVersion, i5 = t5.elements, a5 = t5.cloudCustomData, t5 = t5.checkResult, M3.l("".concat(n5, " localVersion:").concat(o5.version, " remoteVersion:").concat(e5)), o5.version < e5 ? (o5.version = e5, o5._elements = JSON.parse(JSON.stringify(i5)), o5.payload = o5._elements[0].content, o5.type = o5._elements[0].type, o5.cloudCustomData = a5, o5.isModified = true, o5.hasRiskContent = nn(t5), { isUpdated: true, message: o5 }) : { isUpdated: false, message: o5 }) : { isUpdated: false, message: null };
      } }, { key: "_getUniqueIDOfMsg", value: function(e5) {
        var t5 = e5.from, n5 = e5.to, o5 = e5.random, i5 = e5.sequence, e5 = e5.time;
        return "".concat(t5, "-").concat(n5, "-").concat(o5, "-").concat(i5, "-").concat(e5);
      } }, { key: "_getTargetMsg", value: function(e5, t5) {
        if (this._map.has(e5))
          return this._map.get(e5).get(t5);
        var n5 = void 0;
        if (this._hoppingMsgMap.has(e5)) {
          for (var o5 = d3(this._hoppingMsgMap.get(e5).values()), i5 = 0; i5 < o5.length; i5++)
            if (this._getUniqueIDOfMsg(o5[i5]) === t5) {
              n5 = o5[i5];
              break;
            }
        }
        return n5;
      } }, { key: "storeHoppingMsgList", value: function(e5) {
        if (0 !== e5.length) {
          var t5 = e5[0].conversationID, n5 = e5.length;
          this._hoppingMsgMap.has(t5) || this._hoppingMsgMap.set(t5, /* @__PURE__ */ new Map());
          for (var o5 = this._hoppingMsgMap.get(t5), i5 = 0; i5 < n5; i5++) {
            var a5 = e5[i5];
            o5.has(a5.ID) || o5.set(a5.ID, a5);
          }
        }
      } }, { key: "getHoppingMsg", value: function(e5, t5) {
        if (this._hoppingMsgMap.has(e5))
          return this._hoppingMsgMap.get(e5).get(t5);
      } }, { key: "reset", value: function() {
        this._map.clear(), this._latestMsgSentByPeerMap.clear(), this._latestMsgSentByMeMap.clear(), this._hoppingMsgMap.clear();
      } }]);
      function Ro(e5) {
        return p4(this, Ro), (e5 = i4(this, Ro, [e5]))._n = "C2CModule", e5._msgFromUnreadDBMap = /* @__PURE__ */ new Map(), e5._noticeFromUnreadDBList = [], e5;
      }
      function Ao(e5) {
        this.mixin(e5);
      }
      Ao.mixin = function(e5) {
        e5 = e5.prototype || e5;
        e5._isReady = false, e5.ready = function(e6) {
          if (e6)
            return this._isReady ? void (1 < arguments.length && void 0 !== arguments[1] && arguments[1] ? e6.call(this) : setTimeout(e6, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e6));
        }, e5.triggerReady = function() {
          var t5 = this;
          this._isReady = true, setTimeout(function() {
            var e6 = t5._readyQueue;
            t5._readyQueue = [], e6 && 0 < e6.length && e6.forEach(function(e7) {
              e7.call(this);
            }, t5);
          }, 1);
        }, e5.resetReady = function() {
          this._isReady = false, this._readyQueue = [];
        }, e5.isReady = function() {
          return this._isReady;
        };
      };
      function Oo(e5, t5, n5) {
        return N3(e5) ? { lastTime: 0, lastSequence: 0, fromAccount: "", messageForShow: "", payload: null, type: "", isRevoked: false, cloudCustomData: "", onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: false, revoker: null } : n5 && e5.ID || e5 instanceof Do ? { lastTime: e5.time || 0, lastSequence: e5.sequence || 0, fromAccount: e5.from || "", messageForShow: Jt2(e5.type, e5.payload, t5), payload: e5.payload || null, type: e5.type || null, isRevoked: e5.isRevoked || false, cloudCustomData: e5.cloudCustomData || "", onlineOnlyFlag: e5._onlineOnlyFlag || false, nick: e5.nick || "", nameCard: e5.nameCard || "", version: e5.version || 0, isPeerRead: e5.isPeerRead || false, revoker: e5.revoker || null } : y2(y2({}, e5), {}, { messageForShow: Jt2(e5.type, e5.payload, t5) });
      }
      function No(e5, t5) {
        return S3(e5) ? { lastTime: 0, lastSequence: 0, fromAccount: "", payload: null, type: "", messageForShow: "", nick: "", avatar: "", version: 0, cloudCustomData: "", isRevoked: false, revoker: null } : { lastTime: e5.time || 0, lastSequence: e5.sequence || 0, fromAccount: e5.from || "", payload: e5.payload || null, type: e5.type || "", messageForShow: Jt2(e5.type, e5.payload, t5), nick: e5.nick || "", avatar: e5.avatar || "", version: e5.version || 0, cloudCustomData: e5.cloudCustomData || "", isRevoked: e5.isRevoked || false, revoker: e5.revoker || null };
      }
      function Go(e5) {
        var t5 = String(e5).replace(/[=]+$/, ""), n5 = "";
        if (t5.length % 4 == 1)
          return "";
        for (var o5, i5, a5 = 0, s5 = 0; i5 = t5.charAt(s5++); ~i5 && (o5 = a5 % 4 ? 64 * o5 + i5 : i5, a5++ % 4) && (n5 += String.fromCharCode(255 & o5 >> (-2 * a5 & 6))))
          i5 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(i5);
        try {
          return decodeURIComponent(escape(n5));
        } catch (e6) {
          return "";
        }
      }
      var Po = ["jpg", "jpeg", "gif", "png", "bmp", "image", "webp"], Uo = ["mp4", "quicktime", "mov"], bo = e4(function e5(t5) {
        var n5 = this;
        p4(this, e5), S3(t5) || (this.userID = t5.userID || "", this.nick = t5.nick || "", this.gender = t5.gender || "", this.birthday = t5.birthday || 0, this.location = t5.location || "", this.selfSignature = t5.selfSignature || "", this.allowType = t5.allowType || R3.ALLOW_TYPE_ALLOW_ANY, this.language = t5.language || 0, this.avatar = t5.avatar || "", this.messageSettings = t5.messageSettings || 0, this.adminForbidType = t5.adminForbidType || R3.FORBID_TYPE_NONE, this.level = t5.level || 0, this.role = t5.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], S3(t5.profileCustomField)) || t5.profileCustomField.forEach(function(e6) {
          n5.profileCustomField.push({ key: e6.key, value: e6.value });
        });
      }, [{ key: "validate", value: function(e5) {
        var t5, n5 = true, o5 = "";
        if (S3(e5))
          return { valid: false, tips: "empty options" };
        if (e5.profileCustomField)
          for (var i5 = e5.profileCustomField.length, a5 = null, s5 = 0; s5 < i5; s5++) {
            if (a5 = e5.profileCustomField[s5], !C4(a5.key) || -1 === a5.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!C4(a5.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (t5 in e5)
          if (Object.prototype.hasOwnProperty.call(e5, t5)) {
            if ("profileCustomField" === t5)
              continue;
            if (S3(e5[t5]) && !C4(e5[t5]) && !A3(e5[t5])) {
              o5 = "key:" + t5 + ", invalid value:" + e5[t5], n5 = false;
              continue;
            }
            switch (t5) {
              case "nick":
                C4(e5[t5]) || (n5 = !(o5 = "nick must be a string")), 500 < _t2(e5[t5]) && (o5 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(_t2(e5[t5]), " bytes"), n5 = false);
                break;
              case "gender":
                ft2(ze2, e5.gender) || (o5 = "key:gender, invalid value:" + e5.gender, n5 = false);
                break;
              case "birthday":
                A3(e5.birthday) || (n5 = !(o5 = "birthday must be a number"));
                break;
              case "location":
                C4(e5.location) || (n5 = !(o5 = "location must be a string"));
                break;
              case "selfSignature":
                C4(e5.selfSignature) || (n5 = !(o5 = "selfSignature must be a string"));
                break;
              case "allowType":
                ft2(Ze2, e5.allowType) || (o5 = "key:allowType, invalid value:" + e5.allowType, n5 = false);
                break;
              case "language":
                A3(e5.language) || (n5 = !(o5 = "language must be a number"));
                break;
              case "avatar":
                C4(e5.avatar) || (n5 = !(o5 = "avatar must be a string"));
                break;
              case "messageSettings":
                0 !== e5.messageSettings && 1 !== e5.messageSettings && (n5 = !(o5 = "messageSettings must be 0 or 1"));
                break;
              case "adminForbidType":
                ft2(Xe2, e5.adminForbidType) || (o5 = "key:adminForbidType, invalid value:" + e5.adminForbidType, n5 = false);
                break;
              case "level":
                A3(e5.level) || (n5 = !(o5 = "level must be a number"));
                break;
              case "role":
                A3(e5.role) || (n5 = !(o5 = "role must be a number"));
                break;
              default:
                o5 = "unknown key:" + t5 + "  " + e5[t5], n5 = false;
            }
          }
        return { valid: n5, tips: o5 };
      } }]), wo = e4(function e5(t5) {
        p4(this, e5), this.MAX_LENGTH = t5, this.map = /* @__PURE__ */ new Map();
      }, [{ key: "set", value: function(e5) {
        var t5;
        this.map.size >= this.MAX_LENGTH && (t5 = this.map.entries().next().value[0], this.map.delete(t5)), this.map.set(e5, 1);
      } }, { key: "has", value: function(e5) {
        return this.map.has(e5);
      } }, { key: "delete", value: function(e5) {
        this.has(e5) && this.map.delete(e5);
      } }, { key: "reset", value: function() {
        this.map.clear();
      } }]), Fo = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers", "isSupportTopic", "inviteOption", "_lastRevokedTime"], qo = e4(function e5(t5) {
        p4(this, e5), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = { messageRemindType: "", joinTime: "", nameCard: "", role: "", userID: "", memberCustomField: void 0, readedSequence: 0, excludedUnreadSequenceList: void 0 }, this.lastMessage = { lastTime: "", lastSequence: "", fromAccount: "", messageForShow: "" }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", this.maxMemberCount = "", this.joinOption = "", this.inviteOption = "", this.groupCustomField = [], this.muteAllMembers = false, this.isSupportTopic = false, this._lastRevokedTime = 0, this._initGroup(t5);
      }, [{ key: "memberNum", get: function() {
        return this.memberCount;
      }, set: function(e5) {
      } }, { key: "maxMemberNum", get: function() {
        return this.maxMemberCount;
      }, set: function(e5) {
      } }, { key: "_initGroup", value: function(e5) {
        for (var t5 in e5)
          Fo.indexOf(t5) < 0 || ("selfInfo" !== t5 ? ("memberNum" === t5 && (this.memberCount = e5[t5]), "maxMemberNum" === t5 && (this.maxMemberCount = e5[t5]), "isSupportTopic" !== t5 ? this[t5] = e5[t5] : this.isSupportTopic = 1 === e5[t5]) : this.updateSelfInfo(e5[t5]));
      } }, { key: "updateGroup", value: function(e5) {
        var t5 = this, e5 = (e5.appid = void 0, e5.grossTopicNextMsgSeq = void 0, e5.selfInfo && (e5.selfInfo.grossTopicReadSeq = void 0), JSON.parse(JSON.stringify(e5)));
        e5.lastMsgTime && (this.lastMessage.lastTime = e5.lastMsgTime), N3(e5.muteAllMembers) || ("On" === e5.muteAllMembers ? e5.muteAllMembers = true : e5.muteAllMembers = false), e5.groupCustomField && Lt2(this.groupCustomField, e5.groupCustomField), N3(e5.memberNum) || (this.memberCount = e5.memberNum), N3(e5.maxMemberNum) || (this.maxMemberCount = e5.maxMemberNum), N3(e5.isSupportTopic) || (this.isSupportTopic = A3(e5.isSupportTopic) ? 1 === e5.isSupportTopic : e5.isSupportTopic), dt2(this, e5, ["members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum", "isSupportTopic"]), O3(e5.members) && 0 < e5.members.length && e5.members.forEach(function(e6) {
          e6.userID === t5.selfInfo.userID && dt2(t5.selfInfo, e6, ["sequence"]);
        });
      } }, { key: "updateSelfInfo", value: function(e5) {
        e5 = { nameCard: e5.nameCard, joinTime: e5.joinTime, role: e5.role, messageRemindType: e5.messageRemindType, readedSequence: e5.readedSequence, excludedUnreadSequenceList: e5.excludedUnreadSequenceList };
        dt2(this.selfInfo, y2({}, e5), [], ["", null, void 0, 0, NaN]);
      } }, { key: "setSelfNameCard", value: function(e5) {
        this.selfInfo.nameCard = e5;
      } }]), xo = e4(function e5(t5, n5) {
        var o5 = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
        p4(this, e5), this.conversationID = t5.conversationID || "", this.unreadCount = t5.unreadCount || 0, this.type = t5.type || "", this.lastMessage = Oo(t5.lastMessage, n5, o5), t5.lastMsgTime && (this.lastMessage.lastTime = t5.lastMsgTime), this._isInfoCompleted = false, this.peerReadTime = t5.peerReadTime || 0, this.groupAtInfoList = [], this.remark = "", this.isPinned = t5.isPinned || false, this.messageRemindType = t5.messageRemindType, this.markList = t5.markList || [], this.customData = t5.customData || "", this.conversationGroupList = t5.conversationGroupList || [], this.draftText = t5.draftText || "", this._initProfile(t5), this.subType = this.groupProfile ? this.groupProfile.type : "";
      }, [{ key: "toAccount", get: function() {
        return this.conversationID.startsWith(R3.CONV_C2C) ? this.conversationID.replace(R3.CONV_C2C, "") : this.conversationID.startsWith(R3.CONV_GROUP) ? this.conversationID.replace(R3.CONV_GROUP, "") : "";
      } }, { key: "_initProfile", value: function(t5) {
        var n5 = this;
        Object.keys(t5).forEach(function(e5) {
          switch (e5) {
            case "userProfile":
              n5.userProfile = t5.userProfile;
              break;
            case "groupProfile":
              n5.groupProfile = t5.groupProfile;
          }
        }), N3(this.userProfile) && this.type === R3.CONV_C2C ? this.userProfile = new bo({ userID: t5.conversationID.replace("C2C", "") }) : N3(this.groupProfile) && this.type === R3.CONV_GROUP && (this.groupProfile = new qo({ groupID: t5.conversationID.replace("GROUP", "") }));
      } }, { key: "updateUnreadCount", value: function(e5) {
        var t5 = e5.nextUnreadCount, n5 = e5.isFromGetConversations, e5 = e5.isUnreadC2CMessage;
        N3(t5) || (At2(this.subType) ? this.unreadCount = 0 : n5 && this.type === R3.CONV_GROUP || n5 && this.type === R3.CONV_TOPIC || e5 && this.type === R3.CONV_C2C ? this.unreadCount = t5 : this.unreadCount = this.unreadCount + t5);
      } }, { key: "updateLastMessage", value: function(e5) {
        this.lastMessage = Oo(e5);
      } }, { key: "updateGroupAtInfoList", value: function(e5) {
        var t5;
        this._isNeedMergeGroupAtInfo(e5) || (-1 !== (t5 = (b2(t5 = e5.groupAtType) || B2(t5) || X2(t5) || H2()).slice(0)).indexOf(R3.CONV_AT_ME) && -1 !== t5.indexOf(R3.CONV_AT_ALL) && (t5 = [R3.CONV_AT_ALL_AT_ME]), t5 = { from: e5.from, groupID: e5.groupID, topicID: e5.topicID, messageSequence: e5.sequence, atTypeArray: t5, __random: e5.__random, __sequence: e5.__sequence }, this.groupAtInfoList.push(t5));
      } }, { key: "_isNeedMergeGroupAtInfo", value: function(t5) {
        var n5, e5 = t5.groupID, o5 = t5.sequence;
        return !!Ot2({ groupID: e5 }) && (n5 = false, this.groupAtInfoList.forEach(function(e6) {
          e6.messageSequence === o5 && (-1 < e6.atTypeArray.indexOf(R3.CONV_AT_ME) && -1 < t5.groupAtType.indexOf(R3.CONV_AT_ALL) && (e6.atTypeArray = [R3.CONV_AT_ALL_AT_ME]), -1 < e6.atTypeArray.indexOf(R3.CONV_AT_ALL) && -1 < t5.groupAtType.indexOf(R3.CONV_AT_ME) && (e6.atTypeArray = [R3.CONV_AT_ALL_AT_ME], e6.__random = t5.__random, e6.__sequence = t5.__sequence), n5 = true);
        }), n5);
      } }, { key: "clearGroupAtInfoList", value: function() {
        this.groupAtInfoList.length = 0;
      } }, { key: "reduceUnreadCount", value: function() {
        return 1 <= this.unreadCount && (--this.unreadCount, true);
      } }, { key: "isLastMessageRevoked", value: function(e5) {
        var t5 = e5.sequence, e5 = e5.time;
        return this.type === R3.CONV_C2C && t5 === this.lastMessage.lastSequence && e5 === this.lastMessage.lastTime || this.type === R3.CONV_GROUP && t5 === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e5) {
        this.lastMessage.isRevoked = e5;
      } }, { key: "setLastMessageRevoker", value: function(e5) {
        this.lastMessage.revoker = e5;
      } }, { key: "setDraftText", value: function(e5) {
        this.draftText = e5;
      } }]), Vo = q2(q2(q2({}, R3.MSG_REMIND_ACPT_AND_NOTE, 0), R3.MSG_REMIND_DISCARD, 1), R3.MSG_REMIND_ACPT_NOT_NOTE, 2), Bo = e4(function e5(t5) {
        p4(this, e5), this._convM = t5, this._n = "MsgRemindHandler";
      }, [{ key: "onAllRcvMsgOptNotify", value: function(e5) {
        e5 = this._handleResult(e5);
        this._convM.emitOEvt(h4.ALL_RECEIVE_MESSAGE_OPT_UPDATED, e5);
      } }, { key: "getC2CMsgRemindType", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".getC2CMsgRemindType");
        return this._convM.req({ P: G2.GET_C2C_PEER_MUTE_NOTIFICATIONS, data: { toAccount: this._convM.getMyUserID(), userIDList: t5 } }).then(function(e5) {
          M3.l("".concat(o5, " ok. userIDList:").concat(t5));
          e5 = e5.data.muteFlagList;
          n5._convM.onC2CMsgRemindTypeFetched(e5);
        }).catch(function(e5) {
          M3.e("".concat(o5, " failed. error:"), e5);
        });
      } }, { key: "set", value: function(e5) {
        return e5.groupID ? this._setGroupMsgRemindType(e5) : O3(e5.userIDList) ? this._setC2CMsgRemindType(e5) : void 0;
      } }, { key: "_setGroupMsgRemindType", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".").concat("_setGroupMsgRemindType"), e5 = t5.groupID, i5 = t5.messageRemindType, a5 = "groupID:".concat(e5, " messageRemindType:").concat(i5), s5 = new P3("_setGroupMsgRemindType"), r5 = (s5.setMessage(a5), this._get(7));
        return r5 ? r5.modifyGroupMemberInfo({ groupID: e5, messageRemindType: i5, userID: this._convM.getMyUserID() }).then(function() {
          s5.end(), M3.l("".concat(o5, " ok. ").concat(a5));
          var e6 = n5.onGroupMsgRemindTypeUpdated(t5);
          return n5._convM.onTotalUnreadCountUpdate(), T4(e6);
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        }) : E4({ code: k2.NO_MODULE });
      } }, { key: "onGroupMsgRemindTypeUpdated", value: function(e5) {
        var t5, n5, o5 = e5.groupID, e5 = e5.messageRemindType, i5 = (M3.l("".concat(this._n, ".onGroupMsgRemindTypeUpdated groupID:").concat(o5, " messageRemindType:").concat(e5)), this._get(7).getLocalGroupProfile(o5));
        return i5 && (i5.selfInfo.messageRemindType = e5), Nt2(o5) ? (t5 = jt2(n5 = o5), (n5 = this._get(10).getLocalTopic(t5, n5)) && n5.updateSelfInfo({ messageRemindType: e5 }) && this._convM.emitOEvt(h4.TOPIC_UPDATED, { groupID: t5, topic: n5 }), { topic: n5 }) : (this._convM.patchMsgRemindType({ ID: o5, isC2CConversation: false, messageRemindType: e5 }) && this._emitConvUpdate(), { group: i5 });
      } }, { key: "_setC2CMsgRemindType", value: function(e5) {
        var i5 = this, a5 = "".concat(this._n, ".").concat("_setC2CMsgRemindType"), t5 = e5.userIDList, s5 = e5.messageRemindType, r5 = t5.slice(0, 30), e5 = Vo[s5] || 0, c5 = "userIDList:".concat(r5, " messageRemindType:").concat(s5), u5 = new P3("_setC2CMsgRemindType");
        return u5.setMessage(c5), this._convM.req({ P: G2.SET_C2C_PEER_MUTE_NOTIFICATIONS, data: { userIDList: r5, muteFlag: e5 } }).then(function(e6) {
          u5.end();
          var e6 = e6.data.errorList, t6 = [], n5 = [], e6 = (O3(e6) && e6.forEach(function(e7) {
            t6.push(e7.userID), n5.push({ userID: e7.userID, code: e7.errorCode });
          }), r5.filter(function(e7) {
            return -1 === t6.indexOf(e7);
          })), o5 = (M3.l("".concat(a5, " ok. ").concat(c5, " successUserIDList:").concat(e6, " failureUserIDList:").concat(JSON.stringify(n5))), 0);
          return e6.forEach(function(e7) {
            i5._convM.patchMsgRemindType({ ID: e7, isC2CConversation: true, messageRemindType: s5 }) && (o5 += 1);
          }), 1 <= o5 && i5._emitConvUpdate(), r5.length = t6.length = 0, i5._convM.onTotalUnreadCountUpdate(), D2({ successUserIDList: e6.map(function(e7) {
            return { userID: e7 };
          }), failureUserIDList: n5 });
        }).catch(function(e6) {
          return u5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_get", value: function(e5) {
        return this._convM.get(e5);
      } }, { key: "_emitConvUpdate", value: function() {
        this._convM.emitConvUpdate(true, false);
      } }, { key: "setAllRcvMsgOpt", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("setAllRcvMsgOpt"), n5 = e5.messageRemindType, n5 = void 0 === n5 ? R3.MSG_REMIND_ACPT_NOT_NOTE : n5, o5 = e5.isRepeated, o5 = void 0 === o5 || o5, i5 = this._calcStartAndEndTime(e5), a5 = i5.startTime, a5 = void 0 === a5 ? 0 : a5, i5 = i5.endTime, i5 = void 0 === i5 ? 0 : i5, e5 = JSON.stringify(e5), s5 = new P3("setAllRcvMsgOpt");
        return s5.setMessage(e5), M3.l("".concat(t5, " options:").concat(e5)), this._convM.req({ P: G2.SET_ALL_RECEIVE_MSG_OPT, data: { messageRemindType: Vo[n5], startTime: a5, endTime: i5, isRepeated: o5 ? 1 : 0 } }).then(function(e6) {
          return s5.end(), M3.l("".concat(t5, " ok.")), T4(e6);
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_calcStartAndEndTime", value: function(e5) {
        var t5 = e5.startHour, t5 = void 0 === t5 ? 0 : t5, n5 = e5.startMinute, n5 = void 0 === n5 ? 0 : n5, o5 = e5.startSecond, o5 = void 0 === o5 ? 0 : o5, i5 = e5.duration, i5 = void 0 === i5 ? 0 : i5, e5 = e5.isRepeated, e5 = void 0 === e5 || e5, a5 = /* @__PURE__ */ new Date(), s5 = a5.getFullYear(), r5 = a5.getMonth(), a5 = a5.getDate(), s5 = Math.round(new Date(s5, r5, a5, t5, n5, o5).getTime() / 1e3);
        return { startTime: s5, endTime: e5 && 86400 <= i5 ? s5 + 86400 : s5 + i5 };
      } }, { key: "getAllRcvMsgOpt", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".").concat("getAllRcvMsgOpt"), o5 = new P3("getAllRcvMsgOpt");
        return this._convM.req({ P: G2.GET_ALL_RECEIVE_MSG_OPT, data: { toAccount: this._convM.getMyUserID() } }).then(function(e5) {
          e5 = e5.data, o5.setMessage(JSON.stringify(e5)).end(), M3.l("".concat(n5, " ok. data:").concat(JSON.stringify(e5))), e5 = t5._handleResult(e5);
          return T4(e5);
        }).catch(function(e5) {
          return o5.setError(e5).end(), M3.e("".concat(n5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "_handleResult", value: function(e5) {
        var t5 = e5.messageRemindType, n5 = e5.startTime, o5 = e5.endTime, e5 = e5.isRepeated, i5 = R3.MSG_REMIND_ACPT_AND_NOTE;
        return 1 === t5 && (i5 = R3.MSG_REMIND_DISCARD), { messageRemindType: i5 = 2 === t5 ? R3.MSG_REMIND_ACPT_NOT_NOTE : i5, startTime: n5, endTime: o5, isRepeated: 1 === e5 };
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }]), Ho = e4(function e5(t5) {
        p4(this, e5), this._convM = t5, this._n = "ConvGroupHandler", this._convGroupMap = /* @__PURE__ */ new Map(), this._startIndex = 0, this._pagingStatus = Gn;
      }, [{ key: "setConvCustomData", value: function(e5) {
        var i5 = this, a5 = "".concat(this._n, ".").concat("setConvCustomData"), t5 = e5.conversationIDList, s5 = e5.customData, r5 = (M3.l("".concat(a5, " options:"), e5), new P3("setConvCustomData")), n5 = (r5.setMessage(JSON.stringify(e5)), { fromAccount: this._getMyUserID(), itemList: [] }), c5 = [], u5 = [];
        return t5.forEach(function(e6) {
          var t6;
          return i5._hasLocalConv(e6) ? Gt2(e6) || Pt2(e6) ? (t6 = { operationType: 2, contactItem: void 0, customMark: s5 }, Gt2(e6) ? t6.contactItem = { type: 1, toAccount: e6.replace(R3.CONV_C2C, "") } : Pt2(e6) && (t6.contactItem = { type: 2, groupID: e6.replace(R3.CONV_GROUP, "") }), void n5.itemList.push(t6)) : (i5._onConvIDInvalid(u5, e6), true) : (i5._onConvNotFound(u5, e6), true);
        }), u5.length === t5.length ? D2({ successConversationIDList: c5, failureConversationIDList: u5 }) : this._convM.req({ P: G2.SET_CONV_CUSTOM_DATA, data: n5 }).then(function(e6) {
          r5.end(), M3.l("".concat(a5, " ok"));
          var t6, n6, o5, e6 = e6.data.resultItem;
          return O3(e6) && (o5 = false, e6.forEach(function(e7) {
            t6 = i5._concatConvID(e7.contactItem), 0 === e7.resultCode ? (c5.push(t6), (n6 = i5._getLocalConv(t6)) && n6.customData !== s5 && (n6.customData = s5, o5 = true)) : u5.push({ conversationID: t6, code: e7.resultCode, message: e7.resultInfo });
          }), true === o5) && i5._emitConvUpdate(), T4({ successConversationIDList: c5, failureConversationIDList: u5 });
        }).catch(function(e6) {
          return r5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "markConv", value: function(e5) {
        var t5, n5, a5, s5, r5, o5, i5, c5, u5, l5, d4 = this;
        return this._convM.canIUse(g4.CONV_MARK) ? (t5 = "".concat(this._n, ".").concat("markConv"), n5 = e5.conversationIDList, a5 = e5.markType, s5 = e5.enableMark, M3.l("".concat(t5, " options:"), e5), r5 = new P3("markConv"), o5 = void r5.setMessage(JSON.stringify(e5)), i5 = void 0, e5 = this._getFlagBit(a5), true === s5 ? i5 = [e5] : o5 = [e5], c5 = { fromAccount: this._getMyUserID(), itemList: [] }, u5 = [], l5 = [], n5.forEach(function(e6) {
          var t6;
          return d4._hasLocalConv(e6) ? Gt2(e6) || Pt2(e6) ? (t6 = { operationType: 1, contactItem: void 0, clearMark: o5, setMark: i5 }, Gt2(e6) ? t6.contactItem = { type: 1, toAccount: e6.replace(R3.CONV_C2C, "") } : Pt2(e6) && (t6.contactItem = { type: 2, groupID: e6.replace(R3.CONV_GROUP, "") }), void c5.itemList.push(t6)) : (d4._onConvIDInvalid(l5, e6), true) : (d4._onConvNotFound(l5, e6), true);
        }), l5.length === n5.length ? D2({ successConversationIDList: u5, failureConversationIDList: l5 }) : this._convM.req({ P: G2.MARK_CONV, data: c5 }).then(function(e6) {
          r5.end(), M3.l("".concat(t5, " ok"));
          var n6, o6, i6, e6 = e6.data.resultItem;
          return O3(e6) && (i6 = false, e6.forEach(function(e7) {
            var t6;
            n6 = d4._concatConvID(e7.contactItem), 0 === e7.resultCode ? (u5.push(n6), (o6 = d4._getLocalConv(n6)) && (t6 = o6.markList.indexOf(a5), true === s5 ? -1 === t6 && (o6.markList.push(a5), i6 = true) : -1 !== t6 && (o6.markList.splice(t6, 1), i6 = true))) : l5.push({ conversationID: n6, code: e7.resultCode, message: e7.resultInfo });
          }), true === i6) && d4._emitConvUpdate(), T4({ successConversationIDList: u5, failureConversationIDList: l5 });
        }).catch(function(e6) {
          return r5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._convM.noUse("markConv");
      } }, { key: "getLocalConvGroupList", value: function() {
        var e5 = this;
        return M3.l("".concat(this._n, ".getLocalConvGroupList pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === bn ? this.getRemoteConvGroupList().then(function() {
          return T4(d3(e5._convGroupMap.values()));
        }) : D2(d3(this._convGroupMap.values()));
      } }, { key: "searchConvGroupAndMark", value: function(e5, t5) {
        var n5 = this, o5 = "".concat(this._n, ".searchConvGroupAndMark"), i5 = [];
        return e5.forEach(function(e6) {
          1 === t5 ? i5.push({ type: 1, toAccount: e6 }) : 2 === t5 && i5.push({ type: 2, groupID: e6 });
        }), M3.l("".concat(o5, " type:").concat(t5, " list:"), e5), this._convM.req({ P: G2.SEARCH_CONV_GRP_MARK, data: { fromAccount: this._getMyUserID(), contactItem: i5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.contactItem, e6 = e6.groupItem;
          M3.l("".concat(o5, " ok. contactItem:"), t6, "groupItem:", e6), n5._fillConvGroupMap(e6), n5._handleContactItem(t6), n5._emitConvUpdate();
        }).catch(function(e6) {
          M3.w("".concat(o5, " failed. error:"), e6);
        });
      } }, { key: "_fillConvGroupMap", value: function(e5) {
        var n5 = this;
        O3(e5) && e5.forEach(function(e6) {
          var t5 = e6.convGroupID, e6 = e6.groupName;
          n5._convGroupMap.set(t5, e6);
        });
      } }, { key: "_handleContactItem", value: function(e5) {
        var a5, s5 = this;
        O3(e5) && e5.forEach(function(e6) {
          var t5 = [], n5 = e6.standardMark, o5 = e6.customData, i5 = e6.convGroupIDList;
          O3(i5) && i5.forEach(function(e7) {
            s5._convGroupMap.has(e7) && t5.push(s5._convGroupMap.get(e7));
          }), a5 = s5._concatConvID(e6), (a5 = s5._getLocalConv(a5)) && (a5.markList = Xt2(n5), a5.customData = o5 || "", a5.conversationGroupList = [].concat(t5));
        });
      } }, { key: "getRemoteConvGroupList", value: function() {
        var i5 = this, a5 = "".concat(this._n, ".getRemoteConvGroupList");
        return this._pagingStatus = Pn, this._convM.req({ P: G2.GET_CONV_GRP_LIST, data: { fromAccount: this._getMyUserID(), startIndex: this._startIndex } }).then(function(e5) {
          var e5 = e5.data, t5 = e5.completeFlag, n5 = e5.contactItem, o5 = e5.nextStartIndex, o5 = void 0 === o5 ? 0 : o5, e5 = e5.groupItem;
          if (i5._startIndex = o5, M3.l("".concat(a5, " completeFlag:").concat(t5, " nextStartIndex:").concat(o5, ", groupItem:"), e5, "contactItem:", n5), i5._fillConvGroupMap(e5), i5._handleContactItem(n5), 0 === t5)
            return i5.getRemoteConvGroupList();
          1 === t5 && (i5._pagingStatus = Un, i5._emitConvUpdate(), i5._emitConvGroupListUpdate());
        }).catch(function(e5) {
          i5._pagingStatus = bn, M3.w("".concat(a5, " failed. error:"), e5);
        });
      } }, { key: "createConvGroup", value: function(e5) {
        var a5, s5, r5, t5, c5, u5, l5 = this;
        return this._convM.canIUse(g4.CONV_GROUP) ? (a5 = "".concat(this._n, ".").concat("createConvGroup"), M3.l("".concat(a5, " options:"), e5), (s5 = new P3("createConvGroup")).setMessage(JSON.stringify(e5)), r5 = e5.groupName, e5 = e5.conversationIDList, t5 = { fromAccount: this._getMyUserID(), itemList: [{ groupName: r5, contactItem: [] }] }, c5 = [], u5 = [], e5.forEach(function(e6) {
          return l5._hasLocalConv(e6) ? Gt2(e6) || Pt2(e6) ? void (Gt2(e6) ? t5.itemList[0].contactItem.push({ type: 1, toAccount: e6.replace(R3.CONV_C2C, "") }) : Pt2(e6) && t5.itemList[0].contactItem.push({ type: 2, groupID: e6.replace(R3.CONV_GROUP, "") })) : (l5._onConvIDInvalid(u5, e6), true) : (l5._onConvNotFound(u5, e6), true);
        }), u5.length === e5.length ? D2({ successConversationIDList: c5, failureConversationIDList: u5 }) : this._convM.req({ P: G2.CREATE_CONV_GRP, data: t5 }).then(function(e6) {
          s5.end(), M3.l("".concat(a5, " ok"));
          var t6, n5, o5, e6 = e6.data.groupResultItem[0], i5 = e6.groupItem, e6 = e6.resultItem;
          return m3(i5) && (l5._convGroupMap.set(i5.convGroupID, i5.groupName), l5._emitConvGroupListUpdate()), O3(e6) && (o5 = false, e6.forEach(function(e7) {
            t6 = l5._concatConvID(e7.contactItem), 0 === e7.resultCode ? (c5.push(t6), (n5 = l5._getLocalConv(t6)) && -1 === n5.conversationGroupList.indexOf(r5) && (n5.conversationGroupList.push(r5), o5 = true)) : u5.push({ conversationID: t6, code: e7.resultCode, message: e7.resultInfo });
          }), true === o5) && (l5._emitConvUpdate(), l5._emitConvGroupListUpdate()), T4({ successConversationIDList: c5, failureConversationIDList: u5 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        })) : this._convM.noUse("createConvGroup");
      } }, { key: "deleteConvGroup", value: function(n5) {
        var o5, i5, a5 = this;
        return this._convM.canIUse(g4.CONV_GROUP) ? (o5 = "".concat(this._n, ".").concat("deleteConvGroup"), M3.l("".concat(o5, " groupName:").concat(n5)), (i5 = new P3("deleteConvGroup")).setMessage(n5), this._convM.req({ P: G2.DEL_CONV_GRP, data: { fromAccount: this._getMyUserID(), groupName: [n5] } }).then(function(e5) {
          i5.end(), M3.l("".concat(o5, " ok"));
          var t5, e5 = e5.data.groupItem;
          O3(e5) && (t5 = false, e5.forEach(function(e6) {
            a5._convGroupMap.has(e6.convGroupID) && (a5._convGroupMap.delete(e6.convGroupID), t5 = true);
          }), true === t5) && a5._emitConvGroupListUpdate(), a5._eraseFromConversationGroupList([n5]);
        }).catch(function(e5) {
          return i5.setError(e5).end(), M3.e("".concat(o5, " failed. error:"), e5), E4(e5);
        })) : this._convM.noUse("deleteConvGroup");
      } }, { key: "renameConvGroup", value: function(e5) {
        var i5, a5, s5, r5, c5 = this;
        return this._convM.canIUse(g4.CONV_GROUP) ? (i5 = "".concat(this._n, ".").concat("renameConvGroup"), M3.l("".concat(i5, " options:"), e5), (a5 = new P3("renameConvGroup")).setMessage(JSON.stringify(e5)), s5 = e5.oldName, r5 = e5.newName, this._convM.req({ P: G2.RENAME_CONV_GRP, data: { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 1, oldName: s5, newName: r5 } } }).then(function(e6) {
          a5.end(), M3.l("".concat(i5, " ok"));
          e6 = e6.data.updateGroupResult.convGroupID;
          c5._convGroupMap.set(e6, r5), c5._emitConvGroupListUpdate();
          var t5, n5, e6 = c5._convM.getLocalConvList(), o5 = false;
          e6.forEach(function(e7) {
            t5 = e7.conversationGroupList, -1 !== (n5 = t5.indexOf(s5)) && (t5.splice(n5, 1, r5), o5 = true);
          }), true === o5 && c5._emitConvUpdate();
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this._convM.noUse("renameConvGroup");
      } }, { key: "addConvsToGroup", value: function(e5) {
        var i5, a5, t5, s5, n5, r5, c5, u5 = this;
        return this._convM.canIUse(g4.CONV_GROUP) ? (i5 = "".concat(this._n, ".").concat("addConvsToGroup"), M3.l("".concat(i5, " options:"), e5), (a5 = new P3("addConvsToGroup")).setMessage(JSON.stringify(e5)), t5 = e5.conversationIDList, s5 = e5.groupName, n5 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s5, updateItem: [] } }, r5 = [], c5 = [], t5.forEach(function(e6) {
          return u5._hasLocalConv(e6) ? Gt2(e6) || Pt2(e6) ? void (Gt2(e6) ? n5.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 1, toAccount: e6.replace(R3.CONV_C2C, "") } }) : Pt2(e6) && n5.updateGroup.updateItem.push({ operationType: 1, contactItem: { type: 2, groupID: e6.replace(R3.CONV_GROUP, "") } })) : (u5._onConvIDInvalid(c5, e6), true) : (u5._onConvNotFound(c5, e6), true);
        }), c5.length === t5.length ? D2({ successConversationIDList: r5, failureConversationIDList: c5 }) : this._convM.req({ P: G2.ADD_CONV_TO_GRP, data: n5 }).then(function(e6) {
          a5.end(), M3.l("".concat(i5, " ok"));
          var t6, n6, o5, e6 = e6.data.updateGroupResult.contactResultItem;
          return O3(e6) && (o5 = false, e6.forEach(function(e7) {
            t6 = u5._concatConvID(e7.contactItem), 0 === e7.resultCode ? (n6 = u5._getLocalConv(t6)) && -1 === n6.conversationGroupList.indexOf(s5) && (n6.conversationGroupList.push(s5), r5.push(t6), o5 = true) : c5.push({ conversationID: t6, code: e7.resultCode, message: e7.resultInfo });
          }), true === o5) && (u5._emitConvUpdate(), u5._emitConvInGroupUpdate(s5)), T4({ successConversationIDList: r5, failureConversationIDList: c5 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this._convM.noUse("addConvsToGroup");
      } }, { key: "deleteConvsFromGroup", value: function(e5) {
        var t5, a5, n5, s5, o5, r5, c5, u5 = this, i5 = "deleteConvsFromGroup";
        return this._convM.canIUse(g4.CONV_GROUP) ? (t5 = "".concat(this._n, ".").concat(i5), M3.l("".concat(t5, " options:"), e5), (a5 = new P3(i5)).setMessage(JSON.stringify(e5)), n5 = e5.conversationIDList, s5 = e5.groupName, o5 = { fromAccount: this._getMyUserID(), updateType: 1, updateGroup: { updateGroupType: 2, groupName: s5, updateItem: [] } }, r5 = [], c5 = [], n5.forEach(function(e6) {
          return u5._hasLocalConv(e6) ? Gt2(e6) || Pt2(e6) ? void (Gt2(e6) ? o5.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 1, toAccount: e6.replace(R3.CONV_C2C, "") } }) : Pt2(e6) && o5.updateGroup.updateItem.push({ operationType: 2, contactItem: { type: 2, groupID: e6.replace(R3.CONV_GROUP, "") } })) : (u5._onConvIDInvalid(c5, e6), true) : (u5._onConvNotFound(c5, e6), true);
        }), c5.length === n5.length ? D2({ successConversationIDList: r5, failureConversationIDList: c5 }) : this._convM.req({ P: G2.DEL_CONV_FROM_GRP, data: o5 }).then(function(e6) {
          a5.end(), M3.l("".concat(t5, " ok"));
          var n6, o6, i6, e6 = e6.data.updateGroupResult.contactResultItem;
          return O3(e6) && (i6 = false, e6.forEach(function(e7) {
            var t6;
            n6 = u5._concatConvID(e7.contactItem), 0 === e7.resultCode ? (o6 = u5._getLocalConv(n6)) && -1 !== (t6 = o6.conversationGroupList.indexOf(s5)) && (o6.conversationGroupList.splice(t6, 1), r5.push(n6), i6 = true) : c5.push({ conversationID: n6, code: e7.resultCode, message: e7.resultInfo });
          }), true === i6) && (u5._emitConvUpdate(), u5._emitConvInGroupUpdate(s5)), T4({ successConversationIDList: r5, failureConversationIDList: c5 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._convM.noUse(i5);
      } }, { key: "onConvMarkUpdated", value: function(e5) {
        var i5, a5, s5 = this;
        S3(e5) || (M3.l("".concat(this._n, ".onConvMarkUpdated markItemList:"), e5), a5 = false, e5.forEach(function(e6) {
          var t5 = e6.recentContactItem, n5 = e6.optType, o5 = e6.standardMark, e6 = e6.customMark;
          i5 = s5._concatConvID(t5), (i5 = s5._getLocalConv(i5)) && (1 === n5 ? a5 = s5._diffStandardMark(i5, o5) : 2 === n5 ? a5 = s5._diffCustomMark(i5, e6) : 3 === n5 && (t5 = s5._diffStandardMark(i5, o5), n5 = s5._diffCustomMark(i5, e6), a5 = t5 || n5));
        }), true === a5 && this._emitConvUpdate());
      } }, { key: "_diffStandardMark", value: function(e5, t5) {
        var t5 = Xt2(t5), n5 = false;
        return true !== function(e6, t6) {
          if (e6 !== t6) {
            if (!e6 || !t6)
              return false;
            if (e6.length !== t6.length)
              return false;
            for (var n6 = 0, o5 = e6.length; n6 < o5; n6++)
              if (e6[n6] !== t6[n6])
                return false;
          }
          return true;
        }(e5.markList, t5) && (e5.markList = t5, n5 = true), n5;
      } }, { key: "_diffCustomMark", value: function(e5, t5) {
        var n5 = false;
        return e5.customData !== t5 && void 0 !== t5 && (e5.customData = t5, n5 = true), n5;
      } }, { key: "onConvGroupCreated", value: function(e5) {
        var a5 = this, s5 = (M3.l("".concat(this._n, ".onConvGroupCreated resultList:"), e5), false), r5 = false;
        O3(e5) && (e5.forEach(function(e6) {
          var t5 = e6.msgGroupItem, n5 = t5.groupID, o5 = t5.groupName;
          a5._convGroupMap.get(n5) !== o5 && (a5._convGroupMap.set(n5, o5), r5 = true);
          var i5, t5 = e6.msgRecentContactItem;
          O3(t5) && t5.forEach(function(e7) {
            i5 = a5._concatConvID(e7), (i5 = a5._getLocalConv(i5)) && -1 === i5.conversationGroupList.indexOf(o5) && (i5.conversationGroupList.push(o5), s5 = true);
          });
        }), true === s5 && this._emitConvUpdate(), true === r5) && this._emitConvGroupListUpdate();
      } }, { key: "onConvGroupDeleted", value: function(e5) {
        var n5, o5 = this, i5 = (M3.l("".concat(this._n, ".onConvGroupDeleted groupItemList:"), e5), []);
        O3(e5) && (n5 = false, e5.forEach(function(e6) {
          var t5 = e6.groupID, e6 = e6.groupName;
          o5._convGroupMap.has(t5) && (o5._convGroupMap.delete(t5), n5 = true, i5.push(e6));
        }), true === n5) && this._emitConvGroupListUpdate(), this._eraseFromConversationGroupList(i5);
      } }, { key: "_eraseFromConversationGroupList", value: function(t5) {
        S3(t5) || (this._convM.getLocalConvList().forEach(function(e5) {
          e5.conversationGroupList = e5.conversationGroupList.filter(function(e6) {
            return !t5.includes(e6);
          });
        }), this._emitConvUpdate());
      } }, { key: "onConvGroupNameUpdated", value: function(e5) {
        M3.l("".concat(this._n, ".onConvGroupNameUpdated options:"), e5);
        var t5, n5, o5, i5 = e5.groupID, a5 = e5.groupName, s5 = e5.oldGroupName;
        this._convGroupMap.get(i5) !== a5 && (this._convGroupMap.set(i5, a5), this._emitConvGroupListUpdate(), e5 = this._convM.getLocalConvList(), o5 = false, e5.forEach(function(e6) {
          t5 = e6.conversationGroupList, -1 !== (n5 = t5.indexOf(s5)) && (t5.splice(n5, 1, a5), o5 = true);
        }), true === o5) && this._emitConvUpdate();
      } }, { key: "onConvInGroupUpdated", value: function(e5) {
        var n5, o5, i5, a5 = this, s5 = (M3.l("".concat(this._n, ".onConvInGroupUpdated options:"), e5), e5.oldGroupName), e5 = e5.recentContactUpdateGroupItem;
        O3(e5) && (i5 = false, e5.forEach(function(e6) {
          var t5 = e6.contactOptType, e6 = e6.recentContactItem;
          n5 = a5._concatConvID(e6), (n5 = a5._getLocalConv(n5)) && (o5 = n5.conversationGroupList.indexOf(s5), 1 === t5 ? -1 === o5 && (n5.conversationGroupList.push(s5), i5 = true) : 2 === t5 && -1 !== o5 && (n5.conversationGroupList.splice(o5, 1), i5 = true));
        }), true === i5) && (this._emitConvUpdate(), this._emitConvInGroupUpdate(s5));
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e5) {
        var n5, o5, i5 = this, t5 = (M3.l("".concat(this._n, ".onConvAddedToOrDeletedFromGroup options:"), e5), e5.msgRecentContactItem), e5 = e5.msgRecentContactUpdateContactItem, t5 = this._concatConvID(t5), a5 = this._getLocalConv(t5);
        a5 && O3(e5) && (o5 = false, e5.forEach(function(e6) {
          var t6 = e6.groupOptType, e6 = e6.recentContactGroupItem.groupName;
          n5 = a5.conversationGroupList.indexOf(e6), 1 === t6 ? -1 === n5 && (a5.conversationGroupList.push(e6), o5 = true) : 2 === t6 && -1 !== n5 && (a5.conversationGroupList.splice(n5, 1), o5 = true), true === o5 && i5._emitConvInGroupUpdate(e6);
        }), true === o5) && this._emitConvUpdate();
      } }, { key: "onConvGroupListSynced", value: function(e5) {
        O3(e5) && 0 !== e5.length && (M3.l("".concat(this._n, ".onConvGroupListSynced groupItem:"), e5), this._fillConvGroupMap(e5));
      } }, { key: "getConvGroupListByID", value: function(e5) {
        var t5, n5 = this;
        if (!S3(e5))
          return t5 = [], e5.forEach(function(e6) {
            n5._convGroupMap.has(e6) && t5.push(n5._convGroupMap.get(e6));
          }), t5;
      } }, { key: "_onConvNotFound", value: function(e5, t5) {
        e5.push({ conversationID: t5, code: k2.CONV_NOT_FOUND, message: this._convM.getErrMsg(k2.CONV_NOT_FOUND) });
      } }, { key: "_onConvIDInvalid", value: function(e5, t5) {
        e5.push({ conversationID: t5, code: k2.INVALID_CONV_ID, message: this._convM.getErrMsg(k2.INVALID_CONV_ID) });
      } }, { key: "_getFlagBit", value: function(e5) {
        for (var t5 = e5.toString(2), n5 = t5.length, o5 = n5 - 1; 0 <= o5; o5--)
          if ("1" === t5[o5])
            return n5 - o5 - 1;
      } }, { key: "_concatConvID", value: function(e5) {
        var t5, n5 = e5.type, o5 = e5.to, i5 = e5.groupID, e5 = e5.userID;
        return 1 === n5 ? N3(e5) ? N3(o5) || (t5 = "".concat(R3.CONV_C2C).concat(o5)) : t5 = "".concat(R3.CONV_C2C).concat(e5) : 2 === n5 && (t5 = "".concat(R3.CONV_GROUP).concat(i5)), t5;
      } }, { key: "_getMyUserID", value: function() {
        return this._convM.getMyUserID();
      } }, { key: "_getLocalConv", value: function(e5) {
        return this._convM.getLocalConversation(e5);
      } }, { key: "_hasLocalConv", value: function(e5) {
        return this._convM.hasLocalConversation(e5);
      } }, { key: "_emitConvUpdate", value: function() {
        this._convM.emitConvUpdate(true, false);
      } }, { key: "_emitConvGroupListUpdate", value: function() {
        this._convM.emitOEvt(h4.CONVERSATION_GROUP_LIST_UPDATED, d3(this._convGroupMap.values()));
      } }, { key: "_emitConvInGroupUpdate", value: function(t5) {
        var e5 = { groupName: t5, conversationList: [] }, n5 = this._convM.getLocalConvList();
        e5.conversationList = n5.filter(function(e6) {
          return e6.conversationGroupList.includes(t5);
        }), this._convM.emitOEvt(h4.CONVERSATION_IN_GROUP_UPDATED, e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._convGroupMap.clear(), this._startIndex = 0, this._pagingStatus = Gn;
      } }]), Ko = (t4(Ii, c4), e4(Ii, [{ key: "_initListeners", value: function() {
        var e5 = this.getIEmitInst();
        e5.on(U3.A2KEY_AND_TINYID_UPDATED, this._init, this), e5.on(U3.PROFILE_UPDATED, this._onProfileUpdated, this), e5.on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      } }, { key: "_init", value: function() {
        var e5 = this, t5 = (M3.l("".concat(this._n, "._init")), this.get(13).getItem("conversationMap")), n5 = this.isIntl(), o5 = this.isUsingChatCore();
        if (t5) {
          for (var i5 = t5.length, a5 = 0; a5 < i5; a5++) {
            var s5 = t5[a5];
            if (s5) {
              if (this._isNonExistentAccount(s5.conversationID))
                continue;
              if (s5.groupProfile && At2(s5.groupProfile.type))
                continue;
            }
            this._convMap.set(s5.conversationID, new xo(t5[a5], n5, o5));
          }
          this.emitConvUpdate(true, false);
        }
        this.ready(function() {
          0 < e5._tmpGroupList.length && (e5.updateConvGroupProfile(e5._tmpGroupList), e5._tmpGroupList.length = 0);
        }), this.syncConvList();
      } }, { key: "_isNonExistentAccount", value: function(e5) {
        var t5;
        return "@TLS#ERROR" === (t5 = e5.startsWith(R3.CONV_C2C) ? e5.replace(R3.CONV_C2C, "") : t5) || "@TLS#NOT_FOUND" === t5;
      } }, { key: "onCheckTimer", value: function(e5) {
        this.isLoggedIn() && this._msgListHandler.onCheckTimer(e5);
      } }, { key: "onMessageSent", value: function(e5) {
        this._onSendOrRcvMsg({ conversationOptionsList: e5.conversationOptionsList, isInstantMessage: true });
      } }, { key: "onNewMessage", value: function(e5) {
        this._onSendOrRcvMsg(e5);
      } }, { key: "_onSendOrRcvMsg", value: function(e5) {
        var t5 = this, n5 = e5.conversationOptionsList, o5 = e5.isInstantMessage, o5 = void 0 === o5 || o5, i5 = e5.isUnreadC2CMessage, i5 = void 0 !== i5 && i5, a5 = e5.updateUnreadCount, a5 = void 0 === a5 || a5, s5 = e5.isSyncingEnded, s5 = void 0 !== s5 && s5;
        this._isReady ? 0 !== n5.length ? (true === o5 && this._checkNewConv(n5), this._updateLocalConvList({ conversationOptionsList: n5, isInstantMessage: o5, isUnreadC2CMessage: i5, isFromGetConversations: false, updateUnreadCount: a5 }), o5 || (this._convIDFromUnreadDBMap = new Map([].concat(d3(this._convIDFromUnreadDBMap), d3(n5.map(function(e6) {
          return [e6.conversationID, 1];
        })))), this._diffAndDeleteConv(), s5 && this.emitIEvt(U3.C2C_UNREAD_HANDLE_COMPLETED)), 0 < n5.filter(function(e6) {
          return !t5._isConvNeedShow(e6.conversationID);
        }).length || this.emitConvUpdate()) : s5 && this.emitIEvt(U3.C2C_UNREAD_HANDLE_COMPLETED) : this.ready(function() {
          t5._onSendOrRcvMsg(e5);
        });
      } }, { key: "updateConvGroupProfile", value: function(e5) {
        var n5, o5 = this;
        O3(e5) && 0 === e5.length || (0 !== this._convMap.size ? (n5 = false, e5.forEach(function(e6) {
          var t5 = "".concat(R3.CONV_GROUP).concat(e6.groupID);
          o5._convMap.has(t5) && (n5 = true, (t5 = o5._convMap.get(t5)).groupProfile = JSON.parse(JSON.stringify(e6)), t5.lastMessage.lastSequence < e6.nextMessageSeq && (t5.lastMessage.lastSequence = e6.nextMessageSeq - 1), t5.subType || (t5.subType = e6.type));
        }), n5 && this.emitConvUpdate(true, false)) : this._tmpGroupList = e5);
      } }, { key: "onMessageRevoked", value: function(e5, t5) {
        var n5, o5, i5, a5 = this;
        0 !== e5.length && (n5 = null, o5 = false, i5 = [], e5.forEach(function(e6) {
          (n5 = a5._convMap.get(e6.conversationID)) && (t5 && n5.reduceUnreadCount() && (o5 = n5.type !== R3.CONV_TOPIC), n5.type === R3.CONV_TOPIC ? i5.push(e6) : n5.isLastMessageRevoked({ sequence: e6.sequence, time: e6.time }) && (n5.setLastMessageRevoked(true), n5.setLastMessageRevoker(e6.revoker), o5 = true));
        }), this.get(10).onMessageRevoked(i5), o5) && this.emitConvUpdate(true, false);
      } }, { key: "updateRevokerInfo", value: function(u5) {
        for (var e5 = /* @__PURE__ */ new Set(), t5 = 0; t5 < u5.length; t5++) {
          var n5 = u5[t5].revoker;
          e5.add(n5);
        }
        var o5 = d3(e5), i5 = this.get(4);
        return new Promise(function(c5) {
          i5.getUserProfile({ userIDList: o5 }).then(function(e6) {
            e6 = e6.data;
            if (!O3(e6) || 0 === e6.length)
              return c5(u5);
            var t6, n6 = {}, o6 = F2(e6);
            try {
              for (o6.s(); !(t6 = o6.n()).done; ) {
                var i6 = t6.value, a5 = i6.userID, s5 = i6.nick, r5 = i6.avatar;
                n6[a5] = { nick: s5, avatar: r5 };
              }
            } catch (e7) {
              o6.e(e7);
            } finally {
              o6.f();
            }
            u5.forEach(function(e7) {
              var t7 = e7.revoker;
              n6[t7] && (e7.revokerInfo.nick = n6[t7].nick || "", e7.revokerInfo.avatar = n6[t7].avatar || "");
            }), c5(u5);
          }).catch(function() {
            c5(u5);
          });
        });
      } }, { key: "isLastMessageRevoked", value: function(e5) {
        var t5 = false, n5 = e5.conversationID, o5 = e5.sequence, i5 = e5.time, a5 = this._convMap.get(n5);
        return a5 && (t5 = a5.type === R3.CONV_TOPIC ? this.get(10).isLastMessageRevoked({ topicID: n5.replace(R3.CONV_GROUP, ""), sequence: o5 }) : a5.isLastMessageRevoked({ sequence: o5, time: i5 })), M3.l("".concat(this._n, ".isLastMessageRevoked options:"), e5, "ret:".concat(t5)), t5;
      } }, { key: "onMessageDeleted", value: function(e5) {
        var t5 = this;
        if (0 !== e5.length) {
          var n5 = null;
          e5.forEach(function(e6) {
            (n5 = t5._msgListHandler.getLocalMsg(e6.conversationID, e6.ID)) && (n5.isDeleted = true), e6 !== n5 && (e6.isDeleted = true);
          });
          for (var e5 = e5[0].conversationID, o5 = this._msgListHandler.getLocalMsgList(e5), i5 = {}, a5 = o5.length - 1; 0 <= a5; a5--)
            if (!o5[a5].isDeleted) {
              i5 = o5[a5];
              break;
            }
          var s5, r5 = this._convMap.get(e5);
          r5 && (s5 = false, r5.lastMessage.lastSequence === i5.sequence && r5.lastMessage.lastTime === i5.time || (S3(i5) && (i5 = void 0), r5.updateLastMessage(i5), r5.type !== R3.CONV_TOPIC && (s5 = true), M3.l("".concat(this._n, ".onMessageDeleted. update convID:").concat(e5, " with lastMessage:"), r5.lastMessage)), e5.startsWith(R3.CONV_C2C) && this.updateUnreadCount(e5), s5) && this.emitConvUpdate(true, false);
        }
      } }, { key: "onMessageModified", value: function(e5) {
        var t5 = "".concat(this._n, ".onMessageModified"), n5 = e5.conversationType, o5 = e5.from, i5 = e5.to, a5 = e5.time, s5 = e5.sequence, r5 = e5.elements, c5 = e5.cloudCustomData, u5 = e5.messageVersion, l5 = this.getMyUserID(), d4 = "".concat(n5).concat(i5), l5 = (i5 === l5 && n5 === R3.CONV_C2C && (d4 = "".concat(n5).concat(o5)), this._msgListHandler.onMsgModified(d4, e5)), n5 = l5.isUpdated, l5 = l5.message, p5 = (true === n5 && this.emitOEvt(h4.MESSAGE_MODIFIED, [l5]), this._isTopicConv(d4));
        return null === l5 ? M3.l("".concat(t5, " message is null! options:"), e5) : M3.l("".concat(t5, " isUpdated:").concat(n5, " isTopicMessage:").concat(p5, " from:").concat(o5, " to:").concat(i5, " sequence:").concat(l5.sequence, " time:").concat(l5.time)), p5 ? this.get(10).onMessageModified(e5) : (n5 = this._convMap.get(d4)) && (o5 = n5.lastMessage) && o5.lastTime === a5 && o5.lastSequence === s5 && o5.version !== u5 && (M3.l("".concat(t5, " convID:").concat(d4, " lastMessage updated")), o5.type = r5[0].type, o5.payload = r5[0].content, o5.messageForShow = Jt2(o5.type, o5.payload, this.isIntl()), o5.cloudCustomData = c5, o5.version = u5, this.emitConvUpdate(true, false)), l5;
      } }, { key: "onNewGroupAtTips", value: function(e5) {
        var t5 = this, e5 = e5.dataList, n5 = null;
        e5.forEach(function(e6) {
          e6.groupAtTips ? n5 = e6.groupAtTips : e6.elements ? n5 = y2(y2({}, e6.elements), {}, { sync: true }) : e6.groupAtType && (n5 = y2(y2({}, e6), {}, { sync: true })), n5.__random = e6.random, n5.__sequence = e6.clientSequence, t5._tmpGroupAtTipsList.push(n5);
        }), M3.l("".concat(this._n, ".onNewGroupAtTips isReady:").concat(this._isReady), this._tmpGroupAtTipsList), this._isReady && this._handleGroupAtTipsList();
      } }, { key: "_handleGroupAtTipsList", value: function() {
        var a5, s5 = this;
        0 !== this._tmpGroupAtTipsList.length && (a5 = false, this._tmpGroupAtTipsList.forEach(function(e5) {
          var t5 = e5.groupID, n5 = e5.from, o5 = e5.topicID, o5 = void 0 === o5 ? void 0 : o5, i5 = e5.sync, i5 = void 0 !== i5 && i5;
          n5 !== s5.getMyUserID() && (N3(o5) ? (n5 = s5._convMap.get("".concat(R3.CONV_GROUP).concat(t5))) && (n5.updateGroupAtInfoList(e5), a5 = true) : ((t5 = s5._convMap.get("".concat(R3.CONV_GROUP).concat(o5))) && (t5.updateGroupAtInfoList(e5), s5.get(10).onAtInfoUpdated({ topicID: o5, groupAtInfoList: t5.groupAtInfoList })), S3(t5) && i5 && (s5.updateTopicConversation([{ conversationID: "".concat(R3.CONV_GROUP).concat(o5), type: R3.CONV_TOPIC }]), s5._convMap.get("".concat(R3.CONV_GROUP).concat(o5)).updateGroupAtInfoList(e5))));
        }), a5 && this.emitConvUpdate(true, false), this._tmpGroupAtTipsList.length = 0);
      } }, { key: "_checkNewConv", value: function(e5) {
        var t5 = this, n5 = [], o5 = [];
        e5.forEach(function(e6) {
          t5._convMap.has(e6.conversationID) || (e6.type === R3.CONV_C2C ? n5.push(e6.conversationID.replace(R3.CONV_C2C, "")) : e6.type === R3.CONV_GROUP && o5.push(e6.conversationID.replace(R3.CONV_GROUP, "")));
        }), 0 < n5.length && (this._onNewC2CConv(n5), n5 = null), 0 < o5.length && (this._onNewGroupConv(o5), o5 = null);
      } }, { key: "_onNewC2CConv", value: function(e5) {
        var t5 = this.get(6);
        return Promise.all([t5.getRemotePeerReadTime(e5), this._msgRemindHandler.getC2CMsgRemindType(e5), this._convGroupHandler.searchConvGroupAndMark(e5, 1)]);
      } }, { key: "_onNewGroupConv", value: function(e5) {
        var t5 = this.get(7);
        return t5 ? Promise.all([t5.getMsgRemindType(e5), this._convGroupHandler.searchConvGroupAndMark(e5, 2)]) : Promise.resolve();
      } }, { key: "_setStorageConvList", value: function() {
        var e5 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t5 = this.getLocalConvList().filter(function(e6) {
          return e6.type === R3.CONV_C2C || e6.type === R3.CONV_GROUP && e6.lastMessage.type !== R3.MSG_GRP_TIP;
        }).slice(0, 20).map(function(e6) {
          return { conversationID: e6.conversationID, type: e6.type, subType: e6.subType, lastMessage: e6.lastMessage, groupProfile: e6.groupProfile, userProfile: e6.userProfile };
        });
        this.get(13).setItem("conversationMap", t5, e5);
      } }, { key: "emitConvUpdate", value: function() {
        var e5 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n5 = this.getLocalConvList();
        t5 && (t5 = this.get(7)) && t5.updateGroupLastMessage(n5), e5 && (this.get(12).isPartialUpdatedConvs() ? (this._diffConvMap(this._convMapForDiff, this._convMap), 0 < this._partialUpdatedConvMap.size && (this.emitOEvt(h4.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate(), this._convMapForDiff.clear(), this._convMapForDiff = pt2(this._convMap, true)), 0 === this._convMapForDiff.size && (this._convMapForDiff = pt2(this._convMap, true))) : (this.emitOEvt(h4.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate()));
      } }, { key: "_diffConvMap", value: function(e5, t5) {
        var n5, o5 = F2(t5);
        try {
          for (o5.s(); !(n5 = o5.n()).done; ) {
            var i5 = j2(n5.value, 2), a5 = i5[0], s5 = i5[1];
            e5.has(a5) && JSON.stringify(s5) === e5.get(a5) || this._partialUpdatedConvMap.set(a5, s5);
          }
        } catch (e6) {
          o5.e(e6);
        } finally {
          o5.f();
        }
      } }, { key: "getPartialUpdatedConvs", value: function() {
        var e5 = d3(pt2(this._partialUpdatedConvMap, false).values());
        return this._partialUpdatedConvMap.clear(), e5;
      } }, { key: "getLocalConvList", value: function() {
        var t5 = this;
        return d3(this._convMap.values()).filter(function(e5) {
          return t5._isConvNeedShow(e5.conversationID);
        });
      } }, { key: "getLocalConversation", value: function(e5) {
        return this._convMap.get(e5);
      } }, { key: "hasLocalConversation", value: function(e5) {
        return this._convMap.has(e5);
      } }, { key: "getLocalOldestMessage", value: function(e5) {
        return this._msgListHandler.getLocalOldestMsg(e5);
      } }, { key: "syncConvList", value: function() {
        var o5 = this, e5 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], i5 = "syncConvList", a5 = new P3(i5);
        return this._pagingStatus === Gn && this._convMap.clear(), this._pagingGetConvList(e5).then(function(e6) {
          var t5 = en(o5._pagingGetCostList), n5 = $t2(o5._pagingGetCostList), n5 = (o5._pagingGetCostList.length = 0, o5._pagingStatus = Un, o5._diffAndDeleteConv(), o5.emitConvUpdate(true, false), o5._setStorageConvList(), o5._handleC2CPeerReadTime(), o5.emitIEvt(U3.CONV_SYNC_COMPLETED), "count:".concat(o5._convMap.size, " sum:").concat(n5, " avg:").concat(t5));
          return M3.l("".concat(o5._n, ".").concat(i5, ". ").concat(n5)), a5.setMessage(n5).end(), e6;
        }).catch(function(e6) {
          return o5._pagingStatus = bn, a5.setMessage(o5._pagingTs).setError(e6).end(), E4(e6);
        });
      } }, { key: "_diffAndDeleteConv", value: function() {
        var n5, o5 = this;
        this._isSyncCompleted() && (n5 = [], this._convMap.forEach(function(e5, t5) {
          !o5._pagingConvIDMap.has(t5) && o5._convIDFromUnreadDBMap.has(t5) && (o5._convMap.delete(t5), n5.push(t5));
        }), M3.l("".concat(this._n, "._diffAndDeleteConv list:").concat(n5)), n5 = null);
      } }, { key: "_pagingGetConvList", value: function() {
        var r5 = this, e5 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], c5 = "".concat(this._n, "._pagingGetConvList"), u5 = (M3.l("".concat(c5, " incrementalPullFlag:").concat(e5, " ts:").concat(this._pagingTs, " startIdx:").concat(this._pagingStartIdx) + " pinnedTs:".concat(this._pagingPinnedTs, " pinnedStartIdx:").concat(this._pagingPinnedStartIdx)), Date.now());
        return this._pagingStatus = Pn, this.req({ P: G2.PAGING_GET_CONV_LIST, data: { fromAccount: this.getMyUserID(), timeStamp: e5 ? this._pagingTs : 0, startIndex: e5 ? this._pagingStartIdx : 0, pinnedTimeStamp: e5 ? this._pagingPinnedTs : 0, pinnedStartIndex: e5 ? this._pagingPinnedStartIdx : 0, orderType: 1 } }).then(function(e6) {
          var e6 = e6.data, t5 = e6.completeFlag, n5 = e6.conversations, n5 = void 0 === n5 ? [] : n5, o5 = e6.timeStamp, i5 = e6.startIndex, a5 = e6.pinnedTimeStamp, s5 = e6.pinnedStartIndex, e6 = e6.groupItem;
          if (r5._pagingGetCostList.push(tn(u5, false)), M3.l("".concat(c5, " ok. completeFlag:").concat(t5, " count:").concat(n5.length, " cost:").concat(tn(u5))), r5._convGroupHandler.onConvGroupListSynced(e6), 0 < n5.length && (e6 = r5._getConvOptions(n5), r5._pagingConvIDMap = new Map([].concat(d3(r5._pagingConvIDMap), d3(e6.map(function(e7) {
            return [e7.conversationID, 1];
          })))), r5._updateLocalConvList({ conversationOptionsList: e6, isFromGetConversations: true, updateUnreadCount: true }), r5.isLoggedIn()) && r5.emitConvUpdate(), !r5._isReady) {
            if (!r5.isLoggedIn())
              return D2();
            r5.triggerReady();
          }
          return r5._pagingTs = o5, r5._pagingStartIdx = i5, r5._pagingPinnedTs = a5, r5._pagingPinnedStartIdx = s5, 1 !== t5 ? r5._pagingGetConvList() : (r5._handleGroupAtTipsList(), r5._convGroupHandler.getRemoteConvGroupList(), D2());
        }).catch(function(e6) {
          throw !r5.isLoggedIn() || r5._isReady || (M3.w("".concat(c5, " failed. error:"), e6), r5.triggerReady()), e6;
        });
      } }, { key: "_updateLocalConvList", value: function(e5) {
        var t5 = e5.isFromGetConversations, n5 = Date.now(), e5 = this._getTmpConvListMapping(e5).newConvList;
        this._convMap = new Map(this._sortConvList(d3(this._convMap))), t5 || this._updateUserOrGroupProfile(e5), M3.l("".concat(this._n, "._updateLocalConvList cost:").concat(tn(n5)));
      } }, { key: "_getTmpConvListMapping", value: function(e5) {
        for (var t5 = e5.conversationOptionsList, n5 = e5.isFromGetConversations, o5 = e5.isInstantMessage, i5 = e5.isUnreadC2CMessage, a5 = void 0 !== i5 && i5, s5 = e5.updateUnreadCount, r5 = [], c5 = [], u5 = this.get(7), l5 = this.get(8), d4 = this.isIntl(), p5 = this.isUsingChatCore(), _4 = 0, h5 = t5.length; _4 < h5; _4++) {
          var g5 = new xo(t5[_4], d4, p5), f4 = g5.conversationID, m4 = g5.type;
          if (!this._isNonExistentAccount(f4)) {
            if (this._convMap.has(f4)) {
              var v4 = this._convMap.get(f4);
              if (n5 && m4 !== R3.CONV_TOPIC) {
                this._convMap.set(f4, g5), m4 === R3.CONV_C2C ? g5.unreadCount = v4.unreadCount : m4 === R3.CONV_GROUP && (g5.groupProfile = JSON.parse(JSON.stringify(v4.groupProfile)));
                continue;
              }
              var I4 = ["unreadCount", "allowType", "adminForbidType", "payload"], M4 = (false === o5 && I4.push("lastMessage"), "boolean" == typeof o5 && I4.push("isPinned"), t5[_4].lastMessage), y3 = !N3(M4);
              y3 || t5[_4].type === R3.CONV_TOPIC || this._onLastMsgNotExist(t5[_4]), N3(o5) && y3 && null === v4.lastMessage.payload && (v4.lastMessage.payload = M4.payload), S3(v4.lastMessage.revoker) || (v4.lastMessage.revoker = null), dt2(v4, g5, I4, [null, void 0, "", 0, NaN]), true === s5 && v4.updateUnreadCount({ nextUnreadCount: g5.unreadCount, isFromGetConversations: n5, isUnreadC2CMessage: a5 }), o5 && y3 && (M4.payload && (v4.lastMessage.payload = M4.payload), v4.type === R3.CONV_GROUP) && (v4.lastMessage.nameCard = M4.nameCard, v4.lastMessage.nick = M4.nick), y3 && v4.lastMessage.cloudCustomData !== M4.cloudCustomData && (v4.lastMessage.cloudCustomData = M4.cloudCustomData || "");
            } else
              m4 === R3.CONV_GROUP && u5 ? (I4 = g5.groupProfile.groupID, (y3 = u5.getLocalGroupProfile(I4)) && (g5.groupProfile = y3, true === s5) && g5.updateUnreadCount({ nextUnreadCount: 0 })) : m4 === R3.CONV_C2C && (v4 = f4.replace(R3.CONV_C2C, ""), l5) && l5.isMyFriend(v4) && (g5.remark = l5.getFriendRemark(v4)), r5.push(g5), this._convMap.set(f4, g5);
            this._convMap.get(f4).type === R3.CONV_TOPIC && c5.push(this._convMap.get(f4));
          }
        }
        for (var C5 = this.get(10), T5 = 0, D3 = c5.length; T5 < D3; T5++) {
          var E5 = c5[T5], L4 = E5.conversationID, E5 = E5.groupAtInfoList;
          S3(E5) || C5.onAtInfoUpdated({ topicID: L4.replace(R3.CONV_GROUP, ""), groupAtInfoList: E5 });
        }
        return { newConvList: r5 };
      } }, { key: "_onLastMsgNotExist", value: function(e5) {
        new P3("lastMsgNotExist").setMessage(JSON.stringify(e5)).end();
      } }, { key: "_sortConvList", value: function(e5) {
        var t5 = [], n5 = [], o5 = [], i5 = [];
        return e5.forEach(function(e6) {
          (true === e6[1].isPinned ? S3(e6[1].lastMessage.lastTime) ? n5 : t5 : S3(e6[1].lastMessage.lastTime) ? i5 : o5).push(e6);
        }), t5.sort(function(e6, t6) {
          return t6[1].lastMessage.lastTime - e6[1].lastMessage.lastTime;
        }).concat(n5).concat(o5.sort(function(e6, t6) {
          return t6[1].lastMessage.lastTime - e6[1].lastMessage.lastTime;
        })).concat(i5);
      } }, { key: "_sortConvListAndEmitEvent", value: function() {
        this._convMap = new Map(this._sortConvList(d3(this._convMap))), this.emitConvUpdate(true, false);
      } }, { key: "_updateUserOrGroupProfile", value: function(e5) {
        var n5, o5, t5, i5, a5 = this;
        0 !== e5.length && (n5 = [], o5 = [], t5 = this.get(4), i5 = this.get(7), e5.forEach(function(e6) {
          var t6;
          e6.type === R3.CONV_C2C ? n5.push(e6.toAccount) : e6.type === R3.CONV_GROUP && (t6 = e6.toAccount, i5.hasLocalGroup(t6) ? e6.groupProfile = i5.getLocalGroupProfile(t6) : o5.push(t6));
        }), M3.l("".concat(this._n, "._updateUserOrGroupProfile userIDList:").concat(n5, " groupIDList:").concat(o5)), 0 < n5.length && t5.getUserProfile({ userIDList: n5 }).then(function(e6) {
          e6 = e6.data;
          O3(e6) ? e6.forEach(function(e7) {
            a5._doUpdateUserProfile("".concat(R3.CONV_C2C).concat(e7.userID), e7);
          }) : a5._doUpdateUserProfile("".concat(R3.CONV_C2C).concat(e6.userID), e6);
        }), 0 < o5.length) && i5.getGroupProfileAdvance({ groupIDList: o5, responseFilter: { groupBaseInfoFilter: ["Type", "Name", "FaceUrl"] } }).then(function(e6) {
          var e6 = e6.data.successGroupList, n6 = false;
          e6.forEach(function(e7) {
            var t6 = "".concat(R3.CONV_GROUP).concat(e7.groupID);
            a5._convMap.has(t6) && (t6 = a5._convMap.get(t6), dt2(t6.groupProfile, e7, [], [null, void 0, "", 0, NaN]), !t6.subType && e7.type && (t6.subType = e7.type), n6 = true);
          }), n6 && a5.emitConvUpdate();
        });
      } }, { key: "_doUpdateUserProfile", value: function(e5, t5) {
        this.hasLocalConversation(e5) && (this.getLocalConversation(e5).userProfile = t5, this.emitConvUpdate());
      } }, { key: "_getConvOptions", value: function(e5) {
        var n5 = this, o5 = [], e5 = e5.filter(function(e6) {
          var t5 = e6.type, e6 = e6.userID;
          return 1 === t5 && !n5._isNonExistentAccount(e6) || 2 === t5;
        }), i5 = this.getMyUserID(), e5 = e5.map(function(e6) {
          var t5;
          return N3(e6.lastMsg) && (e6.lastMsg = { elements: [] }), 1 === e6.type ? (t5 = { userID: e6.userID, nick: e6.peerNick, avatar: e6.peerAvatar }, o5.push(t5), { conversationID: "".concat(R3.CONV_C2C).concat(e6.userID), type: R3.CONV_C2C, lastMessage: { lastTime: e6.time, lastSequence: e6.sequence, fromAccount: e6.lastC2CMsgFromAccount, type: e6.lastMsg.elements[0] ? e6.lastMsg.elements[0].type : null, payload: e6.lastMsg.elements[0] ? n5._amendLayersOverLimitProp(e6.lastMsg.elements[0].content) : null, cloudCustomData: e6.lastMsg.cloudCustomData || "", isRevoked: 8 === e6.lastMessageFlag, onlineOnlyFlag: false, nick: "", nameCard: "", version: 0, isPeerRead: e6.lastC2CMsgFromAccount === i5 && e6.time <= e6.c2cPeerReadTime, revoker: e6.lastMsg.revokerInfo ? e6.lastMsg.revokerInfo.revoker : null }, unreadCount: 0, userProfile: new bo(t5), peerReadTime: e6.c2cPeerReadTime, isPinned: 1 === e6.isPinned, customData: e6.customMark || "", markList: Xt2(e6.standardMark), conversationGroupList: n5._convGroupHandler.getConvGroupListByID(e6.contactGroupId), remark: e6.friendRemark || "", messageRemindType: n5._transMsgRemindType(e6.messageRemindType) }) : { conversationID: "".concat(R3.CONV_GROUP).concat(e6.groupID), type: R3.CONV_GROUP, lastMessage: y2(y2({ lastTime: e6.time, lastSequence: e6.sequence, fromAccount: e6.msgGroupFromAccount }, n5._patchTypeAndPayload(e6)), {}, { cloudCustomData: e6.lastMsg.cloudCustomData || "", isRevoked: 2 === e6.lastMessageFlag, onlineOnlyFlag: false, nick: e6.senderNick || "", nameCard: e6.senderNameCard || "", revoker: e6.lastMsg.revokerInfo ? e6.lastMsg.revokerInfo.revoker : null }), groupProfile: new qo({ groupID: e6.groupID, name: e6.groupNick, avatar: e6.groupImage, type: e6.groupType, nextMessageSeq: e6.nextMessageSeq }), unreadCount: n5._computeGroupUnreadCount(e6), peerReadTime: 0, isPinned: 1 === e6.isPinned, version: 0, customData: e6.customMark || "", markList: Xt2(e6.standardMark), conversationGroupList: n5._convGroupHandler.getConvGroupListByID(e6.contactGroupId), messageRemindType: n5._transMsgRemindType(e6.messageRemindType) };
        });
        return 0 < o5.length && this.get(4).onConvProfileUpdated(o5), e5;
      } }, { key: "_transMsgRemindType", value: function(e5) {
        var t5 = "";
        return 0 === e5 ? t5 = R3.MSG_REMIND_ACPT_AND_NOTE : 1 === e5 ? t5 = R3.MSG_REMIND_DISCARD : 2 === e5 ? t5 = R3.MSG_REMIND_ACPT_NOT_NOTE : 3 === e5 && (t5 = R3.NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT), t5;
      } }, { key: "_computeGroupUnreadCount", value: function(e5) {
        var t5 = e5.unreadCount, e5 = e5.noUnreadCount, t5 = (void 0 === t5 ? 0 : t5) - (void 0 === e5 ? 0 : e5);
        return 0 < t5 ? t5 : 0;
      } }, { key: "_patchTypeAndPayload", value: function(e5) {
        var e5 = e5.lastMsg, t5 = e5.event, n5 = e5.elements, n5 = void 0 === n5 ? [] : n5, e5 = e5.groupTips, e5 = void 0 === e5 ? {} : e5;
        return N3(void 0 === t5 ? void 0 : t5) || S3(e5) ? { type: n5[0] ? n5[0].type : null, payload: n5[0] ? this._amendLayersOverLimitProp(n5[0].content) : null } : ((t5 = new Do(e5)).setElement({ type: R3.MSG_GRP_TIP, content: y2(y2({}, e5.elements), {}, { groupProfile: e5.groupProfile }) }), n5 = JSON.parse(JSON.stringify(t5.payload)), t5 = null, { type: R3.MSG_GRP_TIP, payload: n5 });
      } }, { key: "_amendLayersOverLimitProp", value: function(e5) {
        var t5 = e5.layersOverLimit;
        return 0 === t5 ? e5.layersOverLimit = false : 1 === t5 && (e5.layersOverLimit = true), e5;
      } }, { key: "getLocalMessageList", value: function(e5) {
        return this._msgListHandler.getLocalMsgList(e5);
      } }, { key: "deleteLocalMessage", value: function(e5) {
        e5 instanceof Do && this._msgListHandler.remove(e5);
      } }, { key: "onConvDeleted", value: function(e5) {
        O3(e5) && (e5 = e5.map(function(e6) {
          var t5 = e6.type, n5 = e6.userID, e6 = e6.groupID;
          return 1 === t5 ? "".concat(R3.CONV_C2C).concat(n5) : 2 === t5 ? "".concat(R3.CONV_GROUP).concat(e6) : void 0;
        }), M3.l("".concat(this._n, ".onConvDeleted convIDList:").concat(e5)), this.deleteLocalConvList(e5));
      } }, { key: "onConvPinnedStatus", value: function(e5, i5) {
        var a5, s5 = this;
        O3(e5) && (a5 = false, e5.forEach(function(e6) {
          var t5, n5 = e6.type, o5 = e6.userID, e6 = e6.groupID;
          1 === n5 ? t5 = s5.getLocalConversation("".concat(R3.CONV_C2C).concat(o5)) : 2 === n5 && (t5 = s5.getLocalConversation("".concat(R3.CONV_GROUP).concat(e6))), t5 && (M3.l("".concat(s5._n, ".onConvPinnedStatus convID:").concat(t5.conversationID, " localPinned:").concat(t5.isPinned, " remotePinned:").concat(i5)), i5 ? t5.isPinned || (t5.isPinned = true, a5 = true) : t5.isPinned && (t5.isPinned = false, a5 = true));
        }), a5) && this._sortConvListAndEmitEvent();
      } }, { key: "getMessageList", value: function(e5) {
        var r5 = this, c5 = e5.conversationID, t5 = e5.nextReqMessageID, e5 = e5.count, u5 = "".concat(this._n, ".getMessageList"), n5 = this.getLocalConversation(c5), o5 = "";
        if (n5 && n5.groupProfile && (o5 = n5.groupProfile.type), At2(o5))
          return M3.l("".concat(u5, " not available in ").concat(o5, ". convID:").concat(c5)), D2({ messageList: [], nextReqMessageID: "", isCompleted: true });
        (N3(e5) || 15 < e5) && (e5 = 15), t5 || this._isMeInCommunity(c5) || this.clearMemMsg(c5);
        var l5 = this._computeRemainingCount({ conversationID: c5, nextReqMessageID: t5 }), n5 = this._completedMap.has(c5);
        if (M3.l("".concat(u5, " convID:").concat(c5, " isEverCleared:").concat(this._isEverCleared(c5), " nextReqMessageID:").concat(t5) + " remainingCount:".concat(l5, " count:").concat(e5, " isCompleted:").concat(n5)), this._needGetHistory({ conversationID: c5, remainingCount: l5, count: e5 }))
          return this.getHistoryMessages({ conversationID: c5, nextReqMessageID: t5, count: 20 }).then(function(e6) {
            var t6 = e6.nextReqID, n6 = e6.storedMessageList, o6 = e6.assembledMessageList, e6 = e6.isPullingCompleted, i5 = r5._completedMap.has(c5), a5 = n6, s5 = (0 < l5 && (a5 = r5._msgListHandler.getLocalMsgList(c5).slice(0, n6.length + l5)), { nextReqMessageID: void 0, messageList: void 0, isCompleted: void 0 }), n6 = (r5._isEverCleared(c5) ? (s5.nextReqMessageID = t6, s5.messageList = o6, s5.isCompleted = e6) : (s5.nextReqMessageID = i5 ? "" : t6, s5.messageList = a5, s5.isCompleted = i5), s5.messageList.filter(function(e7) {
              return e7.isRevoked;
            }) || []), o6 = s5.messageList.map(function(e7) {
              return e7.sequence;
            });
            return M3.l("".concat(u5, " ret.nextReqMessageID:").concat(s5.nextReqMessageID, " ret.isCompleted:").concat(s5.isCompleted, " sequenceList:"), o6), O3(n6) && 0 !== n6.length ? r5.updateRevokerInfo(n6).then(function(e7) {
              return e7.forEach(function(t7) {
                var n7 = t7.revokerInfo;
                s5.messageList = s5.messageList.map(function(e8) {
                  return e8.ID === t7.ID && n7 && (e8.revokeReason = n7.reason || "", e8.revokerInfo = { userID: n7.revoker || e8.revoker, nick: n7.nick, avatar: n7.avatar }), e8;
                });
              }), T4(s5);
            }) : T4(s5);
          });
        this.modifyMessageList(c5);
        o5 = this._getMsgListFromMem({ conversationID: c5, nextReqMessageID: t5, count: e5 });
        return D2(o5);
      } }, { key: "_isEverCleared", value: function(e5) {
        return this._everClearedMap.has(e5);
      } }, { key: "_getMsgListFromMem", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.nextReqMessageID, e5 = e5.count, o5 = "".concat(this._n, "._getMsgListFromMem"), i5 = this._msgListHandler.getLocalMsgList(t5), a5 = i5.length, s5 = Gt2(t5), r5 = 0, c5 = { isCompleted: false, nextReqMessageID: "", messageList: [] }, e5 = (n5 ? (r5 = s5 ? i5.findIndex(function(e6) {
          return e6.ID === n5;
        }) : i5.findIndex(function(e6) {
          return e6.sequence + "" === n5;
        })) > e5 ? (c5.messageList = i5.slice(r5 - e5, r5), c5.nextReqMessageID = s5 ? i5[r5 - e5].ID : i5[r5 - e5].sequence + "") : (c5.messageList = i5.slice(0, r5), c5.isCompleted = true) : e5 < a5 ? (c5.messageList = i5.slice(r5 = a5 - e5, a5), c5.nextReqMessageID = s5 ? i5[r5].ID : i5[r5].sequence + "") : (c5.messageList = i5.slice(0, a5), c5.isCompleted = true), c5.messageList.map(function(e6) {
          return e6.sequence;
        }));
        return M3.l("".concat(o5, " convID:").concat(t5) + " ret.nextReqMessageID:".concat(c5.nextReqMessageID, " ret.isCompleted:").concat(c5.isCompleted, " sequenceList:").concat(e5)), c5;
      } }, { key: "getMessageListHopping", value: function(e5) {
        var t5, n5, o5 = e5.conversationID, i5 = e5.sequence, a5 = e5.time, s5 = e5.count, e5 = e5.direction, e5 = void 0 === e5 ? 0 : e5;
        return (N3(s5) || 15 < s5) && (s5 = 15), o5.startsWith(R3.CONV_C2C) ? (t5 = this.get(6), n5 = o5.replace(R3.CONV_C2C, ""), t5.getRoamingMessagesHopping({ peerAccount: n5, time: a5, count: s5, direction: e5 })) : o5.startsWith(R3.CONV_GROUP) ? (t5 = this.get(7), n5 = o5.replace(R3.CONV_GROUP, ""), t5.getRoamingMessagesHopping({ groupID: n5, sequence: i5, count: s5, direction: e5 })) : void 0;
      } }, { key: "_computeRemainingCount", value: function(e5) {
        var t5, n5 = e5.conversationID, o5 = e5.nextReqMessageID, e5 = this._msgListHandler.getLocalMsgList(n5), i5 = e5.length;
        return M3.l("".concat(this._n, "._computeRemainingCount convID:").concat(n5, " nextReqMessageID:").concat(o5, " length:").concat(i5)), o5 ? (t5 = 0, Gt2(n5) ? t5 = e5.findIndex(function(e6) {
          return e6.ID === o5;
        }) : Pt2(n5) && (t5 = -1 !== o5.indexOf("-") ? e5.findIndex(function(e6) {
          return e6.ID === o5;
        }) : e5.findIndex(function(e6) {
          return e6.sequence + "" === o5;
        })), -1 === t5 ? 0 : t5) : i5;
      } }, { key: "_needGetHistory", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.remainingCount, e5 = e5.count, o5 = this.getLocalConversation(t5), i5 = "";
        return o5 && o5.groupProfile && (i5 = o5.groupProfile.type), !(Ut2(t5) || At2(i5) || !this._isEverCleared(t5) && (o5 = n5 <= e5 && !this._completedMap.has(t5), M3.l("".concat(this._n, "._needGetHistory convID:").concat(t5, " ret:").concat(o5)), !o5));
      } }, { key: "_isTopicConv", value: function(e5) {
        e5 = e5.replace(R3.CONV_GROUP, "");
        return Nt2(e5);
      } }, { key: "getHistoryMessages", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5 = e5.conversationID, c5 = e5.count, e5 = e5.nextReqMessageID;
        return r5 === R3.CONV_SYSTEM ? D2() : (c5 = 20 < c5 ? 20 : 15, t5 = null, Gt2(r5) ? (s5 = 0, n5 = "", o5 = false, a5 = this._roamingMsgKeyAndTimeMap.has(r5), e5 && (o5 = true, a5 ? (s5 = this._roamingMsgKeyAndTimeMap.get(r5).lastMessageTime, n5 = this._roamingMsgKeyAndTimeMap.get(r5).messageKey) : (i5 = this._msgListHandler.findMessage(e5)) && (s5 = i5.time, M3.l("".concat(this._n, ".getHistoryMessages convID:").concat(r5, " isRelayInfoExisted:").concat(a5, " lastMessageTime:").concat(s5)))), (t5 = this.get(6)).getRoamingMessage({ conversationID: r5, peerAccount: r5.replace(R3.CONV_C2C, ""), count: c5, lastMessageTime: o5 ? s5 : 0, messageKey: o5 ? n5 : "" })) : Pt2(r5) ? (t5 = this.get(7)) ? (i5 = r5.replace(R3.CONV_GROUP, ""), a5 = null, this._convMap.has(r5) && !Nt2(i5) && (a5 = this._convMap.get(r5).lastMessage), s5 = 0, e5 ? s5 = Number(e5) : a5 && (s5 = a5.lastSequence), t5.getRoamingMessage({ conversationID: r5, groupID: i5, count: c5, sequence: s5 })) : E4({ code: k2.NO_MODULE }) : D2());
      } }, { key: "patchConvLastMessage", value: function(e5) {
        var t5, n5, o5 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], i5 = this.getLocalConversation(e5);
        i5 && (t5 = (n5 = i5.lastMessage).messageForShow, n5 = n5.payload, S3(t5) || S3(n5) || o5) && 0 !== (t5 = this._msgListHandler.getLocalMsgList(e5)).length && (n5 = t5[t5.length - 1], M3.l("".concat(this._n, ".patchConvLastMessage bForceUpdate:").concat(o5, " convID:").concat(e5, " payload:"), n5.payload), i5.updateLastMessage(n5));
      } }, { key: "onRoamingMessage", value: function() {
        for (var e5, t5, n5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], o5 = 1 < arguments.length ? arguments[1] : void 0, i5 = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2], a5 = 3 < arguments.length ? arguments[3] : void 0, s5 = o5.startsWith(R3.CONV_C2C) ? R3.CONV_C2C : R3.CONV_GROUP, r5 = null, c5 = [], o5 = [], u5 = 0, l5 = n5.length, d4 = s5 === R3.CONV_GROUP, p5 = this.getFileDownloadProxy(), _4 = this.getDownloadFileAuthKey(), h5 = O3(a5), g5 = this.get(17).getFileDNList(), f4 = function() {
          d4 ? --u5 : ++u5;
        }, m4 = function() {
          return d4 ? l5 <= u5 : u5 < l5;
        }, u5 = d4 ? n5.length - 1 : 0, l5 = d4 ? 0 : n5.length; m4(); f4())
          1 !== n5[u5].isPlaceMessage && ((r5 = new Do(n5[u5])).to = n5[u5].to, s5 !== R3.CONV_GROUP || N3(n5[u5].topicID) || (r5.to = n5[u5].topicID), r5.isSystemMessage = !!n5[u5].isSystemMessage, r5.conversationType = s5, e5 = 4 === n5[u5].event ? { type: R3.MSG_GRP_TIP, content: y2(y2({}, n5[u5].elements), {}, { groupProfile: n5[u5].groupProfile }) } : n5[u5].elements, d4 || r5.setNickAndAvatar({ nick: n5[u5].nick, avatar: n5[u5].avatar }), S3(e5) ? ((t5 = new P3("emptyMessageBody")).setMessage("from:".concat(r5.from, " to:").concat(r5.to, " sequence:").concat(r5.sequence, " event:").concat(n5[u5].event)), t5.setLevel("warning").end()) : (r5.setElement(e5, p5, _4, g5), r5.reInitialize(this.getMyUserID()), c5.push(r5), h5 && a5.push(r5)));
        return f4 = m4 = null, i5 ? (this._msgListHandler.unshift(c5, o5), c5 = null, o5) : c5;
      } }, { key: "findMessage", value: function(e5) {
        return this._msgListHandler.findMessage(e5);
      } }, { key: "_isMeInCommunity", value: function(e5) {
        var t5 = true;
        return this._isTopicConv(e5) && (e5 = jt2(e5.replace(R3.CONV_GROUP, "")), this.get(7).hasLocalGroup(e5) || (t5 = false, M3.l("".concat(this._n, "._isMeInCommunity groupID:").concat(e5, " ret:").concat(t5)))), t5;
      } }, { key: "deleteTopicRoamingInfo", value: function(e5) {
        var t5 = this;
        Ot2({ groupID: e5 }) && this._msgListHandler.getTopicConvIDList(e5).forEach(function(e6) {
          t5.clearMemMsg(e6);
        });
      } }, { key: "deleteGroupRoamingInfo", value: function(e5) {
        e5 = "".concat(R3.CONV_GROUP).concat(e5);
        0 < this._msgListHandler.getLocalMsgList(e5).length && this.clearMemMsg(e5);
      } }, { key: "setMessageRead", value: function(e5) {
        var t5 = e5.conversationID, n5 = this.getLocalConversation(t5), e5 = "".concat(this._n, ".setMessageRead");
        if (M3.l("".concat(e5, " convID:").concat(t5, " unreadCount:").concat(n5 ? n5.unreadCount : 0)), !n5)
          return D2();
        if (n5.type !== R3.CONV_GROUP && n5.type !== R3.CONV_TOPIC || S3(n5.groupAtInfoList) || this.deleteGroupAtTips(t5), 0 === n5.unreadCount)
          return D2();
        var o5 = this._msgListHandler.getLocalLastMsg(t5), i5 = n5.lastMessage.lastTime, a5 = this._msgListHandler.getLocalMaxTime(t5), a5 = (i5 < a5 && (M3.l("".concat(e5, " update lastMessageTime from ").concat(i5, " to ").concat(a5)), i5 = a5), this._msgListHandler.getLocalMaxSeq(t5)), s5 = n5.lastMessage.lastSequence, r5 = (s5 < a5 && (M3.l("".concat(e5, " update lastMessageSeq from ").concat(s5, " to ").concat(a5)), s5 = a5), n5.type === R3.CONV_TOPIC && N3(o5) && (e5 = this.get(10), o5 = jt2(a5 = t5.replace(R3.CONV_GROUP, "")), e5 = e5.getLocalTopic(o5, a5)) && (s5 = e5.nextMessageSeq - 1), null);
        switch (n5.type) {
          case R3.CONV_C2C:
            return (r5 = this.get(6)) ? r5.setMessageRead({ conversationID: t5, lastMessageTime: i5 }) : E4({ code: k2.NO_MODULE });
          case R3.CONV_GROUP:
          case R3.CONV_TOPIC:
            return (r5 = this.get(7)) ? r5.setMessageRead({ conversationID: t5, lastMessageSeq: s5 }) : E4({ code: k2.NO_MODULE });
          case R3.CONV_SYSTEM:
            return n5.unreadCount = 0, this.emitConvUpdate(true, false), D2();
          default:
            return D2();
        }
      } }, { key: "setAllMessageRead", value: function() {
        var t5, n5 = this, o5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, e5 = "setAllMessageRead", i5 = "".concat(this._n, ".").concat(e5), a5 = (o5.scope || (o5.scope = R3.READ_ALL_MSG), M3.l("".concat(i5, " options:"), o5), this._createSetAllMessageReadPack(o5));
        return 0 === a5.readAllC2CMessage && 0 === a5.groupMessageReadInfoList.length ? D2() : (t5 = new P3(e5), this.req({ P: G2.SET_ALL_MSG_READ, data: a5 }).then(function(e6) {
          e6 = e6.data, e6 = n5._handleAllMsgRead(e6);
          return t5.setMessage("scope:".concat(o5.scope, " failureGroups:").concat(JSON.stringify(e6))).end(), D2();
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.w("".concat(i5, " failed. error:"), e6), E4({ code: e6 && e6.code ? e6.code : k2.MSG_UNREAD_ALL_FAIL, message: e6 && e6.message ? e6.message : void 0 });
        }));
      } }, { key: "setConvCustomData", value: function(e5) {
        return this._convGroupHandler.setConvCustomData(e5);
      } }, { key: "markConv", value: function(e5) {
        return this._convGroupHandler.markConv(e5);
      } }, { key: "getConvGroupList", value: function() {
        return this._convGroupHandler.getLocalConvGroupList();
      } }, { key: "createConvGroup", value: function(e5) {
        return this._convGroupHandler.createConvGroup(e5);
      } }, { key: "deleteConvGroup", value: function(e5) {
        return this._convGroupHandler.deleteConvGroup(e5);
      } }, { key: "renameConvGroup", value: function(e5) {
        return this._convGroupHandler.renameConvGroup(e5);
      } }, { key: "addConvsToGroup", value: function(e5) {
        return this._convGroupHandler.addConvsToGroup(e5);
      } }, { key: "deleteConvsFromGroup", value: function(e5) {
        return this._convGroupHandler.deleteConvsFromGroup(e5);
      } }, { key: "onConvMarkUpdated", value: function(e5) {
        this._convGroupHandler.onConvMarkUpdated(e5);
      } }, { key: "onConvGroupCreated", value: function(e5) {
        this._convGroupHandler.onConvGroupCreated(e5);
      } }, { key: "onConvGroupDeleted", value: function(e5) {
        this._convGroupHandler.onConvGroupDeleted(e5);
      } }, { key: "onConvGroupNameUpdated", value: function(e5) {
        this._convGroupHandler.onConvGroupNameUpdated(e5);
      } }, { key: "onConvInGroupUpdated", value: function(e5) {
        this._convGroupHandler.onConvInGroupUpdated(e5);
      } }, { key: "onConvAddedToOrDeletedFromGroup", value: function(e5) {
        this._convGroupHandler.onConvAddedToOrDeletedFromGroup(e5);
      } }, { key: "_getConvLastMessageSeq", value: function(e5) {
        var t5 = this._msgListHandler.getLocalLastMsg(e5.conversationID), e5 = e5.lastMessage.lastSequence;
        return e5 = t5 && e5 < t5.sequence ? t5.sequence : e5;
      } }, { key: "_getConvLastMessageTime", value: function(e5) {
        var t5 = this._msgListHandler.getLocalLastMsg(e5.conversationID), e5 = e5.lastMessage.lastTime;
        return e5 = t5 && e5 < t5.time ? t5.time : e5;
      } }, { key: "_createSetAllMessageReadPack", value: function(e5) {
        var t5, n5 = { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, o5 = e5.scope, i5 = F2(this._convMap);
        try {
          for (i5.s(); !(t5 = i5.n()).done; ) {
            var a5, s5 = j2(t5.value, 2)[1];
            if (0 < s5.unreadCount)
              if (s5.type === R3.CONV_C2C && 0 === n5.readAllC2CMessage) {
                if (o5 === R3.READ_ALL_MSG)
                  n5.readAllC2CMessage = 1;
                else if (o5 === R3.READ_ALL_C2C_MSG) {
                  n5.readAllC2CMessage = 1;
                  break;
                }
              } else
                s5.type !== R3.CONV_GROUP || o5 !== R3.READ_ALL_GROUP_MSG && o5 !== R3.READ_ALL_MSG || (a5 = this._getConvLastMessageSeq(s5), n5.groupMessageReadInfoList.push({ groupID: s5.groupProfile.groupID, messageSequence: a5 }));
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        return n5;
      } }, { key: "onPushedAllMessageRead", value: function(e5) {
        this._handleAllMsgRead(e5);
      } }, { key: "_handleAllMsgRead", value: function(e5) {
        var t5 = e5.groupMessageReadInfoList, e5 = e5.readAllC2CMessage, t5 = this._parseGroupReadInfo(t5);
        return 1 <= this._updateAllConvUnreadCount({ readAllC2CMessage: e5 }) && this.emitConvUpdate(true, false), t5;
      } }, { key: "_parseGroupReadInfo", value: function(e5) {
        var t5 = [];
        if (e5 && e5.length)
          for (var n5 = 0, o5 = e5.length; n5 < o5; n5++) {
            var i5 = e5[n5], a5 = i5.groupID, s5 = i5.sequence, r5 = i5.retCode, i5 = i5.lastMessageSeq;
            N3(r5) ? this._remoteGroupReadSeqMap.set(a5, i5) : (this._remoteGroupReadSeqMap.set(a5, s5), 0 !== r5 && t5.push("".concat(a5, "-").concat(s5, "-").concat(r5)));
          }
        return t5;
      } }, { key: "_updateAllConvUnreadCount", value: function(e5) {
        var t5, n5 = e5.readAllC2CMessage, o5 = 0, i5 = F2(this._convMap);
        try {
          for (i5.s(); !(t5 = i5.n()).done; ) {
            var a5, s5, r5, c5, u5 = j2(t5.value, 2), l5 = u5[0], d4 = u5[1];
            1 <= d4.unreadCount && (1 === n5 && d4.type === R3.CONV_C2C ? (a5 = this._getConvLastMessageTime(d4), this.updateIsReadAfterReadReport({ conversationID: l5, lastMessageTime: a5 })) : d4.type === R3.CONV_GROUP && (s5 = l5.replace(R3.CONV_GROUP, ""), this._remoteGroupReadSeqMap.has(s5)) && (r5 = this._remoteGroupReadSeqMap.get(s5), c5 = this._getConvLastMessageSeq(d4), this.updateIsReadAfterReadReport({ conversationID: l5, remoteReadSequence: r5 }), r5 <= c5) && this._remoteGroupReadSeqMap.delete(s5), this.updateUnreadCount(l5, false)) && (o5 += 1);
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        return o5;
      } }, { key: "isRemoteRead", value: function(e5) {
        var t5, n5 = e5.conversationID, e5 = e5.sequence, o5 = n5.replace(R3.CONV_GROUP, ""), i5 = false;
        return this._remoteGroupReadSeqMap.has(o5) && (e5 <= (t5 = this._remoteGroupReadSeqMap.get(o5)) && (i5 = true, M3.l("".concat(this._n, ".isRemoteRead convID:").concat(n5, " msgSeq:").concat(e5, " remoteReadSeq:").concat(t5))), t5 + 10 <= e5) && this._remoteGroupReadSeqMap.delete(o5), i5;
      } }, { key: "updateIsReadAfterReadReport", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.lastMessageSeq, o5 = e5.lastMessageTime, i5 = this._msgListHandler.getLocalMsgList(t5);
        if (0 !== i5.length) {
          for (var a5, s5 = i5.length - 1; 0 <= s5; s5--)
            if (a5 = i5[s5], !(o5 && a5.time > o5 || n5 && a5.sequence > n5)) {
              if ("in" === a5.flow && a5.isRead)
                break;
              a5.setIsRead(true);
            }
        }
      } }, { key: "updateUnreadCount", value: function(e5) {
        var t5, n5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], o5 = false, i5 = this.getLocalConversation(e5), a5 = this._msgListHandler.getLocalMsgList(e5);
        if (i5)
          return (t5 = i5.unreadCount) !== (a5 = a5.filter(function(e6) {
            return !e6.isRead && !e6._onlineOnlyFlag && !e6.isDeleted;
          }).length) && (i5.unreadCount = a5, o5 = true, M3.l("".concat(this._n, ".updateUnreadCount from ").concat(t5, " to ").concat(a5, ", convID:").concat(e5)), true === n5) && this.emitConvUpdate(true, false), o5 && i5.type === R3.CONV_TOPIC && (t5 = i5.unreadCount, a5 = this.get(10), n5 = e5.replace(R3.CONV_GROUP, ""), a5.onUnreadCountUpdatedFromConv(n5, t5)), o5;
      } }, { key: "clearGroupAtInfoList", value: function(e5) {
        var t5, n5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], o5 = this.getLocalConversation(e5);
        o5 && 0 < o5.groupAtInfoList.length && (o5.clearGroupAtInfoList(), M3.l("".concat(this._n, ".clearGroupAtInfoList convID:").concat(e5)), o5.type === R3.CONV_TOPIC && (o5 = o5.groupAtInfoList, t5 = this.get(10), e5 = e5.replace(R3.CONV_GROUP, ""), t5.onAtInfoUpdated({ topicID: e5, groupAtInfoList: o5 })), true === n5) && this.emitConvUpdate(true, false);
      } }, { key: "updateReadReceiptInfo", value: function(e5) {
        var a5, s5, o5, r5 = this, t5 = e5.userID, i5 = void 0 === t5 ? void 0 : t5, t5 = e5.groupID, c5 = void 0 === t5 ? void 0 : t5, t5 = e5.readReceiptList, e5 = e5.timestamp, u5 = void 0 === e5 ? 0 : e5;
        S3(t5) || (a5 = [], N3(i5) ? N3(c5) || (s5 = "".concat(R3.CONV_GROUP).concat(c5), t5.forEach(function(e6) {
          var t6 = e6.tinyID, n5 = e6.clientTime, o6 = e6.random, i6 = e6.readCount, e6 = e6.unreadCount, t6 = "".concat(t6, "-").concat(n5, "-").concat(o6), n5 = r5._msgListHandler.getLocalMsg(s5, t6) || r5._msgListHandler.getHoppingMsg(s5, t6), o6 = { groupID: c5, messageID: t6, readCount: 0, unreadCount: 0 };
          n5 && (A3(i6) && (n5.readReceiptInfo.readCount = i6, o6.readCount = i6), A3(e6) && (n5.readReceiptInfo.unreadCount = e6, o6.unreadCount = e6), a5.push(o6));
        })) : (o5 = "".concat(R3.CONV_C2C).concat(i5), t5.forEach(function(e6) {
          var t6 = e6.tinyID, n5 = e6.clientTime, e6 = e6.random, t6 = "".concat(t6, "-").concat(n5, "-").concat(e6), n5 = r5._msgListHandler.getLocalMsg(o5, t6) || r5._msgListHandler.getHoppingMsg(o5, t6);
          n5 && !n5.readReceiptInfo.isPeerRead && (n5.readReceiptInfo.isPeerRead = true, n5.readReceiptInfo.timestamp = u5, a5.push({ userID: i5, messageID: t6, isPeerRead: true, timestamp: u5 }));
        })), 0 < a5.length && this.emitOEvt(h4.MESSAGE_READ_RECEIPT_RECEIVED, a5));
      } }, { key: "updateIsRead", value: function(e5) {
        var t5 = this.getLocalConversation(e5), n5 = this.getLocalMessageList(e5);
        if (t5 && 0 !== n5.length && !Ut2(t5.type)) {
          for (var o5 = [], i5 = 0, a5 = n5.length; i5 < a5; i5++)
            "in" !== n5[i5].flow ? "out" !== n5[i5].flow || n5[i5].isRead || n5[i5].setIsRead(true) : o5.push(n5[i5]);
          var s5 = 0;
          s5 = t5.type === R3.CONV_C2C ? (e5 = o5.slice(-t5.unreadCount).filter(function(e6) {
            return e6.isRevoked;
          }).length, o5.length - t5.unreadCount - e5) : o5.length - t5.unreadCount;
          for (var r5 = 0; r5 < s5 && !o5[r5].isRead; r5++)
            o5[r5].setIsRead(true);
        }
      } }, { key: "deleteGroupAtTips", value: function(e5) {
        var t5, n5, o5, i5 = this, a5 = "".concat(this._n, ".deleteGroupAtTips"), s5 = (M3.l("".concat(a5)), this._convMap.get(e5));
        return !s5 || 0 === (t5 = s5.groupAtInfoList).length ? Promise.resolve() : (s5 = void 0, e5.startsWith(R3.CONV_GROUP) && (s5 = e5.replace(R3.CONV_GROUP, "")), n5 = d3(t5), (Ot2({ groupID: s5 }) || Nt2(s5)) && 0 === (n5 = t5.filter(function(e6) {
          return !e6.atTypeArray.includes(R3.CONV_AT_ALL);
        })).length ? (this.clearGroupAtInfoList(e5, false), Promise.resolve()) : (o5 = this.getMyUserID(), this.req({ P: G2.DEL_GROUP_AT_TIPS, data: { messageListToDelete: n5.map(function(e6) {
          return { from: e6.from, to: o5, messageSeq: e6.__sequence, messageRandom: e6.__random, groupID: N3(e6.topicID) ? e6.groupID : e6.topicID };
        }) } }).then(function() {
          return M3.l("".concat(a5, " ok. count:").concat(t5.length)), i5.clearGroupAtInfoList(e5, false), Promise.resolve();
        }).catch(function(e6) {
          return M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        })));
      } }, { key: "appendToMessageList", value: function(e5) {
        return this._msgListHandler.pushIn(e5);
      } }, { key: "setMessageRandom", value: function(e5) {
        this._sll.set(e5.random);
      } }, { key: "deleteMessageRandom", value: function(e5) {
        this._sll.delete(e5.random);
      } }, { key: "pushIntoMessageList", value: function(e5, t5, n5) {
        return !(!this._msgListHandler.pushIn(t5, n5) || this._sll.has(t5.random) && !n5 || (e5.push(t5), 0));
      } }, { key: "revoke", value: function(e5, t5, n5) {
        return this._msgListHandler.revoke(e5, t5, n5);
      } }, { key: "getPeerReadTime", value: function(e5) {
        return this._peerReadTimeMap.get(e5);
      } }, { key: "recordPeerReadTime", value: function(e5, t5) {
        (!this._peerReadTimeMap.has(e5) || this._peerReadTimeMap.get(e5) < t5) && this._peerReadTimeMap.set(e5, t5);
      } }, { key: "updateMsgIsPeerReadProp", value: function(e5, t5) {
        var n5;
        e5.startsWith(R3.CONV_C2C) && 0 < t5 && (0 < (n5 = this._msgListHandler.updateMsgIsPeerReadProp(e5, t5)).length && this.emitOEvt(h4.MESSAGE_READ_BY_PEER, n5), this._convMap.has(e5)) && !S3(n5 = this._convMap.get(e5).lastMessage) && n5.fromAccount === this.getMyUserID() && n5.lastTime <= t5 && !n5.isPeerRead && (n5.isPeerRead = true, this.emitConvUpdate(true, false));
      } }, { key: "updateMsgIsModifiedProp", value: function(e5) {
        this._msgListHandler.updateMsgIsModifiedProp(e5);
      } }, { key: "setCompleted", value: function(e5) {
        M3.l("".concat(this._n, ".setCompleted convID:").concat(e5)), this._completedMap.set(e5, true);
      } }, { key: "updateRoamingMsgKeyAndTime", value: function(e5, t5, n5) {
        this._roamingMsgKeyAndTimeMap.set(e5, { messageKey: t5, lastMessageTime: n5 });
      } }, { key: "getConvList", value: function(t5) {
        var n5, o5 = this, i5 = "".concat(this._n, ".").concat("getConvList"), e5 = "pagingStatus:".concat(this._pagingStatus, ", local conversation count:").concat(this._convMap.size, ", options:").concat(JSON.stringify(t5));
        return M3.l("".concat(i5, ". ").concat(e5)), this._pagingStatus === bn ? ((n5 = new P3("getConvList")).setMessage(e5), this.syncConvList().then(function() {
          n5.end();
          var e6 = o5._getConvList(t5);
          return T4({ conversationList: e6, isSyncCompleted: o5._isSyncCompleted() });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : (e5 = this._getConvList(t5), M3.l("".concat(i5, ". returned conversation count:").concat(e5.length)), D2({ conversationList: e5, isSyncCompleted: this._isSyncCompleted() }));
      } }, { key: "_getConvList", value: function(t5) {
        var n5, o5, i5, a5, s5, r5 = this;
        return N3(t5) ? this.getLocalConvList() : O3(t5) ? 0 === t5.length ? [] : this.getLocalConvList().filter(function(e5) {
          return t5.includes(e5.conversationID);
        }) : m3(t5) ? (n5 = t5.type, o5 = t5.markType, i5 = t5.groupName, a5 = t5.hasUnreadCount, s5 = t5.hasGroupAtInfo, this.getLocalConvList().filter(function(e5) {
          return r5._filterType(e5, n5) && r5._filterMarkType(e5, o5) && r5._filterGroupName(e5, i5) && r5._filterUnreadCount(e5, a5) && r5._filterGroupAtInfo(e5, s5);
        })) : [];
      } }, { key: "_filterType", value: function(e5, t5) {
        return t5 !== R3.CONV_C2C && t5 !== R3.CONV_GROUP || e5.type === t5;
      } }, { key: "_filterGroupName", value: function(e5, t5) {
        return !C4(t5) || ("" === t5 ? 0 === e5.conversationGroupList.length : e5.conversationGroupList.includes(t5));
      } }, { key: "_filterMarkType", value: function(e5, t5) {
        return !A3(t5) || (0 === t5 ? 0 === e5.markList.length : e5.markList.includes(t5));
      } }, { key: "_filterUnreadCount", value: function(e5, t5) {
        var n5 = true;
        return true === t5 ? n5 = 1 <= e5.unreadCount : false === t5 && (n5 = 0 === e5.unreadCount), n5;
      } }, { key: "_filterGroupAtInfo", value: function(e5, t5) {
        var n5 = true;
        return true === t5 ? n5 = 1 <= e5.groupAtInfoList.length : false === t5 && (n5 = 0 === e5.groupAtInfoList.length), n5;
      } }, { key: "_handleC2CPeerReadTime", value: function() {
        var e5, t5 = F2(this._convMap);
        try {
          for (t5.s(); !(e5 = t5.n()).done; ) {
            var n5 = j2(e5.value, 2), o5 = n5[0], i5 = n5[1];
            i5.type === R3.CONV_C2C && this.recordPeerReadTime(o5, i5.peerReadTime);
          }
        } catch (e6) {
          t5.e(e6);
        } finally {
          t5.f();
        }
      } }, { key: "_isPagingGetGroupListCompleted", value: function() {
        var e5 = this.get(7);
        return !e5 || e5.isPagingGetCompleted();
      } }, { key: "_getLocalGroupCount", value: function() {
        var e5 = this.get(7);
        return e5 ? e5.getLocalGroupList().length : 0;
      } }, { key: "_hasLocalGroup", value: function(e5) {
        var t5 = this.get(7);
        return !!t5 && t5.hasLocalGroup(e5.replace(R3.CONV_GROUP, ""));
      } }, { key: "getConversationProfile", value: function(o5) {
        var i5, a5 = this, s5 = false;
        if (this._convMap.has(o5) ? i5 = this._convMap.get(o5) : (i5 = new xo({ conversationID: o5, type: Gt2(o5) ? R3.CONV_C2C : R3.CONV_GROUP }, this.isIntl(), this.isUsingChatCore()), s5 = true), i5._isInfoCompleted || i5.type === R3.CONV_SYSTEM)
          return D2({ conversation: i5 });
        if (Pt2(o5)) {
          if (!this.get(7))
            return E4({ code: k2.NO_MODULE });
          if (!this._hasLocalGroup(o5))
            return D2({ conversation: i5 });
        }
        var r5 = "".concat(this._n, ".").concat("getConversationProfile"), c5 = new P3("getConversationProfile");
        return M3.l("".concat(r5, ". convID:").concat(o5, " remark:").concat(i5.remark, " lastMessage:"), i5.lastMessage), this._getUserOrGroupProfile(i5).then(function(e5) {
          c5.setMessage("convID:".concat(o5, " unreadCount:").concat(e5.data.conversation.unreadCount)).end();
          var t5, n5 = a5.get(8);
          if (n5 && i5.type === R3.CONV_C2C && (t5 = o5.replace(R3.CONV_C2C, ""), n5.isMyFriend(t5)) && (n5 = n5.getFriendRemark(t5), i5.remark !== n5) && (i5.remark = n5, M3.l("".concat(r5, ". convID:").concat(o5, " patch remark:").concat(i5.remark))), M3.l("".concat(r5, " ok. isNewConv:").concat(s5, " convID:").concat(o5)), s5) {
            if (i5.type === R3.CONV_C2C)
              return a5._onNewC2CConv([o5.replace(R3.CONV_C2C, "")]).then(function() {
                return D2({ conversation: i5 });
              });
            if (i5.type === R3.CONV_GROUP)
              return a5._onNewGroupConv([o5.replace(R3.CONV_GROUP, "")]).then(function() {
                return D2({ conversation: i5 });
              });
          }
          return e5;
        }).catch(function(e5) {
          return c5.setError(e5).setMessage("convID:".concat(o5)).end(), M3.e("".concat(r5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "_getUserOrGroupProfile", value: function(t5) {
        var n5 = this;
        return t5.type === R3.CONV_C2C ? this.get(4).getUserProfile({ userIDList: [t5.toAccount] }).then(function(e5) {
          e5 = e5.data;
          return 0 === e5.length ? E4({ code: k2.USER_OR_GRP_NOT_FOUND }) : (t5.userProfile = e5[0], t5._isInfoCompleted = true, n5._insertConvAfterTopmost(t5), D2({ conversation: t5 }));
        }) : this.get(7).getGroupProfile({ groupID: t5.toAccount }).then(function(e5) {
          return t5.groupProfile = e5.data.group, t5._isInfoCompleted = true, n5._insertConvAfterTopmost(t5), D2({ conversation: t5 });
        });
      } }, { key: "_insertConvAfterTopmost", value: function(e5) {
        var t5, n5;
        e5 instanceof xo && !this._convMap.has(e5.conversationID) && (n5 = (t5 = d3(this._convMap)).findIndex(function(e6) {
          return false === e6[1].isPinned;
        }), t5.splice(n5, 0, [e5.conversationID, e5]), this._convMap = new Map(t5), this._setStorageConvList(), this.emitConvUpdate(true, false));
      } }, { key: "_onProfileUpdated", value: function(e5) {
        var n5 = this;
        e5.data.forEach(function(e6) {
          var t5 = e6.userID;
          t5 === n5.getMyUserID() ? n5._onMyProfileModified({ latestNick: e6.nick, latestAvatar: e6.avatar }) : (t5 = n5._convMap.get("".concat(R3.CONV_C2C).concat(t5))) && (t5.userProfile = e6);
        });
      } }, { key: "_onCloudConfig", value: function(e5) {
        "0" === this.getCloudConfig("pull_on_invite") && (this._bPullOnInvite = false), M3.l("".concat(this._n, "._onCloudConfig bPullOnInvite:").concat(this._bPullOnInvite));
      } }, { key: "disableMsgPullOnInvite", value: function() {
        this._bPullOnInvite = false;
      } }, { key: "_isSyncCompleted", value: function() {
        return this._pagingStatus === Un;
      } }, { key: "_errorLog", value: function(e5, t5, n5, o5) {
        var i5 = new Error("Params validate failed."), a5 = "".concat(this.getErrMsg("API_REFER")).concat(e5);
        throw M3.w("[".concat(e5, "] | ").concat(t5, " | ").concat(this.getErrMsg(n5, o5), ", ").concat(a5)), M3.e("[".concat(e5, "] Invalid ").concat(t5, ": type check failed for ").concat(t5, ".")), i5;
      } }, { key: "_isValidConvID", value: function(e5) {
        return Gt2(e5) || Pt2(e5) || Ut2(e5);
      } }, { key: "deleteConversation", value: function(e5) {
        var t5 = this, n5 = "deleteConversation";
        return C4(e5) || st2(e5) || this._errorLog(n5, "options", "StringOrObjectRequiredLog"), C4(e5) ? (this._isValidConvID(e5) || this._errorLog(n5, "options", "InvalidConversationID", e5), M3.l("".concat(this._n, ".").concat(n5, " convID:").concat(e5)), this.deleteConvList({ conversationIDList: [e5], flag: 1 })) : (O3(e5.conversationIDList) || this._errorLog(n5, "conversationIDList", "ArrayRequiredLog"), 0 === e5.conversationIDList.length && this._errorLog(n5, "conversationIDList", "NonEmptyArrayLog"), e5.conversationIDList.forEach(function(e6) {
          t5._isValidConvID(e6) || t5._errorLog(n5, "conversationIDList", "InvalidConversationID", e6);
        }), "clearHistoryMessage" in e5 && "boolean" != typeof e5.clearHistoryMessage && this._errorLog(n5, "clearHistoryMessage", "BooleanRequiredLog"), 100 < e5.conversationIDList.length && (e5.conversationIDList = e5.conversationIDList.slice(0, 100)), this.deleteConvList(e5));
      } }, { key: "deleteConvList", value: function(e5) {
        var t5 = e5.conversationIDList, t5 = void 0 === t5 ? [] : t5, n5 = e5.clearHistoryMessage, n5 = void 0 === n5 || n5, e5 = e5.flag, o5 = void 0 === e5 ? 0 : e5, i5 = "".concat(this._n, ".").concat("deleteConvList"), e5 = "convIDList:".concat(t5, " clearHistoryMessage:").concat(n5), a5 = (M3.l("".concat(i5, " ").concat(e5)), new P3("deleteConvList"));
        return a5.setMessage(e5), Promise.all([this.rmLocalOnlyConvList(t5), this.rmLocalAndRemoteConvList(t5, n5)]).then(function(e6) {
          a5.end();
          e6 = [].concat(d3(e6[0]), d3(e6[1]));
          return 0 === e6.length ? E4(new L3({ code: k2.CONV_NOT_FOUND })) : (M3.l("".concat(i5, " ok")), D2(1 === o5 ? { conversationID: e6[0] } : { conversationIDList: e6 }));
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "rmLocalOnlyConvList", value: function(e5) {
        var n5 = this;
        return e5.filter(function(e6) {
          var t5;
          return !!n5._convMap.has(e6) && ((t5 = n5.getLocalConversation(e6).type) !== R3.CONV_GROUP || n5._hasLocalGroup(e6) ? t5 === R3.CONV_SYSTEM && (n5.get(7).deleteGroupSystemNotice({ messageList: n5._msgListHandler.getLocalMsgList(e6) }), n5.deleteLocalConv(e6), true) : (n5.deleteLocalConv(e6), true));
        });
      } }, { key: "rmLocalAndRemoteConvList", value: function(e5, t5) {
        var n5 = this, o5 = { fromAccount: this.getMyUserID(), conversationList: [], clearHistoryMessage: t5 ? 1 : 0 };
        return e5.forEach(function(e6) {
          var t6;
          n5._convMap.has(e6) && ((t6 = n5.getLocalConversation(e6).type) === R3.CONV_C2C ? o5.conversationList.push({ toAccount: e6.replace(t6, ""), type: 1 }) : t6 === R3.CONV_GROUP && n5._hasLocalGroup(e6) && o5.conversationList.push({ toGroupID: e6.replace(t6, ""), type: 2 }));
        }), 0 === o5.conversationList.length ? [] : this.req({ P: G2.DEL_CONV, data: o5 }).then(function(e6) {
          var t6 = [];
          return 0 < e6.data.resultList.length && e6.data.resultList.map(function(e7) {
            0 === e7.code && (e7 = 1 === e7.type ? "".concat(R3.CONV_C2C).concat(e7.to) : "".concat(R3.CONV_GROUP).concat(e7.groupID), t6.push(e7));
          }), n5.deleteLocalConvList(t6), t6;
        });
      } }, { key: "setConvDraft", value: function(e5) {
        var t5 = e5.conversationID, e5 = e5.draftText, n5 = "".concat(this._n, ".").concat("setConvDraft");
        return M3.l("".concat(n5, " convID:").concat(t5, " draftText:").concat(e5)), this._convMap.has(t5) ? ((n5 = this._convMap.get(t5)).setDraftText(e5), this.emitConvUpdate(), D2({ code: 0, conversation: n5 })) : E4({ code: k2.CONV_NOT_FOUND });
      } }, { key: "clearHistoryMessage", value: function(t5) {
        var n5 = this, e5 = { fromAccount: this.getMyUserID(), toAccount: void 0, type: void 0, toGroupID: void 0 };
        if (!this._convMap.has(t5))
          return E4({ code: k2.CONV_NOT_FOUND });
        var o5 = this._convMap.get(t5).type;
        if (o5 === R3.CONV_C2C)
          e5.type = 1, e5.toAccount = t5.replace(R3.CONV_C2C, "");
        else {
          if (o5 !== R3.CONV_GROUP)
            return o5 === R3.CONV_SYSTEM ? (this.get(7).deleteGroupSystemNotice({ messageList: this._msgListHandler.getLocalMsgList(t5) }), D2({ conversationID: t5 })) : E4({ code: k2.CONV_UN_RECORDED_TYPE });
          e5.type = 2, e5.toGroupID = t5.replace(R3.CONV_GROUP, "");
        }
        var i5 = "".concat(this._n, ".").concat("clearHistoryMessage"), a5 = new P3("clearHistoryMessage");
        return a5.setMessage("convID:".concat(t5)), M3.l("".concat(i5, ". convID:").concat(t5)), this.setMessageRead({ conversationID: t5 }).then(function() {
          return n5.req({ P: G2.CLEAR_HISTORY_MSG, data: e5 });
        }).then(function() {
          a5.end(), M3.l("".concat(i5, " ok")), n5.clearMemMsg(t5);
          var e6 = n5.getLocalConversation(t5);
          return e6 && (e6.updateLastMessage(), n5._sortConvListAndEmitEvent()), D2({ conversationID: t5 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "pinConversation", value: function(e5) {
        var t5, n5, o5, i5 = this, a5 = e5.conversationID, s5 = e5.isPinned, r5 = this.getLocalConversation(a5);
        return r5 && r5.isPinned === s5 ? D2({ conversationID: a5 }) : Ut2(a5) ? (r5 && (r5.isPinned = s5), this._sortConvListAndEmitEvent(), D2({ conversationID: a5 })) : (e5 = null, Gt2(a5) ? e5 = { type: 1, toAccount: a5.replace(R3.CONV_C2C, "") } : Pt2(a5) && (e5 = { type: 2, groupID: a5.replace(R3.CONV_GROUP, "") }), null === e5 ? E4({ code: k2.INVALID_CONV_ID }) : (t5 = "".concat(this._n, ".").concat("pinConversation"), n5 = "convID:".concat(a5, " isPinned:").concat(s5), (o5 = new P3("pinConversation")).setMessage(n5), M3.l("".concat(t5, ". ").concat(n5)), this.req({ P: G2.PIN_CONV, data: { fromAccount: this.getMyUserID(), operationType: true === s5 ? 1 : 2, itemList: [e5] } }).then(function() {
          return o5.end(), M3.l("".concat(t5, " ok")), r5 ? r5.isPinned !== s5 && (r5.isPinned = s5) : i5._convMap.set(a5, new xo({ conversationID: a5, type: Gt2(a5) ? R3.CONV_C2C : R3.CONV_GROUP, isPinned: s5 }, i5.isIntl(), i5.isUsingChatCore())), i5._sortConvListAndEmitEvent(), T4({ conversationID: a5 });
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })));
      } }, { key: "setMessageRemindType", value: function(e5) {
        return this._msgRemindHandler.set(e5);
      } }, { key: "patchMsgRemindType", value: function(e5) {
        var t5 = e5.ID, n5 = e5.isC2CConversation, o5 = e5.messageRemindType, i5 = false, n5 = this.getLocalConversation("".concat(n5 ? R3.CONV_C2C : R3.CONV_GROUP).concat(t5));
        return n5 && n5.messageRemindType !== o5 && (n5.messageRemindType = o5, i5 = true), M3.l("".concat(this._n, ".patchMsgRemindType options:"), e5, "ret:".concat(i5)), i5;
      } }, { key: "onC2CMsgRemindTypeFetched", value: function(e5) {
        var n5, o5 = this;
        O3(e5) && 0 < e5.length && (n5 = 0, e5.forEach(function(e6) {
          var t5 = e6.userID, e6 = e6.muteFlag, e6 = o5._transMsgRemindType(e6);
          true === o5.patchMsgRemindType({ ID: t5, isC2CConversation: true, messageRemindType: e6 }) && (n5 += 1);
        }), M3.l("".concat(this._n, ".onC2CMsgRemindTypeFetched updateCount:").concat(n5)), 1 <= n5) && this.emitConvUpdate(true, false);
      } }, { key: "onC2CMsgRemindTypeSynced", value: function(e5) {
        var n5 = this, o5 = "".concat(this._n, ".onC2CMsgRemindTypeSynced");
        e5.dataList.forEach(function(e6) {
          var t5;
          S3(e6.muteNotificationsSync) || (t5 = (e6 = e6.muteNotificationsSync).to, e6 = e6.muteFlag, e6 = n5._transMsgRemindType(e6), n5.patchMsgRemindType({ ID: t5, isC2CConversation: !(t5 = 0), messageRemindType: e6 }) && (t5 += 1), M3.l("".concat(o5, " updateCount:").concat(t5)), 1 <= t5 && n5.emitConvUpdate(true, false));
        });
      } }, { key: "onGroupMsgRemindTypeUpdated", value: function(e5) {
        this._msgRemindHandler.onGroupMsgRemindTypeUpdated(e5);
      } }, { key: "deleteLocalConv", value: function(e5) {
        var t5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n5 = this._convMap.has(e5);
        M3.l("".concat(this._n, ".deleteLocalConv convID:").concat(e5, " has:").concat(n5)), n5 && (this._convMap.delete(e5), this._convMapForDiff.delete(e5), this.clearMemMsg(e5), this._setStorageConvList(true), t5) && (n5 = !this._isTopicConv(e5), this.emitConvUpdate(n5, false));
      } }, { key: "pullMsgOnInvite", value: function(e5) {
        var t5, n5, o5, i5, a5, s5 = this.get(7);
        s5 && (t5 = "".concat(this._n, ".pullMsgOnInvite"), M3.l("".concat(t5, " flag:").concat(this._bPullOnInvite)), this._bPullOnInvite) && (a5 = this.getLocalLastMessage(e5), n5 = this.getLocalSecondLastMessage(e5), i5 = o5 = 1, a5 && (o5 = a5.sequence), n5 && (i5 = n5.sequence), a5 = s5.getGroupRemoteLastSeq(e5.replace(R3.CONV_GROUP, "")), M3.l("".concat(t5, " convID:").concat(e5, " localLastSeq:").concat(o5, " localSecondLastSeq:").concat(i5, " remoteLastSeq:").concat(a5)), this.clearMemMsg(e5), 1 < o5 - i5 ? this._recursiveGetMsgList([], e5, false, o5, i5) : 1 < a5 - o5 && this._recursiveGetMsgList([], e5, true, a5, o5));
      } }, { key: "_recursiveGetMsgList", value: function(i5, a5, s5, r5, c5, e5) {
        var u5 = this;
        this.getMessageList({ conversationID: a5, nextReqMessageID: e5 }).then(function(e6) {
          var e6 = e6.data, t5 = e6.messageList, n5 = e6.isCompleted, e6 = e6.nextReqMessageID, o5 = t5.filter(function(e7) {
            return s5 ? e7.sequence > c5 && e7.sequence <= r5 : e7.sequence > c5 && e7.sequence < r5;
          });
          i5.unshift.apply(i5, d3(o5)), !n5 && 0 < t5.length && t5[0].sequence > c5 && i5.length < 60 ? u5._recursiveGetMsgList(i5, a5, s5, r5, c5, e6) : u5._emitMsgReceived(a5, i5);
        });
      } }, { key: "_emitMsgReceived", value: function(e5, t5) {
        var n5, o5, i5 = this;
        0 < t5.length && (t5 = t5.filter(function(t6, e6, n6) {
          return e6 === n6.findIndex(function(e7) {
            return e7.sequence === t6.sequence;
          });
        }), n5 = this.hasLocalConversation(e5), o5 = t5.map(function(e6) {
          return e6.sequence;
        }), M3.l("".concat(this._n, "._emitMsgReceived convID:").concat(e5, " has:").concat(n5, " count:").concat(o5.length, " sequenceList:"), o5), this.emitOEvt(h4.MESSAGE_RECEIVED, t5), n5 ? this.patchConvLastMessage(e5, true) : this.getConversationProfile(e5).then(function() {
          i5.patchConvLastMessage(e5, true);
        }));
      } }, { key: "deleteLocalConvList", value: function(e5) {
        var t5 = this, n5 = false;
        e5.forEach(function(e6) {
          t5._convMap.has(e6) && (t5.deleteLocalConv(e6, false), n5 = true);
        }), M3.l("".concat(this._n, ".deleteLocalConvList convID:").concat(e5, " isConvIDExisted:").concat(n5)), n5 && this.emitConvUpdate(true, false);
      } }, { key: "isMessageSentByCurrentInstance", value: function(e5) {
        return !(!this._msgListHandler.hasLocalMsg(e5.conversationID, e5.ID) && !this._sll.has(e5.random));
      } }, { key: "modifyMessageList", value: function(e5) {
        var t5, n5;
        e5.startsWith(R3.CONV_C2C) && this._convMap.has(e5) && (n5 = this._convMap.get(e5), t5 = Date.now(), this._msgListHandler.modifyMsgSentByPeer({ conversationID: e5, latestNick: n5.userProfile.nick, latestAvatar: n5.userProfile.avatar }), n5 = this.get(4).getNickAndAvatarByUserID(this.getMyUserID()), this._msgListHandler.modifyMsgSentByMe({ conversationID: e5, latestNick: n5.nick, latestAvatar: n5.avatar }), M3.l("".concat(this._n, ".modifyMessageList convID:").concat(e5, " cost:").concat(tn(t5))));
      } }, { key: "updateUserProfileSpecifiedKey", value: function(e5) {
        M3.l("".concat(this._n, ".updateUserProfileSpecifiedKey options:"), e5);
        var t5 = e5.conversationID, n5 = e5.nick, e5 = e5.avatar;
        this._convMap.has(t5) && (t5 = this._convMap.get(t5).userProfile, C4(n5) && t5.nick !== n5 && (t5.nick = n5), C4(e5) && t5.avatar !== e5 && (t5.avatar = e5), this.emitConvUpdate(true, false));
      } }, { key: "_onMyProfileModified", value: function(t5) {
        var n5 = this, e5 = this.getLocalConvList(), o5 = Date.now();
        e5.forEach(function(e6) {
          n5.modifyMessageSentByMe(y2({ conversationID: e6.conversationID }, t5));
        }), M3.l("".concat(this._n, "._onMyProfileModified. modify all messages sent by me, cost:").concat(tn(o5)));
      } }, { key: "modifyMessageSentByMe", value: function(e5) {
        this._msgListHandler.modifyMsgSentByMe(e5);
      } }, { key: "getLatestMessageSentByMe", value: function(e5) {
        return this._msgListHandler.getLatestMsgSentByMe(e5);
      } }, { key: "modifyMessageSentByPeer", value: function(e5) {
        this._msgListHandler.modifyMsgSentByPeer(e5);
      } }, { key: "getLatestMessageSentByPeer", value: function(e5) {
        return this._msgListHandler.getLatestMsgSentByPeer(e5);
      } }, { key: "pushIntoNoticeResult", value: function(e5, t5) {
        return !(!this._msgListHandler.pushIn(t5) || this._sll.has(t5.random) || (e5.push(t5), 0));
      } }, { key: "getLocalLastMessage", value: function(e5) {
        return this._msgListHandler.getLocalLastMsg(e5);
      } }, { key: "getLocalSecondLastMessage", value: function(e5) {
        return this._msgListHandler.getLocalSecondLastMsg(e5);
      } }, { key: "checkAndPatchRemark", value: function() {
        var e5, n5, o5 = this.get(8);
        0 !== this._convMap.size && o5 && 0 !== (e5 = d3(this._convMap.values()).filter(function(e6) {
          return e6.type === R3.CONV_C2C;
        })).length && (n5 = 0, e5.forEach(function(e6) {
          var t5 = e6.conversationID.replace(R3.CONV_C2C, "");
          o5.isMyFriend(t5) && (t5 = o5.getFriendRemark(t5), e6.remark !== t5) && (e6.remark = t5, n5 += 1);
        }), M3.l("".concat(this._n, ".checkAndPatchRemark. c2cConvCount:").concat(e5.length, " patchedCount:").concat(n5)), 0 < n5) && this.emitConvUpdate(true, false);
      } }, { key: "updateTopicConversation", value: function(e5) {
        this._updateLocalConvList({ conversationOptionsList: e5, isFromGetConversations: true, updateUnreadCount: true });
      } }, { key: "sendReadReceipt", value: function(e5) {
        var t5 = e5[0], n5 = null;
        return t5.conversationType === R3.CONV_C2C ? n5 = this._m.get(6) : t5.conversationType === R3.CONV_GROUP && (n5 = this._m.get(7)), n5 ? n5.sendReadReceipt(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getReadReceiptList", value: function(e5) {
        var t5 = e5[0], n5 = null;
        return t5.conversationType === R3.CONV_C2C ? n5 = this._m.get(6) : t5.conversationType === R3.CONV_GROUP && (n5 = this._m.get(7)), n5 ? n5.getReadReceiptList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getLastMessageTime", value: function(e5) {
        e5 = this.getLocalConversation(e5);
        return e5 ? e5.lastMessage.lastTime : 0;
      } }, { key: "getTotalUnreadCount", value: function() {
        var e5 = this.getLocalConvList(), t5 = 0;
        return e5.forEach(function(e6) {
          e6.type === R3.CONV_SYSTEM || "" !== e6.messageRemindType && e6.messageRemindType !== R3.MSG_REMIND_ACPT_AND_NOTE || (t5 += e6.unreadCount);
        }), t5;
      } }, { key: "onTotalUnreadCountUpdate", value: function() {
        var e5 = this.getTotalUnreadCount();
        this._convTotalUnreadCount !== e5 && (M3.l("".concat(this._n, ".onTotalUnreadCountUpdate from ").concat(this._convTotalUnreadCount, " to ").concat(e5)), this._convTotalUnreadCount = e5, this.emitOEvt(h4.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED));
      } }, { key: "_isConvNeedShow", value: function(e5) {
        var t5, n5, e5 = this.getLocalConversation(e5);
        return !(!N3(e5) && (t5 = e5.type === R3.CONV_TOPIC, n5 = e5.type === R3.CONV_GROUP && e5.groupProfile.type === R3.GRP_ROOM, e5 = e5.type === R3.CONV_GROUP && e5.groupProfile.type === R3.GRP_LIVE, t5 || n5 || e5));
      } }, { key: "setAllRcvMsgOpt", value: function(e5) {
        return this._msgRemindHandler.setAllRcvMsgOpt(e5);
      } }, { key: "getAllRcvMsgOpt", value: function() {
        return this._msgRemindHandler.getAllRcvMsgOpt();
      } }, { key: "onAllRcvMsgOptNotify", value: function(e5) {
        this._msgRemindHandler.onAllRcvMsgOptNotify(e5);
      } }, { key: "clearUnreadCount", value: function(e5) {
        e5 = this.getLocalConversation(e5);
        e5 && 0 < e5.unreadCount && (e5.unreadCount = 0, this.emitConvUpdate(true, false));
      } }, { key: "storeHoppingMessageList", value: function(e5) {
        this._msgListHandler.storeHoppingMsgList(e5);
      } }, { key: "clearMemMsg", value: function(e5) {
        var t5 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        M3.l("".concat(this._n, ".clearMemMsg convID:").concat(e5, " isOverLimit:").concat(t5)), this._msgListHandler.removeByConvID(e5), this._completedMap.delete(e5), this._roamingMsgKeyAndTimeMap.delete(e5), this._everClearedMap.set(e5, 1);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._setStorageConvList(true), this._pagingStatus = Gn, this._msgListHandler.reset(), this._msgRemindHandler.reset(), this._roamingMsgKeyAndTimeMap.clear(), this._sll.reset(), this._peerReadTimeMap.clear(), this._completedMap.clear(), this._convMap.clear(), this._pagingTs = 0, this._pagingStartIdx = 0, this._pagingPinnedTs = 0, this._pagingPinnedStartIdx = 0, this._remoteGroupReadSeqMap.clear(), this._convTotalUnreadCount = 0, this._pagingGetCostList.length = 0, this._pagingConvIDMap.clear(), this._convIDFromUnreadDBMap.clear(), this._pagingGetCostList.length = 0, this._convMapForDiff.clear(), this._partialUpdatedConvMap.clear(), this._everClearedMap.clear(), this._bPullOnInvite = true, this._convGroupHandler.reset(), this.resetReady();
      } }])), Wo = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "GroupTipsHandler", this._cachedGroupTipsMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4;
      }, [{ key: "onCheckTimer", value: function(e5) {
        e5 % 1 == 0 && 0 < this._cachedGroupTipsMap.size && this._check();
      } }, { key: "_check", value: function() {
        var i5 = this;
        this._cachedGroupTipsMap.forEach(function(e5, t5) {
          var n5 = i5._checkCountMap.get(t5), o5 = i5._grpM.hasLocalGroup(t5);
          M3.l("".concat(i5._n, "._check groupID:").concat(t5, " hasLocalGroup:").concat(o5, " checkCount:").concat(n5)), o5 ? (i5._notifyCachedGroupTips(t5), i5._checkCountMap.delete(t5), i5._grpM.deleteUnjoinedAVChatRoom(t5)) : n5 >= i5.MAX_CHECK_COUNT ? (i5._deleteCachedGroupTips(t5), i5._checkCountMap.delete(t5)) : i5._checkCountMap.set(t5, ++n5);
        });
      } }, { key: "onNewGroupTips", value: function(e5) {
        M3.l("".concat(this._n, ".onNewGroupTips options:").concat(JSON.stringify(e5.dataList)));
        var e5 = this._assembly(e5), t5 = e5.eventDataList, n5 = e5.result, e5 = e5.AVChatRoomMessageList;
        0 < e5.length && this._grpM.onAVChatRoomMessage(e5), 0 < n5.length && (this._grpM.emitOEvt(h4.MESSAGE_RECEIVED, n5), this._handleTips(n5)), 0 < t5.length && (this._grpM.updateNextMessageSeq(t5), this._grpM.get(11).onNewMessage({ conversationOptionsList: t5, isInstantMessage: true }));
      } }, { key: "_assembly", value: function(e5) {
        for (var t5 = e5.event, n5 = e5.dataList, o5 = null, i5 = [], a5 = [], s5 = {}, r5 = [], c5 = 0, u5 = n5.length; c5 < u5; c5++) {
          var l5 = vt2(n5[c5]);
          if (6 === t5) {
            if (this._grpM.isGroupAttributesUpdatedNotice(l5))
              continue;
            if (this._grpM.isGroupCountersNotice(l5))
              continue;
          }
          var d4 = l5.groupProfile, p5 = d4.groupID, _4 = d4.communityType, _4 = void 0 === _4 ? 0 : _4, h5 = d4.topicID, h5 = void 0 === h5 ? void 0 : h5, g5 = d4.invisible, d4 = d4.groupType, d4 = void 0 === d4 ? void 0 : d4, f4 = void 0, m4 = this._grpM.isMessageFromTopic(_4, h5), v4 = (m4 && (f4 = R3.CONV_TOPIC, l5.to = h5), this._grpM.hasLocalGroup(p5));
          if (v4 || !this._grpM.isUnjoinedAVChatRoom(p5))
            if (v4 || m4)
              if (this._grpM.isMessageFromOrToAVChatroom(p5))
                l5.event = t5, r5.push(l5);
              else if (l5.currentUser = this._grpM.getMyUserID(), l5.conversationType = R3.CONV_GROUP, (o5 = new Do(l5)).setElement({ type: R3.MSG_GRP_TIP, content: y2(y2({}, l5.elements), {}, { groupProfile: l5.groupProfile }) }), o5.isSystemMessage = false, 1 !== g5) {
                var v4 = this._grpM.get(11), m4 = o5, g5 = m4.conversationID, m4 = m4.sequence;
                if (6 === t5)
                  o5._onlineOnlyFlag = true, a5.push(o5);
                else if (!v4.pushIntoNoticeResult(a5, o5))
                  continue;
                this._grpM.isMessageFromCommunityOfTopic(_4, h5) || 6 === t5 && v4.getLocalConversation(g5) || (6 !== t5 && this._qualityStat(o5), _4 = v4.isRemoteRead({ conversationID: g5, sequence: m4 }), N3(s5[g5]) ? (h5 = 0, "in" !== o5.flow || o5._isExcludedFromUnreadCount || o5._onlineOnlyFlag || _4 || (h5 = 1), s5[g5] = i5.push({ conversationID: g5, unreadCount: h5, type: N3(f4) ? o5.conversationType : f4, subType: o5.conversationSubType, lastMessage: o5._isExcludedFromLastMessage ? "" : o5 }) - 1) : (i5[v4 = s5[g5]].type = o5.conversationType, i5[v4].subType = o5.conversationSubType, i5[v4].lastMessage = o5._isExcludedFromLastMessage ? "" : o5, "in" !== o5.flow || o5._isExcludedFromUnreadCount || o5._onlineOnlyFlag || _4 || i5[v4].unreadCount++));
              } else
                this._qualityStat(o5);
            else
              this._cacheAndCompare({ groupID: p5, event: t5, item: l5, groupType: d4 });
        }
        return { eventDataList: i5, result: a5, AVChatRoomMessageList: r5 };
      } }, { key: "_qualityStat", value: function(e5) {
        this._grpM.get(26).addMessageSequence({ key: zn, message: e5 });
      } }, { key: "_handleTips", value: function(e5) {
        var t5 = this;
        e5.forEach(function(e6) {
          switch (e6.payload.operationType) {
            case 1:
              t5._onNewMemberComeIn(e6);
              break;
            case 2:
              t5._onMemberQuit(e6);
              break;
            case 3:
              t5._onMemberKickedOut(e6);
              break;
            case 4:
              t5._onMemberSetAdmin(e6);
              break;
            case 5:
              t5._onMemberCancelledAdmin(e6);
              break;
            case 6:
              t5._onGroupProfileModified(e6);
              break;
            case 7:
              t5._onMemberInfoModified(e6);
              break;
            case 8:
              t5._onTopicProfileUpdated(e6);
              break;
            default:
              M3.w("".concat(t5._n, "._handleTips unknown operationType:").concat(e6.payload.operationType));
          }
        });
      } }, { key: "_onNewMemberComeIn", value: function(e5) {
        var e5 = e5.payload, t5 = e5.memberNum, e5 = e5.groupProfile.groupID, e5 = this._grpM.getLocalGroupProfile(e5);
        e5 && A3(t5) && e5.memberCount !== t5 && (e5.memberCount = t5, this._updateConvGroupProfile(e5));
      } }, { key: "_onMemberQuit", value: function(e5) {
        var t5 = e5.payload, n5 = t5.memberNum, t5 = t5.groupProfile.groupID, o5 = this._grpM.getLocalGroupProfile(t5);
        o5 && A3(n5) && o5.memberCount !== n5 && (o5.memberCount = n5, this._updateConvGroupProfile(o5)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(t5, e5.payload.userIDList);
      } }, { key: "_onMemberKickedOut", value: function(e5) {
        var t5 = e5.payload, n5 = t5.memberNum, t5 = t5.groupProfile.groupID, o5 = this._grpM.getLocalGroupProfile(t5);
        o5 && A3(n5) && o5.memberCount !== n5 && (o5.memberCount = n5, this._updateConvGroupProfile(o5)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(t5, e5.payload.userIDList);
      } }, { key: "_updateConvGroupProfile", value: function(e5) {
        this._grpM.get(11).updateConvGroupProfile([e5]);
      } }, { key: "_onMemberSetAdmin", value: function(e5) {
        var t5 = e5.payload.groupProfile.groupID, e5 = e5.payload.userIDList, n5 = this._grpM.getGroupMemberHandler();
        e5.forEach(function(e6) {
          e6 = n5.getLocalGroupMemberInfo(t5, e6);
          e6 && e6.updateRole(R3.GRP_MBR_ROLE_ADMIN);
        });
      } }, { key: "_onMemberCancelledAdmin", value: function(e5) {
        var t5 = e5.payload.groupProfile.groupID, e5 = e5.payload.userIDList, n5 = this._grpM.getGroupMemberHandler();
        e5.forEach(function(e6) {
          e6 = n5.getLocalGroupMemberInfo(t5, e6);
          e6 && e6.updateRole(R3.GRP_MBR_ROLE_MEMBER);
        });
      } }, { key: "_onGroupProfileModified", value: function(e5) {
        var t5 = this, e5 = e5.payload, n5 = e5.newGroupProfile, o5 = e5.groupProfile, i5 = e5.operatorInfo, e5 = o5.groupID, a5 = this._grpM.getLocalGroupProfile(e5), o5 = (Object.keys(n5).forEach(function(e6) {
          switch (e6) {
            case "ownerID":
              t5._ownerChanged(a5, n5);
              break;
            case "groupName":
              a5.name = n5[e6];
              break;
            default:
              a5[e6] = n5[e6];
          }
        }), N3(i5) || Object.keys(i5).forEach(function(e6) {
          var t6;
          "nameCard" === e6 ? a5.updateSelfInfo({ nameCard: i5[e6] }) : "role" === e6 && (t6 = "", 400 === i5[e6] ? t6 = R3.GRP_MBR_ROLE_OWNER : 300 === i5[e6] ? t6 = R3.GRP_MBR_ROLE_ADMIN : 200 === i5[e6] && (t6 = R3.GRP_MBR_ROLE_MEMBER), a5.updateSelfInfo({ role: t6 }));
        }), !a5.isSupportTopic);
        this._grpM.emitGroupListUpdate(true, o5);
      } }, { key: "_ownerChanged", value: function(e5, t5) {
        var e5 = e5.groupID, n5 = this._grpM.getLocalGroupProfile(e5), o5 = this._grpM.getMyUserID();
        o5 === t5.ownerID && (n5.updateGroup({ selfInfo: { role: R3.GRP_MBR_ROLE_OWNER } }), n5 = (t5 = this._grpM.getGroupMemberHandler()).getLocalGroupMemberInfo(e5, o5), o5 = this._grpM.getLocalGroupProfile(e5).ownerID, t5 = t5.getLocalGroupMemberInfo(e5, o5), n5 && n5.updateRole(R3.GRP_MBR_ROLE_OWNER), t5) && t5.updateRole(R3.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMemberInfoModified", value: function(e5) {
        var t5 = e5.to, n5 = e5.payload, o5 = n5.groupProfile, n5 = n5.memberList, i5 = o5.groupID, a5 = (Nt2(t5) && this._updateTopicMuteTime(e5), this._grpM.getGroupMemberHandler());
        n5.forEach(function(e6) {
          var t6 = a5.getLocalGroupMemberInfo(i5, e6.userID);
          t6 && A3(e6.muteTime) && t6.updateMuteUntil(e6.muteTime);
        });
      } }, { key: "_updateTopicMuteTime", value: function(e5) {
        var t5 = e5.to, e5 = e5.payload, n5 = e5.groupProfile, e5 = e5.memberList, o5 = void 0 === e5 ? [] : e5, e5 = this._grpM.get(10), n5 = n5.groupID, i5 = e5.getLocalTopic(n5, t5);
        if (i5) {
          for (var a5 = false, s5 = 0; s5 < o5.length; s5++) {
            var r5 = o5[s5];
            if (r5.userID === this._grpM.getMyUserID() && 0 <= r5.muteTime) {
              i5.updateSelfInfo({ muteTime: r5.muteTime }), a5 = true;
              break;
            }
          }
          a5 && this._grpM.emitOEvt(h4.TOPIC_UPDATED, { groupID: n5, topic: i5 });
        }
      } }, { key: "_onTopicProfileUpdated", value: function(e5) {
        var t5 = e5.payload, n5 = t5.groupProfile.groupID, t5 = t5.newTopicInfo;
        this._grpM.get(10).onTopicProfileUpdated(y2({ groupID: n5, topicID: e5.to }, t5));
      } }, { key: "_cacheGroupTips", value: function(e5, t5) {
        this._cachedGroupTipsMap.has(e5) || this._cachedGroupTipsMap.set(e5, []), this._cachedGroupTipsMap.get(e5).push(t5);
      } }, { key: "_deleteCachedGroupTips", value: function(e5) {
        this._cachedGroupTipsMap.has(e5) && this._cachedGroupTipsMap.delete(e5);
      } }, { key: "_notifyCachedGroupTips", value: function(e5, t5) {
        var n5 = this, o5 = this._cachedGroupTipsMap.get(e5) || [];
        M3.l("".concat(this._n, "._notifyCachedGroupTips groupID:").concat(e5, " groupType:").concat(t5, " count:").concat(o5.length)), o5.forEach(function(e6) {
          n5.onNewGroupTips(e6);
        }), this._deleteCachedGroupTips(e5);
      } }, { key: "_cacheAndCompare", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.event, o5 = e5.item, e5 = e5.groupType, n5 = (M3.l("".concat(this._n, "._cacheAndCompare groupID:").concat(t5, " groupType:").concat(e5)), this._cacheGroupTips(t5, { event: n5, dataList: [o5] }), { groupID: t5, type: e5 });
        e5 === R3.GRP_AVCHATROOM ? this._grpM.hasLocalGroup(t5) ? this._notifyCachedGroupTips(t5, e5) : this._grpM.setUnjoinedAVChatRoom(t5) : (this._grpM.updateGroupMap([n5]), this._notifyCachedGroupTips(t5, e5)), this._checkCountMap.has(t5) || this._checkCountMap.set(t5, 0);
      } }, { key: "reset", value: function() {
        this._cachedGroupTipsMap.clear(), this._checkCountMap.clear();
      } }]), Yo = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "CommonGroupHandler", this.tempConversationList = null, this._cachedGroupMessageMap = /* @__PURE__ */ new Map(), this._checkCountMap = /* @__PURE__ */ new Map(), this.MAX_CHECK_COUNT = 4, this.PAGING_GRP_COUNT_LIMIT = 200, this._pagingStatus = Gn, this._pagingGetCostList = [], t5.getIEmitInst().on(U3.A2KEY_AND_TINYID_UPDATED, this.syncGroupList, this);
      }, [{ key: "onCheckTimer", value: function(e5) {
        e5 % 1 == 0 && 0 < this._cachedGroupMessageMap.size && this._check();
      } }, { key: "_check", value: function() {
        var i5 = this;
        this._cachedGroupMessageMap.forEach(function(e5, t5) {
          var n5 = i5._checkCountMap.get(t5), o5 = i5._grpM.hasLocalGroup(t5);
          M3.l("".concat(i5._n, "._check groupID:").concat(t5, " hasLocalGroup:").concat(o5, " checkCount:").concat(n5)), o5 ? (i5._notifyCachedGroupMessage(t5), i5._checkCountMap.delete(t5), i5._grpM.deleteUnjoinedAVChatRoom(t5)) : n5 >= i5.MAX_CHECK_COUNT ? (i5._deleteCachedGroupMessage(t5), i5._checkCountMap.delete(t5)) : i5._checkCountMap.set(t5, ++n5);
        });
      } }, { key: "updateLastMsg", value: function(e5) {
        var t5 = "".concat(this._n, ".updateLastMsg");
        if (0 !== this._grpM.getGroupMap().size) {
          for (var n5, o5, i5, a5, s5 = false, r5 = e5.length, c5 = 0; c5 < r5; c5++)
            (n5 = e5[c5]).type === R3.CONV_GROUP && 0 !== n5.lastMessage.lastSequence && null !== n5.lastMessage.payload && (o5 = n5.conversationID.split(/^GROUP/)[1], o5 = this._grpM.getLocalGroupProfile(o5)) && (i5 = o5.lastMessage, a5 = n5.lastMessage, JSON.stringify(i5) !== JSON.stringify(a5)) && (o5.lastMessage = y2({}, n5.lastMessage), s5 = true);
          M3.l("".concat(t5, " convCount:").concat(r5, " groupCount:").concat(this._grpM.getLocalGroupList().length, " isUpdated:").concat(s5)), s5 && (this._grpM.sortLocalGroupList(), this._grpM.emitGroupListUpdate(true, false));
        } else
          this.tempConversationList = e5;
      } }, { key: "onNewMessage", value: function(e5) {
        var t5 = this._assembly(e5), n5 = t5.conversationOptionsList, o5 = t5.messageList, t5 = t5.AVChatRoomMessageList, t5 = (0 < t5.length && this._grpM.onAVChatRoomMessage(t5), St2(o5)), t5 = (0 < t5.length && this._grpM.emitOEvt(h4.MESSAGE_MODIFIED, t5), 0 < n5.length && (this._grpM.get(11).onNewMessage({ conversationOptionsList: n5, isInstantMessage: false !== e5.isInstantMessage, updateUnreadCount: false !== e5.updateUnreadCount }), this._grpM.updateNextMessageSeq(n5)), Rt2(o5));
        0 < t5.length && this._grpM.emitOEvt(h4.MESSAGE_RECEIVED, t5), o5.length = 0;
      } }, { key: "_assembly", value: function(e5) {
        var t5 = e5.dataList, n5 = e5.event, o5 = e5.isInstantMessage, i5 = null, a5 = [], s5 = [], r5 = [], c5 = {}, u5 = this._grpM.getFileDownloadProxy(), l5 = this._grpM.getDownloadFileAuthKey(), d4 = this._grpM.get(17).getFileDNList(), p5 = t5.length;
        1 < p5 && t5.sort(function(e6, t6) {
          return e6.sequence - t6.sequence;
        });
        for (var _4 = this._grpM.get(11), h5 = this._grpM.get(4), g5 = 0; g5 < p5; g5++) {
          var f4, m4 = vt2(t5[g5]), v4 = m4.groupProfile, I4 = v4.groupID, M4 = v4.communityType, M4 = void 0 === M4 ? 0 : M4, y3 = v4.topicID, y3 = void 0 === y3 ? void 0 : y3, C5 = v4.invisible, v4 = v4.groupType, v4 = void 0 === v4 ? void 0 : v4, T5 = void 0, D3 = this._grpM.isMessageFromTopic(M4, y3), E5 = (D3 && (T5 = R3.CONV_TOPIC, m4.to = y3), this._grpM.hasLocalGroup(I4));
          !E5 && this._grpM.isUnjoinedAVChatRoom(I4) || (E5 || D3 ? this._grpM.isMessageFromOrToAVChatroom(I4) ? (m4.event = n5, r5.push(m4)) : (m4.currentUser = this._grpM.getMyUserID(), m4.conversationType = R3.CONV_GROUP, m4.isSystemMessage = !!m4.isSystemMessage, (i5 = new Do(m4)).setElement(m4.elements, u5, l5, d4), 1 !== C5 ? (E5 = 1 === t5[g5].isModified, _4.isMessageSentByCurrentInstance(i5) ? i5.isModified = E5 : E5 = false, 1 === m4.onlineOnlyFlag ? (i5._onlineOnlyFlag = true, _4.isMessageSentByCurrentInstance(i5) || s5.push(i5)) : this._grpM.isMessageFromCommunityOfTopic(M4, y3) ? s5.push(i5) : (i5.from === this._grpM.getMyUserID() && (D3 = _4.getLatestMessageSentByMe(i5.conversationID)) && (C5 = D3.nick, M4 = D3.avatar, C5 === i5.nick && M4 === i5.avatar || (_4.modifyMessageSentByMe({ conversationID: f4, latestNick: i5.nick, latestAvatar: i5.avatar }), h5.mockOnNickAvatarModified(i5.nick, i5.avatar))), _4.pushIntoMessageList(s5, i5, E5) && (this._qualityStat(o5, i5), f4 = (y3 = i5).conversationID, D3 = y3.sequence, C5 = _4.isRemoteRead({ conversationID: f4, sequence: D3 }), N3(c5[f4]) ? (M4 = 0, "in" !== i5.flow || i5._isExcludedFromUnreadCount || C5 || (M4 = 1), c5[f4] = a5.push({ conversationID: f4, unreadCount: M4, type: N3(T5) ? i5.conversationType : T5, subType: i5.conversationSubType, lastMessage: i5._isExcludedFromLastMessage ? "" : i5 }) - 1) : (a5[E5 = c5[f4]].type = N3(T5) ? i5.conversationType : T5, a5[E5].subType = i5.conversationSubType, a5[E5].lastMessage = i5._isExcludedFromLastMessage ? "" : i5, "in" !== i5.flow || i5._isExcludedFromUnreadCount || C5 || a5[E5].unreadCount++)))) : this._qualityStat(o5, i5)) : this._cacheAndCompare({ groupID: I4, event: n5, item: m4, groupType: v4 }));
        }
        return { conversationOptionsList: a5, messageList: s5, AVChatRoomMessageList: r5 };
      } }, { key: "_qualityStat", value: function(e5, t5) {
        var n5 = this._grpM.get(26);
        n5.addMessageSequence({ key: zn, message: t5 }), e5 && 0 < t5.clientTime && n5.addMessageDelay(t5.clientTime);
      } }, { key: "onMsgRevoked", value: function(e5, t5) {
        var n5 = this, u5 = this._grpM.get(11), l5 = [], d4 = [];
        e5.dataList.forEach(function(e6) {
          var t6 = e6.elements.revokedInfos, s5 = e6.revokerInfo, r5 = e6.groupProfile, c5 = false;
          r5 && (c5 = Ot2({ groupID: r5.groupID }) || !S3(r5.topicID)), N3(t6) || t6.forEach(function(e7) {
            var t7, n6 = S3(e7.topicID) ? "GROUP".concat(e7.groupID) : "GROUP".concat(e7.topicID), o5 = u5.getLocalConversation(n6), i5 = e7.revokerInfo && e7.revokerInfo.revoker || s5 && s5.revoker, a5 = s5 && s5.reason || "";
            o5 && At2(o5.type) ? t7 = { conversationID: n6, sequence: e7.sequence, ID: "".concat(e7.tinyID, "-").concat(e7.clientTime, "-").concat(e7.random) } : (o5 = u5.revoke(n6, e7.sequence, e7.random)) ? t7 = o5 : (t7 = { conversationID: n6, sequence: e7.sequence }, e7.tinyID && e7.clientTime && e7.random && (t7.ID = "".concat(e7.tinyID, "-").concat(e7.clientTime, "-").concat(e7.random)), e7.time && (t7.time = e7.time)), t7 && (t7.revoker = i5, t7.revokeReason = a5, t7.revokerInfo = { userID: i5, nick: "", avatar: "" }, (c5 ? (t7.revokerInfo.nick = r5.nick, t7.revokerInfo.avatar = r5.avatar, l5) : d4).push(t7));
          });
        }), 0 === d4.length && 0 === l5.length || (u5.onMessageRevoked([].concat(l5, d4), t5), 0 < l5.length && this._grpM.emitOEvt(h4.MESSAGE_REVOKED, l5), 0 < d4.length && u5.updateRevokerInfo(d4).then(function(e6) {
          n5._grpM.emitOEvt(h4.MESSAGE_REVOKED, e6);
        }));
      } }, { key: "_groupListTreeShaking", value: function(e5) {
        for (var n5 = new Map(d3(this._grpM.getGroupMap())), t5 = 0, o5 = e5.length; t5 < o5; t5++)
          n5.delete(e5[t5].groupID);
        this._grpM.hasJoinedAVChatRoom() && this._grpM.getJoinedAVChatRoom().forEach(function(e6) {
          n5.delete(e6);
        }), this._grpM.getGroupMap().forEach(function(e6, t6) {
          e6.isSupportTopic && n5.delete(t6);
        });
        for (var i5 = d3(n5.keys()), a5 = 0, s5 = i5.length; a5 < s5; a5++)
          this._grpM.deleteGroup(i5[a5]);
      } }, { key: "syncGroupList", value: function() {
        var o5, i5, a5 = this, e5 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t5 = (this._pagingStatus === Gn && this._grpM.clearGroupMap(), d3(re2)), n5 = this.PAGING_GRP_COUNT_LIMIT, s5 = [];
        return true === e5 ? this._pagingGetGroupListWithTopic({ limit: n5, offset: 0, groupBaseInfoFilter: t5, groupList: s5 }) : (e5 = "syncGroupList", o5 = "".concat(this._n, ".").concat(e5), i5 = new P3(e5), this._pagingGetGroupList({ limit: n5, offset: 0, groupBaseInfoFilter: t5, groupList: s5 }).then(function() {
          var e6 = en(a5._pagingGetCostList), t6 = $t2(a5._pagingGetCostList), n6 = (a5._pagingGetCostList.length = 0, a5._pagingStatus = Un, a5._groupListTreeShaking(s5), a5._grpM.updateGroupMap(s5), a5._grpM.getLocalGroupList().length), n6 = "count:".concat(n6, " sum:").concat(t6, " avg:").concat(e6);
          return M3.l("".concat(o5, " ok. ").concat(n6)), i5.setMessage(n6).end(), a5.tempConversationList && (a5.updateLastMsg(a5.tempConversationList), a5.tempConversationList = null), a5._grpM.emitGroupListUpdate(true, true), T4({ groupList: a5._grpM.getLocalGroupList() });
        }).catch(function(e6) {
          return a5._pagingStatus = bn, i5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "getGroupList", value: function() {
        var e5, t5 = this, n5 = "".concat(this._n, ".").concat("getGroupList");
        return M3.l("".concat(n5, " pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === bn || this._pagingStatus === Gn ? this.syncGroupList().then(function() {
          var e6 = t5._grpM.getLocalGroupList();
          return T4({ groupList: e6, isSyncCompleted: t5.isPagingGetCompleted() });
        }).catch(function(e6) {
          return M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        }) : (e5 = this._grpM.getLocalGroupList(), M3.l("".concat(n5, ". returned group count:").concat(e5.length)), D2({ groupList: e5, isSyncCompleted: this.isPagingGetCompleted() }));
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._pagingStatus === Un;
      } }, { key: "_pagingGetGroupList", value: function(e5) {
        var o5 = this, i5 = "".concat(this._n, ".").concat("_pagingGetGroupList"), t5 = e5.isCommunityRelay, a5 = void 0 !== t5 && t5, s5 = e5.limit, r5 = e5.offset, c5 = e5.groupBaseInfoFilter, u5 = e5.groupList, l5 = Date.now();
        return this._grpM.req({ P: G2.GET_GRP_LIST, data: { type: a5 ? R3.GRP_COMMUNITY : void 0, memberAccount: this._grpM.getMyUserID(), limit: s5, offset: r5, responseFilter: { groupBaseInfoFilter: c5, selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"] } } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.groups, t6 = void 0 === t6 ? [] : t6, e6 = e6.totalCount, t6 = (u5.push.apply(u5, d3(t6)), o5._handleGroupAtInfoWithoutTopic(a5, t6), r5 + s5), n5 = !(t6 < e6), e6 = "offset:".concat(r5, " limit:").concat(s5, " total:").concat(e6, " isCompleted:").concat(n5, " ") + "current:".concat(u5.length, " isCommunityRelay:").concat(a5);
          return o5._pagingGetCostList.push(tn(l5, false)), M3.l("".concat(i5, " ok. ").concat(e6, " cost:").concat(tn(l5))), a5 || n5 ? !a5 && n5 ? (M3.l("".concat(i5, " start to get community list")), r5 = 0, o5._pagingGetGroupList({ limit: s5, offset: r5, groupBaseInfoFilter: c5, groupList: u5, isCommunityRelay: true })) : a5 && !n5 ? (r5 = t6, o5._pagingGetGroupList({ limit: s5, offset: r5, groupBaseInfoFilter: c5, groupList: u5, isCommunityRelay: true })) : T4({ groupList: u5 }) : (r5 = t6, o5._pagingGetGroupList({ limit: s5, offset: r5, groupBaseInfoFilter: c5, groupList: u5 }));
        }).catch(function(e6) {
          return 10018 === e6.code ? (M3.w("".concat(o5.logPrefix, " response size exceeds the limit, request count:").concat(s5)), s5 = 50, o5._pagingGetGroupList({ limit: s5, offset: r5, groupBaseInfoFilter: c5, groupList: u5, isCommunityRelay: a5 })) : a5 ? (11e3 === e6.code && M3.l("".concat(i5, " ok. community unavailable")), D2({ groupList: u5 })) : E4(e6);
        });
      } }, { key: "_pagingGetGroupListWithTopic", value: function(e5) {
        var o5 = this, i5 = "".concat(this._n, "._pagingGetGroupListWithTopic"), a5 = e5.limit, s5 = e5.offset, r5 = e5.groupBaseInfoFilter, c5 = e5.groupList, u5 = Date.now();
        return this._grpM.req({ P: G2.GET_GRP_LIST, data: { type: R3.GRP_COMMUNITY, memberAccount: this._grpM.getMyUserID(), limit: a5, offset: s5, responseFilter: { groupBaseInfoFilter: r5, selfInfoFilter: d3(ce2) }, isSupportTopic: 1, needAppDefineData: 1 } }).then(function(e6) {
          var e6 = e6.data, t5 = e6.groups, e6 = e6.totalCount, t5 = (c5.push.apply(c5, d3(void 0 === t5 ? [] : t5)), s5 + a5), n5 = !(t5 < e6);
          if (M3.l("".concat(i5, " ok. offset:").concat(s5, " limit:").concat(a5, " totalCount:").concat(e6, " isCompleted:").concat(n5, " currentCount:").concat(c5.length, " cost:").concat(tn(u5))), !n5)
            return s5 = t5, o5._pagingGetGroupListWithTopic({ limit: a5, offset: s5, groupBaseInfoFilter: r5, groupList: c5 });
          o5._grpM.updateGroupMap(c5), o5._grpM.emitGroupListUpdate(true, false);
          e6 = o5._grpM.getLocalGroupList().filter(function(e7) {
            return true === e7.isSupportTopic;
          });
          return T4({ groupList: e6 });
        }).catch(function(e6) {
          return 10018 === e6.code ? (M3.w("".concat(o5.logPrefix, " response size exceeds the limit, request count:").concat(a5)), a5 = 50, o5._pagingGetGroupListWithTopic({ limit: a5, offset: s5, groupBaseInfoFilter: r5, groupList: c5 })) : E4(e6);
        });
      } }, { key: "_cacheGroupMessage", value: function(e5, t5) {
        this._cachedGroupMessageMap.has(e5) || this._cachedGroupMessageMap.set(e5, []), this._cachedGroupMessageMap.get(e5).push(t5);
      } }, { key: "_deleteCachedGroupMessage", value: function(e5) {
        this._cachedGroupMessageMap.has(e5) && this._cachedGroupMessageMap.delete(e5);
      } }, { key: "_notifyCachedGroupMessage", value: function(e5, t5) {
        var n5 = this, o5 = this._cachedGroupMessageMap.get(e5) || [];
        M3.l("".concat(this._n, "._notifyCachedGroupMessage groupID:").concat(e5, " groupType:").concat(t5, " count:").concat(o5.length)), o5.forEach(function(e6) {
          n5.onNewMessage(e6);
        }), this._deleteCachedGroupMessage(e5);
      } }, { key: "_cacheAndCompare", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.event, o5 = e5.item, e5 = e5.groupType, n5 = (M3.l("".concat(this._n, "._cacheAndCompare groupID:").concat(t5, " groupType:").concat(e5)), this._cacheGroupMessage(t5, { event: n5, dataList: [o5] }), { groupID: t5, type: e5 });
        e5 === R3.GRP_AVCHATROOM ? this._grpM.hasLocalGroup(t5) ? this._notifyCachedGroupMessage(t5, e5) : this._grpM.setUnjoinedAVChatRoom(t5) : (this._grpM.updateGroupMap([n5]), this._notifyCachedGroupMessage(t5, e5)), this._checkCountMap.has(t5) || this._checkCountMap.set(t5, 0);
      } }, { key: "_handleGroupAtInfoWithoutTopic", value: function(e5, t5) {
        var o5 = this;
        e5 && 0 !== t5.length && t5.forEach(function(e6) {
          var t6 = e6.groupID, e6 = e6.groupAtInfoList, n5 = [];
          N3(e6) || (e6.forEach(function(e7) {
            n5.push(y2(y2({}, e7), {}, { groupID: t6 }));
          }), o5._grpM.get(11).onNewGroupAtTips({ dataList: n5 }));
        });
      } }, { key: "setPagingGroupCount", value: function(e5) {
        N3(e5) || (this.PAGING_GRP_COUNT_LIMIT = parseInt(e5, 10));
      } }, { key: "reset", value: function() {
        this.PAGING_GRP_COUNT_LIMIT = 200, this._cachedGroupMessageMap.clear(), this._checkCountMap.clear(), this._pagingStatus = Gn, this._pagingGetCostList = [];
      } }]), jo = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "GroupAttributesHandler", this._groupAttributesMap = /* @__PURE__ */ new Map(), this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      }, [{ key: "_onCloudConfig", value: function() {
        var e5 = this._grpM.getCloudConfig("grp_attr_cache_time");
        N3(e5) || (this.CACHE_EXPIRE_TIME = Number(e5));
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesMap.forEach(function(e5) {
          e5.localMainSequence = 0;
        });
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e5) {
        var t5 = e5.to, e5 = e5.elements.newGroupProfile, n5 = !N3(e5) && !S3(e5.groupAttributeOption);
        return n5 && this._onGroupAttributesUpdated({ groupID: t5, groupAttributeOption: e5.groupAttributeOption }), n5;
      } }, { key: "_onGroupAttributesUpdated", value: function(e5) {
        var t5, n5 = this, o5 = e5.groupID, e5 = e5.groupAttributeOption, i5 = e5.mainSequence, a5 = e5.isWithChangedAttributeInfo, s5 = e5.groupAttributeList, s5 = void 0 === s5 ? [] : s5, e5 = e5.operationType;
        M3.l("".concat(this._n, ".onGroupAttributesUpdated. ") + "groupID:".concat(o5, " isWithChangedAttributeInfo:").concat(a5, " operationType:").concat(e5)), N3(e5) || (this._groupAttributesCopy = this._getCachedAttributes({ groupID: o5 }), 0 != (t5 = i5 - this._getLocalGroupAttributes(o5).localMainSequence) && (1 === a5 && 1 == t5 ? (this._refreshCachedGroupAttributes({ groupID: o5, remoteMainSequence: i5, groupAttributeList: s5, operationType: e5 }), this._emitGroupAttributesUpdated(o5)) : this._hasLocalGroupAttributes(o5) && (a5 = this._getLocalGroupAttributes(o5).avChatRoomKey, this._getGroupAttributes({ groupID: o5, avChatRoomKey: a5 }).then(function() {
          n5._emitGroupAttributesUpdated(o5);
        }))));
      } }, { key: "initGroupAttributesCache", value: function(e5) {
        var t5 = e5.groupID, e5 = e5.avChatRoomKey, e5 = void 0 === e5 ? void 0 : e5;
        this._groupAttributesMap.set(t5, { lastUpdateTime: 0, localMainSequence: 0, remoteMainSequence: 0, attributes: /* @__PURE__ */ new Map(), avChatRoomKey: e5 }), M3.l("".concat(this._n, ".initGroupAttributesCache groupID:").concat(t5, " avChatRoomKey:").concat(e5));
      } }, { key: "initGroupAttributes", value: function(e5) {
        var n5 = this, o5 = e5.groupID, i5 = e5.groupAttributes, e5 = this._getLocalGroupAttributes(o5), t5 = e5.remoteMainSequence, e5 = e5.avChatRoomKey, a5 = new P3("initGroupAttributes");
        return a5.setMessage("groupID:".concat(o5, " avChatRoomKey:").concat(e5, " mainSequence:").concat(t5)), this._grpM.req({ P: G2.SET_GRP_ATTR, data: { groupID: o5, avChatRoomKey: e5, mainSequence: t5, groupAttributeList: this._transformGroupAttributes(i5) } }).then(function(e6) {
          M3.l("".concat(n5._n, ".").concat("initGroupAttributes", " ok. groupID:").concat(o5));
          var e6 = e6.data, t6 = e6.mainSequence, e6 = d3(e6.groupAttributeList);
          return e6.forEach(function(e7) {
            e7.value = i5[e7.key];
          }), n5._groupAttributesCopy = n5._getCachedAttributes({ groupID: o5 }), n5._refreshCachedGroupAttributes({ groupID: o5, remoteMainSequence: t6, groupAttributeList: e6, operationType: 1 }), n5._emitGroupAttributesUpdated(o5), a5.end(), T4({ groupAttributes: i5 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), E4(e6);
        });
      } }, { key: "setGroupAttributes", value: function(e5) {
        var n5 = this, o5 = "".concat(this._n, ".").concat("setGroupAttributes"), i5 = e5.groupID, a5 = e5.groupAttributes, e5 = this._getLocalGroupAttributes(i5), t5 = e5.remoteMainSequence, s5 = e5.avChatRoomKey, r5 = e5.attributes, e5 = this._transformGroupAttributes(a5), c5 = (e5.forEach(function(e6) {
          var t6 = e6.key;
          e6.sequence = 0, r5.has(t6) && (e6.sequence = r5.get(t6).sequence);
        }), new P3("setGroupAttributes"));
        return c5.setMessage("groupID:".concat(i5, " groupAttributes:").concat(JSON.stringify(a5))), M3.l("".concat(o5, ". groupID:").concat(i5, " mainSequence:").concat(t5)), this._grpM.req({ P: G2.MODIFY_GRP_ATTR, data: { groupID: i5, avChatRoomKey: s5, mainSequence: t5, groupAttributeList: e5 } }).then(function(e6) {
          M3.l("".concat(o5, " ok."));
          var e6 = e6.data, t6 = e6.mainSequence, e6 = d3(e6.groupAttributeList);
          return e6.forEach(function(e7) {
            e7.value = a5[e7.key];
          }), n5._groupAttributesCopy = n5._getCachedAttributes({ groupID: i5 }), n5._refreshCachedGroupAttributes({ groupID: i5, remoteMainSequence: t6, groupAttributeList: e6, operationType: 2 }), n5._emitGroupAttributesUpdated(i5), c5.end(), T4({ groupAttributes: a5 });
        }).catch(function(e6) {
          return c5.setError(e6).end(), E4(e6);
        });
      } }, { key: "deleteGroupAttributes", value: function(e5) {
        var t5 = this, n5 = e5.groupID, e5 = e5.keyList, e5 = void 0 === e5 ? [] : e5, o5 = this._getLocalGroupAttributes(n5), i5 = o5.remoteMainSequence, a5 = o5.avChatRoomKey, s5 = o5.attributes, r5 = d3(s5.keys()), o5 = G2.CLEAR_GRP_ATTR, c5 = 3, a5 = { groupID: n5, avChatRoomKey: a5, mainSequence: i5 }, u5 = [], l5 = (0 < e5.length && (r5 = [], o5 = G2.DEL_GRP_ATTR, c5 = 4, e5.forEach(function(e6) {
          var t6 = 0;
          s5.has(e6) && (t6 = s5.get(e6).sequence, r5.push(e6)), u5.push({ key: e6, sequence: t6 });
        }), a5.groupAttributeList = u5), new P3("deleteGroupAttributes"));
        return l5.setMessage("groupID:".concat(n5, " mainSequence:").concat(i5, " keyList:").concat(e5, " proto:").concat(o5)), this._grpM.req({ P: o5, data: a5 }).then(function(e6) {
          M3.l("".concat(t5._n, ".").concat("deleteGroupAttributes", " ok. groupID:").concat(n5));
          e6 = e6.data.mainSequence;
          return t5._groupAttributesCopy = t5._getCachedAttributes({ groupID: n5 }), t5._refreshCachedGroupAttributes({ groupID: n5, remoteMainSequence: e6, groupAttributeList: u5, operationType: c5 }), t5._emitGroupAttributesUpdated(n5), l5.end(), T4({ keyList: r5 });
        }).catch(function(e6) {
          return l5.setError(e6).end(), E4(e6);
        });
      } }, { key: "getGroupAttributes", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".").concat("getGroupAttributes"), i5 = t5.groupID, e5 = this._getLocalGroupAttributes(i5), a5 = e5.avChatRoomKey, s5 = e5.lastUpdateTime, r5 = e5.localMainSequence, e5 = e5.remoteMainSequence, c5 = new P3("getGroupAttributes");
        if (c5.setMessage("groupID:".concat(i5, " localMainSequence:").concat(r5, " remoteMainSequence:").concat(e5, " keyList:").concat(t5.keyList)), Date.now() - s5 >= this.CACHE_EXPIRE_TIME || r5 < e5)
          return this._getGroupAttributes({ groupID: i5, avChatRoomKey: a5 }).then(function(e6) {
            c5.setMoreMessage("get attributes from remote. count:".concat(e6.length)).end(), M3.l("".concat(o5, " from remote. groupID:").concat(i5));
            e6 = n5._getCachedAttributes(t5);
            return T4({ groupAttributes: e6 });
          }).catch(function(e6) {
            return c5.setError(e6).end(), E4(e6);
          });
        c5.setMoreMessage("get attributes from cache").end(), M3.l("".concat(o5, " from cache. groupID:").concat(i5));
        s5 = this._getCachedAttributes(t5);
        return D2({ groupAttributes: s5 });
      } }, { key: "_getGroupAttributes", value: function(o5) {
        var i5 = this, e5 = 0;
        return N3(o5.avChatRoomKey) || (e5 = 1), this._grpM.req({ P: G2.GET_GRP_ATTR, data: y2(y2({}, o5), {}, { groupType: e5 }) }).then(function(e6) {
          M3.l("".concat(i5._n, "._getGroupAttributes ok. groupID:").concat(o5.groupID));
          var e6 = e6.data, t5 = e6.mainSequence, e6 = e6.groupAttributeList, n5 = d3(e6);
          return N3(t5) || i5._refreshCachedGroupAttributes({ groupID: o5.groupID, remoteMainSequence: t5, groupAttributeList: n5, operationType: 5 }), e6;
        }).catch(function(e6) {
          return E4(e6);
        });
      } }, { key: "_refreshCachedGroupAttributes", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.remoteMainSequence, o5 = e5.groupAttributeList, e5 = e5.operationType;
        if (this._hasLocalGroupAttributes(t5)) {
          var i5 = this._getLocalGroupAttributes(t5), a5 = i5.localMainSequence;
          if (5 === e5 || n5 - a5 == 1)
            i5.remoteMainSequence = n5, i5.localMainSequence = n5, i5.lastUpdateTime = Date.now(), this._updateCachedAttributes({ groupAttributes: i5, groupAttributeList: o5, operationType: e5 });
          else {
            if (a5 === n5)
              return;
            i5.remoteMainSequence = n5;
          }
          this._groupAttributesMap.set(t5, i5);
          o5 = "operationType:".concat(e5, " localMainSequence:").concat(a5, " remoteMainSequence:").concat(n5);
          M3.l("".concat(this._n, "._refreshCachedGroupAttributes. ").concat(o5));
        }
      } }, { key: "_getCachedAttributes", value: function(e5) {
        var t5 = e5.groupID, e5 = e5.keyList, e5 = void 0 === e5 ? [] : e5, n5 = {};
        if (this._hasLocalGroupAttributes(t5)) {
          var o5 = this._getLocalGroupAttributes(t5).attributes;
          if (0 < e5.length)
            e5.forEach(function(e6) {
              o5.has(e6) && (n5[e6] = o5.get(e6).value);
            });
          else {
            var i5, a5 = F2(o5.keys());
            try {
              for (a5.s(); !(i5 = a5.n()).done; ) {
                var s5 = i5.value;
                n5[s5] = o5.get(s5).value;
              }
            } catch (e6) {
              a5.e(e6);
            } finally {
              a5.f();
            }
          }
        }
        return n5;
      } }, { key: "_updateCachedAttributes", value: function(e5) {
        var o5 = e5.groupAttributes, t5 = e5.groupAttributeList, e5 = e5.operationType;
        3 !== e5 ? 4 !== e5 ? (1 === e5 && o5.attributes.clear(), t5.forEach(function(e6) {
          var t6 = e6.key, n5 = e6.value, e6 = e6.sequence;
          o5.attributes.set(t6, { value: n5, sequence: e6 });
        })) : t5.forEach(function(e6) {
          o5.attributes.delete(e6.key);
        }) : o5.attributes.clear();
      } }, { key: "_hasLocalGroupAttributes", value: function(e5) {
        return this._groupAttributesMap.has(e5);
      } }, { key: "_getLocalGroupAttributes", value: function(e5) {
        return this._hasLocalGroupAttributes(e5) || this.initGroupAttributesCache({ groupID: e5 }), this._groupAttributesMap.get(e5);
      } }, { key: "_transformGroupAttributes", value: function(t5) {
        var n5 = [];
        return Object.keys(t5).forEach(function(e5) {
          n5.push({ key: e5, value: t5[e5] });
        }), n5;
      } }, { key: "_emitGroupAttributesUpdated", value: function(e5) {
        var t5 = this._getCachedAttributes({ groupID: e5 }), n5 = this._computeAttrChangedInfo(t5), o5 = n5.updatedKeyList, n5 = n5.deletedKeyList;
        M3.l("".concat(this._n, "._emitGroupAttributesUpdated update:").concat(o5.length, ", delete:").concat(n5.length)), 0 === o5.length && 0 === n5.length || this._grpM.emitOEvt(h4.GROUP_ATTRIBUTES_UPDATED, { groupID: e5, groupAttributes: t5, updatedKeyList: o5, deletedKeyList: n5 });
      } }, { key: "_computeAttrChangedInfo", value: function(t5) {
        var n5 = this, o5 = [], i5 = [];
        return Object.keys(t5).forEach(function(e5) {
          t5[e5] !== n5._groupAttributesCopy[e5] && o5.push(e5);
        }), Object.keys(this._groupAttributesCopy).forEach(function(e5) {
          N3(t5[e5]) && i5.push(e5);
        }), this._groupAttributesCopy = {}, { updatedKeyList: o5, deletedKeyList: i5 };
      } }, { key: "deleteLocalGroupAttributes", value: function(e5) {
        this._hasLocalGroupAttributes(e5) && this._groupAttributesMap.delete(e5);
      } }, { key: "reset", value: function() {
        this._groupAttributesMap.clear(), this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4;
      } }]), Jo = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "GroupCountersHandler", this._groupCountersMap = /* @__PURE__ */ new Map(), this.EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      }, [{ key: "_onCloudConfig", value: function() {
        var e5 = this._grpM.getCloudConfig("grp_counter_expire_time");
        N3(e5) || (this.EXPIRE_TIME = Number(e5));
      } }, { key: "isGroupCountersNotice", value: function(e5) {
        var t5 = e5.to, e5 = e5.elements.groupCounterInfo, n5 = false;
        return S3(e5) || (this._onGroupCountersUpdated({ groupID: t5, groupCounterInfo: e5 }), n5 = true), n5;
      } }, { key: "_onGroupCountersUpdated", value: function(e5) {
        var o5 = this, i5 = e5.groupID;
        e5.groupCounterInfo.forEach(function(e6) {
          var t5 = e6.type, n5 = e6.groupCounterSeq, e6 = e6.counterList, e6 = void 0 === e6 ? [] : e6;
          0 !== t5 && 2 !== t5 || (o5._updateLocalGroupCounters({ groupID: i5, groupCounterSeq: n5, counterList: e6 }), e6.forEach(function(e7) {
            o5._grpM.emitOEvt(h4.GROUP_COUNTER_UPDATED, { groupID: i5, key: e7.key, value: e7.value });
          })), 1 === t5 && o5._deleteLocalGroupCounters({ groupID: i5, groupCounterSeq: n5, counterList: e6 });
        }), M3.l("".concat(this._n, "._onGroupCountersUpdated groupID:").concat(i5));
      } }, { key: "initGroupCountersCache", value: function(e5) {
        var t5 = e5.groupID, e5 = e5.avChatRoomKey;
        this._groupCountersMap.set(t5, { lastUpdateTime: 0, groupCounterSeq: 0, counters: /* @__PURE__ */ new Map(), avChatRoomKey: e5 }), M3.l("".concat(this._n, ".initGroupCountersCache groupID:").concat(t5, " avChatRoomKey:").concat(e5));
      } }, { key: "setGroupCounters", value: function(e5) {
        var t5, n5, o5, i5, a5;
        return this._grpM.canIUse(g4.GRP_COUNTER) ? (t5 = "".concat(this._n, ".").concat("setGroupCounters"), n5 = e5.groupID, e5 = e5.counters, e5 = this._convertObjectToList(e5), o5 = this._getLocalGroupCounters(n5).avChatRoomKey, i5 = "groupID:".concat(n5, " count:").concat(e5.length), (a5 = new P3("setGroupCounters")).setMessage("".concat(i5)), M3.l("".concat(t5, ". ").concat(i5)), this._updateGroupCounters({ groupID: n5, counterList: e5, avChatRoomKey: o5, mode: "Set" }).then(function(e6) {
          return a5.end(), M3.l("".concat(t5, " ok.")), T4({ counters: e6 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._grpM.noUse("setGroupCounters");
      } }, { key: "increaseGroupCounter", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5 = "increaseGroupCounter";
        return this._grpM.canIUse(g4.GRP_COUNTER) ? (t5 = "".concat(this._n, ".").concat(r5), n5 = e5.groupID, o5 = e5.key, e5 = e5.value, i5 = this._getLocalGroupCounters(n5).avChatRoomKey, a5 = "groupID:".concat(n5, " key:").concat(o5, " value:").concat(e5), (s5 = new P3(r5)).setMessage("".concat(a5)), M3.l("".concat(t5, ". ").concat(a5)), this._updateGroupCounters({ groupID: n5, counterList: [{ key: o5, value: e5 }], avChatRoomKey: i5, mode: "Increase" }).then(function(e6) {
          return s5.end(), M3.l("".concat(t5, " ok.")), T4({ counters: e6 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._grpM.noUse(r5);
      } }, { key: "decreaseGroupCounter", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5 = "decreaseGroupCounter";
        return this._grpM.canIUse(g4.GRP_COUNTER) ? (t5 = "".concat(this._n, ".").concat(r5), n5 = e5.groupID, o5 = e5.key, e5 = e5.value, i5 = this._getLocalGroupCounters(n5).avChatRoomKey, a5 = "groupID:".concat(n5, " key:").concat(o5, " value:").concat(e5), (s5 = new P3(r5)).setMessage("".concat(a5)), M3.l("".concat(t5, ". ").concat(a5)), this._updateGroupCounters({ groupID: n5, counterList: [{ key: o5, value: e5 }], avChatRoomKey: i5, mode: "Decrease" }).then(function(e6) {
          return s5.end(), M3.l("".concat(t5, " ok.")), T4({ counters: e6 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._grpM.noUse(r5);
      } }, { key: "getGroupCounters", value: function(e5) {
        var t5 = this;
        if (!this._grpM.canIUse(g4.GRP_COUNTER))
          return this._grpM.noUse("getGroupCounters");
        var n5 = "".concat(this._n, ".").concat("getGroupCounters"), o5 = e5.groupID, e5 = e5.keyList, i5 = void 0 === e5 ? [] : e5, e5 = this._getLocalGroupCounters(o5), a5 = e5.avChatRoomKey, e5 = e5.lastUpdateTime, s5 = new P3("getGroupCounters");
        if (s5.setMessage("groupID:".concat(o5)), Date.now() - e5 >= this.EXPIRE_TIME)
          return this._getRemoteGroupCounters({ groupID: o5, avChatRoomKey: a5 }).then(function(e6) {
            s5.setMoreMessage("from remote. count:".concat(e6.length)).end(), M3.l("".concat(n5, " from remote. groupID:").concat(o5));
            e6 = t5._getLocalCounters(o5, i5);
            return T4({ counters: e6 });
          }).catch(function(e6) {
            return s5.setError(e6).end(), E4(e6);
          });
        s5.setMoreMessage("from cache").end(), M3.l("".concat(n5, " from cache. groupID:").concat(o5));
        e5 = this._getLocalCounters(o5, i5);
        return D2({ counters: e5 });
      } }, { key: "_getRemoteGroupCounters", value: function(n5) {
        var o5 = this;
        return this._grpM.req({ P: G2.GET_GRP_COUNTER, data: y2({}, n5) }).then(function(e5) {
          var e5 = e5.data, t5 = e5.counterList, t5 = void 0 === t5 ? [] : t5, e5 = e5.groupCounterSeq;
          return o5._updateLocalGroupCounters({ groupID: n5.groupID, counterList: t5, groupCounterSeq: e5 }), M3.l("".concat(o5._n, "._getRemoteGroupCounters ok. groupID:").concat(n5.groupID)), t5;
        }).catch(function(e5) {
          return E4(e5);
        });
      } }, { key: "_convertObjectToList", value: function(t5) {
        var n5 = [];
        return Object.keys(t5).forEach(function(e5) {
          n5.push({ key: e5, value: t5[e5] });
        }), n5;
      } }, { key: "_updateGroupCounters", value: function(e5) {
        var t5 = "".concat(this._n, "._updateGroupCounters"), n5 = e5.groupID, o5 = e5.avChatRoomKey, i5 = e5.mode;
        return M3.l("".concat(t5, ". groupID:").concat(n5, " avChatRoomKey:").concat(o5, " mode:").concat(i5)), this._grpM.req({ P: G2.UPDATE_GRP_COUNTER, data: y2({}, e5) }).then(function(e6) {
          M3.l("".concat(t5, " ok."));
          var e6 = e6.data.counterList, n6 = {};
          return (void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.key, e7 = e7.value;
            n6[t6] = e7;
          }), n6;
        }).catch(function(e6) {
          return E4(e6);
        });
      } }, { key: "_hasLocalGroupCounters", value: function(e5) {
        return this._groupCountersMap.has(e5);
      } }, { key: "_getLocalGroupCounters", value: function(e5) {
        return this._hasLocalGroupCounters(e5) || this.initGroupCountersCache({ groupID: e5 }), this._groupCountersMap.get(e5);
      } }, { key: "_updateLocalGroupCounters", value: function(e5) {
        var n5, t5, o5, i5 = e5.groupID, a5 = e5.counterList, a5 = void 0 === a5 ? [] : a5, e5 = e5.groupCounterSeq;
        this._hasLocalGroupCounters(i5) && (o5 = this._getLocalGroupCounters(i5), n5 = o5.counters, t5 = o5.avChatRoomKey, o5 = o5.groupCounterSeq, 0 < e5 && e5 < o5 || (a5.forEach(function(e6) {
          var t6 = e6.key, e6 = e6.value;
          n5.set(t6, e6);
        }), this._groupCountersMap.set(i5, { lastUpdateTime: Date.now(), groupCounterSeq: e5, counters: n5, avChatRoomKey: t5 })));
      } }, { key: "_deleteLocalGroupCounters", value: function(e5) {
        var t5, n5, o5 = e5.groupID, i5 = e5.counterList, i5 = void 0 === i5 ? [] : i5, e5 = e5.groupCounterSeq;
        this._hasLocalGroupCounters(o5) && (n5 = this._getLocalGroupCounters(o5), t5 = n5.counters, n5 = n5.avChatRoomKey, i5.forEach(function(e6) {
          t5.delete(e6.key);
        }), this._groupCountersMap.set(o5, { lastUpdateTime: Date.now(), groupCounterSeq: e5, counters: t5, avChatRoomKey: n5 }));
      } }, { key: "_getLocalCounters", value: function(e5, t5) {
        var n5 = {};
        if (this._hasLocalGroupCounters(e5)) {
          var o5 = this._getLocalGroupCounters(e5).counters;
          if (0 < t5.length)
            t5.forEach(function(e6) {
              o5.has(e6) && (n5[e6] = o5.get(e6));
            });
          else {
            var i5, a5 = F2(o5.keys());
            try {
              for (a5.s(); !(i5 = a5.n()).done; ) {
                var s5 = i5.value;
                n5[s5] = o5.get(s5);
              }
            } catch (e6) {
              a5.e(e6);
            } finally {
              a5.f();
            }
          }
        }
        return n5;
      } }, { key: "reset", value: function() {
        this._groupCountersMap.clear(), this.EXPIRE_TIME = 3e4;
      } }]), zo = e4(function e5(t5) {
        p4(this, e5);
        var n5 = t5.manager, o5 = t5.groupID, i5 = t5.onInit, a5 = t5.onSuccess, t5 = t5.onFail;
        this._n = "Polling", this._manager = n5, this._grpM = n5._grpM, this._onInit = i5, this._onSuccess = a5, this._onFail = t5, this._groupID = o5, this._timeoutID = -1, this._isRunning = false, this._proto = G2.AV_POLLING;
      }, [{ key: "start", value: function() {
        var e5 = this._grpM.isLoggedIn();
        e5 || (this._proto = G2.AV_NOAUTH_POLLING), M3.l("".concat(this._n, ".start pollingInterval:").concat(this._manager.getPollingInterval(), " isLoggedIn:").concat(e5)), this._isRunning = true, this._request();
      } }, { key: "isRunning", value: function() {
        return this._isRunning;
      } }, { key: "_request", value: function() {
        var t5 = this, e5 = this._onInit(this._groupID);
        this._grpM.req({ P: this._proto, data: e5 }).then(function(e6) {
          t5._onSuccess(t5._groupID, e6), t5.isRunning() && (-1 < t5._timeoutID && clearTimeout(t5._timeoutID), t5._timeoutID = setTimeout(t5._request.bind(t5), t5._manager.getPollingInterval()));
        }).catch(function(e6) {
          t5._onFail(t5._groupID, e6), t5.isRunning() && (-1 < t5._timeoutID && clearTimeout(t5._timeoutID), t5._timeoutID = setTimeout(t5._request.bind(t5), t5._manager.MAX_POLLING_INTERVAL));
        });
      } }, { key: "stop", value: function() {
        M3.l("".concat(this._n, ".stop")), -1 < this._timeoutID && (clearTimeout(this._timeoutID), this._timeoutID = -1), this._isRunning = false;
      } }, { key: "getPollingTimerID", value: function() {
        return this._timeoutID;
      } }]), Xo = { 3: true, 4: true, 5: true, 6: true, 17: true, 20: true, 21: true, 100: true }, Zo = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "AVChatRoomHandler", this._joinedGroupMap = /* @__PURE__ */ new Map(), this._pollingRequestInfoMap = /* @__PURE__ */ new Map(), this._pollingInstanceMap = /* @__PURE__ */ new Map(), this._seqSll = new wo(200), this._IDSll = new wo(100), this._reportMessageStackedCount = 0, this._onlineMemberCountMap = /* @__PURE__ */ new Map(), this.DEFAULT_EXPIRE_TIME = 60, this.DEFAULT_POLLING_INTERVAL = 300, this.MAX_POLLING_INTERVAL = 2e3, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0, this._startBroadcastSeq = 1, this._broadcastMessageIDMap = /* @__PURE__ */ new Map(), this.DEFAULT_POLLING_SIMPLIFIED_MSG = 0;
      }, [{ key: "hasJoinedAVChatRoom", value: function() {
        var e5 = [];
        return 0 < (e5 = 0 < this._joinedGroupMap.size ? d3(this._joinedGroupMap.values()).filter(function(e6) {
          return e6.type === R3.GRP_AVCHATROOM;
        }) : e5).length;
      } }, { key: "getJoinedLiveList", value: function() {
        var e5 = [];
        return e5 = 0 < this._joinedGroupMap.size ? d3(this._joinedGroupMap.values()).filter(function(e6) {
          return e6.type === R3.GRP_LIVE;
        }) : e5;
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e5) {
        return this._joinedGroupMap.has(e5);
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return 0 < this._joinedGroupMap.size ? d3(this._joinedGroupMap.keys()) : [];
      } }, { key: "_updatedata", value: function(e5) {
        var t5 = this._pollingRequestInfoMap.get(e5);
        return e5 === d3(this._pollingInstanceMap.keys())[0] ? y2(y2({}, t5), {}, { startBroadcastSeq: this._startBroadcastSeq, simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG }) : y2(y2({}, t5), {}, { simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG });
      } }, { key: "_handleSuccess", value: function(e5, t5) {
        var n5, o5 = t5.data, i5 = o5.key, a5 = o5.nextSeq, s5 = o5.rspMsgList, r5 = o5.errorCode, c5 = o5.nextBroadcastSeq, o5 = o5.broadcastMessageList;
        0 !== r5 ? (r5 = this._pollingRequestInfoMap.get(e5), n5 = new P3("longPollingAVError"), r5 = r5 ? "".concat(r5.key, "-").concat(r5.startSeq) : "requestInfo is undefined", n5.setMessage("".concat(e5, "-").concat(r5, "-").concat(t5.errorInfo)).setCode(t5.errorCode).end(true)) : this.checkJoinedAVChatRoomByID(e5) && (C4(i5) && A3(a5) && this._pollingRequestInfoMap.set(e5, { key: i5, startSeq: a5 }), A3(c5) && c5 > this._startBroadcastSeq && (this._startBroadcastSeq = c5), O3(s5) && 0 < s5.length ? (s5.forEach(function(e6) {
          e6.to = e6.groupID;
        }), this.onMessage(s5, e5)) : (this._pollingNoMessageCount += 1, this._pollingNoMessageCount === this.DEFAULT_POLLING_NO_MESSAGE_COUNT && (this._pollingInterval = this.DEFAULT_POLLING_INTERVAL + this.DEFAULT_POLLING_INTERVAL_PLUS)), this._onBroadcastMessage(o5));
      } }, { key: "_handleFailure", value: function(e5, t5) {
      } }, { key: "onMessage", value: function(e5, t5) {
        if (O3(e5) && 0 !== e5.length) {
          var n5 = "".concat(this._n, ".onMessage"), o5 = (t5 && (n5 += " groupID:".concat(t5)), 0 !== this._pollingNoMessageCount && (this._pollingNoMessageCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL), null), i5 = [], a5 = this._get(11), s5 = this._get(26), r5 = e5.length, c5 = (1 < r5 && e5.sort(function(e6, t6) {
            return e6.sequence - t6.sequence;
          }), this._get(12).isUnlimitedAVChatRoom()), u5 = false;
          M3.getLevel() <= 0 && (t5 = e5.map(function(e6) {
            return e6.sequence;
          }), M3.l("".concat(n5, " count:").concat(t5.length, " sequenceList:").concat(t5)), t5.length = 0);
          for (var l5 = 0; l5 < r5; l5++) {
            var d4 = this.restoreMessageFromSimplified(e5[l5]);
            if (Xo[d4.event]) {
              if (6 === d4.event) {
                if (this._grpM.isGroupAttributesUpdatedNotice(d4))
                  continue;
                if (this._grpM.isGroupCountersNotice(d4))
                  continue;
              }
              if (20 !== d4.event)
                if (21 !== d4.event)
                  if (100 !== d4.event) {
                    var o5 = this.packMessage(d4, d4.event), p5 = 1 === d4.isModified, u5 = 1 === d4.isHistoryMessage;
                    if (!c5) {
                      if (this._seqSll.has(o5.sequence))
                        continue;
                      this._seqSll.set(o5.sequence);
                    }
                    var _4 = this._IDSll.has(o5.ID);
                    _4 ? M3.w("".concat(n5, " ID:").concat(o5.ID, " has:").concat(_4)) : (this._IDSll.set(o5.ID), _4 = false, !u5 && this._isMessageSentByCurrentInstance(o5) ? p5 && (_4 = true, o5.isModified = p5, a5.updateMsgIsModifiedProp(o5)) : _4 = true, _4 && (o5.conversationType === R3.CONV_SYSTEM && 5 === o5.payload.operationType && this._onGroupDismissed(o5.payload.groupProfile.groupID), u5 || o5.conversationType === R3.CONV_SYSTEM || (p5 = o5.conversationID.replace(R3.CONV_GROUP, ""), this._pollingInstanceMap.has(p5) ? this._grpM.isLoggedIn() && s5.addMessageSequence({ key: Zn, message: o5 }) : (o5.type !== R3.MSG_GRP_TIP && 0 < o5.clientTime && s5.addMessageDelay(o5.clientTime), s5.addMessageSequence({ key: Xn, message: o5 }))), i5.push(o5)));
                  } else
                    this.onRoomCustomData(d4);
                else
                  this._get(34).onMessageReactionNotify({ event: 21, dataList: d4.elements.messageReactionNotifyList });
              else
                this.handleMessageRevokedNotice(d4);
            } else
              M3.w("".concat(n5, ". unknown event:").concat(d4.event));
          }
          0 !== i5.length && (0 < (t5 = St2(i5)).length && this._grpM.emitOEvt(h4.MESSAGE_MODIFIED, t5), u5 || 0 < (t5 = this.packConversationOption(i5)).length && a5.onNewMessage({ conversationOptionsList: t5, isInstantMessage: true }), this._checkMessageStacked(i5), 0 < (t5 = Rt2(i5)).length && this._grpM.emitOEvt(h4.MESSAGE_RECEIVED, t5), i5.length = 0);
        }
      } }, { key: "handleMessageRevokedNotice", value: function(e5) {
        var t5 = this, i5 = e5.groupID, n5 = e5.elements.revokeMsgList, a5 = e5.revokerInfo, s5 = [];
        n5.forEach(function(e6) {
          var t6 = e6.tinyID, n6 = e6.clientTime, o5 = e6.random, e6 = e6.sequence, t6 = { conversationID: "".concat(R3.CONV_GROUP).concat(i5), ID: "".concat(t6, "-").concat(n6, "-").concat(o5), revoker: a5.revoker, revokeReason: a5.reason || "", revokerInfo: { userID: a5.revoker, nick: "", avatar: "" }, sequence: e6 };
          s5.push(t6);
        }), 0 !== s5.length && this._get(11).updateRevokerInfo(s5).then(function(e6) {
          t5._grpM.emitOEvt(h4.MESSAGE_REVOKED, e6);
        });
      } }, { key: "isBroadcastOrNormal", value: function(e5) {
        return 3 === e5 || 17 === e5;
      } }, { key: "isGroupTip", value: function(e5) {
        return 4 === e5 || 6 === e5;
      } }, { key: "isGroupSystemNotice", value: function(e5) {
        return 5 === e5;
      } }, { key: "restoreGroupTipElements", value: function() {
        var e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t5 = e5.operatorInfo, t5 = void 0 === t5 ? {} : t5, n5 = e5.operatorID, o5 = e5.userIDList, o5 = void 0 === o5 ? [] : o5, i5 = e5.operationType, i5 = (A3(e5.groupJoinType) || 1 !== i5 && 2 !== i5 || (e5.groupJoinType = 2 === i5 ? 0 : 1), t5.userID), a5 = t5.avatar, t5 = t5.nick, n5 = (e5.operatorInfo = { userID: void 0 === i5 ? n5 : i5, avatar: void 0 === a5 ? "" : a5, nick: void 0 === t5 ? "" : t5 }, o5.map(function(e6) {
          return { userID: e6 };
        }));
        return e5.memberInfoList = e5.memberInfoList || n5, e5;
      } }, { key: "restoreMessageFromSimplified", value: function(n5) {
        var e5, t5, o5, i5 = n5.event;
        return this.isBroadcastOrNormal(i5) && (n5.cloudCustomData = n5.cloudCustomData || "", n5.elements = n5.elements.map(function(e6) {
          var t6;
          return e6.type === R3.MSG_CUSTOM && (t6 = e6.content, e6.content = y2({ data: "", description: "", extension: "" }, void 0 === t6 ? {} : t6)), e6;
        })), (this.isGroupTip(i5) || this.isGroupSystemNotice(i5)) && (n5.from = n5.from || "@TIM#SYSTEM"), this.isGroupTip(i5) && (n5.elements = this.restoreGroupTipElements(n5.elements), t5 = (o5 = void 0 === (o5 = n5.elements) ? {} : o5).operationType, e5 = o5.operatorInfo, 1 === t5) && (t5 = [{ userID: (void 0 === e5 ? {} : e5).userID }], o5.memberInfoList = o5.memberInfoList || t5), this.isGroupSystemNotice(i5) && (o5 = (e5 = n5.elements).memberInfoList, t5 = e5.operatorInfo, n5.elements.memberInfoList = y2({ userID: n5.elements.operatorID, avatar: "", nick: "" }, o5 = o5 || (void 0 === t5 ? {} : t5)), n5.elements = y2({ authentication: "", remarkInfo: "", messageKey: 1e3 * n5.time }, n5.elements), i5 = Object.keys(n5.elements).filter(function(e6) {
          return "operatorInfo" !== e6;
        }).reduce(function(e6, t6) {
          return y2(y2({}, e6), {}, q2({}, t6, n5.elements[t6]));
        }, {}), n5.elements = i5), n5;
      } }, { key: "_onGroupDismissed", value: function(e5) {
        M3.l("".concat(this._n, "._onGroupDismissed groupID:").concat(e5)), this._grpM.deleteLocalGroupAndConversation(e5), this.reset(e5);
      } }, { key: "_checkMessageStacked", value: function(e5) {
        var t5 = "MessageStacked", e5 = e5.length;
        100 <= e5 && (this._grpM.warn(t5, e5), this._reportMessageStackedCount < 5) && (new P3(t5).setMessage("count:".concat(e5, " groupID:").concat(d3(this._joinedGroupMap.keys()))).setLevel("warning").end(), this._reportMessageStackedCount += 1);
      } }, { key: "_isMessageSentByCurrentInstance", value: function(e5) {
        return !!this._get(11).isMessageSentByCurrentInstance(e5);
      } }, { key: "packMessage", value: function(e5, t5) {
        e5.currentUser = this._grpM.getMyUserID(), e5.conversationType = 5 === t5 ? R3.CONV_SYSTEM : R3.CONV_GROUP, e5.isSystemMessage = !!e5.isSystemMessage;
        var n5 = new Do(e5), e5 = this.packElements(e5, t5), t5 = this._grpM.getFileDownloadProxy(), o5 = this._grpM.getDownloadFileAuthKey(), i5 = this._get(17).getFileDNList();
        return n5.setElement(e5, t5, o5, i5), n5;
      } }, { key: "packElements", value: function(e5, t5) {
        return 4 === t5 || 6 === t5 ? (this._updateMemberCountByGroupTips(e5), { type: R3.MSG_GRP_TIP, content: y2(y2({}, e5.elements), {}, { groupProfile: e5.groupProfile }) }) : 5 === t5 ? { type: R3.MSG_GRP_SYS_NOTICE, content: y2(y2({}, e5.elements), {}, { groupProfile: y2(y2({}, e5.groupProfile), {}, { groupID: e5.groupID }) }) } : e5.elements;
      } }, { key: "packConversationOption", value: function(e5) {
        for (var t5 = /* @__PURE__ */ new Map(), n5 = 0; n5 < e5.length; n5++) {
          var o5, i5 = e5[n5], a5 = i5.conversationID;
          t5.has(a5) ? "in" === ((o5 = t5.get(a5)).lastMessage = i5).flow && o5.unreadCount++ : t5.set(a5, { conversationID: i5.conversationID, unreadCount: "out" === i5.flow ? 0 : 1, type: i5.conversationType, subType: i5.conversationSubType, lastMessage: i5 });
        }
        return d3(t5.values());
      } }, { key: "_updateMemberCountByGroupTips", value: function(e5) {
        var t5, n5, o5, i5 = e5.groupProfile.groupID, e5 = e5.elements.onlineMemberInfo, e5 = void 0 === e5 ? void 0 : e5;
        S3(e5) || (t5 = void 0 === (t5 = e5.onlineMemberNum) ? 0 : t5, e5 = void 0 === (e5 = e5.expireTime) ? this.DEFAULT_EXPIRE_TIME : e5, n5 = this._onlineMemberCountMap.get(i5) || {}, o5 = Date.now(), S3(n5) ? Object.assign(n5, { lastReqTime: 0, lastSyncTime: 0, latestUpdateTime: o5, memberCount: t5, expireTime: e5 }) : (n5.latestUpdateTime = o5, n5.memberCount = t5), this._onlineMemberCountMap.set(i5, n5));
      } }, { key: "_onBroadcastMessage", value: function(e5) {
        if (!S3(e5)) {
          for (var t5 = [], n5 = e5.length, o5 = null, i5 = 0; i5 < n5; i5++) {
            var a5 = this.restoreMessageFromSimplified(e5[i5]);
            Xo[a5.event] ? ((o5 = this.packMessage(a5, a5.event)).isBroadcastMessage = true, this._broadcastMessageIDMap.has(o5.ID) || (t5.push(o5), this._broadcastMessageIDMap.set(o5.ID, 1))) : M3.w("".concat(this._n, "._onBroadcastMessage unknown event:").concat(a5.event));
          }
          0 < t5.length && this._grpM.emitOEvt(h4.MESSAGE_RECEIVED, t5);
        }
      } }, { key: "start", value: function(e5) {
        var t5;
        this._pollingInstanceMap.has(e5) ? (t5 = this._pollingInstanceMap.get(e5)).isRunning() || t5.start() : ((t5 = new zo({ manager: this, groupID: e5, onInit: this._updatedata.bind(this), onSuccess: this._handleSuccess.bind(this), onFail: this._handleFailure.bind(this) })).start(), this._pollingInstanceMap.set(e5, t5), M3.l("".concat(this._n, ".start groupID:").concat(e5)));
      } }, { key: "handleJoinResult", value: function(o5) {
        var i5 = this;
        return this._preCheck(o5.group).then(function() {
          var e5 = o5.longPollingKey, t5 = o5.group, n5 = t5.groupID;
          return i5._joinedGroupMap.set(n5, t5), i5._grpM.updateGroupMap([t5]), i5._grpM.deleteUnjoinedAVChatRoom(n5), i5._grpM.emitGroupListUpdate(true, false), N3(e5) ? D2({ status: Qe2, group: t5 }) : Promise.resolve();
        });
      } }, { key: "startRunLoop", value: function(i5) {
        var a5 = this;
        return this.handleJoinResult(i5).then(function() {
          var e5 = i5.longPollingKey, t5 = i5.group, n5 = i5.startSeq, o5 = t5.groupID;
          return a5._pollingRequestInfoMap.set(o5, { key: e5, startSeq: void 0 === n5 ? 0 : n5 }), a5.start(o5), a5._grpM.isLoggedIn() ? D2({ status: Qe2, group: t5 }) : D2({ status: Qe2 });
        });
      } }, { key: "_preCheck", value: function(e5) {
        if (!this._get(12).isUnlimitedAVChatRoom() && this.hasJoinedAVChatRoom() && e5.type !== R3.GRP_LIVE) {
          var e5 = j2(this._joinedGroupMap.entries().next().value, 2), t5 = e5[0], e5 = e5[1];
          if (this._grpM.isLoggedIn() && e5.selfInfo.role !== R3.GRP_MBR_ROLE_OWNER && e5.ownerID !== this._grpM.getMyUserID())
            return this._grpM.quitGroup(t5);
          this._grpM.deleteLocalGroupAndConversation(t5), this.reset(t5);
        }
        return Promise.resolve();
      } }, { key: "joinWithoutAuth", value: function(e5) {
        var n5 = this, o5 = e5.groupID, i5 = "".concat(this._n, ".").concat("joinWithoutAuth"), a5 = new P3("joinWithoutAuth");
        return this._grpM.req({ P: G2.APPLY_JOIN_GRP_NOAUTH, data: e5 }).then(function(e6) {
          e6 = e6.data.longPollingKey;
          if (a5.setMessage("groupID:".concat(o5, " longPollingKey:").concat(e6)).end(true), N3(e6))
            return E4({ code: k2.CANNOT_JOIN_NON_AV_WITHOUT_LOGIN });
          M3.l("".concat(i5, " ok. groupID:").concat(o5)), n5._get(11).setCompleted("".concat(R3.CONV_GROUP).concat(o5));
          var t5 = new qo({ groupID: o5 });
          return n5.startRunLoop({ group: t5, longPollingKey: e6 }), T4({ status: Qe2 });
        }).catch(function(e6) {
          return M3.e("".concat(i5, " failed. groupID:").concat(o5, " error:"), e6), a5.setError(e6).setMessage("groupID:".concat(o5)).end(true), E4(e6);
        }).finally(function() {
          n5._grpM.get(14).reportAtOnce();
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(e5) {
        var t5 = this._onlineMemberCountMap.get(e5) || {}, n5 = Date.now();
        return S3(t5) || n5 - t5.lastSyncTime > 1e3 * t5.expireTime && 1e4 < n5 - t5.latestUpdateTime && 3e3 < n5 - t5.lastReqTime ? (t5.lastReqTime = n5, this._onlineMemberCountMap.set(e5, t5), this._getGroupOnlineMemberCount(e5).then(function(e6) {
          return T4({ memberCount: e6.memberCount });
        }).catch(function(e6) {
          return E4(e6);
        })) : D2({ memberCount: t5.memberCount });
      } }, { key: "_getGroupOnlineMemberCount", value: function(i5) {
        var a5 = this, s5 = "".concat(this._n, ".").concat("_getGroupOnlineMemberCount"), t5 = new P3("_getGroupOnlineMemberCount");
        return this._grpM.requestOnlineCount(i5).then(function(e5) {
          var t6 = a5._onlineMemberCountMap.get(i5) || {}, e5 = e5.data, n5 = e5.memberCount, n5 = void 0 === n5 ? 0 : n5, e5 = e5.expireTime, e5 = void 0 === e5 ? a5.DEFAULT_EXPIRE_TIME : e5, o5 = (M3.l("".concat(s5, " ok. groupID:").concat(i5, " memberCount:").concat(n5, " expireTime:").concat(e5)), Date.now());
          return S3(t6) && (t6.lastReqTime = o5), a5._onlineMemberCountMap.set(i5, Object.assign(t6, { lastSyncTime: o5, latestUpdateTime: o5, memberCount: n5, expireTime: e5 })), { memberCount: n5 };
        }).catch(function(e5) {
          return M3.w("".concat(s5, " failed. error:"), e5), t5.setCode(e5.code).setMessage("groupID:".concat(i5, " error:").concat(JSON.stringify(e5))).end(), Promise.reject(e5);
        });
      } }, { key: "_get", value: function(e5) {
        return this._grpM.get(e5);
      } }, { key: "setPollingInterval", value: function(e5) {
        N3(e5) || (A3(e5) ? this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = e5 : this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = parseInt(e5, 10));
      } }, { key: "setPollingIntervalPlus", value: function(e5) {
        N3(e5) || (A3(e5) ? this.DEFAULT_POLLING_INTERVAL_PLUS = e5 : this.DEFAULT_POLLING_INTERVAL_PLUS = parseInt(e5, 10));
      } }, { key: "setPollingNoMessageCount", value: function(e5) {
        N3(e5) || (A3(e5) ? this.DEFAULT_POLLING_NO_MESSAGE_COUNT = e5 : this.DEFAULT_POLLING_NO_MESSAGE_COUNT = parseInt(e5, 10));
      } }, { key: "setPollingSimplifiedMessage", value: function(e5) {
        N3(e5) || "0" !== e5 && "1" !== e5 || (this.DEFAULT_POLLING_SIMPLIFIED_MSG = parseInt(e5, 10));
      } }, { key: "getPollingInterval", value: function() {
        return this._pollingInterval;
      } }, { key: "onAVChatRoomMemberBanned", value: function(e5) {
        e5 = e5.payload.groupProfile.groupID;
        M3.l("".concat(this._n, ".onAVChatRoomMemberBanned groupID:").concat(e5)), this._grpM.deleteLocalGroupAndConversation(e5), this.reset(e5);
      } }, { key: "restartPolling", value: function() {
        M3.l("".concat(this._n, ".restartPolling count:").concat(this._pollingInstanceMap.size));
        var e5, t5 = F2(this._pollingInstanceMap.values());
        try {
          for (t5.s(); !(e5 = t5.n()).done; ) {
            var n5 = e5.value;
            n5.stop(), n5.start();
          }
        } catch (e6) {
          t5.e(e6);
        } finally {
          t5.f();
        }
      } }, { key: "getPollingTimerID", value: function(e5) {
        var t5;
        return this._pollingInstanceMap.has(e5) ? (t5 = this._pollingInstanceMap.get(e5).getPollingTimerID(), M3.l("".concat(this._n, ".getPollingTimerID groupID:").concat(e5, " timerID:").concat(t5)), t5) : -1;
      } }, { key: "hasPollingInstance", value: function(e5) {
        return this._pollingInstanceMap.has(e5);
      } }, { key: "onRoomCustomData", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.sequence, o5 = e5.time, e5 = e5.elements, e5 = e5 && e5.content;
        this._get(30).onRoomCustomDataReceived(e5), M3.l("".concat(this._n, ".onRoomCustomData groupID:").concat(t5, " sequence:").concat(n5, " time:").concat(o5, " data:").concat(e5));
      } }, { key: "reset", value: function(e5) {
        if (e5) {
          M3.l("".concat(this._n, ".reset groupID:").concat(e5));
          var t5 = this._pollingInstanceMap.get(e5);
          t5 && t5.stop(), this._pollingInstanceMap.delete(e5), this._joinedGroupMap.delete(e5), this._pollingRequestInfoMap.delete(e5), this._onlineMemberCountMap.delete(e5);
        } else {
          M3.l("".concat(this._n, ".reset all"));
          var n5, o5 = F2(this._pollingInstanceMap.values());
          try {
            for (o5.s(); !(n5 = o5.n()).done; )
              n5.value.stop();
          } catch (e6) {
            o5.e(e6);
          } finally {
            o5.f();
          }
          this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), this._onlineMemberCountMap.clear(), this._broadcastMessageIDMap.clear();
        }
        this._seqSll.reset(), this._IDSll.reset(), this._reportMessageStackedCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = 300, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0;
      } }]), Qo = e4(function e5(t5) {
        p4(this, e5), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this.isOnline = false, this.updateMember(t5);
      }, [{ key: "updateMember", value: function(e5) {
        N3(e5.onlineStatus) || (this.isOnline = "Online" === e5.onlineStatus);
        var t5 = [null, void 0, "", 0, NaN];
        e5.memberCustomField && Lt2(this.memberCustomField, e5.memberCustomField), dt2(this, e5, ["memberCustomField", "marks", "onlineStatus"], t5);
      } }, { key: "updateRole", value: function(e5) {
        ["Owner", "Admin", "Member"].indexOf(e5) < 0 || (this.role = e5);
      } }, { key: "updateMuteUntil", value: function(e5) {
        N3(e5) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e5) / 1e3));
      } }, { key: "updateNameCard", value: function(e5) {
        N3(e5) || (this.nameCard = e5);
      } }, { key: "updateMemberCustomField", value: function(e5) {
        e5 && Lt2(this.memberCustomField, e5);
      } }]), $o = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "GroupMemberHandler", this.groupMemberListMap = /* @__PURE__ */ new Map(), this.DEFAULT_MEMBER_INFO_FILTER = ["Role", "JoinTime", "NameCard", "ShutUpUntil", "OnlineStatus"], this._grpM.getIEmitInst().on(U3.PROFILE_UPDATED, this._onProfileUpdated, this);
      }, [{ key: "_onProfileUpdated", value: function(e5) {
        for (var n5 = this, o5 = e5.data, i5 = 0; i5 < o5.length; i5++)
          !function() {
            var t5 = o5[i5];
            n5.groupMemberListMap.forEach(function(e6) {
              e6.has(t5.userID) && e6.get(t5.userID).updateMember({ nick: t5.nick, avatar: t5.avatar });
            });
          }();
      } }, { key: "deleteGroupMemberList", value: function(e5) {
        this.groupMemberListMap.delete(e5);
      } }, { key: "getGroupMemberList", value: function(e5) {
        var t5, o5 = this, i5 = e5.groupID, n5 = e5.role, n5 = void 0 === n5 ? void 0 : n5, a5 = e5.offset, s5 = void 0 === a5 ? 0 : a5, a5 = e5.count, r5 = void 0 === a5 ? 15 : a5, a5 = e5.filter, e5 = void 0 === a5 ? void 0 : a5, c5 = "".concat(this._n, ".").concat("getGroupMemberList"), a5 = this._grpM.hasLocalGroup(i5);
        if (M3.l("".concat(c5, " groupID:").concat(i5, " role:").concat(n5, " offset:").concat(s5, " count:").concat(r5, " hasLocalGroup:").concat(a5)), !a5)
          return D2({ memberList: [], offset: 0 });
        if (this._grpM.getLocalGroupProfile(i5).type === R3.GRP_AVCHATROOM) {
          if (this._grpM.canIUse(g4.AV_MBR_LIST))
            return this._getAVChatRoomMemberList({ groupID: i5, offset: s5, filter: e5 });
          this._grpM.warn("LiveOnlineMember");
        }
        n5 !== R3.GRP_MBR_ROLE_ADMIN && n5 !== R3.GRP_MBR_ROLE_OWNER && n5 !== R3.GRP_MBR_ROLE_MEMBER || (t5 = n5);
        var u5 = new P3("getGroupMemberList"), l5 = 0, a5 = { groupID: i5, limit: 100 < r5 ? 100 : r5, memberRoleFilter: t5 ? [t5] : void 0, memberInfoFilter: this.DEFAULT_MEMBER_INFO_FILTER }, d4 = (Ot2({ groupID: i5 }) ? a5.next = "".concat(s5) : l5 = (a5.offset = s5) + r5, []);
        return this._grpM.req({ P: G2.GET_GRP_MBR_LIST, data: a5 }).then(function(e6) {
          var e6 = e6.data, t6 = e6.members, n6 = e6.memberNum, e6 = e6.next, e6 = void 0 === e6 ? void 0 : e6;
          return N3(e6) || (l5 = S3(e6) ? 0 : e6), O3(t6) && 0 !== t6.length ? (o5._grpM.hasLocalGroup(i5) && (o5._grpM.getLocalGroupProfile(i5).memberNum = n6), d4 = o5._updateLocalGroupMemberMap(i5, t6), o5._grpM.get(4).getUserProfile({ userIDList: t6.map(function(e7) {
            return e7.userID;
          }), tagList: [f3.NICK, f3.AVATAR] })) : (l5 = 0, Promise.resolve([]));
        }).then(function(e6) {
          var e6 = e6.data;
          return O3(e6) && 0 !== e6.length ? (e6 = e6.map(function(e7) {
            return { userID: e7.userID, nick: e7.nick, avatar: e7.avatar };
          }), o5._updateLocalGroupMemberMap(i5, e6), d4.length < r5 && (l5 = 0), u5.setMessage("groupID:".concat(i5, " offset:").concat(s5, " count:").concat(r5)).end(), M3.l("".concat(c5, " ok.")), T4({ memberList: d4, offset: l5 })) : D2({ memberList: [], offset: l5 });
        }).catch(function(e6) {
          return u5.setError(e6).end(), M3.e("".concat(c5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getAVChatRoomMemberList", value: function(e5) {
        var n5 = this, o5 = e5.groupID, t5 = e5.offset, e5 = e5.filter, i5 = "".concat(this._n, ".").concat("_getAVChatRoomMemberList"), a5 = new P3("_getAVChatRoomMemberList");
        return a5.setMessage("groupID:".concat(o5, " offset:").concat(t5, " filter:").concat(e5)), this._grpM.req({ P: G2.GET_AV_MBR_LIST, data: { groupID: o5, offset: t5, filter: e5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.memberList, t6 = void 0 === t6 ? [] : t6, e6 = e6.offset, e6 = void 0 === e6 ? 0 : e6, t6 = (a5.end(), M3.l("".concat(i5, " ok. member count:").concat(t6.length, ", next request timestamp:").concat(e6)), t6.map(function(e7) {
            return y2(y2({}, e7), {}, { onlineStatus: "Online" });
          })), t6 = n5._updateLocalGroupMemberMap(o5, t6);
          return T4({ memberList: t6, offset: e6 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getGroupMemberProfile", value: function(e5) {
        var t5, n5 = this, o5 = "getGroupMemberProfile", i5 = "".concat(this._n, ".").concat(o5), a5 = "groupID:".concat(e5.groupID), s5 = (5 < e5.userIDList.length ? a5 += " userIDList.length:".concat(e5.userIDList.length) : a5 += " userIDList:".concat(e5.userIDList), M3.l("".concat(i5, " ").concat(a5)), 50 < e5.userIDList.length && (e5.userIDList = e5.userIDList.slice(0, 50)), e5.groupID), r5 = e5.userIDList, i5 = this._grpM.getLocalGroupProfile(s5);
        return i5 && At2(i5.type) ? E4({ code: i5 = k2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(i5, o5) }) : ((t5 = new P3(o5)).setMessage(a5), this._getGroupMemberProfileAdvance(y2(y2({}, e5), {}, { userIDList: r5 })).then(function(e6) {
          e6 = e6.data.members;
          return O3(e6) && 0 !== e6.length ? (n5._updateLocalGroupMemberMap(s5, e6), n5._grpM.get(4).getUserProfile({ userIDList: e6.map(function(e7) {
            return e7.userID;
          }), tagList: [f3.NICK, f3.AVATAR] })) : D2([]);
        }).then(function(e6) {
          e6 = e6.data.map(function(e7) {
            return { userID: e7.userID, nick: e7.nick, avatar: e7.avatar };
          }), n5._updateLocalGroupMemberMap(s5, e6), e6 = r5.filter(function(e7) {
            return n5.hasLocalGroupMember(s5, e7);
          }).map(function(e7) {
            return n5.getLocalGroupMemberInfo(s5, e7);
          });
          return t5.end(), T4({ memberList: e6 });
        }));
      } }, { key: "addGroupMember", value: function(a5) {
        var s5 = this, r5 = "".concat(this._n, ".").concat("addGroupMember"), e5 = a5.groupID, c5 = this._grpM.getLocalGroupProfile(e5), t5 = c5.type, u5 = new P3("addGroupMember");
        return u5.setMessage("groupID:".concat(e5, " groupType:").concat(t5)), At2(t5) ? (t5 = new L3({ code: k2.CANNOT_ADD_MEMBER_IN_AV }), u5.setError(t5).end(), E4(t5)) : (a5.userIDList = a5.userIDList.map(function(e6) {
          return { userID: e6 };
        }), M3.l("".concat(r5, " groupID:").concat(e5)), this._grpM.req({ P: G2.ADD_GRP_MBR, data: a5 }).then(function(e6) {
          var e6 = e6.data.members, t6 = (M3.l("".concat(r5, " ok")), e6.filter(function(e7) {
            return 1 === e7.result;
          }).map(function(e7) {
            return e7.userID;
          })), n5 = e6.filter(function(e7) {
            return 0 === e7.result;
          }).map(function(e7) {
            return e7.userID;
          }), o5 = e6.filter(function(e7) {
            return 2 === e7.result;
          }).map(function(e7) {
            return e7.userID;
          }), e6 = e6.filter(function(e7) {
            return 4 === e7.result;
          }).map(function(e7) {
            return e7.userID;
          }), i5 = "groupID:".concat(a5.groupID, ", ") + "successUserIDList:".concat(t6, ", ") + "failureUserIDList:".concat(n5, ", ") + "existedUserIDList:".concat(o5, ", ") + "overLimitUserIDList:".concat(e6);
          return u5.setMoreMessage(i5).end(), 0 === t6.length ? T4({ successUserIDList: t6, failureUserIDList: n5, existedUserIDList: o5, overLimitUserIDList: e6 }) : (s5._updateConvGroupProfile(c5), T4({ successUserIDList: t6, failureUserIDList: n5, existedUserIDList: o5, overLimitUserIDList: e6, group: c5 }));
        }).catch(function(e6) {
          return u5.setError(e6).end(), M3.e("".concat(r5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "deleteGroupMember", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".").concat("deleteGroupMember"), a5 = e5.groupID, s5 = e5.userIDList, r5 = this._grpM.getLocalGroupProfile(a5);
        return N3(r5) ? E4({ code: k2.CANNOT_FIND_GRP }) : At2(r5.type) ? this._grpM.canIUse(g4.AV_BAN_MBR) ? this._banAVChatRoomMember(e5) : this._grpM.noUse("deleteGroupMember") : (t5 = "groupID:".concat(a5, " ").concat(5 < s5.length ? "userIDList.length:".concat(s5.length) : "userIDList:".concat(s5)), M3.l("".concat(i5, " groupID:").concat(a5, " userIDList:"), s5), (n5 = new P3("deleteGroupMember")).setMessage(t5), this._grpM.req({ P: G2.DEL_GRP_MBR, data: e5 }).then(function() {
          return n5.end(), M3.l("".concat(i5, " ok")), o5._updateConvGroupProfile(r5), o5.deleteLocalGroupMembers(a5, s5), T4({ group: r5, userIDList: s5 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "_updateConvGroupProfile", value: function(e5) {
        this._grpM.get(11).updateConvGroupProfile([e5]);
      } }, { key: "_banAVChatRoomMember", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("_banAVChatRoomMember"), o5 = e5.groupID, i5 = e5.userIDList, a5 = "groupID:".concat(o5, " ").concat(5 < i5.length ? "userIDList.length:".concat(i5.length) : "userIDList:".concat(i5)), s5 = new P3("_banAVChatRoomMember"), r5 = (s5.setMessage(a5), M3.l("".concat(n5, " groupID:").concat(o5, " userIDList:"), i5), this._grpM.getLocalGroupProfile(o5));
        return N3(e5.duration) || 0 === e5.duration ? E4({ code: k2.BAN_DURATION_INVALID }) : this._grpM.req({ P: G2.BAN_AV_MBR, data: e5 }).then(function() {
          return s5.end(), M3.l("".concat(n5, " ok")), t5.deleteLocalGroupMembers(o5, i5), T4({ group: r5, userIDList: i5 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "setGroupMemberMuteTime", value: function(e5) {
        var t5, n5, o5 = this, i5 = e5.groupID, a5 = e5.userID, e5 = e5.muteTime, s5 = "".concat(this._n, ".").concat("setGroupMemberMuteTime");
        return a5 === this._grpM.getMyUserID() ? E4({ code: k2.CANNOT_MUTE_SELF }) : (t5 = "groupID:".concat(i5, " userID:").concat(a5, " muteTime:").concat(e5), M3.l("".concat(s5, " ").concat(t5)), (n5 = new P3("setGroupMemberMuteTime")).setMessage(t5), this.modifyGroupMemberInfo({ groupID: i5, userID: a5, muteTime: e5 }).then(function(e6) {
          n5.end(), M3.l("".concat(s5, " ok"));
          var t6 = o5._grpM.getLocalGroupProfile(i5);
          return T4({ group: t6, member: e6 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(s5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "setGroupMemberRole", value: function(e5) {
        var t5, n5, o5 = "".concat(this._n, ".").concat("setGroupMemberRole"), i5 = e5.groupID, a5 = e5.userID, e5 = e5.role, s5 = "groupID:".concat(i5, " userID:").concat(a5, " role:").concat(e5), r5 = this._grpM.getLocalGroupProfile(i5);
        return r5 && r5.selfInfo.role !== R3.GRP_MBR_ROLE_OWNER ? E4({ code: k2.NOT_OWNER }) : (t5 = [R3.GRP_MBR_ROLE_ADMIN, R3.GRP_MBR_ROLE_MEMBER], Ot2({ groupID: i5 }) && t5.push(R3.GRP_MBR_ROLE_CUSTOM), t5.indexOf(e5) < 0 ? E4({ code: k2.INVALID_MEMBER_ROLE }) : a5 === this._grpM.getMyUserID() ? E4({ code: k2.CANNOT_SET_SELF_MEMBER_ROLE }) : ((n5 = new P3("setGroupMemberRole")).setMessage(s5), M3.l("".concat(o5, " ").concat(s5)), this.modifyGroupMemberInfo({ groupID: i5, userID: a5, role: e5 }).then(function(e6) {
          return n5.end(), M3.l("".concat(o5, " ok")), T4({ group: r5, member: e6 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        })));
      } }, { key: "_filterProfanity", value: function(e5, t5) {
        var n5, o5 = this._grpM.get(29);
        return !o5 || (n5 = (o5 = o5.filterText(t5[e5], "group_member_profile")).isAllowedToSend, o5 = o5.modifiedText, true === n5 && (t5[e5] = o5, true));
      } }, { key: "setGroupMemberNameCard", value: function(e5) {
        var n5, o5, i5, t5, a5, s5 = this, r5 = "setGroupMemberNameCard", c5 = "".concat(this._n, ".").concat(r5);
        return e5.nameCard && false === this._filterProfanity("nameCard", e5) ? E4({ code: k2.PROFANITY_FOUND }) : (n5 = e5.groupID, t5 = e5.userID, o5 = void 0 === t5 ? this._grpM.getMyUserID() : t5, i5 = e5.nameCard, t5 = "groupID:".concat(n5, " userID:").concat(o5, " nameCard:").concat(i5), M3.l("".concat(c5, " ").concat(t5)), (e5 = this._grpM.getLocalGroupProfile(n5)) && At2(e5.type) ? E4({ code: e5 = k2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(e5, r5) }) : ((a5 = new P3(r5)).setMessage(t5), this.modifyGroupMemberInfo({ groupID: n5, userID: o5, nameCard: i5 }).then(function(e6) {
          M3.l("".concat(c5, " ok")), a5.end();
          var t6 = s5._grpM.getLocalGroupProfile(n5);
          return o5 === s5._grpM.getMyUserID() && t6 && t6.setSelfNameCard(i5), T4({ group: t6, member: e6 });
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(c5, " failed. error:"), e6), E4(e6);
        })));
      } }, { key: "setGroupMemberCustomField", value: function(e5) {
        var n5, o5 = this, t5 = "setGroupMemberCustomField", i5 = "".concat(this._n, ".").concat(t5), a5 = e5.groupID, s5 = e5.userID, s5 = void 0 === s5 ? this._grpM.getMyUserID() : s5, e5 = e5.memberCustomField, r5 = "groupID:".concat(a5, " userID:").concat(s5, " memberCustomField:").concat(JSON.stringify(e5)), c5 = (M3.l("".concat(i5, " ").concat(r5)), this._grpM.getLocalGroupProfile(a5));
        return c5 && At2(c5.type) ? E4({ code: c5 = k2.OPERATION_NOT_SUPPORTED_IN_AV, message: this._grpM.getErrMsg(c5, t5) }) : ((n5 = new P3(t5)).setMessage(r5), this.modifyGroupMemberInfo({ groupID: a5, userID: s5, memberCustomField: e5 }).then(function(e6) {
          n5.end(), M3.l("".concat(i5, " ok"));
          var t6 = o5._grpM.getLocalGroupProfile(a5);
          return T4({ group: t6, member: e6 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "modifyGroupMemberInfo", value: function(t5) {
        var n5 = this, o5 = t5.groupID, i5 = t5.userID, e5 = void 0;
        return Nt2(o5) && (o5 = jt2(e5 = o5)), this._grpM.req({ P: G2.MODIFY_GRP_MBR_INFO, data: y2(y2({}, t5), {}, { groupID: o5, topicID: e5 }) }).then(function() {
          var e6;
          return n5.hasLocalGroupMember(o5, i5) ? (e6 = n5.getLocalGroupMemberInfo(o5, i5), N3(t5.muteTime) || e6.updateMuteUntil(t5.muteTime), N3(t5.role) || e6.updateRole(t5.role), N3(t5.nameCard) || e6.updateNameCard(t5.nameCard), N3(t5.memberCustomField) || e6.updateMemberCustomField(t5.memberCustomField), e6) : (e6 = n5._grpM.getLocalGroupProfile(o5)) && !At2(e6.type) ? n5.getGroupMemberProfile({ groupID: o5, userIDList: [i5] }).then(function(e7) {
            return j2(e7.data.memberList, 1)[0];
          }) : void 0;
        });
      } }, { key: "markGroupMemberList", value: function(e5) {
        var o5 = "".concat(this._n, ".").concat("markGroupMemberList"), t5 = e5.groupID, n5 = e5.markType, i5 = e5.enableMark, e5 = e5.userIDList, a5 = void 0 === e5 ? [] : e5, e5 = "groupID:".concat(t5, " markType:").concat(n5, " enableMark:").concat(i5, " userIDList count:").concat(a5.length), s5 = (M3.l("".concat(o5, " ").concat(e5)), 2), r5 = [], i5 = (true === i5 && (s5 = 1), d3(a5)), c5 = (500 < a5.length && (i5 = a5.slice(0, 500), M3.w("".concat(o5, " ").concat(Qt2(500)))), i5.forEach(function(e6) {
          r5.push({ userID: e6, markType: [n5] });
        }), i5 = null, new P3("markGroupMemberList"));
        return c5.setMessage(e5), this._grpM.req({ P: G2.MARK_AV_MBR_INFO, data: { groupID: t5, operationType: s5, memberList: r5 } }).then(function(e6) {
          var e6 = e6.data.memberList, e6 = void 0 === e6 ? [] : e6, t6 = [], n6 = [], e6 = (e6.length === a5.length ? t6.push.apply(t6, d3(a5)) : (e6.forEach(function(e7) {
            t6.push(e7.userID);
          }), a5.forEach(function(e7) {
            t6.includes(e7) || n6.push(e7);
          })), "success count:".concat(t6.length, " fail count:").concat(n6.length));
          return c5.setMessage(e6).end(), M3.l("".concat(o5, " ok. ").concat(e6)), T4({ successUserIDList: t6, failureUserIDList: n6 });
        }).catch(function(e6) {
          return c5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getGroupMemberProfileAdvance", value: function(e5) {
        return this._grpM.req({ P: G2.GET_GRP_MBR_PROFILE, data: y2(y2({}, e5), {}, { memberInfoFilter: e5.memberInfoFilter || this.DEFAULT_MEMBER_INFO_FILTER }) });
      } }, { key: "_updateLocalGroupMemberMap", value: function(t5, e5) {
        var n5 = this;
        return O3(e5) && 0 !== e5.length ? e5.map(function(e6) {
          return n5.hasLocalGroupMember(t5, e6.userID) ? n5.getLocalGroupMemberInfo(t5, e6.userID).updateMember(e6) : n5.setLocalGroupMember(t5, new Qo(e6)), n5.getLocalGroupMemberInfo(t5, e6.userID);
        }) : [];
      } }, { key: "deleteLocalGroupMembers", value: function(e5, t5) {
        var n5 = this.groupMemberListMap.get(e5);
        n5 && t5.forEach(function(e6) {
          n5.delete(e6);
        });
      } }, { key: "getLocalGroupMemberInfo", value: function(e5, t5) {
        return this.groupMemberListMap.has(e5) ? this.groupMemberListMap.get(e5).get(t5) : null;
      } }, { key: "setLocalGroupMember", value: function(e5, t5) {
        this.groupMemberListMap.has(e5) ? this.groupMemberListMap.get(e5).set(t5.userID, t5) : (t5 = (/* @__PURE__ */ new Map()).set(t5.userID, t5), this.groupMemberListMap.set(e5, t5));
      } }, { key: "getLocalGroupMemberList", value: function(e5) {
        return this.groupMemberListMap.get(e5);
      } }, { key: "hasLocalGroupMember", value: function(e5, t5) {
        return this.groupMemberListMap.has(e5) && this.groupMemberListMap.get(e5).has(t5);
      } }, { key: "hasLocalGroupMemberMap", value: function(e5) {
        return this.groupMemberListMap.has(e5);
      } }, { key: "reset", value: function() {
        this.groupMemberListMap.clear();
      } }]), ei = [17, 18, 20], ti = e4(function e5(t5) {
        p4(this, e5), this._grpM = t5, this._n = "GroupSystemNoticeHandler", this.pendencyMap = /* @__PURE__ */ new Map();
      }, [{ key: "onNewGroupSystemNotice", value: function(e5) {
        var t5 = e5.dataList, n5 = e5.isSyncingEnded, e5 = e5.isInstantMessage, t5 = (M3.d("".concat(this._n, ".onReceiveSystemNotice count:").concat(t5.length)), this._assembly({ notifiesList: t5, isInstantMessage: e5 })), o5 = t5.eventDataList, t5 = t5.result;
        0 < o5.length && (this._grpM.get(11).onNewMessage({ conversationOptionsList: o5, isInstantMessage: e5 }), this._onReceivedGroupSystemNotice({ result: t5, isInstantMessage: e5 })), e5 ? 0 < t5.length && this._grpM.emitOEvt(h4.MESSAGE_RECEIVED, t5) : true === n5 && this._clearGroupSystemNotice();
      } }, { key: "_assembly", value: function(e5) {
        for (var t5 = e5.notifiesList, n5 = e5.isInstantMessage, o5 = null, i5 = t5.length, a5 = 0, s5 = [], r5 = { conversationID: R3.CONV_SYSTEM, unreadCount: 0, type: R3.CONV_SYSTEM, subType: null, lastMessage: null }, a5 = 0; a5 < i5; a5++) {
          var c5 = t5[a5], u5 = c5.groupProfile, l5 = u5.communityType, u5 = u5.topicID, u5 = void 0 === u5 ? void 0 : u5, d4 = c5.elements, p5 = d4.topicIDList, p5 = void 0 === p5 ? void 0 : p5, d4 = d4.operationType;
          if (!(2 !== (void 0 === l5 ? 0 : l5) || S3(u5) && S3(p5))) {
            if (ei.includes(d4)) {
              this._handleTopicSystemNotice(c5);
              continue;
            }
            S3(u5) || (c5.to = u5);
          }
          15 !== c5.elements.operationType && (c5.currentUser = this._grpM.getMyUserID(), c5.conversationType = R3.CONV_SYSTEM, c5.conversationID = R3.CONV_SYSTEM, (o5 = new Do(c5)).setElement({ type: R3.MSG_GRP_SYS_NOTICE, content: y2(y2({}, c5.elements), {}, { groupProfile: y2({}, c5.groupProfile) }) }), o5.isSystemMessage = true, (1 === o5.sequence && 1 === o5.random || 2 === o5.sequence && 2 === o5.random) && (o5.sequence = ht2(), o5.random = ht2(), o5.generateMessageID(), M3.l("".concat(this._n, "._assembly regenerate ID:").concat(o5.ID))), this._grpM.get(11).pushIntoNoticeResult(s5, o5)) && (n5 ? r5.unreadCount++ : o5.setIsRead(true), r5.subType = o5.conversationSubType);
        }
        return r5.lastMessage = s5[s5.length - 1], { eventDataList: 0 < s5.length ? [r5] : [], result: s5 };
      } }, { key: "_clearGroupSystemNotice", value: function() {
        var a5 = this;
        this._getPendencyList().then(function(e5) {
          e5.forEach(function(e6) {
            a5.pendencyMap.set("".concat(e6.from, "_").concat(e6.groupID, "_").concat(e6.to), e6);
          });
          var e5 = a5._grpM.get(11).getLocalMessageList(R3.CONV_SYSTEM), i5 = [];
          e5.forEach(function(e6) {
            var t5 = e6.payload, n5 = t5.operatorID, o5 = t5.operationType, t5 = t5.groupProfile;
            1 === o5 && (o5 = "".concat(n5, "_").concat(t5.groupID, "_").concat(t5.to), n5 = a5.pendencyMap.get(o5)) && A3(n5.handled) && 0 !== n5.handled && i5.push(e6);
          }), a5.deleteGroupSystemNotice({ messageList: i5 });
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e5) {
        var n5 = this, o5 = "".concat(this._n, ".deleteGroupSystemNotice");
        return O3(e5.messageList) && 0 !== e5.messageList.length ? (M3.l("".concat(o5, " ") + e5.messageList.map(function(e6) {
          return e6.ID;
        })), this._grpM.req({ P: G2.DEL_GRP_SYSTEM_NOTICE, data: { messageListToDelete: e5.messageList.map(function(e6) {
          return { from: R3.CONV_SYSTEM, messageSeq: e6.clientSequence, messageRandom: e6.random };
        }) } }).then(function() {
          M3.l("".concat(o5, " ok"));
          var t5 = n5._grpM.get(11);
          return e5.messageList.forEach(function(e6) {
            t5.deleteLocalMessage(e6);
          }), T4();
        }).catch(function(e6) {
          return M3.e("".concat(o5, " error:"), e6), E4(e6);
        })) : D2();
      } }, { key: "_getPendencyList", value: function() {
        var n5 = this, e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t5 = e5.type, o5 = e5.startTime, e5 = e5.limit;
        return this._grpM.req({ P: G2.GET_GRP_PENDENCY, data: { type: void 0 === t5 ? void 0 : t5, startTime: void 0 === o5 ? 0 : o5, limit: void 0 === e5 ? 20 : e5, handleAccount: this._grpM.getMyUserID() } }).then(function(e6) {
          var t6 = e6.data.pendencyList;
          return 0 !== e6.data.nextStartTime ? n5._getPendencyList({ startTime: e6.data.nextStartTime }).then(function(e7) {
            return [].concat(d3(t6), d3(e7));
          }) : t6;
        });
      } }, { key: "getGroupApplicationList", value: function() {
        var n5 = this;
        return this._getPendencyList().then(function(t5) {
          return n5._getPendencyList({ type: R3.GRP_COMMUNITY }).then(function(e5) {
            return t5.push.apply(t5, d3(e5)), n5._handlePendencyResult(t5);
          }).catch(function(e5) {
            return n5._handlePendencyResult(t5);
          });
        });
      } }, { key: "_handlePendencyResult", value: function(e5) {
        var t5 = this, n5 = [];
        return e5.forEach(function(e6) {
          t5.pendencyMap.set("".concat(e6.from, "_").concat(e6.groupID, "_").concat(e6.to), e6), 0 === e6.handled && n5.push({ applicant: e6.from, applicantNick: e6.fromUserNickName, groupName: e6.groupName, groupID: e6.groupID, authentication: e6.authentication, messageKey: e6.time, applicationType: e6.applicationType, userID: e6.userID, note: e6.note });
        }), D2({ applicationList: n5 });
      } }, { key: "_onReceivedGroupSystemNotice", value: function(e5) {
        var t5 = this, n5 = e5.result;
        e5.isInstantMessage && n5.forEach(function(e6) {
          switch (e6.payload.operationType) {
            case 1:
              break;
            case 2:
              t5._onApplyJoinGroup(e6);
              break;
            case 3:
              break;
            case 4:
              t5._onMemberKicked(e6);
              break;
            case 5:
              t5._onGroupDismissed(e6);
              break;
            case 6:
              break;
            case 7:
              t5._onInviteGroup(e6);
              break;
            case 8:
              t5._onQuitGroup(e6);
              break;
            case 9:
              t5._onSetManager(e6);
              break;
            case 10:
              t5._onDeleteManager(e6);
              break;
            case 11:
            case 12:
            case 15:
              break;
            case 20:
              t5._onMessageRemindTypeSynced(e6);
              break;
            case 21:
              t5._grpM.onAVChatRoomMemberBanned(e6);
          }
        });
      } }, { key: "_onApplyJoinGroup", value: function(e5) {
        var t5 = this, e5 = e5.payload.groupProfile, n5 = e5.groupID, e5 = e5.groupType, o5 = this._grpM.hasLocalGroup(n5);
        M3.l("".concat(this._n, "._onApplyJoinGroup groupID:").concat(n5, " groupType:").concat(e5, " hasGroup:").concat(o5)), o5 || At2(e5) || this._grpM.getGroupProfile({ groupID: n5 }).then(function(e6) {
          var e6 = e6.data.group;
          e6 && (t5._grpM.updateGroupMap([e6]), e6 = !e6.isSupportTopic, t5._grpM.emitGroupListUpdate(true, e6));
        });
      } }, { key: "_onMemberKicked", value: function(e5) {
        e5 = e5.payload.groupProfile.groupID;
        this._grpM.hasLocalGroup(e5) && this._grpM.deleteLocalGroupAndConversation(e5);
      } }, { key: "_onGroupDismissed", value: function(e5) {
        var e5 = e5.payload.groupProfile.groupID, t5 = (this._grpM.hasLocalGroup(e5) && this._grpM.deleteLocalGroupAndConversation(e5), this._grpM._AVChatRoomHandler);
        t5 && t5.checkJoinedAVChatRoomByID(e5) && t5.reset(e5);
      } }, { key: "_onInviteGroup", value: function(e5) {
        var t5 = this, n5 = e5.payload.groupProfile.groupID, e5 = this._grpM.hasLocalGroup(n5);
        M3.l("".concat(this._n, "._onInviteGroup groupID:").concat(n5, " hasGroup:").concat(e5)), this._grpM.getGroupProfile({ groupID: n5 }).then(function() {
          t5._grpM.emitGroupListUpdate(), t5._grpM.get(11).pullMsgOnInvite("".concat(R3.CONV_GROUP).concat(n5));
        });
      } }, { key: "_onQuitGroup", value: function(e5) {
        var e5 = e5.payload.groupProfile, t5 = e5.groupID, e5 = e5.groupType, n5 = this._grpM.hasLocalGroup(t5);
        M3.l("".concat(this._n, "._onQuitGroup groupID:").concat(t5, " groupType:").concat(e5, " hasGroup:").concat(n5)), n5 && this._grpM.deleteLocalGroupAndConversation(t5);
      } }, { key: "_onSetManager", value: function(e5) {
        var e5 = e5.payload.groupProfile, t5 = e5.to, e5 = e5.groupID, e5 = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e5, t5);
        e5 && e5.updateRole(R3.GRP_MBR_ROLE_ADMIN);
      } }, { key: "_onDeleteManager", value: function(e5) {
        var e5 = e5.payload.groupProfile, t5 = e5.to, e5 = e5.groupID, e5 = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e5, t5);
        e5 && e5.updateRole(R3.GRP_MBR_ROLE_MEMBER);
      } }, { key: "_onMessageRemindTypeSynced", value: function(e5) {
        var t5 = e5.payload.groupProfile.groupID, e5 = e5.payload.messageRemindType;
        this._grpM.get(11).onGroupMsgRemindTypeUpdated({ groupID: t5, messageRemindType: e5 });
      } }, { key: "_handleTopicSystemNotice", value: function(e5) {
        var t5 = e5.groupProfile, n5 = t5.groupID, t5 = t5.topicID, e5 = e5.elements, o5 = e5.operationType, i5 = e5.topicIDList, e5 = e5.messageRemindType, a5 = this._grpM.get(10);
        17 === o5 ? a5.onTopicCreated({ groupID: n5, topicID: t5 }) : 18 === o5 ? a5.onTopicDeleted({ groupID: n5, topicIDList: i5 }) : 20 === o5 && a5.onMessageRemindTypeUpdated({ groupID: n5, topicID: t5, messageRemindType: e5 });
      } }, { key: "reset", value: function() {
        this.pendencyMap.clear();
      } }]), ni = ["relayFlag"], oi = (t4(vi, c4), e4(vi, [{ key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("polling_interval"), t5 = this.getCloudConfig("polling_interval_plus"), n5 = this.getCloudConfig("polling_no_msg_count"), o5 = this.getCloudConfig("polling_simplified_msg"), i5 = this.getCloudConfig("paging_grp_count");
        M3.l("".concat(this._n, "._onCloudConfig pollingInterval:").concat(e5) + " pollingIntervalPlus:".concat(t5, " pollingNoMessageCount:").concat(n5) + " pollingSimplifiedMessage:".concat(o5, " pagingGroupCount:").concat(i5)), this._AVChatRoomHandler.setPollingInterval(e5), this._AVChatRoomHandler.setPollingIntervalPlus(t5), this._AVChatRoomHandler.setPollingNoMessageCount(n5), this._AVChatRoomHandler.setPollingSimplifiedMessage(o5), this._commonGroupHandler.setPagingGroupCount(i5);
      } }, { key: "onCheckTimer", value: function(e5) {
        this.isLoggedIn() && (this._commonGroupHandler.onCheckTimer(e5), this._groupTipsHandler.onCheckTimer(e5));
      } }, { key: "guardForAVChatRoom", value: function(t5) {
        var n5, o5 = this;
        return t5.conversationType !== R3.CONV_GROUP || (n5 = Nt2(t5.to) ? jt2(t5.to) : t5.to, this.hasLocalGroup(n5)) ? D2() : this.getGroupProfile({ groupID: n5 }).then(function(e5) {
          var e5 = e5.data.group.type;
          return M3.l("".concat(o5._n, ".guardForAVChatRoom. groupID:").concat(n5, " type:").concat(e5)), e5 === R3.GRP_AVCHATROOM ? E4(new L3({ code: e5 = k2.MSG_SEND_FAIL_NOT_IN_AV, message: o5.getErrMsg(e5, t5.from, n5), data: { message: t5 } })) : D2();
        });
      } }, { key: "checkJoinedAVChatRoomByID", value: function(e5) {
        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e5);
      } }, { key: "onNewMessage", value: function(e5) {
        this._commonGroupHandler.onNewMessage(e5);
      } }, { key: "updateNextMessageSeq", value: function(e5) {
        var n5, o5 = this;
        O3(e5) && (n5 = this.get(10), e5.forEach(function(e6) {
          var t5 = e6.conversationID.replace(R3.CONV_GROUP, "");
          Nt2(t5) && n5.updateUnreadCountAndLastMsg(t5, e6.lastMessage), o5.groupMap.has(t5) && (o5.groupMap.get(t5).nextMessageSeq = e6.lastMessage.sequence + 1);
        }));
      } }, { key: "onNewGroupTips", value: function(e5) {
        this._groupTipsHandler.onNewGroupTips(e5);
      } }, { key: "onMsgRevoked", value: function(e5) {
        this._commonGroupHandler.onMsgRevoked(e5, !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1]);
      } }, { key: "onNewGroupSystemNotice", value: function(e5) {
        this._groupSystemNoticeHandler.onNewGroupSystemNotice(e5);
      } }, { key: "onMsgReadNotice", value: function(e5) {
        var a5 = this;
        e5.dataList.forEach(function(e6) {
          var i5, e6 = e6.elements.groupMessageReadNotice;
          N3(e6) || (i5 = a5.get(11), e6.forEach(function(e7) {
            var t5 = e7.groupID, n5 = e7.topicID, n5 = void 0 === n5 ? void 0 : n5, e7 = e7.lastMessageSeq, t5 = (M3.l("".concat(a5._n, ".onMsgReadNotice groupID:").concat(t5, " lastMessageSeq:").concat(e7)), "".concat(R3.CONV_GROUP).concat(t5)), o5 = true;
            S3(n5) || (t5 = "".concat(R3.CONV_GROUP).concat(n5), o5 = false), i5.updateIsReadAfterReadReport({ conversationID: t5, lastMessageSeq: e7 }), i5.updateUnreadCount(t5, o5), i5.clearGroupAtInfoList(t5, o5);
          }));
        });
      } }, { key: "onReadReceiptList", value: function(e5) {
        var o5 = this;
        M3.l("".concat(this._n, ".onReadReceiptList options:"), e5), e5.dataList.forEach(function(e6) {
          var t5 = e6.groupProfile, e6 = e6.elements, t5 = t5.groupID, n5 = o5.get(11), e6 = e6.readReceiptList;
          n5.updateReadReceiptInfo({ groupID: t5, readReceiptList: e6 });
        });
      } }, { key: "onMsgModified", value: function(e5) {
        M3.l("".concat(this._n, ".onMsgModified options:"), e5);
        var t5 = this.get(11);
        e5.dataList.forEach(function(e6) {
          t5.onMessageModified(y2(y2({}, e6), {}, { conversationType: R3.CONV_GROUP, to: e6.topicID || e6.groupID }));
        });
      } }, { key: "deleteGroupSystemNotice", value: function(e5) {
        this._groupSystemNoticeHandler.deleteGroupSystemNotice(e5);
      } }, { key: "initGroupMap", value: function(e5) {
        this.groupMap.set(e5.groupID, new qo(e5));
      } }, { key: "clearGroupMap", value: function() {
        this.groupMap.clear();
      } }, { key: "deleteGroup", value: function(e5) {
        this.groupMap.delete(e5);
      } }, { key: "updateGroupMap", value: function(e5) {
        var t5, n5 = this, o5 = this.get(11);
        e5.forEach(function(e6) {
          t5 = e6.groupID, n5.groupMap.has(t5) ? n5.groupMap.get(t5).updateGroup(e6) : (n5.groupMap.set(t5, new qo(e6)), o5.deleteGroupRoamingInfo(t5));
        });
        var i5, a5 = this.getMyUserID(), s5 = F2(this.groupMap);
        try {
          for (s5.s(); !(i5 = s5.n()).done; ) {
            var r5 = j2(i5.value, 2)[1];
            r5.selfInfo.userID = a5, "Owner" === r5.selfInfo.role && (r5.ownerID = a5);
          }
        } catch (e6) {
          s5.e(e6);
        } finally {
          s5.f();
        }
      } }, { key: "getGroupMap", value: function() {
        return this.groupMap;
      } }, { key: "getLocalGroupList", value: function() {
        return d3(this.groupMap.values()).filter(function(e5) {
          return e5.type !== R3.GRP_ROOM && e5.type !== R3.GRP_LIVE;
        });
      } }, { key: "getLocalGroupProfile", value: function(e5) {
        return this.groupMap.get(e5);
      } }, { key: "sortLocalGroupList", value: function() {
        var e5 = d3(this.groupMap).filter(function(e6) {
          e6 = j2(e6, 2);
          return e6[0], !S3(e6[1].lastMessage);
        });
        e5.sort(function(e6, t5) {
          return t5[1].lastMessage.lastTime - e6[1].lastMessage.lastTime;
        }), this.groupMap = new Map(d3(e5));
      } }, { key: "updateGroupLastMessage", value: function(e5) {
        this._commonGroupHandler.updateLastMsg(e5);
      } }, { key: "emitGroupListUpdate", value: function() {
        var e5 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1], n5 = this.getLocalGroupList();
        e5 && this.emitOEvt(h4.GROUP_LIST_UPDATED), t5 && (e5 = JSON.parse(JSON.stringify(n5)), this.get(11).updateConvGroupProfile(e5));
      } }, { key: "getMyNameCardByGroupID", value: function(e5) {
        e5 = this.getLocalGroupProfile(e5);
        return e5 ? e5.selfInfo.nameCard : "";
      } }, { key: "isPagingGetCompleted", value: function() {
        return this._commonGroupHandler.isPagingGetCompleted();
      } }, { key: "getMsgRemindType", value: function(e5) {
        var n5 = this;
        return !O3(e5) || 0 === e5.length || 0 === (e5 = e5.filter(function(e6) {
          return !At2(n5.getLocalGroupProfile(e6).type);
        })).length ? Promise.resolve() : (M3.l("".concat(this._n, ".getMsgRemindType groupIDList:").concat(e5)), this.getGroupProfileAdvance({ groupIDList: e5, responseFilter: { memberInfoFilter: ["MsgFlag"] } }).then(function(e6) {
          var e6 = e6.data.successGroupList, t5 = n5.get(11);
          e6.forEach(function(e7) {
            t5.onGroupMsgRemindTypeUpdated({ groupID: e7.groupID, messageRemindType: O3(e7.members) ? e7.members[0].messageRemindType : "" });
          });
        }));
      } }, { key: "getGroupList", value: function() {
        return this._commonGroupHandler.getGroupList();
      } }, { key: "syncCommunityWithTopic", value: function() {
        return this._commonGroupHandler.syncGroupList(true);
      } }, { key: "getGroupProfile", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".").concat("getGroupProfile"), i5 = new P3("getGroupProfile"), a5 = t5.groupID, e5 = t5.groupCustomFieldFilter, e5 = (M3.l("".concat(o5, " groupID:").concat(a5)), { groupIDList: [a5], responseFilter: { groupBaseInfoFilter: d3(re2), groupCustomFieldFilter: e5, memberInfoFilter: [].concat(d3(ce2), ["NameCard"]) } });
        return this.getGroupProfileAdvance(e5).then(function(e6) {
          var e6 = e6.data, t6 = e6.successGroupList, e6 = e6.failureGroupList;
          return M3.l("".concat(o5, " ok")), 0 < e6.length ? E4(e6[0]) : ((e6 = At2(t6[0].type) && !n5.hasLocalGroup(a5) ? new qo(t6[0]) : (n5.updateGroupMap(t6), n5.getLocalGroupProfile(a5))).isSupportTopic || n5.get(11).updateConvGroupProfile([e6]), i5.setMessage("groupID:".concat(a5, " type:").concat(e6.type, " muteAllMembers:").concat(e6.muteAllMembers, " ownerID:").concat(e6.ownerID)).end(), T4({ group: e6 }));
        }).catch(function(e6) {
          return i5.setError(e6).setMessage("groupID:".concat(t5.groupID)).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getGroupProfileAdvance", value: function(e5) {
        var t5, n5 = "".concat(this._n, ".getGroupProfileAdvance"), o5 = e5.groupIDList, i5 = (O3(o5) && 50 < o5.length && (this.warn("GetGroupProfileLimit"), o5.length = 50), []), a5 = [], o5 = (o5.forEach(function(e6) {
          (Ot2({ groupID: e6 }) ? a5 : i5).push(e6);
        }), []);
        return 0 < i5.length && (t5 = this._getGroupProfileAdvance(y2(y2({}, e5), {}, { groupIDList: i5 })), o5.push(t5)), 0 < a5.length && (t5 = this._getGroupProfileAdvance(y2(y2({}, e5), {}, { groupIDList: a5, relayFlag: 0 < i5.length })), o5.push(t5)), Promise.all(o5).then(function(e6) {
          var t6 = [], n6 = [];
          return e6.forEach(function(e7) {
            t6.push.apply(t6, d3(e7.successGroupList)), n6.push.apply(n6, d3(e7.failureGroupList));
          }), T4({ successGroupList: t6, failureGroupList: n6 });
        }).catch(function(e6) {
          return M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getGroupProfileAdvance", value: function(t5) {
        var n5 = this, e5 = t5.relayFlag, o5 = void 0 !== e5 && e5, i5 = W2(t5, ni);
        return this.req({ P: G2.GET_GRP_PROFILE, data: i5 }).then(function(e6) {
          M3.l("".concat(n5._n, "._getGroupProfileAdvance ok. options:"), i5);
          e6 = e6.data.groups;
          return { successGroupList: e6.filter(function(e7) {
            return N3(e7.errorCode) || 0 === e7.errorCode;
          }), failureGroupList: e6.filter(function(e7) {
            return e7.errorCode && 0 !== e7.errorCode;
          }).map(function(e7) {
            return new L3({ code: e7.errorCode, message: e7.errorInfo, data: { groupID: e7.groupID } });
          }) };
        }).catch(function(e6) {
          return o5 && Ot2({ groupID: t5.groupIDList[0] }) ? { successGroupList: [], failureGroupList: [] } : E4(e6);
        });
      } }, { key: "createGroup", value: function(s5) {
        var r5 = this, e5 = [R3.GRP_PUBLIC, R3.GRP_WORK, R3.GRP_MEETING, R3.GRP_AVCHATROOM, R3.GRP_COMMUNITY], c5 = "".concat(this._n, ".").concat("createGroup"), t5 = s5.type, n5 = s5.groupID;
        if (s5.name && false === this._filterProfanity("name", s5))
          return E4({ code: k2.PROFANITY_FOUND });
        if (s5.introduction && false === this._filterProfanity("introduction", s5))
          return E4({ code: k2.PROFANITY_FOUND });
        if (s5.notification && false === this._filterProfanity("notification", s5))
          return E4({ code: k2.PROFANITY_FOUND });
        if (!e5.includes(t5))
          return E4({ code: k2.ILLEGAL_GRP_TYPE });
        if (!Ot2({ type: t5 })) {
          if (!S3(n5) && Ot2({ groupID: n5 }))
            return E4({ code: k2.ILLEGAL_GRP_ID });
          s5.isSupportTopic = void 0;
        }
        if (At2(t5) && !N3(s5.memberList) && 0 < s5.memberList.length && (s5.memberList = void 0), this._canIUseJoinOption(t5) || N3(s5.joinOption) || (s5.joinOption = void 0), Ot2({ type: t5 })) {
          if (!S3(n5) && !Ot2({ groupID: n5 }))
            return E4({ code: k2.ILLEGAL_GRP_ID });
          s5.isSupportTopic = true === s5.isSupportTopic ? 1 : 0;
        }
        var u5 = new P3("createGroup"), l5 = (M3.l("".concat(c5, " options:"), s5), null), d4 = [];
        return this.req({ P: G2.CREATE_GRP, data: y2(y2({}, s5), {}, { ownerID: this.getMyUserID(), webPushFlag: 1 }) }).then(function(e6) {
          var t6, n6, o5, e6 = e6.data, i5 = e6.groupID, e6 = e6.overLimitUserIDList, a5 = void 0 === e6 ? [] : e6, e6 = (l5 = i5, d4 = a5, "groupType:".concat(s5.type, " groupID:").concat(i5, " overLimitUserIDList:").concat(a5));
          return u5.setMessage(e6).end(), M3.l("".concat(c5, " ok. ").concat(e6)), s5.type === R3.GRP_AVCHATROOM || s5.type === R3.GRP_COMMUNITY && 1 === s5.isSupportTopic || (S3(s5.memberList) || S3(a5) || (s5.memberList = s5.memberList.filter(function(e7) {
            return -1 === a5.indexOf(e7.userID);
          })), r5.updateGroupMap([y2(y2({}, s5), {}, { groupID: i5 })]), e6 = r5.get(2), o5 = "", t6 = 0, s5.type === R3.GRP_COMMUNITY ? (o5 = r5.isIntl() ? "Create Community" : "创建社群", t6 = 1) : o5 = r5.isIntl() ? "Create Group" : "创建群组", n6 = r5.get(4).getMyNick(), o5 = e6.createCustomMessage({ to: i5, conversationType: R3.CONV_GROUP, payload: { data: JSON.stringify({ businessID: "group_create", content: o5, cmd: t6, opUser: n6 || r5.getMyUserID(), version: 4 }) } }), e6.sendMessageInstance(o5), r5.emitGroupListUpdate()), r5.getGroupProfile({ groupID: i5 });
        }).then(function(e6) {
          var e6 = e6.data.group, t6 = e6.selfInfo, n6 = t6.nameCard, t6 = t6.joinTime;
          return e6.updateSelfInfo({ nameCard: n6, joinTime: t6, messageRemindType: R3.MSG_REMIND_ACPT_AND_NOTE, role: R3.GRP_MBR_ROLE_OWNER }), T4({ group: e6, overLimitUserIDList: d4 });
        }).catch(function(e6) {
          var t6;
          return u5.setMessage("groupType:".concat(s5.type)).setError(e6).end(), 10010 === e6.code || 10007 === e6.code ? (r5._silentlyGetGroupProfile(e6.code, l5), r5.updateGroupMap([y2(y2({}, s5), {}, { groupID: l5 })]), (t6 = r5.getLocalGroupProfile(l5)).selfInfo.role = R3.GRP_MBR_ROLE_OWNER, T4({ group: t6, overLimitUserIDList: d4 })) : (M3.e("".concat(c5, " failed. error:"), e6), E4(e6));
        });
      } }, { key: "dismissGroup", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("dismissGroup"), o5 = "groupID:".concat(e5), i5 = new P3("dismissGroup");
        return i5.setMessage(o5), M3.l("".concat(n5, " ").concat(o5)), this.req({ P: G2.DISMISS_GRP, data: { groupID: e5 } }).then(function() {
          return i5.end(), M3.l("".concat(n5, " ok")), t5.deleteLocalGroupAndConversation(e5), t5.checkJoinedAVChatRoomByID(e5) && t5._AVChatRoomHandler.reset(e5), t5._groupAttributesHandler.deleteLocalGroupAttributes(e5), T4({ groupID: e5 });
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "updateGroupProfile", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".").concat("updateGroupProfile");
        return this.hasLocalGroup(e5.groupID) && (t5 = this.getLocalGroupProfile(e5.groupID).type, this._canIUseJoinOption(t5) || N3(e5.joinOption) || (M3.w("".concat(i5, " joinOption is unavailable for Work/Meeting/AVChatRoom")), e5.joinOption = void 0)), N3(e5.muteAllMembers) || (e5.muteAllMembers ? e5.muteAllMembers = "On" : e5.muteAllMembers = "Off"), e5.name && false === this._filterProfanity("name", e5) || e5.introduction && false === this._filterProfanity("introduction", e5) || e5.notification && false === this._filterProfanity("notification", e5) ? E4({ code: k2.PROFANITY_FOUND }) : ((n5 = new P3("updateGroupProfile")).setMessage(JSON.stringify(e5)), M3.l("".concat(i5, " groupID:").concat(e5.groupID)), this.req({ P: G2.UPDATE_GRP_PROFILE, data: e5 }).then(function() {
          return n5.end(), M3.l("".concat(i5, " ok")), o5.hasLocalGroup(e5.groupID) && o5.groupMap.get(e5.groupID).updateGroup(e5), T4({ group: o5.groupMap.get(e5.groupID) });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.l("".concat(i5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "_filterProfanity", value: function(e5, t5) {
        var n5, o5 = this.get(29);
        return !o5 || (n5 = (o5 = o5.filterText(t5[e5], se2)).isAllowedToSend, o5 = o5.modifiedText, true === n5 && (t5[e5] = o5, true));
      } }, { key: "joinGroup", value: function(t5) {
        var n5, o5 = this, i5 = t5.groupID, a5 = "".concat(this._n, ".joinGroup");
        return this.deleteUnjoinedAVChatRoom(i5), this.hasLocalGroup(i5) ? this.isLoggedIn() ? (n5 = new P3("applyJoinGroup"), this.getGroupProfile({ groupID: i5 }).then(function() {
          return n5.setMessage("groupID:".concat(i5, " joinedStatus:").concat(R3.JOIN_STATUS_ALREADY_IN_GROUP)).end(), D2({ status: R3.JOIN_STATUS_ALREADY_IN_GROUP });
        }).catch(function(e5) {
          return n5.setMessage("groupID:".concat(i5, " unjoined")).end(), M3.w("".concat(a5, " ").concat(i5, " was unjoined, now join!")), o5.groupMap.delete(i5), o5.applyJoinGroup(t5);
        })) : D2({ status: R3.JOIN_STATUS_ALREADY_IN_GROUP }) : (M3.l("".concat(a5, " groupID:").concat(i5)), this.isLoggedIn() ? this.applyJoinGroup(t5) : this._AVChatRoomHandler.joinWithoutAuth(t5));
      } }, { key: "applyJoinGroup", value: function(e5) {
        var c5, u5, l5 = this, d4 = "".concat(this._n, ".").concat("applyJoinGroup"), p5 = e5.groupID;
        return S3(e5.applyMessage) || false !== this._filterProfanity("applyMessage", e5) ? (c5 = new P3("applyJoinGroup"), e5 = y2({}, e5), (u5 = this.canIUse(g4.AV_HISTORY_MSG)) && (e5.historyMessageFlag = 1), this.get(11).deleteTopicRoamingInfo(p5), this.req({ P: G2.APPLY_JOIN_GRP, data: e5 }).then(function(e6) {
          var e6 = e6.data, t5 = e6.joinedStatus, n5 = e6.longPollingKey, o5 = e6.startSeq, i5 = e6.avChatRoomFlag, a5 = e6.avChatRoomKey, s5 = e6.messageList, e6 = "groupID:".concat(p5, " joinedStatus:").concat(t5, " longPollingKey:").concat(n5, " startSeq:").concat(o5) + " avChatRoomFlag:".concat(i5, " canGetAVChatRoomHistoryMsg:").concat(u5, ",") + " historyMsgCount:".concat(S3(s5) ? 0 : s5.length);
          switch (c5.setMessage(e6).end(), M3.l("".concat(d4, " ok. ").concat(e6)), t5) {
            case $e2:
              return T4({ status: $e2 });
            case Qe2:
              return l5.getGroupProfile({ groupID: p5 }).then(function(e7) {
                e7 = e7.data.group;
                return l5._handleJoinResult({ group: e7, avChatRoomFlag: i5, longPollingKey: n5, startSeq: o5, avChatRoomKey: a5, messageList: s5 });
              }).catch(function(e7) {
                var t6;
                return 10010 === e7.code || 10007 === e7.code ? (l5._silentlyGetGroupProfile(e7.code, p5), t6 = new qo({ groupID: p5 }), l5.updateGroupMap([t6]), l5._handleJoinResult({ group: t6, avChatRoomFlag: i5, longPollingKey: n5, startSeq: o5, avChatRoomKey: a5, messageList: s5 })) : (M3.e("".concat(d4, " failed. error:"), e7), E4(e7));
              });
            default:
              var r5 = new L3({ code: k2.JOIN_GRP_FAIL });
              return M3.e("".concat(d4, " failed. error:"), r5), E4(r5);
          }
        }).catch(function(e6) {
          return c5.setMessage("groupID:".concat(p5)).setError(e6).end(), M3.e("".concat(d4, " failed. error:"), e6), E4(e6);
        })) : E4({ code: k2.PROFANITY_FOUND });
      } }, { key: "_handleJoinResult", value: function(e5) {
        var t5 = this, n5 = e5.group, o5 = e5.avChatRoomFlag, i5 = e5.longPollingKey, a5 = e5.startSeq, s5 = e5.avChatRoomKey, r5 = e5.messageList, c5 = n5.groupID;
        return 1 === o5 ? (this.get(11).setCompleted("".concat(R3.CONV_GROUP).concat(c5)), this._groupAttributesHandler.initGroupAttributesCache({ groupID: c5, avChatRoomKey: s5 }), this._groupCountersHandler.initGroupCountersCache({ groupID: c5, avChatRoomKey: s5 }), (e5 = N3(i5) ? this._AVChatRoomHandler.handleJoinResult({ group: n5 }) : this._AVChatRoomHandler.startRunLoop({ group: n5, longPollingKey: i5, startSeq: a5 })).then(function() {
          t5._onAVChatRoomHistoryMessage(r5, c5);
        }), e5) : (this.emitGroupListUpdate(true, false), T4({ status: Qe2, group: n5 }));
      } }, { key: "quitGroup", value: function(e5) {
        var t5, n5 = this, o5 = "".concat(this._n, ".").concat("quitGroup"), i5 = "groupID:".concat(e5), a5 = (M3.l("".concat(o5, " ").concat(i5)), this.checkJoinedAVChatRoomByID(e5));
        return a5 || this.hasLocalGroup(e5) ? a5 && !this.isLoggedIn() ? (M3.l("".concat(o5, " anonymously ok. ").concat(i5)), this.deleteLocalGroupAndConversation(e5), this._AVChatRoomHandler.reset(e5), D2({ groupID: e5 })) : ((t5 = new P3("quitGroup")).setMessage(i5), this.req({ P: G2.QUIT_GRP, data: { groupID: e5 } }).then(function() {
          return t5.end(), M3.l("".concat(o5, " ok")), n5.deleteLocalGroupAndConversation(e5), a5 && n5._AVChatRoomHandler.reset(e5), n5._groupAttributesHandler.deleteLocalGroupAttributes(e5), T4({ groupID: e5 });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        })) : E4({ code: k2.MEMBER_NOT_IN_GRP });
      } }, { key: "searchGroupByID", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("searchGroupByID"), n5 = { groupIDList: [e5] }, o5 = new P3("searchGroupByID");
        return o5.setMessage("groupID:".concat(e5)), M3.l("".concat(t5, " groupID:").concat(e5)), this.req({ P: G2.SEARCH_GRP, data: n5 }).then(function(e6) {
          e6 = e6.data.groupProfile;
          if (0 !== e6[0].errorCode)
            throw new L3({ code: e6[0].errorCode, message: e6[0].errorInfo });
          return o5.end(), M3.l("".concat(t5, " ok")), T4({ group: new qo(e6[0]) });
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "changeGroupOwner", value: function(i5) {
        var a5, s5 = this, r5 = "".concat(this._n, ".").concat("changeGroupOwner");
        return this.hasLocalGroup(i5.groupID) && this.getLocalGroupProfile(i5.groupID).type === R3.GRP_AVCHATROOM ? E4({ code: k2.CANNOT_CHANGE_OWNER_IN_AV }) : i5.newOwnerID === this.getMyUserID() ? E4({ code: k2.CANNOT_CHANGE_OWNER_TO_SELF }) : ((a5 = new P3("changeGroupOwner")).setMessage("groupID:".concat(i5.groupID, " newOwnerID:").concat(i5.newOwnerID)), M3.l("".concat(r5, " groupID:").concat(i5.groupID)), this.req({ P: G2.CHANGE_GRP_OWNER, data: i5 }).then(function() {
          a5.end(), M3.l("".concat(r5, " ok"));
          var e5, t5 = i5.groupID, n5 = i5.newOwnerID, o5 = (s5.groupMap.get(t5).ownerID = n5, s5._groupMemberHandler.getLocalGroupMemberList(t5));
          return o5 instanceof Map && (e5 = o5.get(s5.getMyUserID()), N3(e5) || (e5.updateRole("Member"), s5.groupMap.get(t5).selfInfo.role = "Member"), e5 = o5.get(n5), N3(e5) || e5.updateRole("Owner")), s5.emitGroupListUpdate(true, false), T4({ group: s5.groupMap.get(t5) });
        }).catch(function(e5) {
          return a5.setError(e5).end(), M3.e("".concat(r5, " failed. error:"), e5), E4(e5);
        }));
      } }, { key: "getGroupApplicationList", value: function() {
        return this._groupSystemNoticeHandler.getGroupApplicationList();
      } }, { key: "handleGroupApplication", value: function(e5) {
        var t5, n5, o5, i5, a5, s5 = this, r5 = "".concat(this._n, ".").concat("handleGroupApplication"), c5 = e5.handleAction, u5 = e5.handleMessage, l5 = e5.message, d4 = e5.application, p5 = (l5 ? (t5 = l5.payload.operatorID, n5 = l5.payload.groupProfile.groupID, o5 = l5.payload.authentication, i5 = l5.payload.messageKey) : d4 && (t5 = d4.applicant, n5 = d4.groupID, o5 = d4.authentication, i5 = d4.messageKey), G2.HANDLE_GRP_APPLICATION), _4 = (d4 && 2 === d4.applicationType && (p5 = G2.HANDLE_INVITE_JOIN_GRP, a5 = d4.userID), new P3("handleGroupApplication"));
        return _4.setMessage("groupID:".concat(n5)), M3.l("".concat(r5, " groupID:").concat(n5)), this.req({ P: p5, data: { handleAction: c5, handleMessage: u5, applicant: t5, invitee: a5, groupID: n5, authentication: o5, messageKey: i5 } }).then(function() {
          return _4.end(), M3.l("".concat(r5, " ok")), l5 && s5._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e5.message] }), T4({ group: s5.getLocalGroupProfile(n5) });
        }).catch(function(e6) {
          return _4.setError(e6).end(), M3.e("".concat(r5, " failed. error"), e6), E4(e6);
        });
      } }, { key: "handleGroupInvitation", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("handleGroupInvitation"), o5 = e5.message.payload, i5 = o5.groupProfile.groupID, a5 = o5.authentication, s5 = o5.messageKey, o5 = o5.operatorID, r5 = e5.handleAction, c5 = new P3("handleGroupInvitation");
        return c5.setMessage("groupID:".concat(i5, " inviter:").concat(o5, " handleAction:").concat(r5)), M3.l("".concat(n5, " groupID:").concat(i5, " inviter:").concat(o5, " handleAction:").concat(r5)), this.req({ P: G2.HANDLE_GRP_INVITATION, data: y2(y2({}, e5), {}, { inviter: o5, groupID: i5, authentication: a5, messageKey: s5 }) }).then(function() {
          return c5.end(), M3.l("".concat(n5, " ok")), t5._groupSystemNoticeHandler.deleteGroupSystemNotice({ messageList: [e5.message] }), T4({ group: t5.getLocalGroupProfile(i5) });
        }).catch(function(e6) {
          return c5.setError(e6).end(), M3.e("".concat(n5, " failed. error"), e6), E4(e6);
        });
      } }, { key: "getGroupOnlineMemberCount", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".getGroupOnlineMemberCount"), e5 = this._AVChatRoomHandler.checkJoinedAVChatRoomByID(t5), i5 = this.hasLocalGroup(t5);
        if (M3.l("".concat(o5, " groupID:").concat(t5, " isAVChatRoom:").concat(e5, " has:").concat(i5)), e5)
          return this._AVChatRoomHandler.getGroupOnlineMemberCount(t5);
        if (!i5)
          return D2({ memberCount: 0 });
        e5 = Date.now();
        if (this._onlineMemberCountMap.has(t5)) {
          i5 = this._onlineMemberCountMap.get(t5);
          if (e5 - i5.lastReqTime <= 6e4)
            return D2({ memberCount: i5.memberCount });
          i5.lastReqTime = e5;
        }
        return this.requestOnlineCount(t5).then(function(e6) {
          e6 = e6.data.memberCount, e6 = void 0 === e6 ? 0 : e6;
          return n5._onlineMemberCountMap.set(t5, { lastReqTime: Date.now(), memberCount: e6 }), M3.l("".concat(o5, " ok. groupID:").concat(t5, " memberCount:").concat(e6)), D2({ memberCount: e6 });
        }).catch(function(e6) {
          return M3.w("".concat(o5, " failed. error:"), e6), Promise.reject(e6);
        });
      } }, { key: "requestOnlineCount", value: function(e5) {
        return this.req({ P: G2.GET_ONLINE_MBR_NUM, data: { groupID: e5 } });
      } }, { key: "hasLocalGroup", value: function(e5) {
        return this.groupMap.has(e5);
      } }, { key: "deleteLocalGroupAndConversation", value: function(e5) {
        var t5 = this.checkJoinedAVChatRoomByID(e5), n5 = (M3.l("".concat(this._n, ".deleteLocalGroupAndConversation groupID:").concat(e5, " isJoinedAVChatRoom:").concat(t5)), this.get(11)), o5 = "".concat(R3.CONV_GROUP).concat(e5);
        t5 && (this.stopMessageLongPolling({ groupID: e5 }), n5.deleteLocalConv(o5)), Ot2({ groupID: e5 }) && (t5 = this.getLocalGroupProfile(e5)) && true === t5.isSupportTopic && this.get(10).deleteTopicListInCommunity(e5), n5.clearUnreadCount(o5), n5.setCompleted(o5), this._deleteLocalGroup(e5), this._onlineMemberCountMap.delete(e5), this.emitGroupListUpdate(true, false);
      } }, { key: "_deleteLocalGroup", value: function(e5) {
        this.groupMap.delete(e5), this._groupMemberHandler.deleteGroupMemberList(e5);
      } }, { key: "sendMessage", value: function(e5, t5) {
        return O3(e5._receiverList) && 0 < e5._receiverList.length && !this.canIUse(g4.MSG_TO_SPECIFIED_GRP_MBR) ? this.noUse("Targeted Group Message") : (e5 = this.createGroupMessagePack(e5, t5), this.req(e5));
      } }, { key: "createGroupMessagePack", value: function(e5, t5) {
        var n5 = null, o5 = (t5 && t5.offlinePushInfo && (n5 = t5.offlinePushInfo), ""), i5 = (C4(e5.cloudCustomData) && 0 < e5.cloudCustomData.length && (o5 = e5.cloudCustomData), []), a5 = (m3(t5) && m3(t5.messageControlInfo) && (a5 = (r5 = t5.messageControlInfo).excludedFromUnreadCount, s5 = r5.excludedFromLastMessage, r5 = r5.excludedFromContentModeration, true === a5 && i5.push("NoUnread"), true === s5 && i5.push("NoLastMsg"), true === r5) && i5.push("NoMsgCheck"), void 0), s5 = (O3(e5._receiverList) && 0 < e5._receiverList.length && (a5 = e5._receiverList, 50 < e5._receiverList.length) && (a5 = e5._receiverList.slice(0, 50), this.warn("ReceiverListLimit")), this.isOnlineMessage(e5, t5) ? 1 : 0), r5 = JSON.parse(JSON.stringify(e5.getElements())), c5 = this.get(17).getFileDNList(), u5 = e5.getGroupAtInfoList(), r5 = { fromAccount: this.getMyUserID(), groupID: e5.to, msgBody: so(e5.type, r5, c5), cloudCustomData: o5, random: e5.random, priority: e5.priority, clientSequence: e5.clientSequence, groupAtInfo: e5.type !== R3.MSG_TEXT || S3(u5) ? void 0 : u5, onlineOnlyFlag: s5, clientTime: e5.clientTime, offlinePushInfo: Lo(n5), messageControlInfo: 0 == s5 ? i5 : void 0, needReadReceipt: true !== e5.needReadReceipt || this.isMessageFromOrToAVChatroom(e5.to) ? 0 : 1, receiverList: a5, isSupportExtension: true === e5.isSupportExtension ? 1 : 0, isRelayMessage: true === e5._relayFlag ? 1 : 0, cmConfigID: e5._cmConfigID, forbidCallbackControl: kt2(t5) };
        return Nt2(e5.to) && (r5.groupID = jt2(e5.to), r5.topicID = e5.to), { P: G2.SEND_GRP_MSG, data: r5 };
      } }, { key: "revokeMessage", value: function(e5) {
        var t5 = { groupID: e5.to, msgSeqList: [{ msgSeq: e5.sequence }] };
        return Nt2(e5.to) && (t5.groupID = jt2(e5.to), t5.topicID = e5.to), this.req({ P: G2.REVOKE_GRP_MSG, data: t5 });
      } }, { key: "deleteMessage", value: function(e5) {
        var t5 = e5.to, e5 = e5.keyList, e5 = (M3.l("".concat(this._n, ".deleteMessage groupID:").concat(t5, " count:").concat(e5.length)), { groupID: t5, deleter: this.getMyUserID(), keyList: e5 });
        return Nt2(t5) && (e5.groupID = jt2(t5), e5.topicID = t5), this.req({ P: G2.DEL_GRP_MSG, data: e5 });
      } }, { key: "modifyRemoteMessage", value: function(e5) {
        var t5 = e5.to, n5 = e5.sequence, o5 = e5.payload, i5 = e5.type, a5 = e5.version, a5 = void 0 === a5 ? 0 : a5, s5 = e5.cloudCustomData, e5 = e5._elements, r5 = t5, c5 = void 0, t5 = (Nt2(t5) && (r5 = jt2(t5), c5 = t5), void 0);
        return zt2(i5) && (1 < e5.length && e5.splice(0, 1, { type: i5, content: o5 }), t5 = e5), this.req({ P: G2.MODIFY_GRP_MSG, data: { groupID: r5, topicID: c5, sequence: n5, version: a5, elements: t5, cloudCustomData: s5 } });
      } }, { key: "getRoamingMessage", value: function(e5) {
        var r5 = this, c5 = "".concat(this._n, ".").concat("getRoamingMessage"), u5 = e5.conversationID, l5 = e5.groupID, e5 = e5.sequence, d4 = new P3("getRoamingMessage"), p5 = 0, _4 = void 0;
        return Nt2(l5) && (l5 = jt2(_4 = l5)), this._computeLastSequence({ groupID: l5, topicID: _4, sequence: e5 }).then(function(e6) {
          return p5 = e6, M3.l("".concat(c5, " groupID:").concat(l5, " startSequence:").concat(p5)), r5.req({ P: G2.GET_GRP_ROAMING_MSG, data: { groupID: l5, count: 21, sequence: p5, topicID: _4 } });
        }).then(function(e6) {
          var t5 = e6.data, n5 = t5.messageList, o5 = t5.complete, t5 = t5.invisibleSequenceList, t5 = void 0 === t5 ? [] : t5, e6 = e6.data.nextSequence, e6 = void 0 === e6 ? 0 : e6, i5 = (N3(n5) ? M3.l("".concat(c5, " ok. complete:").concat(o5, " nextSequence:").concat(e6, " but messageList is undefined!")) : M3.l("".concat(c5, " ok. complete:").concat(o5, " nextSequence:").concat(e6, " count:").concat(n5.length)), d4.setMessage("groupID:".concat(l5, " topicID:").concat(_4, " startSequence:").concat(p5, " complete:").concat(o5, " nextSequence:").concat(e6)).end(), r5.get(11)), a5 = [], s5 = [], n5 = (S3(n5) || (a5 = i5.onRoamingMessage(n5, u5, true, s5), i5.updateIsRead(u5), i5.patchConvLastMessage(u5)), 2 === o5 || e6 < 1);
          return n5 && (i5.setCompleted(u5), e6 = ""), M3.l("".concat(c5, " isPullingCompleted:").concat(n5, " nextReqID:").concat(e6, " storedMsgCount:").concat(a5.length) + " invisibleSeqCount:".concat(t5.length)), { nextReqID: e6 + "", storedMessageList: a5, assembledMessageList: s5, isPullingCompleted: n5 };
        }).catch(function(e6) {
          return d4.setError(e6).setMessage("groupID:".concat(l5, " topicID:").concat(_4, " startSequence:").concat(p5)).end(), M3.w("".concat(c5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getGroupIDOfMessage", value: function(e5) {
        return e5.conversationID.replace(R3.CONV_GROUP, "");
      } }, { key: "getReadReceiptList", value: function(n5) {
        var t5, o5 = "".concat(this._n, ".").concat("getReadReceiptList"), e5 = this._getGroupIDOfMessage(n5[0]), i5 = this.getMyUserID(), a5 = n5.filter(function(e6) {
          return e6.from === i5 && true === e6.needReadReceipt;
        }).map(function(e6) {
          return { sequence: e6.sequence };
        });
        return M3.l("".concat(o5, " groupID:").concat(e5, " sequenceList:").concat(JSON.stringify(a5))), 0 === a5.length ? D2({ messageList: n5 }) : ((t5 = new P3("getReadReceiptList")).setMessage("groupID:".concat(e5)), this.req({ P: G2.GET_READ_RECEIPT, data: { groupID: e5, sequenceList: a5 } }).then(function(e6) {
          t5.end(), M3.l("".concat(o5, " ok"));
          e6 = e6.data.readReceiptList;
          return O3(e6) && e6.forEach(function(t6) {
            n5.forEach(function(e7) {
              0 === t6.code && t6.sequence === e7.sequence && (e7.readReceiptInfo.readCount = t6.readCount, e7.readReceiptInfo.unreadCount = t6.unreadCount);
            });
          }), T4({ messageList: n5 });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.w("".concat(o5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "sendReadReceipt", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("sendReadReceipt"), n5 = this._getGroupIDOfMessage(e5[0]), o5 = new P3("sendReadReceipt"), i5 = (o5.setMessage("groupID:".concat(n5)), this.getMyUserID()), e5 = e5.filter(function(e6) {
          return e6.from !== i5 && true === e6.needReadReceipt;
        }).map(function(e6) {
          return { sequence: e6.sequence };
        });
        return 0 === e5.length ? E4({ code: k2.READ_RECEIPT_MSG_LIST_EMPTY }) : (M3.l("".concat(t5, ". sequenceList:").concat(JSON.stringify(e5))), this.req({ P: G2.SEND_READ_RECEIPT, data: { groupID: n5, sequenceList: e5 } }).then(function(e6) {
          return o5.end(), M3.l("".concat(t5, " ok")), T4();
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "getReadReceiptDetail", value: function(e5) {
        var i5 = this, t5 = e5.message, n5 = e5.filter, o5 = e5.cursor, e5 = e5.count, a5 = this._getGroupIDOfMessage(t5), s5 = t5.ID, t5 = t5.sequence, r5 = "".concat(this._n, ".").concat("getReadReceiptDetail"), c5 = this._receiptDetailCompleteMap.get(s5) || false, u5 = 0 !== n5 && 1 !== n5 ? 0 : n5, n5 = C4(o5) ? o5 : "", o5 = !A3(e5) || e5 <= 0 || 100 <= e5 ? 100 : e5, e5 = "groupID:".concat(a5, " sequence:").concat(t5, " cursor:").concat(n5, " filter:").concat(u5, " completeFlag:").concat(c5), l5 = (M3.l("".concat(r5, " ").concat(e5)), { cursor: "", isCompleted: false, messageID: s5, unreadUserIDList: [], readUserIDList: [] }), d4 = new P3("getReadReceiptDetail");
        return d4.setMessage(e5), this.req({ P: G2.GET_READ_RECEIPT_DETAIL, data: { groupID: a5, sequence: t5, flag: u5, cursor: n5, count: o5 } }).then(function(e6) {
          d4.end();
          var e6 = e6.data, t6 = e6.cursor, n6 = e6.isCompleted, o6 = e6.unreadUserIDList, e6 = e6.readUserIDList;
          return l5.cursor = t6, 1 === n6 && (l5.isCompleted = true, i5._receiptDetailCompleteMap.set(s5, true)), 0 === u5 ? l5.readUserIDList = e6.map(function(e7) {
            return e7.userID;
          }) : 1 === u5 && (l5.unreadUserIDList = o6.map(function(e7) {
            return e7.userID;
          })), M3.l("".concat(r5, " ok")), T4(l5);
        }).catch(function(e6) {
          return d4.setError(e6).end(), M3.w("".concat(r5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getGroupReceiptsByUsers", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("getGroupReceiptsByUsers"), n5 = e5.groupID, e5 = e5.dataList, e5 = void 0 === e5 ? [] : e5, o5 = "groupID:".concat(n5, " dataList length:").concat(e5.length);
        return M3.l("".concat(t5, " ").concat(o5)), 0 === e5.length && M3.w("".concat(t5, " dataList is empty.")), this.req({ P: G2.GET_GRP_RECEIPTS_BY_USERS, data: { groupID: n5, dataList: e5 } }).then(function(e6) {
          e6 = e6.data.dataList, e6 = void 0 === e6 ? [] : e6;
          return M3.l("".concat(t5, " ok.")), T4({ dataList: e6 });
        }).catch(function(e6) {
          return M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getRoamingMessagesHopping", value: function(c5) {
        var u5 = this, l5 = "".concat(this._n, ".").concat("getRoamingMessagesHopping"), t5 = c5.groupID, n5 = c5.count, d4 = c5.sequence, p5 = c5.direction, o5 = void 0;
        return N3(d4) && 1 === p5 ? D2({ messageList: [], isCompleted: true, nextMessageSeq: "" }) : (Nt2(t5) && (t5 = jt2(o5 = t5)), this._computeReqSeqHopping({ groupID: t5, topicID: o5, sequence: d4 }).then(function(e5) {
          N3(d4) || 1 !== p5 || (e5 = d4 + n5 - 1);
          var s5 = "".concat(o5 ? "topicID:".concat(o5) : "groupID:".concat(t5), " sequence:").concat(d4, " reqSeq:").concat(e5, " direction:").concat(p5), r5 = (M3.l("".concat(l5, " ").concat(s5)), new P3("getRoamingMessagesHopping"));
          return u5.req({ P: G2.GET_GRP_ROAMING_MSG, data: { groupID: t5, topicID: o5, count: n5, sequence: e5 } }).then(function(e6) {
            var e6 = e6.data, t6 = e6.messageList, t6 = void 0 === t6 ? [] : t6, n6 = e6.complete, o6 = e6.nextSequence, o6 = void 0 === o6 ? 0 : o6, e6 = e6.invisibleSequenceList, e6 = void 0 === e6 ? [] : e6, i5 = "complete:".concat(n6, " nextSequence:").concat(o6, " remoteMsgCount:").concat(t6.length, " invisibleSequenceList:").concat(e6), i5 = (r5.setMessage("".concat(s5, " ").concat(i5)).end(), M3.l("".concat(l5, " ok. ").concat(i5)), "".concat(R3.CONV_GROUP).concat(c5.groupID)), a5 = u5.get(11), i5 = a5.onRoamingMessage(t6, i5, false), t6 = u5._computeResult({ groupID: c5.groupID, direction: p5, sequence: d4, remoteMessageList: t6, processedMessageList: i5, complete: n6, nextSequence: o6, invisibleSequenceList: e6 });
            return a5.storeHoppingMessageList(t6.messageList), T4(t6);
          }).catch(function(e6) {
            return r5.setError(e6).setMessage("groupID:".concat(t5, " sequence:").concat(d4, " count:").concat(n5)).end(), M3.w("".concat(l5, " failed. error:"), e6), E4(e6);
          });
        }));
      } }, { key: "_computeReqSeqHopping", value: function(e5) {
        var n5 = this, o5 = e5.groupID, t5 = e5.topicID, t5 = void 0 === t5 ? void 0 : t5, e5 = e5.sequence, e5 = void 0 === e5 ? void 0 : e5;
        return 0 < e5 ? Promise.resolve(e5) : N3(t5) ? this.getGroupProfileAdvance({ groupIDList: [o5], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } }).then(function(e6) {
          var e6 = e6.data.successGroupList, t6 = 0;
          return S3(e6) || (t6 = e6[0].nextMessageSeq - 1), M3.l("".concat(n5._n, "._computeReqSeqHopping groupID:").concat(o5, " lastSequence:").concat(t6, " from remote")), t6;
        }).catch(function(e6) {
          return E4(e6);
        }) : Promise.resolve(0);
      } }, { key: "_computeResult", value: function(e5) {
        var t5 = { messageList: [], isCompleted: false, nextMessageSeq: "" }, n5 = e5.groupID, o5 = e5.direction, i5 = e5.sequence, a5 = e5.remoteMessageList, a5 = void 0 === a5 ? [] : a5, s5 = e5.processedMessageList, s5 = void 0 === s5 ? [] : s5, r5 = e5.complete, c5 = e5.nextSequence, e5 = e5.invisibleSequenceList;
        if (0 === o5)
          return t5.nextMessageSeq = c5, (2 === r5 || c5 < 1) && (t5.isCompleted = true, t5.nextMessageSeq = ""), t5.messageList = s5, t5;
        if (1 === o5) {
          if (S3(a5)) {
            if (S3(e5))
              return t5.isCompleted = true, t5.nextMessageSeq = "", t5;
            t5.nextMessageSeq = e5[0] + 1;
          } else {
            r5 = a5[0].sequence, c5 = e5[0] || 0;
            t5.nextMessageSeq = c5 < r5 ? r5 + 1 : c5 + 1;
          }
          return s5.forEach(function(e6) {
            e6.sequence >= i5 && t5.messageList.push(e6);
          }), (Ot2({ groupID: n5 }) || Nt2(n5)) && 0 === t5.messageList.length && a5[0].sequence < i5 && (t5.isCompleted = true, t5.nextMessageSeq = ""), t5;
        }
      } }, { key: "setMessageRead", value: function(e5) {
        var o5 = this, i5 = e5.conversationID, a5 = e5.lastMessageSeq, s5 = "".concat(this._n, ".").concat("setMessageRead"), e5 = "convID:".concat(i5, " lastMessageSeq:").concat(a5), r5 = (M3.l("".concat(s5, " ").concat(e5)), A3(a5) || this.warn("DoNotModifyLastSeq"), new P3("setMessageRead")), c5 = (r5.setMessage(e5), i5.replace(R3.CONV_GROUP, "")), u5 = void 0;
        return Nt2(c5) && (c5 = jt2(u5 = c5)), this.req({ P: G2.SET_GRP_MSG_READ, data: { groupID: c5, topicID: u5, messageReadSeq: a5 } }).then(function() {
          r5.end(), M3.l("".concat(s5, " ok"));
          var e6, t5 = o5.get(11), n5 = (t5.updateIsReadAfterReadReport({ conversationID: i5, lastMessageSeq: a5 }), true);
          return !N3(u5) && (n5 = false, e6 = o5.get(10).getLocalTopic(c5, u5)) && e6.updateSelfInfo({ readedSequence: a5 }), t5.updateUnreadCount(i5, n5), T4();
        }).catch(function(e6) {
          return r5.setError(e6).end(), M3.l("".concat(s5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_computeLastSequence", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.topicID, n5 = void 0 === n5 ? void 0 : n5, e5 = e5.sequence;
        return 0 < e5 ? Promise.resolve(e5) : N3(n5) ? this.getGroupLastSequence(t5) : Promise.resolve(0);
      } }, { key: "getGroupLastSequence", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("getGroupLastSequence"), n5 = new P3("getGroupLastSequence"), o5 = 0, i5 = "", a5 = "groupID:".concat(e5);
        if (this.hasLocalGroup(e5)) {
          var s5 = this.getLocalGroupProfile(e5), r5 = s5.lastMessage;
          if (0 < r5.lastSequence && false === r5.onlineOnlyFlag)
            return o5 = r5.lastSequence, i5 = "".concat(a5, ", ").concat(o5, " from group.lastMessage.lastSequence"), M3.l("".concat(t5, " ").concat(i5)), n5.setMessage(i5).end(), Promise.resolve(o5);
          if (1 < s5.nextMessageSeq)
            return o5 = s5.nextMessageSeq - 1, i5 = "".concat(a5, ", ").concat(o5, " from group.nextMessageSeq"), M3.l("".concat(t5, " ").concat(i5)), n5.setMessage(i5).end(), Promise.resolve(o5);
        }
        r5 = this.get(11).getLocalConversation("GROUP".concat(e5));
        return r5 && r5.lastMessage.lastSequence && false === r5.lastMessage.onlineOnlyFlag ? (o5 = r5.lastMessage.lastSequence, i5 = "".concat(a5, ", ").concat(o5, " from conversation.lastMessage.lastSequence"), M3.l("".concat(t5, " ").concat(i5)), n5.setMessage(i5).end(), Promise.resolve(o5)) : this.getGroupProfileAdvance({ groupIDList: [e5], responseFilter: { groupBaseInfoFilter: ["NextMsgSeq"] } }).then(function(e6) {
          e6 = e6.data.successGroupList;
          return S3(e6) ? M3.w("".concat(t5, " ").concat(a5, ", empty successGroupList")) : (o5 = e6[0].nextMessageSeq - 1, i5 = "".concat(a5, ", ").concat(o5, " from remote"), M3.l("".concat(t5, " ").concat(i5))), n5.setMessage(i5).end(), o5;
        }).catch(function(e6) {
          return n5.setError(e6).setMessage(a5).end(), M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "isMessageFromOrToAVChatroom", value: function(e5) {
        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e5);
      } }, { key: "hasJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler.hasJoinedAVChatRoom();
      } }, { key: "getJoinedAVChatRoom", value: function() {
        return this._AVChatRoomHandler.getJoinedAVChatRoom();
      } }, { key: "getGroupRemoteLastSeq", value: function(e5) {
        e5 = this.getLocalGroupProfile(e5);
        return e5 ? e5.nextMessageSeq - 1 : 1;
      } }, { key: "isOnlineMessage", value: function(e5, t5) {
        return !(!this._canIUseOnlineOnlyFlag(e5) || !t5 || true !== t5.onlineUserOnly);
      } }, { key: "_canIUseOnlineOnlyFlag", value: function(e5) {
        var t5 = this.getJoinedAVChatRoom();
        return !t5 || !t5.includes(e5.to) || e5.conversationType !== R3.CONV_GROUP;
      } }, { key: "_onAVChatRoomHistoryMessage", value: function(e5, t5) {
        var n5;
        S3(e5) || (M3.l("".concat(this._n, "._onAVChatRoomHistoryMessage groupID:").concat(t5, " count:").concat(e5.length)), n5 = [], e5.forEach(function(e6) {
          n5.push(y2(y2({}, e6), {}, { isHistoryMessage: 1 }));
        }), this.onAVChatRoomMessage(n5, t5));
      } }, { key: "onAVChatRoomMessage", value: function(e5) {
        this._AVChatRoomHandler.onMessage(e5, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "");
      } }, { key: "onAVChatRoomMemberBanned", value: function(e5) {
        this._AVChatRoomHandler.onAVChatRoomMemberBanned(e5);
      } }, { key: "setUnjoinedAVChatRoom", value: function(e5) {
        this._unjoinedAVChatRoomList.set(e5, 1);
      } }, { key: "deleteUnjoinedAVChatRoom", value: function(e5) {
        this._unjoinedAVChatRoomList.has(e5) && this._unjoinedAVChatRoomList.delete(e5);
      } }, { key: "isUnjoinedAVChatRoom", value: function(e5) {
        return this._unjoinedAVChatRoomList.has(e5);
      } }, { key: "isGroupAttributesUpdatedNotice", value: function(e5) {
        return this._groupAttributesHandler.isGroupAttributesUpdatedNotice(e5);
      } }, { key: "updateLocalMainSequenceOnReconnected", value: function() {
        this._groupAttributesHandler.updateLocalMainSequenceOnReconnected();
      } }, { key: "initGroupAttributes", value: function(e5) {
        return this._groupAttributesHandler.initGroupAttributes(e5);
      } }, { key: "setGroupAttributes", value: function(e5) {
        return this._groupAttributesHandler.setGroupAttributes(e5);
      } }, { key: "deleteGroupAttributes", value: function(e5) {
        return this._groupAttributesHandler.deleteGroupAttributes(e5);
      } }, { key: "getGroupAttributes", value: function(e5) {
        return this._groupAttributesHandler.getGroupAttributes(e5);
      } }, { key: "isMessageFromTopic", value: function(e5, t5) {
        return 2 === e5 && !S3(t5);
      } }, { key: "isMessageFromCommunityOfTopic", value: function(e5, t5) {
        return 2 === e5 && S3(t5);
      } }, { key: "getMessageExtensions", value: function(e5, t5) {
        return M3.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t5)), this.req({ P: G2.GET_GRP_MSG_EXT, data: { groupID: e5.to, messageSequence: e5.sequence, startSequence: t5 } });
      } }, { key: "modifyMsgExts", value: function(e5, t5) {
        var n5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
        return M3.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n5)), this.req({ P: G2.MODIFY_GRP_MSG_EXT, data: { groupID: e5.to, messageSequence: e5.sequence, extensionList: t5, operateType: n5 } });
      } }, { key: "_genNotifyReqList", value: function(e5) {
        for (var t5, n5, o5, i5, a5 = [], s5 = 0, r5 = e5.length; s5 < r5; s5++)
          t5 = e5[s5], i5 = this.getLocalGroupProfile(t5).type, n5 = this._getGroupLastRevokedTime(t5), o5 = 1e3 * He2(), i5 = { notifyType: 1, limit: 20, type: Ot2({ type: i5, groupID: t5 }) ? R3.GRP_COMMUNITY : void 0, groupID: t5, beginTime: n5, endTime: o5 }, a5.push(i5);
        return a5;
      } }, { key: "getNotice", value: function(e5) {
        var r5 = this, t5 = "".concat(this._n, ".getNotice"), e5 = e5.filter(function(e6) {
          var t6;
          return !!r5.hasLocalGroup(e6) && (t6 = (e6 = r5.getLocalGroupProfile(e6)).type, e6 = e6.isSupportTopic, !At2(t6)) && !e6;
        });
        0 !== e5.length && (M3.l("".concat(t5, " list:").concat(e5)), this.req({ P: G2.GET_GRP_NOTIFY, data: { notifyReqList: this._genNotifyReqList(e5) } }).then(function(e6) {
          var i5, a5, e6 = e6.data.notifyRspList, s5 = [];
          O3(e6) && (i5 = { dataList: [] }, a5 = "".concat(t5, " ok."), e6.forEach(function(e7) {
            var t6 = e7.nextRevokedTime, n5 = e7.groupID, o5 = e7.notifyList;
            a5 += " groupID:".concat(n5, " nextRevokedTime:").concat(t6, " count:").concat(o5.length, "\n"), i5.dataList.push({ elements: { revokedInfos: r5._genRevokedInfos(e7) } }), 0 !== t6 ? (r5._setGroupLastRevokedTime(n5, t6), s5.push(n5)) : r5._setGroupLastRevokedTime(n5, 1e3 * He2());
          }), M3.l(a5), r5.onMsgRevoked(i5, false)), 0 < s5.length && r5.getNotice(s5);
        }).catch(function(e6) {
          M3.e("".concat(t5, " failed. error:"), e6);
        }));
      } }, { key: "_genRevokedInfos", value: function(e5) {
        var t5 = e5.notifyList, n5 = e5.groupID, o5 = [];
        return O3(t5) && t5.forEach(function(e6) {
          o5.push({ groupID: n5, sequence: e6.sequence, random: e6.random, revokerInfo: y2({}, e6.revokerInfo) });
        }), o5;
      } }, { key: "_getGroupLastRevokedTime", value: function(e5) {
        return this.hasLocalGroup(e5) ? this.getLocalGroupProfile(e5)._lastRevokedTime : 0;
      } }, { key: "_setGroupLastRevokedTime", value: function(e5, t5) {
        this.hasLocalGroup(e5) && (this.getLocalGroupProfile(e5)._lastRevokedTime = t5);
      } }, { key: "isGroupCountersNotice", value: function(e5) {
        return this._groupCountersHandler.isGroupCountersNotice(e5);
      } }, { key: "setGroupCounters", value: function(e5) {
        return this._groupCountersHandler.setGroupCounters(e5);
      } }, { key: "increaseGroupCounter", value: function(e5) {
        return this._groupCountersHandler.increaseGroupCounter(e5);
      } }, { key: "decreaseGroupCounter", value: function(e5) {
        return this._groupCountersHandler.decreaseGroupCounter(e5);
      } }, { key: "getGroupCounters", value: function(e5) {
        return this._groupCountersHandler.getGroupCounters(e5);
      } }, { key: "getGroupMemberHandler", value: function() {
        return this._groupMemberHandler;
      } }, { key: "getGroupMemberList", value: function(e5) {
        return this._groupMemberHandler.getGroupMemberList(e5);
      } }, { key: "getGroupMemberProfile", value: function(e5) {
        return this._groupMemberHandler.getGroupMemberProfile(e5);
      } }, { key: "addGroupMember", value: function(e5) {
        return this._groupMemberHandler.addGroupMember(e5);
      } }, { key: "deleteGroupMember", value: function(e5) {
        return this._groupMemberHandler.deleteGroupMember(e5);
      } }, { key: "setGroupMemberMuteTime", value: function(e5) {
        return this._groupMemberHandler.setGroupMemberMuteTime(e5);
      } }, { key: "setGroupMemberRole", value: function(e5) {
        return this._groupMemberHandler.setGroupMemberRole(e5);
      } }, { key: "setGroupMemberNameCard", value: function(e5) {
        return this._groupMemberHandler.setGroupMemberNameCard(e5);
      } }, { key: "setGroupMemberCustomField", value: function(e5) {
        return this._groupMemberHandler.setGroupMemberCustomField(e5);
      } }, { key: "markGroupMemberList", value: function(e5) {
        return this._groupMemberHandler.markGroupMemberList(e5);
      } }, { key: "modifyGroupMemberInfo", value: function(e5) {
        return this._groupMemberHandler.modifyGroupMemberInfo(e5);
      } }, { key: "restartPolling", value: function() {
        this._AVChatRoomHandler.restartPolling();
      } }, { key: "getPollingTimerID", value: function(e5) {
        var t5;
        return e5 && (t5 = this.getLocalGroupProfile(e5)) && At2(t5.type) ? this._AVChatRoomHandler.getPollingTimerID(e5) : -1;
      } }, { key: "_canIUseJoinOption", value: function(e5) {
        return e5 === R3.GRP_PUBLIC || Ot2({ type: e5 });
      } }, { key: "_silentlyGetGroupProfile", value: function(e5, t5) {
        var n5 = setTimeout(this.getGroupProfile.bind(this, { groupID: t5 }), 3e3);
        this._timeoutIDs.push(n5), M3.l("".concat(this._n, "._silentlyGetGroupProfile errorCode:").concat(e5, " groupID:").concat(t5, " timeoutIDs:").concat(this._timeoutIDs));
      } }, { key: "_clearTimeoutIDs", value: function() {
        this._timeoutIDs.forEach(function(e5) {
          e5 && clearTimeout(e5);
        }), this._timeoutIDs = [];
      } }, { key: "startMessageLongPolling", value: function(e5) {
        var t5, n5 = e5.groupID, o5 = e5.longPollingKey, e5 = e5.longPollingSequence, e5 = void 0 === e5 ? 1 : e5, i5 = this.get(12).isUnlimitedAVChatRoom();
        if (!S3(o5))
          return this._AVChatRoomHandler.hasPollingInstance(n5) && this.stopMessageLongPolling({ groupID: n5 }), t5 = this._AVChatRoomHandler.getJoinedLiveList(), !i5 && 0 < t5.length && this.stopMessageLongPolling({ groupID: t5[0] }), i5 = new qo({ groupID: n5, type: R3.GRP_LIVE }), M3.l("".concat(this._n, ".startMessageLongPolling groupID:").concat(n5, " longPollingKey:").concat(o5, " longPollingSequence:").concat(e5)), this._AVChatRoomHandler.startRunLoop({ group: i5, longPollingKey: o5, startSeq: e5 });
        console.warn("".concat(this._n, ".startMessageLongPolling longPollingKey is empty."));
      } }, { key: "stopMessageLongPolling", value: function(e5) {
        var e5 = e5.groupID, t5 = this.get(11);
        return this._AVChatRoomHandler.reset(e5), this._deleteLocalGroup(e5), t5.deleteLocalConv("".concat(R3.CONV_GROUP).concat(e5)), M3.l("".concat(this._n, ".stopMessageLongPolling ok, groupID:").concat(e5)), D2({ groupID: e5 });
      } }, { key: "reset", value: function() {
        this.groupMap.clear(), this._unjoinedAVChatRoomList.clear(), this._receiptDetailCompleteMap.clear(), this._onlineMemberCountMap.clear(), this._commonGroupHandler.reset(), this._groupSystemNoticeHandler.reset(), this._groupTipsHandler.reset(), this._groupAttributesHandler.reset(), this._groupCountersHandler.reset(), this._AVChatRoomHandler.reset(), this._groupMemberHandler.reset(), this._clearTimeoutIDs();
      } }])), ii = ["topicID", "topicName", "avatar", "introduction", "notification", "unreadCount", "muteAllMembers", "customData", "groupAtInfoList", "nextMessageSeq", "selfInfo"], ai = e4(function e5(t5, n5) {
        p4(this, e5), this.topicID = "", this.topicName = "", this.avatar = "", this.introduction = "", this.notification = "", this.unreadCount = 0, this.muteAllMembers = false, this.customData = "", this.groupAtInfoList = [], this.nextMessageSeq = 0, this.lastMessage = No(t5.lastMessage, n5), this.selfInfo = { muteTime: 0, readedSequence: 0, messageRemindType: "", excludedUnreadSequenceList: void 0 }, this._initTopic(t5);
      }, [{ key: "_initTopic", value: function(e5) {
        for (var t5 in e5)
          ii.indexOf(t5) < 0 || ("selfInfo" === t5 ? this.updateSelfInfo(e5[t5]) : this[t5] = "muteAllMembers" === t5 ? 1 === e5[t5] : e5[t5]);
      } }, { key: "updateUnreadCount", value: function() {
        this.unreadCount = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0;
      } }, { key: "updateNextMessageSeq", value: function(e5) {
        this.nextMessageSeq = e5;
      } }, { key: "updateLastMessage", value: function(e5) {
        this.lastMessage = No(e5);
      } }, { key: "updateGroupAtInfoList", value: function(e5) {
        this.groupAtInfoList = JSON.parse(JSON.stringify(e5));
      } }, { key: "updateTopic", value: function(e5) {
        N3(e5.selfInfo) || this.updateSelfInfo(e5.selfInfo), N3(e5.muteAllMembers) || (this.muteAllMembers = 1 === e5.muteAllMembers), dt2(this, e5, ["groupID", "lastMessageTime", "selfInfo", "muteAllMembers", "lastMsg"]);
      } }, { key: "updateSelfInfo", value: function(e5) {
        return 0 === dt2(this.selfInfo, e5, [], [""]);
      } }, { key: "reduceUnreadCount", value: function() {
        return 1 <= this.unreadCount && (--this.unreadCount, true);
      } }, { key: "isLastMessageRevoked", value: function(e5) {
        return e5.sequence === this.lastMessage.lastSequence;
      } }, { key: "setLastMessageRevoked", value: function(e5) {
        this.lastMessage.isRevoked = e5;
      } }, { key: "setLastMessageRevoker", value: function(e5) {
        this.lastMessage.revoker = e5;
      } }]), si = (t4(mi, c4), e4(mi, [{ key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("topic_cache_time"), t5 = this.getCloudConfig("topic_last_active_time");
        N3(e5) || (this.TOPIC_CACHE_TIME = Number(e5)), N3(t5) || (this.TOPIC_LAST_ACTIVE_TIME = Number(t5));
      } }, { key: "onTopicCreated", value: function(e5) {
        var t5 = e5.groupID;
        this.resetGetTopicTime(t5), this.emitOEvt(h4.TOPIC_CREATED, e5);
      } }, { key: "onTopicDeleted", value: function(e5) {
        var t5 = this, n5 = e5.groupID, o5 = e5.topicIDList;
        (void 0 === o5 ? [] : o5).forEach(function(e6) {
          t5._deleteLocalTopic(n5, e6);
        }), this.emitOEvt(h4.TOPIC_DELETED, e5);
      } }, { key: "onTopicProfileUpdated", value: function(e5) {
        var t5 = e5.groupID, n5 = e5.topicID, n5 = this.getLocalTopic(t5, n5);
        n5 && (n5.updateTopic(e5), this.emitOEvt(h4.TOPIC_UPDATED, { groupID: t5, topic: n5 }));
      } }, { key: "onTopicLatestMsg", value: function(e5) {
        var t5, n5, e5 = e5 || {}, o5 = e5.topicLatestMessage, e5 = e5.excludedUnreadSequenceList;
        S3(o5) || (t5 = o5.groupProfile.topicID, o5.conversationType = R3.CONV_GROUP, o5.to = t5, (n5 = new Do(o5)).setElement(o5.elements), this.updateUnreadCountAndLastMsg(t5, n5, e5));
      } }, { key: "onMessageRemindTypeUpdated", value: function(e5) {
        var t5, n5 = e5.groupID, o5 = e5.topicID, e5 = e5.messageRemindType, i5 = this.getLocalTopic(n5, o5);
        i5 && ((t5 = i5.updateSelfInfo({ messageRemindType: e5 })) && this.emitOEvt(h4.TOPIC_UPDATED, { groupID: n5, topic: i5 }), M3.l("".concat(this._n, ".onMessageRemindTypeUpdated topicID:").concat(o5, " messageRemindType:").concat(e5, " isUpdated:").concat(t5)));
      } }, { key: "onAtInfoUpdated", value: function(e5) {
        var t5 = e5.topicID, e5 = e5.groupAtInfoList, n5 = jt2(t5), t5 = this.getLocalTopic(n5, t5);
        t5 && !N3(e5) && (t5.updateGroupAtInfoList(e5), this.emitOEvt(h4.TOPIC_UPDATED, { groupID: n5, topic: t5 }));
      } }, { key: "onUnreadCountUpdatedFromConv", value: function(e5) {
        var t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, n5 = jt2(e5), e5 = this.getLocalTopic(n5, e5);
        e5 && e5.unreadCount !== t5 && (e5.updateUnreadCount(t5), 0 === t5 && e5.updateSelfInfo({ readedSequence: e5.lastMessage.lastSequence }), this.emitOEvt(h4.TOPIC_UPDATED, { groupID: n5, topic: e5 }));
      } }, { key: "onMessageSent", value: function(e5) {
        var t5, n5, o5 = e5.groupID, i5 = e5.topicID, e5 = e5.lastMessage, i5 = this.getLocalTopic(o5, i5);
        i5 && (n5 = (t5 = void 0 === (t5 = e5.sequence) ? 0 : t5) + 1) > i5.nextMessageSeq && (i5.updateNextMessageSeq(n5), i5.updateLastMessage(e5), i5.updateSelfInfo({ readedSequence: t5 }), i5.updateUnreadCount(0), this.emitOEvt(h4.TOPIC_UPDATED, { groupID: o5, topic: i5 }));
      } }, { key: "onMessageModified", value: function(e5) {
        var t5, n5 = e5.to, o5 = e5.time, i5 = e5.sequence, a5 = e5.elements, s5 = e5.cloudCustomData, r5 = e5.messageVersion, c5 = jt2(n5), u5 = this.getLocalTopic(c5, n5);
        u5 && (t5 = u5.lastMessage, M3.d("".concat(this._n, ".onMessageModified topicID:").concat(n5, " lastMessage:"), JSON.stringify(t5), "options:", JSON.stringify(e5)), t5) && (null === t5.payload || t5.lastTime === o5 && t5.lastSequence === i5 && t5.version !== r5) && (t5.type = a5[0].type, t5.payload = a5[0].content, t5.messageForShow = Jt2(t5.type, t5.payload, this.isIntl()), t5.cloudCustomData = s5, t5.version = r5, t5.lastSequence = i5, t5.lastTime = o5, this.emitOEvt(h4.TOPIC_UPDATED, { groupID: c5, topic: u5 }));
      } }, { key: "onMessageRevoked", value: function(e5) {
        var n5, o5, i5, a5 = this;
        0 !== e5.length && (o5 = n5 = null, i5 = false, e5.forEach(function(e6) {
          var t5 = e6.to;
          o5 = jt2(t5), (n5 = a5.getLocalTopic(o5, t5)) && (n5.reduceUnreadCount() && (i5 = true), n5.isLastMessageRevoked(e6) && (n5.setLastMessageRevoked(true), n5.setLastMessageRevoker(e6.revoker), i5 = true), (t5 = n5.selfInfo.excludedUnreadSequenceList || []).push(e6.sequence), n5.updateSelfInfo({ excludedUnreadSequenceList: t5 }));
        }), i5) && this.emitOEvt(h4.TOPIC_UPDATED, { groupID: o5, topic: n5 });
      } }, { key: "isLastMessageRevoked", value: function(e5) {
        var t5 = e5.topicID, e5 = e5.sequence, n5 = jt2(t5), n5 = this.getLocalTopic(n5, t5), t5 = false;
        return t5 = n5 ? n5.isLastMessageRevoked({ sequence: e5 }) : t5;
      } }, { key: "updateUnreadCountAndLastMsg", value: function(e5, t5, n5) {
        var o5, i5 = jt2(e5), a5 = this.getLocalTopic(i5, e5);
        a5 && (o5 = a5.selfInfo.excludedUnreadSequenceList || [], N3(n5) || (o5 = n5), t5._isExcludedFromUnreadCount && o5.push(t5.sequence), a5.updateSelfInfo({ excludedUnreadSequenceList: o5 }), M3.l("".concat(this._n, ".updateUnreadCountAndLastMsg seq:").concat(t5.sequence, " lastSeq:").concat(a5.lastMessage.lastSequence)), t5.sequence > a5.lastMessage.lastSequence) && (a5.updateLastMessage(t5), n5 = t5.sequence + 1, a5.updateNextMessageSeq(n5), o5 = this._computeUnreadCount(a5), a5.updateUnreadCount(o5), (t5 = this.get(11).getLocalConversation("".concat(R3.CONV_GROUP).concat(e5))) && t5.updateUnreadCount({ nextUnreadCount: o5, isFromGetConversations: true }), this.emitOEvt(h4.TOPIC_UPDATED, { groupID: i5, topic: a5 }));
      } }, { key: "getJoinedCommunityList", value: function() {
        return this.get(7).syncCommunityWithTopic();
      } }, { key: "createTopicInCommunity", value: function(t5) {
        var n5, o5 = this, i5 = "".concat(this._n, ".").concat("createTopicInCommunity"), e5 = t5.topicID;
        return N3(e5) || Nt2(e5) ? t5.topicName && false === this._filterProfanity("topicName", t5) || t5.introduction && false === this._filterProfanity("introduction", t5) || t5.notification && false === this._filterProfanity("notification", t5) ? E4({ code: k2.PROFANITY_FOUND }) : (n5 = new P3("createTopicInCommunity"), this.req({ P: G2.CREATE_TOPIC, data: y2({}, t5) }).then(function(e6) {
          e6 = e6.data.topicID;
          return n5.setMessage("topicID:".concat(e6)).end(), M3.l("".concat(i5, " ok. topicID:").concat(e6)), o5._updateTopicMap([y2(y2({}, t5), {}, { topicID: e6 })]), T4({ topicID: e6 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : E4({ code: k2.ILLEGAL_TOPIC_ID });
      } }, { key: "deleteTopicFromCommunity", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("deleteTopicFromCommunity"), a5 = e5.groupID, e5 = e5.topicIDList, e5 = void 0 === e5 ? [] : e5, s5 = new P3("deleteTopicFromCommunity");
        return s5.setMessage("groupID:".concat(a5, " topicIDList:").concat(e5)), this.req({ P: G2.DEL_TOPIC, data: { groupID: a5, topicIDList: e5 } }).then(function(e6) {
          var e6 = e6.data.resultList, o5 = [], i5 = [], e6 = ((void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.topicID, n6 = e7.errorCode, e7 = e7.errorInfo;
            0 === n6 ? o5.push({ topicID: t6 }) : i5.push({ topicID: t6, code: n6, message: e7 });
          }), "success count:".concat(o5.length, ", fail count:").concat(i5.length));
          return s5.setMoreMessage(e6).end(), M3.l("".concat(n5, " ok. ").concat(e6)), o5.forEach(function(e7) {
            t5._deleteLocalTopic(a5, e7.topicID);
          }), T4({ successTopicList: o5, failureTopicList: i5 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "updateTopicProfile", value: function(e5) {
        var t5, n5 = this, o5 = "".concat(this._n, ".").concat("updateTopicProfile");
        return M3.l("".concat(o5, " options:"), e5), e5.topicName && false === this._filterProfanity("topicName", e5) || e5.introduction && false === this._filterProfanity("introduction", e5) || e5.notification && false === this._filterProfanity("notification", e5) ? E4({ code: k2.PROFANITY_FOUND }) : ((t5 = new P3("updateTopicProfile")).setMessage("groupID:".concat(e5.groupID, " topicID:").concat(e5.topicID)), N3(e5.muteAllMembers) || (e5.muteAllMembers = true === e5.muteAllMembers ? "On" : "Off"), this.req({ P: G2.UPDATE_TOPIC_PROFILE, data: y2({}, e5) }).then(function() {
          return t5.end(), M3.l("".concat(o5, " ok")), n5._updateTopicMap([e5]), T4({ topic: n5.getLocalTopic(e5.groupID, e5.topicID) });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "getTopicList", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("getTopicList"), o5 = e5.groupID, e5 = e5.topicIDList, e5 = void 0 === e5 ? [] : e5, i5 = 0 === e5.length, c5 = new P3("getTopicList");
        if (c5.setMessage("groupID:".concat(o5)), this._getTopicTimeMap.has(o5)) {
          var a5 = this._getTopicTimeMap.get(o5), s5 = a5.isGetAll, a5 = a5.time;
          if ((s5 || !s5 && !i5) && Date.now() - a5 < 1e3 * this.TOPIC_CACHE_TIME) {
            s5 = this._getLocalTopicList(o5, e5);
            if (i5 || s5.length === e5.length)
              return c5.setMoreMessage("from cache, topic count:".concat(s5.length)).end(), M3.l("".concat(n5, " groupID:").concat(o5, " from cache, topic count:").concat(s5.length)), D2({ successTopicList: s5, failureTopicList: [] });
          }
        }
        return this.req({ P: G2.GET_TOPIC_LIST, data: { groupID: o5, topicIDList: e5 } }).then(function(e6) {
          var e6 = e6.data.topicInfoList, a6 = [], s6 = [], r5 = [], e6 = ((void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.topic, n6 = e7.selfInfo, o6 = e7.errorCode, e7 = e7.errorInfo, i6 = t6.topicID;
            0 === o6 ? (a6.push(y2(y2({}, t6), {}, { selfInfo: n6 })), s6.push(i6)) : r5.push({ topicID: i6, code: o6, message: e7 });
          }), t5._updateTopicMap(a6), t5._handleTopicAtInfo(a6), "success count:".concat(s6.length, ", fail count:").concat(r5.length)), e6 = (c5.setMoreMessage(e6).end(), M3.l("".concat(n5, " groupID:").concat(o5, " from remote, ").concat(e6)), []);
          return S3(s6) || (t5._getTopicTimeMap.set(o5, { time: Date.now(), isGetAll: i5 }), e6 = t5._getLocalTopicList(o5, s6)), T4({ successTopicList: e6, failureTopicList: r5 });
        }).catch(function(e6) {
          return c5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "hasLocalTopic", value: function(e5, t5) {
        return !!this._topicMap.has(e5) && this._topicMap.get(e5).has(t5);
      } }, { key: "getLocalTopic", value: function(e5, t5) {
        var n5 = null;
        return n5 = this._topicMap.has(e5) ? this._topicMap.get(e5).get(t5) : n5;
      } }, { key: "_getLocalTopicList", value: function(e5) {
        var t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [], e5 = this._topicMap.get(e5), n5 = [];
        return e5 && (n5 = d3(e5.values())), 0 === t5.length ? n5 : n5.filter(function(e6) {
          return t5.includes(e6.topicID);
        });
      } }, { key: "_deleteLocalTopic", value: function(e5, t5) {
        this._topicMap.has(e5) && this._topicMap.get(e5).has(t5) && (this._topicMap.get(e5).delete(t5), M3.l("".concat(this._n, "._deleteLocalTopic groupID:").concat(e5, " topicID:").concat(t5)));
      } }, { key: "_updateTopicMap", value: function(e5) {
        var i5 = this, a5 = [];
        e5.forEach(function(e6) {
          var t5 = e6.groupID, n5 = e6.topicID, o5 = null, e6 = (i5._topicMap.has(t5) || i5._topicMap.set(t5, /* @__PURE__ */ new Map()), i5._topicMap.get(t5).has(n5) ? (o5 = i5._topicMap.get(t5).get(n5)).updateTopic(e6) : (i5._getTopicLastMessage(e6), o5 = new ai(e6, i5.isIntl()), i5._topicMap.get(t5).set(n5, o5)), i5._computeUnreadCount(o5));
          o5.updateUnreadCount(e6), a5.push({ conversationID: "".concat(R3.CONV_GROUP).concat(n5), type: R3.CONV_TOPIC, unreadCount: e6 });
        }), 0 < a5.length && this.get(11).updateTopicConversation(a5);
      } }, { key: "resetGetTopicTime", value: function(e5) {
        var t5 = this;
        N3(e5) ? d3(this._getTopicTimeMap.keys()).forEach(function(e6) {
          t5._getTopicTimeMap.set(e6, 0);
        }) : this._getTopicTimeMap.set(e5, 0);
      } }, { key: "getTopicListOnReconnected", value: function() {
        var o5 = this, e5 = d3(this._topicMap.keys()), i5 = [], a5 = this.get(11);
        e5.forEach(function(e6) {
          var n5 = [], t5 = o5._getLocalTopicList(e6);
          a5.deleteTopicRoamingInfo(e6), t5.forEach(function(e7) {
            var t6 = e7.lastMessage.lastTime, t6 = void 0 === t6 ? 0 : t6;
            Date.now() - 1e3 * t6 < 1e3 * o5.TOPIC_LAST_ACTIVE_TIME && n5.push(e7.topicID);
          }), 0 < n5.length && i5.push({ groupID: e6, topicIDList: n5 });
        }), M3.l("".concat(this._n, ".getTopicListOnReconnected. active community count:").concat(i5.length)), this._relayGetTopicList(i5);
      } }, { key: "_relayGetTopicList", value: function(t5) {
        var e5, n5, o5, i5 = this;
        0 !== t5.length && (n5 = 5 < (e5 = t5.shift()).topicIDList.length ? "topicIDList.length:".concat(e5.topicIDList.length) : "topicIDList:".concat(e5.topicIDList), (o5 = new P3("relayGetTopicList")).setMessage(n5), M3.l("".concat(this._n, "._relayGetTopicList. ").concat(n5)), this.getTopicList(e5).then(function() {
          o5.end(), i5._relayGetTopicList(t5);
        }).catch(function(e6) {
          o5.setError(e6).end(), i5._relayGetTopicList(t5);
        }));
      } }, { key: "_handleTopicAtInfo", value: function(e5) {
        var i5 = this;
        0 !== e5.length && e5.forEach(function(e6) {
          var t5 = e6.groupID, n5 = e6.topicID, e6 = e6.groupAtInfoList, o5 = [];
          N3(e6) || (e6.forEach(function(e7) {
            o5.push(y2(y2({}, e7), {}, { groupID: t5, topicID: n5 }));
          }), i5.get(11).onNewGroupAtTips({ dataList: o5 }));
        });
      } }, { key: "_getTopicLastMessage", value: function(e5) {
        var t5;
        N3(e5.lastMsg) || (t5 = { time: e5.lastMsg.time, sequence: e5.lastMsg.sequence, from: e5.lastMsg.from, payload: e5.lastMsg.elements[0] ? e5.lastMsg.elements[0].content : null, type: e5.lastMsg.elements[0] ? e5.lastMsg.elements[0].type : "", nick: e5.lastMsg.nick, avatar: e5.lastMsg.avatar, version: e5.lastMsg.messageVersion, cloudCustomData: e5.lastMsg.cloudCustomData, isRevoked: 2 === e5.lastMsg.isPlaceMessage, revoker: S3(e5.lastMsg.revokerInfo) ? null : e5.lastMsg.revokerInfo.revoker }, e5.lastMessage = t5);
      } }, { key: "deleteTopicListInCommunity", value: function(t5) {
        var n5 = this, e5 = this._getLocalTopicList(t5), o5 = this.get(11);
        e5.forEach(function(e6) {
          e6 = e6.topicID;
          n5._deleteLocalTopic(t5, e6), n5._getTopicTimeMap.delete(t5), o5.deleteLocalConv("".concat(R3.CONV_GROUP).concat(e6));
        });
      } }, { key: "_computeUnreadCount", value: function(t5) {
        var n5, e5 = t5.selfInfo, o5 = e5.excludedUnreadSequenceList, i5 = e5.readedSequence, e5 = t5.nextMessageSeq - t5.selfInfo.readedSequence - 1;
        return O3(o5) && (n5 = 0, o5.forEach(function(e6) {
          i5 < e6 && e6 <= t5.nextMessageSeq - 1 && (n5 += 1);
        }), 1 <= n5) && (e5 -= n5), e5 < 0 ? 0 : e5;
      } }, { key: "_filterProfanity", value: function(e5, t5) {
        var n5, o5 = this.get(29);
        return !o5 || (n5 = (o5 = o5.filterText(t5[e5], se2)).isAllowedToSend, o5 = o5.modifiedText, true === n5 && (t5[e5] = o5, true));
      } }, { key: "getMessageExtensions", value: function(e5, t5) {
        M3.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t5));
        var n5 = jt2(e5.to);
        return this.req({ P: G2.GET_GRP_MSG_EXT, data: { groupID: n5, topicID: e5.to, messageSequence: e5.sequence, startSequence: t5 } });
      } }, { key: "modifyMsgExts", value: function(e5, t5) {
        var n5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, o5 = (M3.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n5)), jt2(e5.to));
        return this.req({ P: G2.MODIFY_GRP_MSG_EXT, data: { groupID: o5, topicID: e5.to, messageSequence: e5.sequence, extensionList: t5, operateType: n5 } });
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._topicMap.clear(), this._getTopicTimeMap.clear(), this.TOPIC_CACHE_TIME = 300, this.TOPIC_LAST_ACTIVE_TIME = 3600;
      } }])), ri = e4(function e5(t5) {
        p4(this, e5), this._userM = t5, this._n = "ProfileHandler", this.TAG = "profile", this.accountProfileMap = /* @__PURE__ */ new Map(), this.expirationTime = 864e5;
      }, [{ key: "setExpirationTime", value: function(e5) {
        this.expirationTime = e5;
      } }, { key: "getUserProfile", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("getUserProfile"), o5 = e5.userIDList;
        e5.fromAccount = this._userM.getMyAccount(), 100 < o5.length && (M3.w("".concat(n5, " ").concat(Qt2(100))), o5.length = 100);
        for (var i5, a5 = [], s5 = [], r5 = 0, c5 = o5.length; r5 < c5; r5++)
          i5 = o5[r5], this._userM.isMyFriend(i5) && this._contains(i5) ? s5.push(this._getProfileFromMap(i5)) : a5.push(i5);
        if (0 === a5.length)
          return D2(s5);
        e5.toAccount = a5;
        var u5 = e5.bFromGetMyProfile || false, l5 = [], d4 = (e5.toAccount.forEach(function(e6) {
          l5.push({ toAccount: e6, standardSequence: 0, customSequence: 0 });
        }), e5.userItem = l5, new P3("getUserProfile"));
        return d4.setMessage(5 < o5.length ? "userIDList.length:".concat(o5.length) : "userIDList:".concat(o5)), this._userM.req({ P: G2.GET_USER_PROFILE, data: e5 }).then(function(e6) {
          d4.end(), M3.i("".concat(n5, " ok"));
          e6 = t5._handleResponse(e6).concat(s5);
          return T4(u5 ? e6[0] : e6);
        }).catch(function(e6) {
          return d4.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "getMyProfile", value: function() {
        var e5, t5 = this._userM.getMyAccount(), n5 = "".concat(this._n, ".getMyProfile");
        return M3.l("".concat(n5, " myAccount:").concat(t5)), this._fill(), this._contains(t5) ? (e5 = this._getProfileFromMap(t5), M3.d("".concat(n5, " from cache, myProfile:").concat(JSON.stringify(e5))), D2(e5)) : this.getUserProfile({ fromAccount: t5, userIDList: [t5], bFromGetMyProfile: true });
      } }, { key: "_handleResponse", value: function(e5) {
        var t5 = e5.data.userProfileItem;
        if (!O3(t5))
          return [];
        for (var n5 = [], e5 = Date.now(), o5 = 0, i5 = t5.length; o5 < i5; o5++) {
          var a5 = t5[o5], s5 = a5.to, a5 = a5.profileItem;
          "@TLS#NOT_FOUND" !== s5 && "" !== s5 && (s5 = this._update(s5, this._getLatestProfileFromResponse(s5, a5)).latestProfile, n5.push(s5));
        }
        return M3.l("".concat(this._n, "._handleResponse cost:").concat(tn(e5))), n5;
      } }, { key: "_getLatestProfileFromResponse", value: function(e5, t5) {
        var n5 = { userID: e5, profileCustomField: [] };
        if (!S3(t5))
          for (var o5 = 0, i5 = t5.length; o5 < i5; o5++)
            if (-1 < t5[o5].tag.indexOf("Tag_Profile_Custom"))
              n5.profileCustomField.push({ key: t5[o5].tag, value: t5[o5].value });
            else
              switch (t5[o5].tag) {
                case f3.NICK:
                  n5.nick = t5[o5].value;
                  break;
                case f3.GENDER:
                  n5.gender = t5[o5].value;
                  break;
                case f3.BIRTHDAY:
                  n5.birthday = t5[o5].value;
                  break;
                case f3.LOCATION:
                  n5.location = t5[o5].value;
                  break;
                case f3.SELFSIGNATURE:
                  n5.selfSignature = t5[o5].value;
                  break;
                case f3.ALLOWTYPE:
                  n5.allowType = t5[o5].value;
                  break;
                case f3.LANGUAGE:
                  n5.language = t5[o5].value;
                  break;
                case f3.AVATAR:
                  n5.avatar = t5[o5].value;
                  break;
                case f3.MESSAGESETTINGS:
                  n5.messageSettings = t5[o5].value;
                  break;
                case f3.ADMINFORBIDTYPE:
                  n5.adminForbidType = t5[o5].value;
                  break;
                case f3.LEVEL:
                  n5.level = t5[o5].value;
                  break;
                case f3.ROLE:
                  n5.role = t5[o5].value;
                  break;
                default:
                  M3.w("".concat(this._n, "._getLatestProfileFromResponse unknown tag:"), t5[o5].tag, t5[o5].value);
              }
        return n5;
      } }, { key: "updateMyProfile", value: function(o5) {
        var i5 = this, a5 = "".concat(this._n, ".").concat("updateMyProfile");
        if (o5.nick && false === this._userM.filterProfanity("nick", o5))
          return E4({ code: k2.PROFANITY_FOUND });
        if (o5.selfSignature && false === this._userM.filterProfanity("selfSignature", o5))
          return E4({ code: k2.PROFANITY_FOUND });
        var s5 = new P3("updateMyProfile"), e5 = (s5.setMessage(JSON.stringify(o5)), new bo().validate(o5));
        if (!e5.valid)
          return s5.setCode(k2.UPDATE_PROFILE_INVALID_PARAM).setMoreMessage("info:".concat(e5.tips)).end(), M3.e("".concat(a5, " info:").concat(e5.tips)), E4({ code: k2.UPDATE_PROFILE_INVALID_PARAM });
        var t5, r5, n5 = [];
        for (t5 in o5)
          Object.prototype.hasOwnProperty.call(o5, t5) && ("profileCustomField" === t5 ? o5.profileCustomField.forEach(function(e6) {
            n5.push({ tag: e6.key, value: e6.value });
          }) : n5.push({ tag: f3[t5.toUpperCase()], value: o5[t5] }));
        return 0 === n5.length ? (e5 = new L3({ code: k2.UPDATE_PROFILE_NO_KEY }), s5.setError(e5).end(), M3.e("".concat(a5, " failed. error:"), e5), E4(e5)) : (r5 = this._userM.getMyAccount(), this._userM.req({ P: G2.UPDATE_MY_PROFILE, data: { fromAccount: r5, profileItem: n5 } }).then(function(e6) {
          s5.end(), M3.i("".concat(a5, " ok"));
          var t6 = i5._update(r5, o5), n6 = t6.isProfileUpdated, t6 = t6.latestProfile;
          return true === n6 && i5._userM.emitOEvt(h4.PROFILE_UPDATED, [t6]), D2(t6);
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "onProfileModified", value: function(e5) {
        var t5 = e5.dataList;
        if (!S3(t5)) {
          var n5 = t5.length;
          M3.d("".concat(this._n, ".onProfileModified count:").concat(n5, " dataList:"), e5.dataList);
          for (var o5 = [], i5 = 0; i5 < n5; i5++) {
            var a5 = t5[i5].userID, a5 = this._update(a5, this._getLatestProfileFromResponse(a5, t5[i5].profileList)), s5 = a5.isProfileUpdated, a5 = a5.latestProfile;
            true === s5 && o5.push(a5);
          }
          0 < o5.length && (this._userM.emitIEvt(U3.PROFILE_UPDATED, o5), this._userM.emitOEvt(h4.PROFILE_UPDATED, o5));
        }
      } }, { key: "_fill", value: function() {
        if (0 === this.accountProfileMap.size) {
          for (var e5 = this._getCachedProfiles(), t5 = Date.now(), n5 = 0, o5 = e5.length; n5 < o5; n5++)
            t5 - e5[n5].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e5[n5].userID, e5[n5]);
          M3.l("".concat(this._n, "._fill from cache, size:").concat(this.accountProfileMap.size));
        }
      } }, { key: "_update", value: function(e5, t5) {
        var n5, o5 = false, i5 = Date.now();
        return this._contains(e5) ? (n5 = this._getProfileFromMap(e5), t5.profileCustomField && true === Lt2(n5.profileCustomField, t5.profileCustomField) && (n5.lastUpdatedTime = i5, o5 = true), 0 < dt2(n5, t5, ["profileCustomField"]) && (n5.lastUpdatedTime = i5, o5 = true)) : (n5 = new bo(t5), !this._userM.isMyFriend(e5) && e5 !== this._userM.getMyAccount() || (n5.lastUpdatedTime = i5, o5 = true, this.accountProfileMap.set(e5, n5))), this._flush(e5 === this._userM.getMyAccount()), true === o5 && M3.l("".concat(this._n, "._update account:").concat(e5, " isUpdated:").concat(o5)), { isProfileUpdated: o5, latestProfile: n5 };
      } }, { key: "_flush", value: function(e5) {
        var t5 = d3(this.accountProfileMap.values()), n5 = this._userM.getStorageModule();
        M3.d("".concat(this._n, "._flush length:").concat(t5.length, " flushAtOnce:").concat(e5)), n5.setItem(this.TAG, t5, e5);
      } }, { key: "_contains", value: function(e5) {
        return this.accountProfileMap.has(e5);
      } }, { key: "_getProfileFromMap", value: function(e5) {
        return this.accountProfileMap.get(e5);
      } }, { key: "_getCachedProfiles", value: function() {
        var e5 = this._userM.getStorageModule().getItem(this.TAG);
        return S3(e5) ? [] : e5;
      } }, { key: "onConvProfileUpdated", value: function(e5) {
        for (var t5, n5, o5, i5 = [], a5 = 0, s5 = e5.length; a5 < s5; a5++)
          n5 = (t5 = e5[a5]).userID, this._userM.isMyFriend(n5) && (this._contains(n5) ? (o5 = this._getProfileFromMap(n5), 0 < dt2(o5, t5) && i5.push(n5)) : i5.push(t5.userID));
        0 !== i5.length && (M3.l("".concat(this._n, ".onConvProfileUpdated toAccountList:").concat(i5)), this.getUserProfile({ userIDList: i5 }));
      } }, { key: "getNickAndAvatarByUserID", value: function(e5) {
        return this._contains(e5) ? { nick: (e5 = this._getProfileFromMap(e5)).nick, avatar: e5.avatar } : { nick: "", avatar: "" };
      } }, { key: "getUserNickAndAvatar", value: function(e5) {
        var t5, n5 = this, o5 = d3(new Set(e5)), i5 = (M3.l("".concat(this._n, ".getUserNickAndAvatar userIDList.length:").concat(e5.length, " uniqueUserIDList.length:").concat(o5.length)), []);
        return 0 === e5.length ? Promise.resolve(i5) : (e5 = this._createUserIDListGroup(o5), t5 = [], e5.forEach(function(e6) {
          t5.push(n5.getUserProfile({ userIDList: e6 }));
        }), Promise.all(t5).then(function(e6) {
          return e6.forEach(function(e7) {
            e7 = e7.data.map(function(e8) {
              return { userID: e8.userID, nick: e8.nick, avatar: e8.avatar };
            });
            i5.push.apply(i5, d3(e7));
          }), i5;
        }));
      } }, { key: "_createUserIDListGroup", value: function(e5) {
        for (var t5 = [], n5 = 0; n5 < e5.length; )
          t5.push(e5.slice(n5, n5 += 100));
        return t5;
      } }, { key: "reset", value: function() {
        this._flush(true), this.accountProfileMap.clear();
      } }]), ci = e4(function e5(t5) {
        p4(this, e5);
      }), ui = e4(function e5(t5) {
        p4(this, e5), this._userM = t5, this._n = "BlacklistHandler", this._blacklistMap = /* @__PURE__ */ new Map(), this._startIndex = 0;
      }, [{ key: "getLocalBlacklist", value: function() {
        return d3(this._blacklistMap.keys());
      } }, { key: "getBlacklist", value: function() {
        var o5 = this, i5 = "".concat(this._n, ".getBlacklist"), e5 = { fromAccount: this._userM.getMyAccount(), maxLimited: 100, startIndex: this._startIndex }, a5 = new P3("getBlacklist");
        return this._userM.req({ P: G2.GET_BL, data: e5 }).then(function(e6) {
          var e6 = e6.data, t5 = e6.blackListItem, e6 = e6.startIndex, n5 = S3(t5) ? 0 : t5.length;
          a5.setMessage("count:".concat(n5)).end(), M3.i("".concat(i5, " ok")), o5._startIndex = e6, o5._handleResponse(t5, true), o5._userM.emitOEvt(h4.BLACKLIST_UPDATED, d3(o5._blacklistMap.keys())), 0 !== o5._startIndex && o5.getBlacklist();
        }).catch(function(e6) {
          return a5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "addBlacklist", value: function(t5) {
        var e5, n5, o5 = this, i5 = new P3("addToBlacklist"), a5 = "".concat(this._n, ".addBlacklist"), s5 = this._userM.getMyAccount();
        return 1 === t5.userIDList.length && t5.userIDList[0] === s5 ? (n5 = this._userM.getErrMsg(e5 = k2.CANNOT_ADD_SELF_TO_BLACKLIST), i5.setCode(e5).setMessage(n5).end(), n5 = new L3({ code: e5 }), M3.e("".concat(a5, " failed. error:"), n5), E4(n5)) : (t5.userIDList.includes(s5) && (t5.userIDList = t5.userIDList.filter(function(e6) {
          return e6 !== s5;
        })), t5.fromAccount = this._userM.getMyAccount(), t5.toAccount = t5.userIDList, this._userM.req({ P: G2.ADD_TO_BL, data: t5 }).then(function(e6) {
          return i5.setMessage(5 < t5.userIDList.length ? "userIDList.length:".concat(t5.userIDList.length) : "userIDList:".concat(t5.userIDList)).end(), M3.i("".concat(a5, " ok")), o5._handleResponse(e6.resultItem, true), T4(d3(o5._blacklistMap.keys()));
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "_handleResponse", value: function(e5, t5) {
        if (!S3(e5))
          for (var n5, o5, i5, a5 = 0, s5 = e5.length; a5 < s5; a5++)
            o5 = e5[a5].to, i5 = e5[a5].resultCode, !N3(i5) && 0 !== i5 || (t5 ? ((n5 = this._blacklistMap.has(o5) ? this._blacklistMap.get(o5) : new ci()).userID = o5, S3(e5[a5].addBlackTimeStamp) || (n5.timeStamp = e5[a5].addBlackTimeStamp), this._blacklistMap.set(o5, n5)) : this._blacklistMap.has(o5) && (n5 = this._blacklistMap.get(o5), this._blacklistMap.delete(o5)));
        M3.l("".concat(this._n, "._handleResponse total:").concat(this._blacklistMap.size, " bAdd:").concat(t5));
      } }, { key: "deleteBlacklist", value: function(t5) {
        var n5 = this, o5 = "".concat(this._n, ".deleteBlacklist"), i5 = new P3("removeFromBlacklist");
        return t5.fromAccount = this._userM.getMyAccount(), t5.toAccount = t5.userIDList, this._userM.req({ P: G2.RM_FROM_BL, data: t5 }).then(function(e5) {
          return i5.setMessage(5 < t5.userIDList.length ? "userIDList.length:".concat(t5.userIDList.length) : "userIDList:".concat(t5.userIDList)).end(), M3.i("".concat(o5, " ok")), n5._handleResponse(e5.data.resultItem, false), T4(d3(n5._blacklistMap.keys()));
        }).catch(function(e5) {
          return i5.setError(e5).end(), M3.e("".concat(o5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "onAccountDeleted", value: function(e5) {
        for (var t5 = 0, n5 = e5.length; t5 < n5; t5++) {
          var o5 = e5[t5];
          this._blacklistMap.has(o5) && this._blacklistMap.delete(o5);
        }
        var i5 = e5.length;
        0 < i5 && (M3.l("".concat(this._n, ".onAccountDeleted count:").concat(i5, " ").concat(i5 < 30 ? "userIDList:".concat(e5) : "")), this._userM.emitOEvt(h4.BLACKLIST_UPDATED, d3(this._blacklistMap.keys())));
      } }, { key: "onAccountAdded", value: function(e5) {
        for (var t5, n5 = [], o5 = 0, i5 = e5.length; o5 < i5; o5++)
          t5 = e5[o5], this._blacklistMap.has(t5) || (this._blacklistMap.set(t5, new ci({ userID: t5 })), n5.push(t5));
        0 < n5.length && (M3.l("".concat(this._n, ".onAccountAdded count:").concat(n5.length, " userIDList:"), n5), this._userM.emitOEvt(h4.BLACKLIST_UPDATED, d3(this._blacklistMap.keys())));
      } }, { key: "reset", value: function() {
        this._blacklistMap.clear(), this._startIndex = 0;
      } }]), li = e4(function e5(t5) {
        p4(this, e5), this._userM = t5, this._n = "UserStatusHandler", this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100, this._userM.getIEmitInst().on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      }, [{ key: "_onCloudConfig", value: function() {
        var e5 = this._userM.getCloudConfig("status_query_count"), t5 = this._userM.getCloudConfig("status_sub_count"), n5 = this._userM.getCloudConfig("status_unsub_count");
        M3.l("".concat(this._n, "._onCloudConfig statusQueryCount:").concat(e5, " statusSubscribeCount:").concat(t5) + " statusUnsubscribeCount:".concat(n5)), N3(e5) || (this.MAX_QUERY_USER_COUNT = parseInt(e5, 10)), N3(e5) || (this.MAX_SUBSCRIBE_USER_COUNT = parseInt(t5, 10)), N3(e5) || (this.MAX_UNSUBSCRIBE_USER_COUNT = parseInt(n5, 10));
      } }, { key: "onUserStatusUpdated", value: function(e5) {
        var e5 = e5.dataList, o5 = this._userM.getMyUserID(), i5 = this._userM.get(12), e5 = e5.map(function(e6) {
          var t5 = e6.to, n5 = e6.statusType, e6 = e6.customStatus, e6 = Go(e6);
          return t5 === o5 && i5.setCustomStatus(e6), { userID: t5, statusType: n5, customStatus: e6 };
        });
        M3.l("".concat(this._n, ".onUserStatusUpdated list:").concat(JSON.stringify(e5))), this._userM.emitOEvt(h4.USER_STATUS_UPDATED, e5);
      } }, { key: "setSelfStatus", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".setSelfStatus");
        return false === this._userM.filterProfanity("customStatus", e5) ? E4({ code: k2.PROFANITY_FOUND }) : (t5 = new P3("setSelfStatus"), n5 = e5.customStatus, this._userM.req({ P: G2.SET_SELF_STATUS, data: { customStatus: n5 } }).then(function(e6) {
          return t5.setMessage("customStatus:".concat(n5)).end(), M3.l("".concat(i5, " ok. customStatus:").concat(n5)), o5._userM.get(12).setCustomStatus(n5), T4({ userID: o5._userM.getMyUserID(), statusType: 1, customStatus: n5 });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "getUserStatus", value: function(e5) {
        var o5 = "".concat(this._n, ".").concat("getUserStatus"), e5 = e5.userIDList, i5 = void 0 === e5 ? [] : e5, e5 = this._userM.getMyUserID(), t5 = d3(i5), a5 = void 0, n5 = t5.indexOf(e5);
        if (-1 < n5 && (t5.splice(n5, 1), a5 = { userID: e5, statusType: 1, customStatus: this._userM.get(12).getCustomStatus() }), 0 === t5.length)
          return D2({ successUserList: [a5], failureUserList: [] });
        if (!this._userM.canIUse(g4.USER_STATUS))
          return this._userM.noUse("getUserStatus");
        t5.length > this.MAX_QUERY_USER_COUNT && (M3.w("".concat(o5, " ").concat(Qt2(this.MAX_QUERY_USER_COUNT))), t5 = i5.slice(0, this.MAX_QUERY_USER_COUNT));
        var s5 = new P3("getUserStatus");
        return this._userM.req({ P: G2.GET_USER_STATUS, data: { userIDList: t5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.successUserList, t6 = void 0 === t6 ? [] : t6, e6 = e6.failureUserList, e6 = void 0 === e6 ? [] : e6, t6 = t6.map(function(e7) {
            var t7 = e7.userID, n7 = e7.statusType, e7 = e7.customStatus;
            return { userID: t7, statusType: n7, customStatus: Go(e7) };
          }), e6 = e6.map(function(e7) {
            var t7 = e7.userID, n7 = e7.invalidUserID, o6 = e7.errorCode, e7 = e7.errorInfo;
            return { userID: S3(n7) ? t7 : n7, code: o6, message: e7 };
          }), n6 = (N3(a5) || t6.unshift(a5), "userID count:".concat(i5.length, ", success count:").concat(t6.length, ", fail count:").concat(e6.length));
          return s5.setMessage("".concat(n6)).end(), M3.l("".concat(o5, " ok. ").concat(n6, ".")), T4({ successUserList: t6, failureUserList: e6 });
        }).catch(function(e6) {
          return s5.setMessage("userID count:".concat(i5.length)).setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "subscribeUserStatus", value: function(e5) {
        var t5, n5, o5, i5, a5 = "subscribeUserStatus";
        return this._userM.canIUse(g4.USER_STATUS) ? (t5 = "".concat(this._n, ".").concat(a5), (n5 = d3(e5 = void 0 === (e5 = e5.userIDList) ? [] : e5)).length > this.MAX_SUBSCRIBE_USER_COUNT && (M3.w("".concat(t5, " ").concat(Qt2(this.MAX_SUBSCRIBE_USER_COUNT))), n5 = e5.slice(0, this.MAX_SUBSCRIBE_USER_COUNT)), o5 = new P3(a5), i5 = "userID count:".concat(e5.length), M3.l("".concat(t5, " ").concat(i5)), this._userM.req({ P: G2.SUB_USER_STATUS, data: { userIDList: n5 } }).then(function(e6) {
          e6 = e6.data.failureUserList, e6 = (void 0 === e6 ? [] : e6).map(function(e7) {
            var t6 = e7.userID, n6 = e7.invalidUserID, o6 = e7.errorCode, e7 = e7.errorInfo;
            return { userID: S3(n6) ? t6 : n6, code: o6, message: e7 };
          });
          return o5.setMessage("".concat(i5, " fail count:").concat(e6.length)).end(), M3.l("".concat(t5, " ok. fail count:").concat(e6.length, ".")), T4({ failureUserList: e6 });
        }).catch(function(e6) {
          return o5.setMessage(i5).setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._userM.noUse(a5);
      } }, { key: "unsubscribeUserStatus", value: function(e5) {
        var t5, n5, o5, i5, a5 = "unsubscribeUserStatus";
        return this._userM.canIUse(g4.USER_STATUS) ? (t5 = "".concat(this._n, ".").concat(a5), n5 = d3(e5 = void 0 === (e5 = (e5 || {}).userIDList) ? [] : e5), e5.length > this.MAX_UNSUBSCRIBE_USER_COUNT && (M3.w("".concat(t5, " ").concat(Qt2(this.MAX_UNSUBSCRIBE_USER_COUNT))), n5 = e5.slice(0, this.MAX_UNSUBSCRIBE_USER_COUNT)), o5 = new P3(a5), i5 = "userID count:".concat(e5.length), M3.l("".concat(t5, " ").concat(i5)), e5 = { userIDList: n5 }, 0 === n5.length && (e5.userIDList = void 0, e5.unsubscribeAll = 1), this._userM.req({ P: G2.UNSUB_USER_STATUS, data: e5 }).then(function(e6) {
          e6 = e6.data.failureUserList, e6 = (void 0 === e6 ? [] : e6).map(function(e7) {
            var t6 = e7.userID, n6 = e7.invalidUserID, o6 = e7.errorCode, e7 = e7.errorInfo;
            return { userID: S3(n6) ? t6 : n6, code: o6, message: e7 };
          });
          return o5.setMessage("".concat(i5, " fail count:").concat(e6.length)).end(), M3.l("".concat(t5, " ok. fail count:").concat(e6.length, ".")), T4({ failureUserList: e6 });
        }).catch(function(e6) {
          return o5.setMessage("".concat(i5)).setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this._userM.noUse(a5);
      } }, { key: "reset", value: function() {
        this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100;
      } }]), di = (t4(fi, c4), e4(fi, [{ key: "onContextUpdated", value: function(e5) {
        this._profileHandler.getMyProfile(), this._blacklistHandler.getBlacklist();
      } }, { key: "mockOnNickAvatarModified", value: function(e5, t5) {
        M3.l("".concat(this._n, "._mockOnNickAvatarModified nick:").concat(e5, " avatar:").concat(t5)), this.onProfileModified({ dataList: [{ pushType: 1, userID: this.getMyUserID(), profileList: [{ tag: f3.NICK, value: e5 }, { tag: f3.AVATAR, value: t5 }] }] });
      } }, { key: "onProfileModified", value: function(e5) {
        this._profileHandler.onProfileModified(e5);
      } }, { key: "onRelationChainModified", value: function(e5) {
        var t5, n5, e5 = e5.dataList;
        S3(e5) || (t5 = [], e5.forEach(function(e6) {
          e6.blackListDelAccount && t5.push.apply(t5, d3(e6.blackListDelAccount));
        }), 0 < t5.length && this._blacklistHandler.onAccountDeleted(t5), n5 = [], e5.forEach(function(e6) {
          e6.blackListAddAccount && n5.push.apply(n5, d3(e6.blackListAddAccount));
        }), 0 < n5.length && this._blacklistHandler.onAccountAdded(n5));
      } }, { key: "onConvProfileUpdated", value: function(e5) {
        this._profileHandler.onConvProfileUpdated(e5);
      } }, { key: "getMyAccount", value: function() {
        return this.getMyUserID();
      } }, { key: "getMyNick", value: function() {
        return this._profileHandler.getNickAndAvatarByUserID(this.getMyUserID()).nick;
      } }, { key: "getMyProfile", value: function() {
        return this._profileHandler.getMyProfile();
      } }, { key: "getStorageModule", value: function() {
        return this.get(13);
      } }, { key: "filterProfanity", value: function(e5, t5) {
        var n5, o5 = this.get(29);
        return !o5 || (n5 = (o5 = o5.filterText(t5[e5], "user_profile")).isAllowedToSend, o5 = o5.modifiedText, true === n5 && (t5[e5] = o5, true));
      } }, { key: "isMyFriend", value: function(e5) {
        var t5 = this.get(8);
        return !!t5 && t5.isMyFriend(e5);
      } }, { key: "getUserProfile", value: function(e5) {
        return this._profileHandler.getUserProfile(e5);
      } }, { key: "updateMyProfile", value: function(e5) {
        return this._profileHandler.updateMyProfile(e5);
      } }, { key: "getNickAndAvatarByUserID", value: function(e5) {
        return this._profileHandler.getNickAndAvatarByUserID(e5);
      } }, { key: "getUserNickAndAvatar", value: function(e5) {
        return this._profileHandler.getUserNickAndAvatar(e5);
      } }, { key: "getLocalBlacklist", value: function() {
        var e5 = this._blacklistHandler.getLocalBlacklist();
        return D2(e5);
      } }, { key: "addBlacklist", value: function(e5) {
        return this._blacklistHandler.addBlacklist(e5);
      } }, { key: "deleteBlacklist", value: function(e5) {
        return this._blacklistHandler.deleteBlacklist(e5);
      } }, { key: "onUserStatusUpdated", value: function(e5) {
        this._userStatusHandler.onUserStatusUpdated(e5);
      } }, { key: "setSelfStatus", value: function(e5) {
        return this._userStatusHandler.setSelfStatus(e5);
      } }, { key: "getUserStatus", value: function(e5) {
        return this._userStatusHandler.getUserStatus(e5);
      } }, { key: "subscribeUserStatus", value: function(e5) {
        return this._userStatusHandler.subscribeUserStatus(e5);
      } }, { key: "unsubscribeUserStatus", value: function(e5) {
        return this._userStatusHandler.unsubscribeUserStatus(e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._profileHandler.reset(), this._blacklistHandler.reset(), this._userStatusHandler.reset();
      } }])), pi = e4(function e5(t5, n5) {
        p4(this, e5), this._m = t5, this._isLoggedIn = false, this._SDKAppID = n5.SDKAppID, this._userID = n5.userID || "", this._userSig = n5.userSig || "", this._version = "3.5.3", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._contentType = "json", this._unlimitedAVChatRoom = n5.unlimitedAVChatRoom, this._scene = n5.scene || "", this._oversea = n5.oversea, this._instanceID = n5.instanceID, this._statusInstanceID = 0, this._isDevMode = n5.devMode, this._isTestEnv = n5.testEnv, this._proxyServer = n5.proxyServer, this._fileUploadProxy = n5.fileUploadProxy, this._fileDownloadProxy = n5.fileDownloadProxy, this._applicationID = 0, this._isPartialUpdatedConvs = n5.partialUpdatedConversations, this._isIndependentDomainDisabled = n5.disableIndependentDomain, this._isUsingChatCore = false, this._uiPlatform = 0, this._authKey = "", this._customLoginInfo = "";
      }, [{ key: "isLoggedIn", value: function() {
        return this._isLoggedIn;
      } }, { key: "isOversea", value: function() {
        return this._oversea;
      } }, { key: "isPrivateNetWork", value: function() {
        return this._proxyServer;
      } }, { key: "isDevMode", value: function() {
        return this._isDevMode;
      } }, { key: "isTestEnv", value: function() {
        return this._isTestEnv;
      } }, { key: "isPartialUpdatedConvs", value: function() {
        return this._isPartialUpdatedConvs;
      } }, { key: "isIndependentDomainDisabled", value: function() {
        return this._isIndependentDomainDisabled;
      } }, { key: "isSingaporeSite", value: function() {
        return 2e7 <= this._SDKAppID && this._SDKAppID < 3e7 || 172e7 <= this._SDKAppID && this._SDKAppID < 173e7;
      } }, { key: "isKoreaSite", value: function() {
        return 3e7 <= this._SDKAppID && this._SDKAppID < 4e7 || 173e7 <= this._SDKAppID && this._SDKAppID < 174e7;
      } }, { key: "isGermanySite", value: function() {
        return 4e7 <= this._SDKAppID && this._SDKAppID < 5e7 || 174e7 <= this._SDKAppID && this._SDKAppID < 175e7;
      } }, { key: "isIndiaSite", value: function() {
        return 5e7 <= this._SDKAppID && this._SDKAppID < 6e7 || 175e7 <= this._SDKAppID && this._SDKAppID < 176e7;
      } }, { key: "isJapanSite", value: function() {
        return 6e7 <= this._SDKAppID && this._SDKAppID < 7e7 || 176e7 <= this._SDKAppID && this._SDKAppID < 177e7;
      } }, { key: "isUSASite", value: function() {
        return 7e7 <= this._SDKAppID && this._SDKAppID < 8e7 || 177e7 <= this._SDKAppID && this._SDKAppID < 178e7;
      } }, { key: "isIndonesiaSite", value: function() {
        return 8e7 <= this._SDKAppID && this._SDKAppID < 9e7 || 178e7 <= this._SDKAppID && this._SDKAppID < 179e7;
      } }, { key: "isIntl", value: function() {
        return 0 === (e5 = this._SDKAppID) || 2e7 <= e5 && e5 < 9e7 || 172e7 <= e5 && e5 < 179e7;
        var e5;
      } }, { key: "isUnlimitedAVChatRoom", value: function() {
        return this._unlimitedAVChatRoom;
      } }, { key: "isUsingChatCore", value: function() {
        return this._isUsingChatCore;
      } }, { key: "setUsingChatCore", value: function(e5) {
        this._isUsingChatCore = e5;
      } }, { key: "getUIPlatform", value: function() {
        return this._uiPlatform;
      } }, { key: "setUIPlatform", value: function(e5) {
        this._uiPlatform = e5;
      } }, { key: "setUserID", value: function(e5) {
        this._userID = e5;
      } }, { key: "getUserID", value: function() {
        return this._userID;
      } }, { key: "setUserSig", value: function(e5) {
        this._userSig = e5;
      } }, { key: "getUserSig", value: function() {
        return this._userSig;
      } }, { key: "getSDKAppID", value: function() {
        return this._SDKAppID;
      } }, { key: "setTinyID", value: function(e5) {
        this._tinyID = e5, this._isLoggedIn = true;
      } }, { key: "getTinyID", value: function() {
        return this._tinyID;
      } }, { key: "setCustomStatus", value: function(e5) {
        this._customStatus = e5;
      } }, { key: "getCustomStatus", value: function() {
        return this._customStatus;
      } }, { key: "getScene", value: function() {
        return Ne2 ? window.tencent_cloud_im_csig_flutter_for_web_25F_cy : this._isTUIKit() ? "tuikit" : this._scene;
      } }, { key: "getInstanceID", value: function() {
        return this._instanceID;
      } }, { key: "getStatusInstanceID", value: function() {
        return this._statusInstanceID;
      } }, { key: "setStatusInstanceID", value: function(e5) {
        this._statusInstanceID = e5;
      } }, { key: "getVersion", value: function() {
        return this._version;
      } }, { key: "getA2Key", value: function() {
        return this._a2Key;
      } }, { key: "setA2Key", value: function(e5) {
        this._a2Key = e5;
      } }, { key: "getContentType", value: function() {
        return this._contentType;
      } }, { key: "getProxyServer", value: function() {
        return this._proxyServer;
      } }, { key: "getFileUploadProxy", value: function() {
        return this._fileUploadProxy;
      } }, { key: "getFileDownloadProxy", value: function() {
        return this._fileDownloadProxy;
      } }, { key: "setApplicationID", value: function(e5) {
        this._applicationID = e5;
      } }, { key: "getApplicationID", value: function() {
        return this._applicationID;
      } }, { key: "setDowloadFileAuthKey", value: function(e5) {
        this._authKey = e5;
      } }, { key: "getDownloadFileAuthKey", value: function() {
        return this._authKey;
      } }, { key: "setCustomLoginInfo", value: function(e5) {
        this._customLoginInfo = e5;
      } }, { key: "getCustomLoginInfo", value: function() {
        return this._customLoginInfo;
      } }, { key: "_isTUIKit", value: function() {
        var e5 = false, t5 = false, n5 = false, o5 = false, i5 = [];
        v3 && (i5 = Object.keys(I3));
        for (var a5 = 0, s5 = (i5 = Ie2 ? me2 ? Object.keys(uni) : Object.keys(window) : i5).length; a5 < s5; a5++)
          if (i5[a5].toLowerCase().includes("uikit")) {
            e5 = true;
            break;
          }
        var r5, i5 = null, c5 = (v3 && !ct2(I3.createGamePortal) && ct2(getApp) && !N3(getApp()) && (r5 = getApp().globalData, m3(r5)) && true === r5.isTUIKit && (t5 = true), true === this._m.get(13).getStorageSync("TIM_".concat(this._SDKAppID, "_isTUIKit")) && (n5 = true), null);
        if (le2 && !_e2 && "undefined" == typeof uni && __wxConfig && (c5 = __wxConfig.pages), pe2 && "undefined" == typeof uni && __qqConfig && (c5 = __qqConfig.pages), O3(c5) && 0 < c5.length) {
          for (var u5 = 0, l5 = c5.length; u5 < l5; u5++)
            if (c5[u5].toLowerCase().includes("tui")) {
              o5 = true;
              break;
            }
          c5 = null;
        }
        return e5 || t5 || n5 || o5;
      } }, { key: "reset", value: function() {
        this._isLoggedIn = false, this._userSig = "", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._statusInstanceID = 0;
      } }]), _i = { "k-vue2-pc": 1, "k-vue2-h5": 2, "k-vue2-h5-uni": 3, "k-vue2-app-uni": 4, "k-vue2-mp-uni": 5, "k-vue2-pc-uni": 6, "k-vue3-pc": 7, "k-vue3-h5": 8, "k-vue3-h5-uni": 9, "k-vue3-app-uni": 10, "k-vue3-mp-uni": 11, "k-vue3-pc-uni": 12, "k-rn": 13 }, hi = (t4(gi, c4), e4(gi, [{ key: "onCheckTimer", value: function(e5) {
        this.isLoggedIn() && e5 % this._helloInterval == 0 && this._hello();
      } }, { key: "getPushModule", value: function() {
        var e5 = void 0, t5 = this.get(36), n5 = this.get(28);
        return t5.canIUseTIMPush() ? e5 = t5 : n5.canIUseOfflinePush() && (e5 = n5), e5;
      } }, { key: "login", value: function(e5) {
        if (this.isLoggedIn())
          return n5 = this.getMyUserID(), (n5 = this.getErrMsg("RepeatLogin", n5)) && M3.w(n5), D2({ actionStatus: "OK", errorCode: 0, errorInfo: n5, repeatLogin: true });
        if (Date.now() - this._lastLoginTs <= 15e3)
          return this.warn("LoggingIn", e5.userID), E4({ code: k2.REPEAT_LOGIN });
        M3.l("".concat(this._n, ".login userID:").concat(e5.userID));
        var t5, n5 = this._checkLoginInfo(e5);
        return 0 !== n5.code ? E4(n5) : (n5 = this.get(12), t5 = e5.userID, e5 = e5.userSig, n5.setUserID(t5), n5.setUserSig(e5), this.get(20).updateProtocolConfig(), this._login());
      } }, { key: "_login", value: function() {
        var _4 = this, h5 = this.get(12), g5 = h5.getScene(), e5 = 0, t5 = g5, f4 = (g5 && g5.startsWith("k-") && (t5 = _i[g5], g5 = "tuikit"), new P3("login")), n5 = (f4.setMessage("".concat(t5)).setMoreMessage("identifier:".concat(this.getMyUserID())), "tuikit" === g5), o5 = 0, n5 = (me2 ? o5 = n5 ? 3 === t5 || 4 === t5 || 5 === t5 || 6 === t5 ? 31 : 9 === t5 || 10 === t5 || 11 === t5 || 12 === t5 ? 32 : 4 : 3 : v3 ? o5 = de2 ? 36 : "tuikit" === g5 ? 12 : 11 : Ie2 ? o5 = Ne2 ? "flutter_web_uikit" === g5 ? 21 : 20 : this._isReactUIKit() ? Oe2 ? 25 : 24 : n5 ? 1 === t5 || 2 === t5 ? 29 : 7 === t5 || 8 === t5 ? 30 : Oe2 ? 17 : 14 : Oe2 ? 16 : 13 : 13 === t5 && (o5 = 38), f4.setUIPlatform(o5), h5.setUIPlatform(o5), this.getPushModule()), m4 = (n5 && (this._isWebUniapp = n5.getUniAppPlatform(), t5 = this._getStatusInstanceID(), h5.setStatusInstanceID(t5), this.get(20).updateProtocolConfig(), e5 = n5.getDeviceBrand()), "".concat(this._n, "._login"));
        return this._lastLoginTs = Date.now(), this.req({ P: G2.LOGIN, data: { deviceBrand: e5, isWebUniapp: this._isWebUniapp, customInfo: h5.getCustomLoginInfo() } }).then(function(e6) {
          _4._lastLoginTs = 0;
          var t6 = Date.now(), n6 = null, o6 = e6.data, i5 = o6.a2Key, a5 = o6.tinyID, s5 = o6.helloInterval, r5 = o6.instanceID, c5 = o6.timeStamp, u5 = o6.customStatus, u5 = void 0 === u5 ? "" : u5, l5 = o6.purchaseBits, o6 = o6.authKey, o6 = void 0 === o6 ? "" : o6, d4 = 1e3 * c5, p5 = t6 - f4.getStartTs(), p5 = d4 + parseInt(p5 / 2) - t6, t6 = f4.getStartTs() + p5;
          if (f4.start(t6), t6 = d4, Be2 = p5, (d4 = /* @__PURE__ */ new Date()).setTime(t6), M3.i("baseTime from server:".concat(d4, " offset:").concat(Be2)), a5) {
            if (i5)
              return t6 = _4.get(21).getSocketID(), d4 = Go(u5), u5 = "socketID:".concat(t6, " scene:").concat(g5, " helloInterval:").concat(s5, " instanceID:").concat(r5, " timeStamp:").concat(c5) + " offset:".concat(p5, " customStatus:").concat(d4, " isWebUniapp:").concat(_4._isWebUniapp), M3.l("".concat(m4, " ok. ").concat(u5)), c5 = t6 = "", le2 && ct2(I3.getAccountInfoSync) && (p5 = I3.getAccountInfoSync().miniProgram) && (t6 = p5.appId, c5 = p5.envVersion), f4.setMoreMessage("".concat(u5, " href:").concat(Ie2 ? window.location.href : "", " mpAppId:").concat(t6, " envVersion:").concat(c5, " authKey:").concat(o6)).end(), h5.setA2Key(i5), h5.setTinyID(a5), h5.setStatusInstanceID(r5), h5.setCustomStatus(d4), h5.setDowloadFileAuthKey(o6), l5 && _4.get(27).onPushedConfig({ errorCode: 0, expiredTime: 0, purchaseBits: l5 }), _4.get(20).updateProtocolConfig(), _4.emitIEvt(U3.A2KEY_AND_TINYID_UPDATED), _4._helloInterval = s5, _4.triggerReady(), (p5 = _4.getPushModule()) && (uni.setStorageSync("timUniAppInstanceID", r5), p5.init()), _4._fetchCloudControlConfig(), _4.get(29).init(), e6;
            n6 = new L3({ code: k2.NO_A2KEY });
          } else
            n6 = new L3({ code: k2.NO_TINYID });
          throw f4.setError(n6).end(), n6;
        }).catch(function(e6) {
          return f4.setError(e6).end(true), _4._m.setNotReadyReason(k2.LOGIN_FAILED), M3.e("".concat(m4, " failed. error:"), e6), _4._lastLoginTs = 0, _4._m.onLoginFailed(), E4(e6);
        });
      } }, { key: "logout", value: function() {
        var t5 = this, e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0, n5 = "".concat(this._n, ".logout"), o5 = this.isLoggedIn();
        return M3.i("".concat(n5, " type:").concat(e5, " isLoggedIn:").concat(o5, " isWebUniapp:").concat(this._isWebUniapp)), o5 ? (new P3("logout").setMessage("identifier:".concat(this.getMyUserID())).end(true), 0 === e5 && this._m.setNotReadyReason(k2.LOGGED_OUT), this.req({ P: G2.LOGOUT, data: { type: e5, isWebUniapp: this._isWebUniapp } }).then(function() {
          return t5.resetReady(), D2({});
        }).catch(function(e6) {
          return M3.e("".concat(n5, " error:"), e6), t5.resetReady(), D2({});
        })) : E4({ code: k2.USER_NOT_LOGGED_IN });
      } }, { key: "getLoginUser", value: function() {
        return this.isLoggedIn() ? this.getMyUserID() : "";
      } }, { key: "_fetchCloudControlConfig", value: function() {
        this.get(23).fetchConfig();
      } }, { key: "_getStatusInstanceID", value: function() {
        return uni.getStorageSync("timUniAppInstanceID") || 0;
      } }, { key: "_hello", value: function() {
        var t5 = this;
        this._lastWsHelloTs = Date.now(), this.req({ P: G2.HELLO, data: { isWebUniapp: this._isWebUniapp } }).catch(function(e5) {
          M3.w("".concat(t5._n, "._hello error:"), e5);
        });
      } }, { key: "getLastWsHelloTs", value: function() {
        return this._lastWsHelloTs;
      } }, { key: "_checkLoginInfo", value: function(e5) {
        var t5 = 0;
        return S3(this.get(12).getSDKAppID()) ? t5 = k2.NO_SDKAPPID : S3(e5.userID) ? t5 = k2.NO_IDENTIFIER : S3(e5.userSig) && (t5 = k2.NO_USERSIG), { code: t5 };
      } }, { key: "_isReactUIKit", value: function() {
        return Ie2 && void 0 !== window.tencent_cloud_im_csig_react_uikit_23F_xa;
      } }, { key: "onMultipleAccountKickedOut", value: function(e5) {
        var t5 = this;
        new P3("kickedOut").setMessage("type:".concat(R3.KICKED_OUT_MULT_ACCOUNT, " newInstanceInfo:").concat(JSON.stringify(e5))).end(true), M3.w("".concat(this._n, ".onMultipleAccountKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e5), this.logout(1).then(function() {
          t5.emitOEvt(h4.KICKED_OUT, { type: R3.KICKED_OUT_MULT_ACCOUNT }), t5._m.setNotReadyReason(k2.KICKED_OUT_MULT_ACCOUNT), t5._m.reset();
        });
      } }, { key: "onMultipleDeviceKickedOut", value: function(e5) {
        var t5 = this;
        new P3("kickedOut").setMessage("type:".concat(R3.KICKED_OUT_MULT_DEVICE, " newInstanceInfo:").concat(JSON.stringify(e5))).end(true), M3.w("".concat(this._n, ".onMultipleDeviceKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e5), this.logout(1).then(function() {
          t5.emitOEvt(h4.KICKED_OUT, { type: R3.KICKED_OUT_MULT_DEVICE }), t5._m.setNotReadyReason(k2.KICKED_OUT_MULT_DEVICE), t5._m.reset();
        });
      } }, { key: "onUserSigExpired", value: function() {
        new P3("kickedOut").setMessage(R3.KICKED_OUT_USERSIG_EXPIRED).end(true), M3.w("".concat(this._n, ".onUserSigExpired userID:").concat(this.getMyUserID())), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(h4.KICKED_OUT, { type: R3.KICKED_OUT_USERSIG_EXPIRED }), this._m.setNotReadyReason(k2.KICKED_OUT_USERSIG_EXPIRED), this._m.reset());
      } }, { key: "onRestApiKickedOut", value: function(e5) {
        new P3("kickedOut").setMessage("type:".concat(R3.KICKED_OUT_REST_API, " newInstanceInfo:").concat(JSON.stringify(e5))).end(true), M3.w("".concat(this._n, ".onRestApiKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e5), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(h4.KICKED_OUT, { type: R3.KICKED_OUT_REST_API }), this._m.setNotReadyReason(k2.KICKED_OUT_REST_API), this._m.reset(), this.get(21).onRestApiKickedOut());
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this.resetReady(), this._helloInterval = 120, this._lastLoginTs = 0, this._lastWsHelloTs = 0, this._isWebUniapp = 0;
      } }]));
      function gi(e5) {
        return p4(this, gi), (e5 = i4(this, gi, [e5]))._n = "SignModule", e5._helloInterval = 120, e5._lastLoginTs = 0, e5._lastWsHelloTs = 0, e5._isWebUniapp = 0, Ao.mixin(e5), e5;
      }
      function fi(e5) {
        return p4(this, fi), (e5 = i4(this, fi, [e5]))._n = "UserModule", e5._profileHandler = new ri(e5), e5._blacklistHandler = new ui(e5), e5._userStatusHandler = new li(e5), e5.getIEmitInst().on(U3.A2KEY_AND_TINYID_UPDATED, e5.onContextUpdated, e5), e5;
      }
      function mi(e5) {
        return p4(this, mi), (e5 = i4(this, mi, [e5]))._n = "TopicModule", e5._topicMap = /* @__PURE__ */ new Map(), e5._getTopicTimeMap = /* @__PURE__ */ new Map(), e5.TOPIC_CACHE_TIME = 300, e5.TOPIC_LAST_ACTIVE_TIME = 3600, e5.getIEmitInst().on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function vi(e5) {
        return p4(this, vi), (e5 = i4(this, vi, [e5]))._n = "GroupModule", e5._commonGroupHandler = new Yo(e5), e5._groupAttributesHandler = new jo(e5), e5._groupCountersHandler = new Jo(e5), e5._AVChatRoomHandler = new Zo(e5), e5._groupTipsHandler = new Wo(e5), e5._groupSystemNoticeHandler = new ti(e5), e5._groupMemberHandler = new $o(e5), e5.groupMap = /* @__PURE__ */ new Map(), e5._unjoinedAVChatRoomList = /* @__PURE__ */ new Map(), e5._receiptDetailCompleteMap = /* @__PURE__ */ new Map(), e5._onlineMemberCountMap = /* @__PURE__ */ new Map(), e5._timeoutIDs = [], e5.getIEmitInst().on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function Ii(e5) {
        return p4(this, Ii), (e5 = i4(this, Ii, [e5]))._n = "ConvModule", Ao.mixin(e5), e5._msgListHandler = new ko(e5), e5._msgRemindHandler = new Bo(e5), e5._convGroupHandler = new Ho(e5), e5._sll = new wo(100), e5._pagingStatus = Gn, e5._pagingTs = 0, e5._pagingStartIdx = 0, e5._pagingPinnedTs = 0, e5._pagingPinnedStartIdx = 0, e5._pagingConvIDMap = /* @__PURE__ */ new Map(), e5._convIDFromUnreadDBMap = /* @__PURE__ */ new Map(), e5._convMap = /* @__PURE__ */ new Map(), e5._tmpGroupList = [], e5._tmpGroupAtTipsList = [], e5._peerReadTimeMap = /* @__PURE__ */ new Map(), e5._completedMap = /* @__PURE__ */ new Map(), e5._roamingMsgKeyAndTimeMap = /* @__PURE__ */ new Map(), e5._remoteGroupReadSeqMap = /* @__PURE__ */ new Map(), e5._convTotalUnreadCount = 0, e5._pagingGetCostList = [], e5._convMapForDiff = /* @__PURE__ */ new Map(), e5._partialUpdatedConvMap = /* @__PURE__ */ new Map(), e5._everClearedMap = /* @__PURE__ */ new Map(), e5._bPullOnInvite = true, e5._initListeners(), e5;
      }
      function Mi() {
        return null;
      }
      function yi(e5) {
        var t5 = e5.get(12);
        return { SDKType: 10, SDKAppID: t5.getSDKAppID(), SDKVersion: t5.getVersion(), tinyID: Number(t5.getTinyID()), userID: t5.getUserID(), platform: e5.getPlatform(), instanceID: t5.getInstanceID(), traceID: He2() };
      }
      var Ci = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "StorageModule", this._storageQueue = /* @__PURE__ */ new Map(), this._errorTolerantHandle();
      }, [{ key: "_errorTolerantHandle", value: function() {
        v3 || "undefined" != typeof window && this._canIUseCookies() || (this.getItem = Mi, this.setItem = Mi, this.removeItem = Mi, this.clear = Mi);
      } }, { key: "onCheckTimer", value: function(e5) {
        e5 % 20 == 0 && 0 !== this._storageQueue.size && this._doFlush();
      } }, { key: "_doFlush", value: function() {
        try {
          var e5, t5 = F2(this._storageQueue);
          try {
            for (t5.s(); !(e5 = t5.n()).done; ) {
              var n5 = j2(e5.value, 2), o5 = n5[0], i5 = n5[1];
              this._setStorageSync(this._getKey(o5), i5);
            }
          } catch (e6) {
            t5.e(e6);
          } finally {
            t5.f();
          }
          this._storageQueue.clear();
        } catch (e6) {
          M3.w("".concat(this._n, "._doFlush error:"), e6);
        }
      } }, { key: "_getPrefix", value: function() {
        var e5 = this._m.get(12);
        return "TIM_".concat(e5.getSDKAppID(), "_").concat(e5.getUserID(), "_");
      } }, { key: "_getKey", value: function(e5) {
        return "".concat(this._getPrefix()).concat(e5);
      } }, { key: "getItem", value: function(e5) {
        var t5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
        try {
          var n5 = t5 ? this._getKey(e5) : e5;
          return this.getStorageSync(n5);
        } catch (e6) {
          return M3.w("".concat(this._n, ".getItem error:"), e6), {};
        }
      } }, { key: "setItem", value: function(e5, t5) {
        var n5;
        2 < arguments.length && void 0 !== arguments[2] && arguments[2] ? (n5 = !(3 < arguments.length && void 0 !== arguments[3]) || arguments[3] ? this._getKey(e5) : e5, this._setStorageSync(n5, t5)) : this._storageQueue.set(e5, t5);
      } }, { key: "clear", value: function() {
        try {
          v3 ? I3.clearStorageSync() : this._canIUseCookies() && localStorage.clear();
        } catch (e5) {
          M3.w("".concat(this._n, ".clear error:"), e5);
        }
      } }, { key: "removeItem", value: function(e5) {
        var t5 = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
        try {
          var n5 = t5 ? this._getKey(e5) : e5;
          this._removeStorageSync(n5);
        } catch (e6) {
          M3.w("".concat(this._n, ".removeItem error:"), e6);
        }
      } }, { key: "getSize", value: function(e5) {
        var t5 = this, n5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "b";
        try {
          var o5 = { size: 0, limitSize: 5242880, unit: n5 };
          if (Object.defineProperty(o5, "leftSize", { enumerable: true, get: function() {
            return o5.limitSize - o5.size;
          } }), v3 && (o5.limitSize = 1024 * I3.getStorageInfoSync().limitSize), e5)
            o5.size = JSON.stringify(this.getItem(e5)).length + this._getKey(e5).length;
          else if (v3)
            I3.getStorageInfoSync().keys.forEach(function(e6) {
              o5.size += JSON.stringify(t5.getStorageSync(e6)).length + t5._getKey(e6).length;
            });
          else if (this._canIUseCookies())
            for (var i5 in localStorage)
              localStorage.hasOwnProperty(i5) && (o5.size += localStorage.getItem(i5).length + i5.length);
          return this._convertUnit(o5);
        } catch (e6) {
          M3.w("".concat(this._n, " error:"), e6);
        }
      } }, { key: "_convertUnit", value: function(e5) {
        var t5, n5 = {}, o5 = e5.unit;
        for (t5 in n5.unit = o5, e5)
          "number" == typeof e5[t5] && ("kb" === o5.toLowerCase() ? n5[t5] = Math.round(e5[t5] / 1024) : "mb" === o5.toLowerCase() ? n5[t5] = Math.round(e5[t5] / 1024 / 1024) : n5[t5] = e5[t5]);
        return n5;
      } }, { key: "_setStorageSync", value: function(e5, t5) {
        v3 ? ge2 ? my.setStorageSync({ key: e5, data: t5 }) : I3.setStorageSync(e5, t5) : this._canIUseCookies() && localStorage.setItem(e5, JSON.stringify(t5));
      } }, { key: "getStorageSync", value: function(e5) {
        return v3 ? ge2 ? my.getStorageSync({ key: e5 }).data : I3.getStorageSync(e5) : this._canIUseCookies() ? JSON.parse(localStorage.getItem(e5)) : {};
      } }, { key: "_removeStorageSync", value: function(e5) {
        v3 ? ge2 ? my.removeStorageSync({ key: e5 }) : I3.removeStorageSync(e5) : this._canIUseCookies() && localStorage.removeItem(e5);
      } }, { key: "_canIUseCookies", value: function() {
        return "undefined" != typeof window && navigator && navigator.cookieEnabled && localStorage;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._doFlush();
      } }]), Ti = e4(function e5(t5) {
        p4(this, e5), this._n = "SSOLogBody", this._report = [];
      }, [{ key: "pushIn", value: function(e5) {
        M3.d("".concat(this._n, ".pushIn"), this._report.length, e5), this._report.push(e5);
      } }, { key: "backfill", value: function(e5) {
        var t5;
        O3(e5) && 0 !== e5.length && (M3.d("".concat(this._n, ".backfill"), this._report.length, e5.length), (t5 = this._report).unshift.apply(t5, d3(e5)));
      } }, { key: "getLogsNumInMemory", value: function() {
        return this._report.length;
      } }, { key: "isEmpty", value: function() {
        return 0 === this._report.length;
      } }, { key: "_reset", value: function() {
        this._report.length = 0, this._report = [];
      } }, { key: "getLogsInMemory", value: function() {
        var e5 = this._report.slice();
        return this._reset(), e5;
      } }]), Di = (t4(ki, c4), e4(ki, [{ key: "reportAtOnce", value: function() {
        this._report();
      } }, { key: "_onLoginSuccess", value: function() {
        var t5 = this, e5 = this.get(13), n5 = e5.getItem(this.TAG, false);
        !S3(n5) && ct2(n5.forEach) && (M3.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n5.length)), n5.forEach(function(e6) {
          t5._reportBody.pushIn(e6);
        }), e5.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("evt_rpt_threshold"), t5 = this.getCloudConfig("evt_rpt_waiting"), n5 = this.getCloudConfig("evt_rpt_level"), o5 = this.getCloudConfig("evt_rpt_sdkappid_bl"), i5 = this.getCloudConfig("evt_rpt_tinyid_wl");
        N3(e5) || (this.MIN_THRESHOLD = Number(e5)), N3(t5) || (this.WAITING_TIME = Number(t5)), N3(n5) || (this.REPORT_LEVEL = n5.split(",").map(function(e6) {
          return Number(e6);
        })), N3(o5) || (this.REPORT_SDKAPPID_BLACKLIST = o5.split(",").map(function(e6) {
          return Number(e6);
        })), N3(i5) || (this.REPORT_TINYID_WHITELIST = i5.split(","));
      } }, { key: "pushIn", value: function(e5) {
        e5 instanceof P3 && (e5.updateTimeStamp(), this._reportBody.pushIn(e5), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD) && this._report();
      } }, { key: "onCheckTimer", value: function() {
        Date.now() < this._lastReportTime + this.WAITING_TIME || this._reportBody.isEmpty() || this._report();
      } }, { key: "_filterLogs", value: function(e5) {
        var t5 = this, n5 = this.get(12), o5 = n5.getSDKAppID(), n5 = n5.getTinyID();
        return Wt2(this.REPORT_SDKAPPID_BLACKLIST, o5) && !Yt2(this.REPORT_TINYID_WHITELIST, n5) ? [] : e5.filter(function(e6) {
          return t5.REPORT_LEVEL.includes(e6.level);
        });
      } }, { key: "_report", value: function() {
        var t5, e5, n5 = this;
        this._reportBody.isEmpty() || (t5 = this._reportBody.getLogsInMemory(), 0 !== (e5 = this._filterLogs(t5)).length ? (e5 = { header: yi(this), event: e5 }, this.req({ P: G2.SSO_STAT, data: y2({}, e5) }).then(function() {
          n5._lastReportTime = Date.now();
        }).catch(function(e6) {
          M3.w("".concat(n5._n, "._report failed. error:"), e6), n5._lastReportTime = Date.now(), n5._reportBody.backfill(t5), n5._reportBody.getLogsNumInMemory() > n5.MAX_THRESHOLD && n5._flushAtOnce();
        })) : this._lastReportTime = Date.now());
      } }, { key: "_flushAtOnce", value: function() {
        var e5 = this.get(13), t5 = e5.getItem(this.TAG, false), n5 = this._reportBody.getLogsInMemory(), o5 = "".concat(this._n, "._flushAtOnce");
        S3(t5) ? (M3.l("".concat(o5, " count:").concat(n5.length)), e5.setItem(this.TAG, n5, true, false)) : ((n5 = n5.concat(t5)).length > this.MAX_THRESHOLD && (n5 = n5.slice(0, this.MAX_THRESHOLD)), M3.l("".concat(o5, " count:").concat(n5.length)), e5.setItem(this.TAG, n5, true, false));
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._lastReportTime = 0, this._report(), this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [];
      } }])), Ei = "none", Li = "online", Si = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._networkType = Li, this._n = "NetMonitorModule", this._mpNetworkStatusCallback = null, this._webOnlineCallback = null, this._webOfflineCallback = null, this._removeListener = null, this._m.getIEmitInst().on(U3.A2KEY_AND_TINYID_UPDATED, this._startRN, this);
      }, [{ key: "_startRN", value: function() {
        var e5, n5 = this;
        ve2 && (e5 = this._m.get(18).getPlugin("chat-network-monitor")) && (this._removeListener = e5.addEventListener(function(e6) {
          var t5 = e6.isConnected, e6 = e6.type;
          n5._networkType !== e6 && n5._onNetworkStatusChange({ isConnected: void 0 !== t5 && t5, networkType: e6 });
        }));
      } }, { key: "start", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".start");
        v3 ? (I3.getNetworkType({ success: function(e5) {
          t5._networkType = e5.networkType || e5.subtype || "", e5.networkType === Ei ? M3.w("".concat(n5, " no network, please check!")) : M3.i("".concat(n5, " networkType:").concat(e5.networkType));
        } }), this._mpNetworkStatusCallback = this._onNetworkStatusChange.bind(this), I3.onNetworkStatusChange(this._mpNetworkStatusCallback)) : Ie2 && (this._networkType = Li, this._webOnlineCallback = this._onWebOnline.bind(this), this._webOfflineCallback = this._onWebOffline.bind(this), window.addEventListener("online", this._webOnlineCallback), window.addEventListener("offline", this._webOfflineCallback));
      } }, { key: "_onWebOnline", value: function() {
        this._onNetworkStatusChange({ isConnected: true, networkType: Li });
      } }, { key: "_onWebOffline", value: function() {
        this._onNetworkStatusChange({ isConnected: false, networkType: Ei });
      } }, { key: "_onNetworkStatusChange", value: function(e5) {
        var t5 = e5.isConnected, e5 = e5.networkType, n5 = "".concat(this._n, "._onNetworkStatusChange"), o5 = false, i5 = "previous:".concat(this._networkType, " current:").concat(e5);
        t5 ? (M3.i("".concat(n5, " ").concat(i5)), this._networkType !== e5 && (o5 = true, this._networkType = e5, this._m.get(21).reConnect(true))) : this._networkType !== e5 && (o5 = true, this._networkType = e5, M3.w("".concat(n5, " no network, please check!")), this._m.get(21).offline()), o5 && new P3("networkChange").setMessage("isConnected:".concat(t5, " ").concat(i5)).end();
      } }, { key: "isOnline", value: function() {
        return this._networkType !== Ei;
      } }, { key: "getNetworkType", value: function() {
        return this._networkType;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), v3 ? null !== this._mpNetworkStatusCallback && (I3.offNetworkStatusChange && I3.offNetworkStatusChange(this._mpNetworkStatusCallback), this._mpNetworkStatusCallback = null) : Ie2 ? (null !== this._webOnlineCallback && (window.removeEventListener("online", this._webOnlineCallback), this._webOnlineCallback = null), null !== this._onWebOffline && (window.removeEventListener("offline", this._webOfflineCallback), this._webOfflineCallback = null)) : ve2 && this._removeListener && (this._removeListener(), this._removeListener = null);
      } }]);
      function ki(e5) {
        p4(this, ki), (e5 = i4(this, ki, [e5]))._n = "EventStatModule", e5.TAG = "im-ssolog-event", e5._reportBody = new Ti(), e5.MIN_THRESHOLD = 20, e5.MAX_THRESHOLD = 100, e5.WAITING_TIME = 6e4, e5.REPORT_LEVEL = [4, 5, 6], e5.REPORT_SDKAPPID_BLACKLIST = [], e5.REPORT_TINYID_WHITELIST = [], e5._lastReportTime = Date.now();
        var t5 = e5.getIEmitInst();
        return t5.on(U3.A2KEY_AND_TINYID_UPDATED, e5._onLoginSuccess, e5), t5.on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function Ri(e5, t5) {
        return e5(t5 = { exports: {} }, t5.exports), t5.exports;
      }
      var Ai = Ri(function(e5) {
        var o5 = Object.prototype.hasOwnProperty, _4 = "~";
        function n5() {
        }
        function a5(e6, t6, n6) {
          this.fn = e6, this.context = t6, this.once = n6 || false;
        }
        function i5(e6, t6, n6, o6, i6) {
          if ("function" != typeof n6)
            throw new TypeError("The listener must be a function");
          n6 = new a5(n6, o6 || e6, i6), o6 = _4 ? _4 + t6 : t6;
          return e6._events[o6] ? e6._events[o6].fn ? e6._events[o6] = [e6._events[o6], n6] : e6._events[o6].push(n6) : (e6._events[o6] = n6, e6._eventsCount++), e6;
        }
        function c5(e6, t6) {
          0 == --e6._eventsCount ? e6._events = new n5() : delete e6._events[t6];
        }
        function t5() {
          this._events = new n5(), this._eventsCount = 0;
        }
        Object.create && (n5.prototype = /* @__PURE__ */ Object.create(null), new n5().__proto__ || (_4 = false)), t5.prototype.eventNames = function() {
          var e6, t6, n6 = [];
          if (0 === this._eventsCount)
            return n6;
          for (t6 in e6 = this._events)
            o5.call(e6, t6) && n6.push(_4 ? t6.slice(1) : t6);
          return Object.getOwnPropertySymbols ? n6.concat(Object.getOwnPropertySymbols(e6)) : n6;
        }, t5.prototype.listeners = function(e6) {
          var e6 = _4 ? _4 + e6 : e6, t6 = this._events[e6];
          if (!t6)
            return [];
          if (t6.fn)
            return [t6.fn];
          for (var n6 = 0, o6 = t6.length, i6 = new Array(o6); n6 < o6; n6++)
            i6[n6] = t6[n6].fn;
          return i6;
        }, t5.prototype.listenerCount = function(e6) {
          e6 = _4 ? _4 + e6 : e6, e6 = this._events[e6];
          return e6 ? e6.fn ? 1 : e6.length : 0;
        }, t5.prototype.emit = function(e6, t6, n6, o6, i6, a6) {
          var s5 = _4 ? _4 + e6 : e6;
          if (!this._events[s5])
            return false;
          var r5, c6 = this._events[s5], u5 = arguments.length;
          if (c6.fn) {
            switch (c6.once && this.removeListener(e6, c6.fn, void 0, true), u5) {
              case 1:
                return c6.fn.call(c6.context), true;
              case 2:
                return c6.fn.call(c6.context, t6), true;
              case 3:
                return c6.fn.call(c6.context, t6, n6), true;
              case 4:
                return c6.fn.call(c6.context, t6, n6, o6), true;
              case 5:
                return c6.fn.call(c6.context, t6, n6, o6, i6), true;
              case 6:
                return c6.fn.call(c6.context, t6, n6, o6, i6, a6), true;
            }
            for (p5 = 1, r5 = new Array(u5 - 1); p5 < u5; p5++)
              r5[p5 - 1] = arguments[p5];
            c6.fn.apply(c6.context, r5);
          } else
            for (var l5, d4 = c6.length, p5 = 0; p5 < d4; p5++)
              switch (c6[p5].once && this.removeListener(e6, c6[p5].fn, void 0, true), u5) {
                case 1:
                  c6[p5].fn.call(c6[p5].context);
                  break;
                case 2:
                  c6[p5].fn.call(c6[p5].context, t6);
                  break;
                case 3:
                  c6[p5].fn.call(c6[p5].context, t6, n6);
                  break;
                case 4:
                  c6[p5].fn.call(c6[p5].context, t6, n6, o6);
                  break;
                default:
                  if (!r5)
                    for (l5 = 1, r5 = new Array(u5 - 1); l5 < u5; l5++)
                      r5[l5 - 1] = arguments[l5];
                  c6[p5].fn.apply(c6[p5].context, r5);
              }
          return true;
        }, t5.prototype.on = function(e6, t6, n6) {
          return i5(this, e6, t6, n6, false);
        }, t5.prototype.once = function(e6, t6, n6) {
          return i5(this, e6, t6, n6, true);
        }, t5.prototype.removeListener = function(e6, t6, n6, o6) {
          e6 = _4 ? _4 + e6 : e6;
          if (this._events[e6])
            if (t6) {
              var i6 = this._events[e6];
              if (i6.fn)
                i6.fn !== t6 || o6 && !i6.once || n6 && i6.context !== n6 || c5(this, e6);
              else {
                for (var a6 = 0, s5 = [], r5 = i6.length; a6 < r5; a6++)
                  (i6[a6].fn !== t6 || o6 && !i6[a6].once || n6 && i6[a6].context !== n6) && s5.push(i6[a6]);
                s5.length ? this._events[e6] = 1 === s5.length ? s5[0] : s5 : c5(this, e6);
              }
            } else
              c5(this, e6);
          return this;
        }, t5.prototype.removeAllListeners = function(e6) {
          return e6 ? (e6 = _4 ? _4 + e6 : e6, this._events[e6] && c5(this, e6)) : (this._events = new n5(), this._eventsCount = 0), this;
        }, t5.prototype.off = t5.prototype.removeListener, t5.prototype.addListener = t5.prototype.on, t5.prefixed = _4, e5.exports = t5.EventEmitter = t5;
      }), Oi = ["rich.my-imcloud.com", "imrich.qcloud.com"], Ni = ["requestSnapshotUrl"], Gi = (t4(Fi, c4), e4(Fi, [{ key: "_init", value: function() {
        this._fileDownloadProxy = this.getFileDownloadProxy(), this._authKey = this.getDownloadFileAuthKey();
        var e5 = this.get(18);
        this.TIMUploadPlugin = e5.getPlugin("tim-upload-plugin"), this.TIMUploadPlugin ? this._initUploaderMethod() : (this.COSSDK = e5.getPlugin(e5 = v3 ? "cos-wx-sdk" : "cos-js-sdk"), this.COSSDK ? (this._getAuthorizationKey(), this.warn("CosReplacement", e5)) : this.warn("PluginUndetected"));
      } }, { key: "_onCloudConfig", value: function() {
        var t5 = this, e5 = "".concat(this._n, "._onCloudConfig"), n5 = this.getCloudConfig("upload_size_limit"), o5 = this.getCloudConfig("simple_cos"), i5 = this.getCloudConfig("file_dn_list");
        if (M3.l("".concat(e5, " uploadSizeLimit:").concat(n5, " simpleCos:").concat(o5)), !N3(n5))
          try {
            var a5 = JSON.parse(n5);
            this.UPLOAD_SIZE_LIMIT = { A: a5.a ? 1048576 * parseInt(a5.a) : this.UPLOAD_SIZE_LIMIT.A, F: a5.f ? 1048576 * parseInt(a5.f) : this.UPLOAD_SIZE_LIMIT.F, I: a5.i ? 1048576 * parseInt(a5.i) : this.UPLOAD_SIZE_LIMIT.I, V: a5.v ? 1048576 * parseInt(a5.v) : this.UPLOAD_SIZE_LIMIT.V };
          } catch (e6) {
          }
        if (N3(o5) || (this.isSimpleCos = "1" === o5), !N3(i5))
          try {
            JSON.parse(i5).forEach(function(e6) {
              t5._fileDNList.includes(e6) || t5._fileDNList.push(e6);
            });
          } catch (e6) {
          }
      } }, { key: "_getAuthorizationKey", value: function() {
        var n5 = this, o5 = "".concat(this._n, ".").concat("_getAuthorizationKey"), i5 = new P3("_getAuthorizationKey"), a5 = Math.ceil(Date.now() / 1e3);
        this.req({ P: G2.COS_SIGN, data: { duration: this.expiredTimeLimit } }).then(function(e5) {
          var e5 = e5.data, t5 = (M3.l("".concat(o5, " ok. data:"), e5), e5.expiredTime - a5);
          i5.setMessage("requestId:".concat(e5.requestId, " requestTime:").concat(a5, " expiredTime:").concat(e5.expiredTime, " diff:").concat(t5, "s")).end(), !v3 && e5.region && (n5.region = e5.region), n5.appid = e5.appid, n5.bucketName = e5.bucketName, n5.ciUrl = e5.ciUrl, n5.directory = e5.directory, n5.downloadUrl = e5.downloadUrl, n5.uploadUrl = e5.uploadUrl, n5.cosOptions = { secretId: e5.secretId, secretKey: e5.secretKey, sessionToken: e5.sessionToken, expiredTime: e5.expiredTime }, M3.l("".concat(o5, " ok. region:").concat(n5.region, " bucketName:").concat(n5.bucketName)), n5._initUploaderMethod();
        }).catch(function(e5) {
          i5.setError(e5).end(), M3.w("".concat(o5, " failed. error:"), e5);
        });
      } }, { key: "_getCosPreSigUrl", value: function(t5) {
        var i5 = this, a5 = "".concat(this._n, ".").concat("_getCosPreSigUrl"), s5 = Math.ceil(Date.now() / 1e3), r5 = new P3("_getCosPreSigUrl"), e5 = { uploadMethod: t5.uploadMethod, platform: this.getPlatform(), SDKAppID: this.getSDKAppID(), userID: t5.userID, conversationType: t5.conversationType, uploadConfig: [{ fileID: 1, fileType: t5.fileType, fileName: t5.fileName }] }, n5 = G2.SIMPLE_COS_PRE_SIG;
        return this.isSimpleCos || (e5 = { fileType: t5.fileType, fileName: t5.fileName, uploadMethod: t5.uploadMethod, duration: t5.duration }, n5 = G2.COS_PRE_SIG), this.req({ P: n5, data: e5 }).then(function(e6) {
          i5.tryCount = 0;
          var t6, n6, e6 = e6.data || {}, o5 = (M3.l("".concat(a5, " ok. isSimpleCos:").concat(i5.isSimpleCos, " data:"), e6), "");
          return o5 = i5.isSimpleCos ? (t6 = (n6 = e6.preSig[0]).uploadUrl, n6 = n6.fileKey, "uploadIP:".concat(e6.uploadIP, " uploadUrl:").concat(t6, " fileKey:").concat(n6, " cost:").concat(tn(s5))) : "requestId:".concat(e6.requestId, " expiredTime:").concat(e6.expiredTime, " diff:").concat(e6.expiredTime - s5, "s"), r5.setMessage(o5).end(), e6;
        }).catch(function(e6) {
          return -1 === e6.code && (e6.code = k2.COS_GET_SIG_FAIL), r5.setError(e6).end(), M3.w("".concat(a5, " failed. error:"), e6), i5.tryCount < 1 ? (i5.tryCount++, i5._getCosPreSigUrl(t5)) : (i5.tryCount = 0, E4({ code: k2.COS_GET_SIG_FAIL }));
        });
      } }, { key: "_initUploaderMethod", value: function() {
        var n5 = this;
        this.TIMUploadPlugin ? (this.timUploadPlugin = new this.TIMUploadPlugin(), this._cosUploadMethod = function(e5, t5) {
          n5.timUploadPlugin.uploadFile(e5, t5);
        }) : this.appid && (this.cos = v3 ? new this.COSSDK({ ForcePathStyle: true, getAuthorization: this._getAuthorization.bind(this) }) : new this.COSSDK({ getAuthorization: this._getAuthorization.bind(this) }), this._cosUploadMethod = v3 ? function(e5, t5) {
          n5.cos.postObject(e5, t5);
        } : function(e5, t5) {
          n5.cos.uploadFiles(e5, t5);
        });
      } }, { key: "onCheckTimer", value: function(e5) {
        !this.COSSDK || this.TIMUploadPlugin || this.isLoggedIn() && e5 % 60 == 0 && Math.ceil(Date.now() / 1e3) >= this.cosOptions.expiredTime - 120 && this._getAuthorizationKey();
      } }, { key: "getFileDNList", value: function() {
        return this._fileDNList;
      } }, { key: "_getAuthorization", value: function(e5, t5) {
        t5({ TmpSecretId: this.cosOptions.secretId, TmpSecretKey: this.cosOptions.secretKey, XCosSecurityToken: this.cosOptions.sessionToken, ExpiredTime: this.cosOptions.expiredTime });
      } }, { key: "upload", value: function(e5) {
        if (true === e5._relayFlag)
          return Promise.resolve();
        var t5 = this.get(26);
        switch (e5.type) {
          case R3.MSG_IMAGE:
            return t5.addTotalCount(Jn), this._uploadImage(e5);
          case R3.MSG_FILE:
            return t5.addTotalCount(Jn), this._uploadFile(e5);
          case R3.MSG_AUDIO:
            return t5.addTotalCount(Jn), this._uploadAudio(e5);
          case R3.MSG_VIDEO:
            return t5.addTotalCount(Jn), this._uploadVideo(e5);
          default:
            return Promise.resolve();
        }
      } }, { key: "_uploadImage", value: function(v4) {
        var I4 = this, e5 = this.get(2), M4 = v4.getElements()[0], t5 = e5.getMessageOption(v4.clientSequence);
        return this.doUploadImage({ file: t5.payload.file, to: t5.to, message: v4, onProgress: function(e6) {
          if (M4.updatePercent(e6), ct2(t5.onProgress))
            try {
              t5.onProgress(e6);
            } catch (e7) {
              return E4({ code: k2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e6) {
          var t6 = e6.location, n5 = e6.fileType, o5 = e6.fileSize, i5 = e6.width, a5 = e6.height, s5 = e6.smallImageUrl, r5 = e6.smallImageWidth, c5 = e6.smallImageHeight, u5 = e6.largeImageUrl, l5 = e6.largeImageWidth, d4 = e6.largeImageHeight, p5 = e6.imageInfoArray, e6 = I4.isPrivateNetWork() ? t6 : mt2(t6);
          M4.updateImageFormat(n5);
          var _4, h5, g5 = { size: o5, url: e6, width: i5, height: a5 };
          if (p5 && 0 < p5.length)
            for (var f4 = 0; f4 < p5.length; f4++) {
              var m4 = p5[f4];
              1 === m4.type ? _4 = m4 : 2 === m4.type ? h5 = m4 : g5 = y2(y2({}, g5), m4);
            }
          else
            h5 = s5 && u5 ? (_4 = { url: s5, width: r5, height: c5 }, { url: u5, width: l5, height: d4 }) : (_4 = Vt2({ originUrl: e6, originWidth: i5, originHeight: a5, min: 198 }), Vt2({ originUrl: e6, originWidth: i5, originHeight: a5, min: 720 }));
          return M4.updateImageInfoArray([y2({}, g5), y2({}, h5), y2({}, _4)]), v4;
        });
      } }, { key: "_uploadFile", value: function(n5) {
        var o5 = this, e5 = this.get(2), i5 = n5.getElements()[0], t5 = e5.getMessageOption(n5.clientSequence);
        return this.doUploadFile({ file: t5.payload.file, to: t5.to, message: n5, onProgress: function(e6) {
          if (i5.updatePercent(e6), ct2(t5.onProgress))
            try {
              t5.onProgress(e6);
            } catch (e7) {
              return E4({ code: k2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e6) {
          var e6 = e6.location, t6 = e6;
          return o5.isPrivateNetWork() || (t6 = ao(t6 = mt2(e6), o5._fileDownloadProxy, o5._authKey, o5._fileDNList)), i5.updateFileUrl(t6), n5;
        });
      } }, { key: "_uploadAudio", value: function(t5) {
        var n5 = this, e5 = this.get(2), o5 = t5.getElements()[0], i5 = e5.getMessageOption(t5.clientSequence);
        return this.doUploadAudio({ file: i5.payload.file, to: i5.to, message: t5, onProgress: function(e6) {
          if (o5.updatePercent(e6), ct2(i5.onProgress))
            try {
              i5.onProgress(e6);
            } catch (e7) {
              return E4({ code: k2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e6) {
          e6 = e6.location, e6 = n5.isPrivateNetWork() ? e6 : mt2(e6);
          return o5.updateAudioUrl(e6), t5;
        });
      } }, { key: "_uploadVideo", value: function(n5) {
        var o5 = this, e5 = this.get(2), i5 = n5.getElements()[0], t5 = e5.getMessageOption(n5.clientSequence);
        return this.doUploadVideo({ file: t5.payload.file, to: t5.to, message: n5, onProgress: function(e6) {
          if (i5.updatePercent(e6), ct2(t5.onProgress))
            try {
              t5.onProgress(e6);
            } catch (e7) {
              return E4({ code: k2.MSG_ONPROGRESS_ERR });
            }
        } }).then(function(e6) {
          var t6 = e6.location, e6 = e6.snapshotInfo, t6 = o5.isPrivateNetWork() ? t6 : mt2(t6);
          return i5.updateVideoUrl(t6), S3(e6) || i5.updateSnapshotInfo(e6), n5;
        });
      } }, { key: "_checkSizeError", value: function(e5) {
        var t5 = "";
        return "A" === e5 ? t5 = "audio" : "I" === e5 ? t5 = "image" : "V" === e5 ? t5 = "video" : "F" === e5 && (t5 = "file"), E4({ code: k2["MSG_".concat(e5, "_SIZE_LIMIT")], message: this.getErrMsg("UploadSizeLimit", t5, "".concat(this.UPLOAD_SIZE_LIMIT[e5] / 1048576, "MB")) });
      } }, { key: "doUploadImage", value: function(o5) {
        var e5, i5, a5 = this;
        return !o5.file || this._isEmptyFileList(o5.file.files) ? E4({ code: k2.MSG_I_SELECT_F_FIRST }) : true !== (e5 = this._checkImageType(o5.file)) ? e5 : true !== (e5 = this._checkImageSize(o5.file)) ? e5 : (i5 = null, this._setUploadFileType(1), this.uploadByCOS(o5).then(function(e6) {
          if (i5 = e6, a5.isPrivateNetWork())
            return wt2(n5);
          if (O3(i5.imageInfoArray)) {
            var t5 = i5.imageInfoArray.find(function(e7) {
              return 3 === e7.type;
            });
            if (t5)
              return t5;
          }
          var n5;
          return ve2 ? { width: o5.file.width, height: o5.file.height } : (n5 = mt2(e6.location), a5.COSSDK ? wt2(n5) : wt2(n5 = ao(n5, a5._fileDownloadProxy, a5._authKey, a5._fileDNList)));
        }).then(function(e6) {
          return i5.width = e6.width, i5.height = e6.height, Promise.resolve(i5);
        }));
      } }, { key: "_checkImageType", value: function(e5) {
        var t5 = "", t5 = v3 ? e5.url.slice(e5.url.lastIndexOf(".") + 1) : ve2 ? e5.type.split("/")[1] : e5.files[0].name.slice(e5.files[0].name.lastIndexOf(".") + 1);
        return 0 <= Po.indexOf(t5.toLowerCase()) || E4({ code: k2.MSG_I_TYPES_LIMIT });
      } }, { key: "_checkImageSize", value: function(e5) {
        return 0 === (e5 = (v3 || ve2 ? e5 : e5.files[0]).size) ? E4({ code: k2.MSG_F_IS_EMPTY }) : e5 < this.UPLOAD_SIZE_LIMIT.I || this._checkSizeError("I");
      } }, { key: "doUploadFile", value: function(e5) {
        return !e5.file || this._isEmptyFileList(e5.file.files) ? E4({ code: k2.MSG_F_SELECT_F_FIRST }) : e5.file.files[0].size > this.UPLOAD_SIZE_LIMIT.F ? this._checkSizeError("F") : 0 === e5.file.files[0].size ? E4({ code: k2.MSG_F_IS_EMPTY }) : (this._setUploadFileType(255), this.uploadByCOS(e5));
      } }, { key: "doUploadVideo", value: function(e5) {
        return e5.file.videoFile.size > this.UPLOAD_SIZE_LIMIT.V ? this._checkSizeError("V") : 0 === e5.file.videoFile.size ? E4({ code: k2.MSG_F_IS_EMPTY }) : -1 === Uo.indexOf(e5.file.videoFile.type) ? E4({ code: k2.MSG_V_TYPES_LIMIT }) : (this._setUploadFileType(2), v3 || ve2 ? this.handleVideoUpload(y2(y2({}, e5), {}, { file: e5.file.videoFile })) : Ie2 ? this.handleVideoUpload(e5) : void 0);
      } }, { key: "handleVideoUpload", value: function(n5) {
        var o5 = this;
        return new Promise(function(t5, e5) {
          o5.uploadByCOS(n5).then(function(e6) {
            t5(e6);
          }).catch(function() {
            o5.uploadByCOS(n5).then(function(e6) {
              t5(e6);
            }).catch(function() {
              e5(new L3({ code: k2.MSG_V_UPLOAD_FAIL }));
            });
          });
        });
      } }, { key: "doUploadAudio", value: function(e5) {
        return e5.file ? e5.file.size > this.UPLOAD_SIZE_LIMIT.A ? this._checkSizeError("A") : 0 === e5.file.size ? E4({ code: k2.MSG_F_IS_EMPTY }) : (this._setUploadFileType(3), this.uploadByCOS(e5)) : E4({ code: k2.MSG_A_UPLOAD_FAIL });
      } }, { key: "uploadByCOS", value: function(t5) {
        var c5, u5, l5, d4, p5 = this;
        return ct2(this._cosUploadMethod) ? this.timUploadPlugin ? this._uploadWithPreSigUrl(t5) : (c5 = new P3("upload"), u5 = "".concat(this._n, ".uploadByCOS"), l5 = Date.now(), d4 = this._getFile(t5), new Promise(function(a5, s5) {
          var e5 = v3 ? p5._createCosOptionsWXMiniApp(t5) : p5._createCosOptionsWeb(t5), r5 = p5;
          p5._cosUploadMethod(e5, function(e6, t6) {
            var n5, o5, i5 = /* @__PURE__ */ Object.create(null);
            t6 ? e6 || O3(t6.files) && t6.files[0].error ? (n5 = new L3({ code: k2.MSG_F_UPLOAD_FAIL }), c5.setError(n5).end(), M3.l("".concat(u5, " failed. error:"), t6.files[0].error), 403 === t6.files[0].error.statusCode && p5._getAuthorizationKey(), s5(n5)) : (i5.fileName = d4.name, i5.fileSize = d4.size, i5.fileType = d4.type.slice(d4.type.indexOf("/") + 1).toLowerCase(), i5.location = (v3 ? t6 : t6.files[0].data).Location, n5 = Date.now() - l5, t6 = r5._formatFileSize(d4.size), o5 = r5._formatSpeed(1e3 * d4.size / n5), t6 = "size:".concat(t6, " time:").concat(n5, "ms speed:").concat(o5), M3.l("".concat(u5, " success. name:").concat(d4.name, " ").concat(t6)), a5(i5), (o5 = p5.get(26)).addCost(Jn, n5), o5.addFileSize(Jn, d4.size), c5.setMessage(t6).end()) : (i5 = new L3({ code: k2.MSG_F_UPLOAD_FAIL }), c5.setError(i5).end(), M3.w("".concat(u5, " failed. error:"), e6), 403 === e6.statusCode && p5._getAuthorizationKey(), s5(i5));
          });
        })) : (this.warn("PluginUndetected"), E4({ code: k2.COS_UNDETECTED }));
      } }, { key: "_uploadWithPreSigUrl", value: function(e5) {
        var p5 = this, _4 = "".concat(this._n, "._uploadWithPreSigUrl"), h5 = this._getFile(e5);
        return this._createCosOptionsPreSigUrl(e5).then(function(d4) {
          return new Promise(function(a5, s5) {
            var r5 = new P3("upload"), e6 = d4.requestSnapshotUrl, c5 = void 0 === e6 ? void 0 : e6, u5 = W2(d4, Ni), l5 = Date.now();
            p5._cosUploadMethod(u5, function(e7, t5) {
              if (e7 || 403 === t5.statusCode)
                r5.setError(new L3(e7)).end(), o5 = { HttpStatusCode: 9999, CostTime: tn(l5, false), error: e7, url: d4.url }, t5.data && t5.data.uploadIP && (o5.uploadIP = t5.data.uploadIP), p5._uploadSSOLog(o5), M3.l("".concat(_4, " failed, error:"), e7), s5(new L3({ code: k2.MSG_F_UPLOAD_FAIL }));
              else {
                var n5 = /* @__PURE__ */ Object.create(null), o5 = t5.data.location || "", e7 = (p5.isPrivateNetWork() || 0 !== o5.indexOf("https://") && 0 !== o5.indexOf("http://") || (o5 = o5.split("//")[1]), n5.fileName = h5.name, n5.fileSize = h5.size, n5.fileType = h5.type.slice(h5.type.indexOf("/") + 1).toLowerCase(), n5.location = o5, tn(l5, false)), o5 = p5._formatFileSize(h5.size), i5 = p5._formatSpeed(1e3 * h5.size / e7), o5 = "size:".concat(o5, " time:").concat(e7, "ms speed:").concat(i5, " res:").concat(JSON.stringify(t5.data)), i5 = (M3.l("".concat(_4, " ok. name:").concat(h5.name, " ").concat(o5)), r5.setMessage(o5).end(), { HttpStatusCode: t5.statusCode, FileSize: h5.size, CostTime: e7, url: d4.url }), o5 = (t5.data && t5.data.uploadIP && (i5.uploadIP = t5.data.uploadIP), p5._uploadSSOLog(i5), p5.get(26)), i5 = (o5.addCost(Jn, e7), o5.addFileSize(Jn, h5.size), []);
                if (u5.thumbUrl && u5.largeUrl && i5.push.apply(i5, [p5._getSmallImageInfoByUrl(u5.thumbUrl, n5), p5._getLargeImageInfoByUrl(u5.largeUrl, n5)]), 1 === p5.uploadFileType && p5.isSimpleCos && !p5.isPrivateNetWork() && (i5.push(p5._getImageInfoArray(u5.downloadUrl, n5)), t5.data.uploadIP) && i5.push(p5._getDownloadIP(u5.downloadUrl.split("//")[1].split("/")[0], n5)), c5 && i5.push(p5._getSnapshotInfoByUrl(c5, n5)), 0 < i5.length)
                  return Promise.all(i5).then(function() {
                    a5(n5);
                  });
                a5(n5);
              }
            });
          });
        });
      } }, { key: "_getDownloadIP", value: function(e5, n5) {
        var o5 = "".concat(this._n, "._getDownloadIP"), i5 = Date.now();
        return this.req({ P: G2.GET_IP, data: { domainName: e5 } }).then(function(e6) {
          var t5;
          e6.data && e6.data.ip && (M3.l("".concat(o5, " ok. downloadIP:").concat(e6.data.ip, " cost:").concat(tn(i5))), (t5 = n5.location.split("/"))[0] = e6.data.ip, n5.location = t5.join("/"));
        }).catch(function(e6) {
        });
      } }, { key: "_getImageInfoArray", value: function(t5, n5) {
        var o5 = this, i5 = "".concat(this._n, "._getImageInfoArray"), a5 = Date.now();
        return this.req({ P: G2.GET_IMAGE_INFO, data: { imageUrl: t5 } }).then(function(e5) {
          e5 = e5.data || {};
          return M3.l("".concat(i5, " ok. data: ").concat(JSON.stringify(e5), " cost:").concat(tn(a5))), n5.imageInfoArray = e5.imageInfoArray, e5;
        }).catch(function(e5) {
          n5.imageInfoArray = void 0, o5._uploadSSOLog({ HttpStatusCode: 1e4, CostTime: tn(a5, false), url: t5 });
        });
      } }, { key: "_uploadSSOLog", value: function(e5) {
        var t5, n5;
        this.isSimpleCos && ((t5 = new P3()).setEventType(18), e5.error && t5.setError(new L3(e5.error)), n5 = "HttpStatusCode:".concat(e5.HttpStatusCode, "|CosRequestId:").concat(e5.CosRequestId || "", "|") + "FileAlreadyExist:".concat(e5.FileAlreadyExist || 0, "|FileSize:").concat(e5.FileSize || 0, "|CostTime:").concat(e5.CostTime), e5.uploadIP && (n5 += "|FinalIP:".concat(e5.uploadIP)), t5.setMessage("OK").setMoreMessage(e5.url).setExtension(n5).end());
      } }, { key: "_getRawOrUploadProxyUrl", value: function(e5) {
        var t5 = this.get(12).getFileUploadProxy(), n5 = e5;
        return n5 = t5 ? e5.replace(/^https:\/\/[^/]+/, t5) : n5;
      } }, { key: "_getFile", value: function(e5) {
        return O3(e5.file.files) || ut2(e5.file.files) ? e5.file.files[0] : e5.file;
      } }, { key: "_formatFileSize", value: function(e5) {
        return e5 < 1024 ? e5 + "B" : e5 < 1048576 ? Math.floor(e5 / 1024) + "KB" : Math.floor(e5 / 1048576) + "MB";
      } }, { key: "_formatSpeed", value: function(e5) {
        return e5 <= 1048576 ? Kt2(e5 / 1024, 1) + "KB/s" : Kt2(e5 / 1048576, 1) + "MB/s";
      } }, { key: "_createCosOptionsWeb", value: function(t5) {
        var e5 = this._getFile(t5), n5 = e5.name, n5 = n5.slice(n5.lastIndexOf(".")), n5 = this._genFileName("".concat(ht2(999999)).concat(n5));
        return { files: [{ Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n5), Body: e5 }], SliceSize: 1048576, onProgress: function(e6) {
          if ("function" == typeof t5.onProgress)
            try {
              t5.onProgress(e6.percent);
            } catch (e7) {
              M3.w("onProgress callback error:", e7);
            }
        }, onFileFinish: function(e6, t6, n6) {
        } };
      } }, { key: "_createCosOptionsWXMiniApp", value: function(t5) {
        var e5 = this._getFile(t5), n5 = this._genFileName(e5.name), e5 = e5.url;
        return { Bucket: "".concat(this.bucketName, "-").concat(this.appid), Region: this.region, Key: "".concat(this.directory, "/").concat(n5), FilePath: e5, onProgress: function(e6) {
          if (M3.l(JSON.stringify(e6)), "function" == typeof t5.onProgress)
            try {
              t5.onProgress(e6.percent);
            } catch (e7) {
              M3.w("onProgress callback error:", e7);
            }
        } };
      } }, { key: "_createCosOptionsPreSigUrl", value: function(r5) {
        var e5, c5 = this, u5 = "", l5 = "", t5 = 0, n5 = this._getFile(r5), t5 = v3 || ve2 ? (u5 = r5.message.type === R3.MSG_FILE ? (e5 = (e5 = n5.name).slice(e5.lastIndexOf(".")), this._genFileName("".concat(ht2(999999)).concat(e5))) : this._genFileName(n5.name), l5 = n5.url, 1) : (e5 = (e5 = n5.name).slice(e5.lastIndexOf(".")), u5 = this._genFileName("".concat(ht2(999999)).concat(e5)), l5 = n5, 0);
        return this._getCosPreSigUrl({ fileType: this.uploadFileType, fileName: u5, uploadMethod: t5, duration: this.duration, userID: r5.message.from, conversationType: Gt2(r5.message.conversationID) ? 1 : 2 }).then(function(e6) {
          var t6 = c5.isSimpleCos ? e6.preSig[0] : e6, n6 = t6.uploadUrl, o5 = t6.downloadUrl, i5 = t6.requestSnapshotUrl, i5 = void 0 === i5 ? void 0 : i5, a5 = t6.thumbUrl, s5 = t6.largeUrl, t6 = t6.fileKey, e6 = e6.uploadIP, e6 = void 0 === e6 ? "" : e6;
          return { url: c5._getRawOrUploadProxyUrl(n6), fileType: c5.uploadFileType, fileName: u5, resources: l5, downloadUrl: o5, requestSnapshotUrl: i5, thumbUrl: a5, largeUrl: s5, fileKey: t6, uploadIP: !c5.isPrivateNetWork() && e6, onProgress: function(e7) {
            if ("function" == typeof r5.onProgress)
              try {
                r5.onProgress(e7.percent);
              } catch (e8) {
                M3.w("onProgress callback error:", e8), M3.e(e8);
              }
          } };
        });
      } }, { key: "_genFileName", value: function(e5) {
        return "".concat(Ft2(), "-").concat(e5);
      } }, { key: "_setUploadFileType", value: function(e5) {
        this.uploadFileType = e5;
      } }, { key: "_getSnapshotInfoByUrl", value: function(e5, n5) {
        var o5 = this, i5 = "_getSnapshotInfoByUrl", a5 = new P3(i5);
        return this.req({ P: G2.VIDEO_COVER, data: { platform: this.getPlatform(), coverName: this._genFileName(ht2(99999)), requestSnapshotUrl: e5 } }).then(function(e6) {
          var t5, e6 = (e6.data || {}).snapshotUrl;
          return M3.l("".concat(o5._n, ".").concat(i5, " ok. snapshotUrl:").concat(e6)), a5.setMessage("snapshotUrl:".concat(e6)).end(), S3(e6) ? {} : wt2(t5 = ao(e6, o5._fileDownloadProxy, o5._authKey, o5._fileDNList)).then(function(e7) {
            n5.snapshotInfo = { snapshotUrl: t5, snapshotWidth: e7.width, snapshotHeight: e7.height };
          });
        }).catch(function(e6) {
          return M3.w("".concat(o5._n, ".").concat(i5, " failed. error:"), e6), a5.setCode(e6.errorCode).setMessage(e6.errorInfo).end(), {};
        });
      } }, { key: "_getSmallImageInfoByUrl", value: function(t5, n5) {
        return wt2(ao(t5, this._fileDownloadProxy, this._authKey, this._fileDNList)).then(function(e5) {
          n5.smallImageUrl = t5, n5.smallImageWidth = e5.width, n5.smallImageHeight = e5.height;
        });
      } }, { key: "_getLargeImageInfoByUrl", value: function(t5, n5) {
        return wt2(ao(t5, this._fileDownloadProxy, this._authKey, this._fileDNList)).then(function(e5) {
          n5.largeImageUrl = t5, n5.largeImageWidth = e5.width, n5.largeImageHeight = e5.height;
        });
      } }, { key: "_isEmptyFileList", value: function(e5) {
        return !(!ut2(e5) || 0 !== e5.length);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }])), Pi = ["downloadKey", "pbDownloadKey", "messageList"], Ui = e4(function e5(t5) {
        p4(this, e5), this._n = "MergerMessageHandler", this._msgM = t5;
      }, [{ key: "uploadMergerMessage", value: function(e5, n5) {
        var o5 = "".concat(this._n, ".").concat("uploadMergerMessage"), e5 = (M3.d("".concat(o5, " message:"), e5, "messageBytes:".concat(n5)), JSON.parse(JSON.stringify(e5.payload)).messageList), i5 = e5.length, t5 = this._msgM.get(17).getFileDNList(), a5 = new P3("uploadMergerMessage");
        return e5.forEach(function(e6) {
          so(e6.messageBody[0].type, e6.messageBody, t5);
        }), this._msgM.req({ P: G2.UPLOAD_MERGER_MSG, data: { messageList: e5 } }).then(function(e6) {
          M3.d("".concat(o5, " ok. response:"), e6.data);
          var e6 = e6.data, t6 = e6.pbDownloadKey, e6 = e6.downloadKey, t6 = { pbDownloadKey: t6, downloadKey: e6, messageNumber: i5 };
          return a5.setMessage("".concat(i5, "-").concat(n5, "-").concat(e6)).end(), t6;
        }).catch(function(e6) {
          throw M3.w("".concat(o5, " failed. error:"), e6), a5.setError(e6).end(), e6;
        });
      } }, { key: "downloadMergerMessage", value: function(i5) {
        var a5 = this, s5 = "".concat(this._n, ".").concat("downloadMergerMessage"), t5 = (M3.d("".concat(s5, " message:"), i5), i5.payload.downloadKey), r5 = this._msgM.getFileDownloadProxy(), c5 = this._msgM.getDownloadFileAuthKey(), u5 = new P3("downloadMergerMessage");
        return u5.setMessage("downloadKey:".concat(t5)), this._msgM.req({ P: G2.DOWNLOAD_MERGER_MSG, data: { downloadKey: t5 } }).then(function(e5) {
          M3.d("".concat(s5, " ok. response:"), e5.data);
          var t6, n5, o5 = a5._msgM.get(17).getFileDNList();
          return ct2(i5.clearElement) ? ((t6 = i5.payload).downloadKey, t6.pbDownloadKey, t6.messageList, t6 = W2(t6, Pi), i5.clearElement(), i5.setElement({ type: i5.type, content: y2({ messageList: e5.data.messageList }, t6) }, r5, c5, o5)) : (n5 = [], e5.data.messageList.forEach(function(e6) {
            S3(e6) || (e6 = new yo(e6, r5, c5, o5), n5.push(e6));
          }), i5.payload.messageList = n5, i5.payload.downloadKey = "", i5.payload.pbDownloadKey = ""), u5.end(), i5;
        }).catch(function(e5) {
          throw M3.w("".concat(s5, " failed. key:").concat(t5, " error:"), e5), u5.setError(e5).end(), e5;
        });
      } }, { key: "createMergerMessagePack", value: function(e5, t5, n5) {
        return e5.conversationType === R3.CONV_C2C ? this._createC2CMergerMessagePack(e5, t5, n5) : this._createGroupMergerMessagePack(e5, t5, n5);
      } }, { key: "_createC2CMergerMessagePack", value: function(e5, t5, n5) {
        var o5 = null, i5 = (t5 && (t5.offlinePushInfo && (o5 = t5.offlinePushInfo), true === t5.onlineUserOnly) && (o5 ? o5.disablePush = true : o5 = { disablePush: true }), []), a5 = (m3(t5) && m3(t5.messageControlInfo) && (a5 = (r5 = t5.messageControlInfo).excludedFromUnreadCount, s5 = r5.excludedFromLastMessage, r5 = r5.excludedFromContentModeration, true === a5 && i5.push("NoUnread"), true === s5 && i5.push("NoLastMsg"), true === r5) && i5.push("NoMsgCheck"), ""), s5 = (C4(e5.cloudCustomData) && 0 < e5.cloudCustomData.length && (a5 = e5.cloudCustomData), n5.pbDownloadKey), r5 = n5.downloadKey, n5 = n5.messageNumber, c5 = e5.payload, u5 = c5.title, l5 = c5.abstractList, c5 = c5.compatibleText, d4 = this._msgM.get(6), d4 = d4 && d4.isOnlineMessage(e5, t5) ? 0 : void 0;
        return { P: G2.SEND_C2C_MSG, data: { fromAccount: this._msgM.getMyUserID(), toAccount: e5.to, msgBody: [{ msgType: e5.type, msgContent: { pbDownloadKey: s5, downloadKey: r5, title: u5, abstractList: l5, compatibleText: c5, messageNumber: n5 } }], cloudCustomData: a5, clientTime: e5.clientTime, msgSeq: e5.sequence, msgRandom: e5.random, msgLifeTime: d4, offlinePushInfo: Lo(o5), messageControlInfo: 0 !== d4 ? i5 : void 0, isSupportExtension: true === e5.isSupportExtension ? 1 : 0, isRelayMessage: true === e5._relayFlag ? 1 : 0 } };
      } }, { key: "_createGroupMergerMessagePack", value: function(e5, t5, n5) {
        var o5 = null, i5 = (t5 && t5.offlinePushInfo && (o5 = t5.offlinePushInfo), []), a5 = (m3(t5) && m3(t5.messageControlInfo) && (a5 = (r5 = t5.messageControlInfo).excludedFromUnreadCount, s5 = r5.excludedFromLastMessage, r5 = r5.excludedFromContentModeration, true === a5 && i5.push("NoUnread"), true === s5 && i5.push("NoLastMsg"), true === r5) && i5.push("NoMsgCheck"), ""), s5 = (C4(e5.cloudCustomData) && 0 < e5.cloudCustomData.length && (a5 = e5.cloudCustomData), n5.pbDownloadKey), r5 = n5.downloadKey, n5 = n5.messageNumber, c5 = e5.payload, u5 = c5.title, l5 = c5.abstractList, c5 = c5.compatibleText, d4 = this._msgM.get(7), t5 = d4 && d4.isOnlineMessage(e5, t5) ? 1 : 0;
        return { P: G2.SEND_GRP_MSG, data: { fromAccount: this._msgM.getMyUserID(), groupID: e5.to, msgBody: [{ msgType: e5.type, msgContent: { pbDownloadKey: s5, downloadKey: r5, title: u5, abstractList: l5, compatibleText: c5, messageNumber: n5 } }], random: e5.random, priority: e5.priority, clientSequence: e5.clientSequence, groupAtInfo: void 0, cloudCustomData: a5, onlineOnlyFlag: t5, offlinePushInfo: Lo(o5), clientTime: e5.clientTime, needReadReceipt: true !== e5.needReadReceipt || d4.isMessageFromOrToAVChatroom(e5.to) ? 0 : 1, messageControlInfo: 0 == t5 ? i5 : void 0, isSupportExtension: true === e5.isSupportExtension ? 1 : 0, isRelayMessage: true === e5._relayFlag ? 1 : 0 } };
      } }]), bi = { ERR_SVR_COMM_SENSITIVE_TEXT: 80001, ERR_SVR_COMM_BODY_SIZE_LIMIT: 80002, OPEN_SERVICE_OVERLOAD_ERROR: 60022, ERR_SVR_MSG_PKG_PARSE_FAILED: 20001, ERR_SVR_MSG_INTERNAL_AUTH_FAILED: 20002, ERR_SVR_MSG_INVALID_ID: 20003, ERR_SVR_MSG_PUSH_DENY: 20006, ERR_SVR_MSG_IN_PEER_BLACKLIST: 20007, ERR_SVR_MSG_BOTH_NOT_FRIEND: 20009, ERR_SVR_MSG_NOT_PEER_FRIEND: 20010, ERR_SVR_MSG_NOT_SELF_FRIEND: 20011, ERR_SVR_MSG_SHUTUP_DENY: 20012, ERR_SVR_GROUP_INVALID_PARAMETERS: 10004, ERR_SVR_GROUP_PERMISSION_DENY: 10007, ERR_SVR_GROUP_NOT_FOUND: 10010, ERR_SVR_GROUP_INVALID_GROUPID: 10015, ERR_SVR_GROUP_REJECT_FROM_THIRDPARTY: 10016, ERR_SVR_GROUP_SHUTUP_DENY: 10017, MSG_SEND_FAIL: 2100, OVER_FREQUENCY_LIMIT: 2996 }, wi = [k2.MSG_ONPROGRESS_ERR, k2.MSG_I_SELECT_F_FIRST, k2.MSG_I_TYPES_LIMIT, k2.MSG_F_IS_EMPTY, k2.MSG_I_SIZE_LIMIT, k2.MSG_F_SELECT_F_FIRST, k2.MSG_F_SIZE_LIMIT, k2.MSG_V_SIZE_LIMIT, k2.MSG_V_TYPES_LIMIT, k2.MSG_A_UPLOAD_FAIL, k2.MSG_A_SIZE_LIMIT, k2.COS_UNDETECTED];
      function Fi(e5) {
        p4(this, Fi), (e5 = i4(this, Fi, [e5]))._n = "UploadModule", e5.TIMUploadPlugin = null, e5.timUploadPlugin = null, e5.COSSDK = null, e5._cosUploadMethod = null, e5.expiredTimeLimit = 600, e5.appid = 0, e5.bucketName = "", e5.ciUrl = "", e5.directory = "", e5.downloadUrl = "", e5.uploadUrl = "", e5.region = "ap-shanghai", e5.cos = null, e5.cosOptions = { secretId: "", secretKey: "", sessionToken: "", expiredTime: 0 }, e5.uploadFileType = "", e5.duration = 900, e5.tryCount = 0, e5.UPLOAD_SIZE_LIMIT = { A: 20971520, F: 104857600, I: 20971520, V: 104857600 }, e5.isSimpleCos = false, e5._fileDownloadProxy = "", e5._authKey = "", e5._fileDNList = Oi;
        var t5 = e5.getIEmitInst();
        return t5.on(U3.A2KEY_AND_TINYID_UPDATED, e5._init, e5), t5.on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function qi(e5) {
        var t5 = false;
        return Object.values(bi).includes(e5) && (t5 = true), t5 = 120001 <= e5 && e5 <= 13e4 || 10100 <= e5 && e5 <= 10200 ? true : t5;
      }
      t4(Qi, c4);
      var xi = e4(Qi, [{ key: "createTextMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), e5 = C4(e5.payload) ? e5.payload : e5.payload.text, e5 = new no({ text: e5 }), t5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(e5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), n5;
      } }, { key: "createImageMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5));
        if (v3) {
          var o5 = e5.payload.file;
          if (at2(o5))
            return void this.warn("FileUnsupportedInMP", "createImageMessage");
          var i5 = o5.tempFiles[0].path || o5.tempFiles[0].tempFilePath, o5 = { url: i5, name: i5.slice(i5.lastIndexOf("/") + 1), size: o5.tempFiles && o5.tempFiles[0].size || 1, type: i5.slice(i5.lastIndexOf(".") + 1).toLowerCase() };
          e5.payload.file = o5;
        } else
          ve2 ? (o5 = { url: (i5 = e5.payload.file).uri, name: i5.fileName, size: i5.fileSize || 1, type: i5.type, width: i5.width, height: i5.height }, e5.payload.file = o5) : Ie2 && (at2(e5.payload.file) ? (i5 = e5.payload.file, e5.payload.file = { files: [i5] }) : m3(e5.payload.file) && "undefined" != typeof uni && (o5 = e5.payload.file.tempFiles[0], e5.payload.file = { files: [o5] }));
        i5 = new uo({ imageFormat: je2.UNKNOWN, uuid: this._generateUUID(e5.payload.file), file: e5.payload.file }, this.getFileDownloadProxy(), this.getDownloadFileAuthKey(), Oi), o5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(i5), n5.setNickAndAvatar(o5), n5.setNameCard(this._getNameCardByGroupID(n5)), this._messageOptionsMap.set(n5.clientSequence, e5), n5;
      } }, { key: "createAudioMessage", value: function(e5) {
        var t5 = e5.payload.file, n5 = (v3 && (n5 = { url: t5.tempFilePath, name: t5.tempFilePath.slice(t5.tempFilePath.lastIndexOf("/") + 1), size: t5.fileSize, second: parseInt(t5.duration) / 1e3, type: t5.tempFilePath.slice(t5.tempFilePath.lastIndexOf(".") + 1).toLowerCase() }, e5.payload.file = n5), ve2 && (n5 = { url: t5.uri, name: t5.uri.slice(t5.uri.lastIndexOf("/") + 1), size: t5.fileSize || 1, second: Math.floor(t5.duration / 1e3), type: t5.uri.slice(t5.uri.lastIndexOf(".") + 1).toLowerCase() }, e5.payload.file = n5, S3(t5.uri)) && this.warn("VoiceFileInRN"), this.getMyUserID()), o5 = (e5.currentUser = n5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), t5 = new po({ second: Math.floor(t5.duration / 1e3), size: t5.fileSize || t5.size || 1, url: t5.tempFilePath || t5.uri, uuid: this._generateUUID(e5.payload.file) }, this.getFileDownloadProxy(), this.getDownloadFileAuthKey(), Oi), n5 = this._getNickAndAvatarByUserID(n5);
        return o5.setElement(t5), o5.setNickAndAvatar(n5), o5.setNameCard(this._getNameCardByGroupID(o5)), this._messageOptionsMap.set(o5.clientSequence, e5), o5;
      } }, { key: "createVideoMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), e5.payload.file.thumbUrl = "", e5.payload.file.thumbSize = 0, {});
        if (v3) {
          if (ge2)
            return void this.warn("VideoUnsupportedInAlipay");
          if (at2(e5.payload.file))
            return void this.warn("FileUnsupportedInMP", "createVideoMessage");
          var o5 = e5.payload.file;
          O3(o5.tempFiles) && (o5 = o5.tempFiles[0]), n5.url = o5.tempFilePath, n5.name = o5.tempFilePath.slice(o5.tempFilePath.lastIndexOf("/") + 1), n5.size = o5.size || 1, n5.second = o5.duration || 0, n5.type = o5.tempFilePath.slice(o5.tempFilePath.lastIndexOf(".") + 1).toLowerCase();
        } else
          ve2 ? (o5 = e5.payload.file, n5.url = o5.uri, n5.name = o5.fileName, n5.size = o5.fileSize || 1, n5.second = o5.duration || 0, n5.type = o5.type.split("/")[1]) : Ie2 && (at2(e5.payload.file) ? (o5 = e5.payload.file, e5.payload.file.files = [o5]) : m3(e5.payload.file) && "undefined" != typeof uni && (o5 = e5.payload.file.tempFile, e5.payload.file.files = [o5]), o5 = e5.payload.file, n5.url = window.URL.createObjectURL(o5.files[0]), n5.name = o5.files[0].name, n5.size = o5.files[0].size || 1, n5.second = o5.files[0].duration || 0, n5.type = o5.files[0].type.split("/")[1]);
        e5.payload.file.videoFile = n5;
        o5 = new Do(e5), n5 = new Io({ videoFormat: n5.type, videoSecond: Kt2(n5.second, 0), videoSize: n5.size, remoteVideoUrl: "", videoUrl: n5.url, videoUUID: this._generateUUID(e5.payload.file.videoFile), thumbUUID: this._generateUUID(e5.payload.file.videoFile), thumbWidth: e5.payload.file.width || 200, thumbHeight: e5.payload.file.height || 200, thumbUrl: e5.payload.file.thumbUrl, thumbSize: e5.payload.file.thumbSize, thumbFormat: e5.payload.file.thumbUrl.slice(e5.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase() }, this.getFileDownloadProxy(), this.getDownloadFileAuthKey(), Oi), t5 = this._getNickAndAvatarByUserID(t5);
        return o5.setElement(n5), o5.setNickAndAvatar(t5), o5.setNameCard(this._getNameCardByGroupID(o5)), this._messageOptionsMap.set(o5.clientSequence, e5), o5;
      } }, { key: "createCustomMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), e5 = new vo({ data: e5.payload.data, description: e5.payload.description, extension: e5.payload.extension }), t5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(e5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), n5;
      } }, { key: "createFaceMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), e5 = new lo(e5.payload), t5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(e5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), n5;
      } }, { key: "createMergerMessage", value: function(e5) {
        var t5 = this.getMyUserID(), t5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), this._getNickAndAvatarByUserID(t5)), n5 = new Do(e5), e5 = new Co(e5.payload);
        return n5.setElement(e5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), n5.setRelayFlag(true), n5;
      } }, { key: "createForwardMessage", value: function(e5) {
        var t5, n5, o5 = e5.to, i5 = e5.conversationType, a5 = e5.priority, s5 = e5.payload, r5 = e5.needReadReceipt, c5 = e5.receiverList;
        return O3(s5._elements) ? (t5 = this.getMyUserID(), n5 = this._getNickAndAvatarByUserID(t5), s5.type === R3.MSG_GRP_TIP ? E4({ code: k2.MSG_FORWARD_TYPE_INVALID }) : (i5 = { to: o5, conversationType: i5, conversationID: "".concat(i5).concat(o5), priority: a5, isPlaceMessage: 0, status: An, currentUser: t5, senderTinyID: this.getMyTinyID(), cloudCustomData: e5.cloudCustomData || s5.cloudCustomData || "", needReadReceipt: r5, receiverList: c5, isSupportExtension: e5.isSupportExtension || false }, (o5 = new Do(i5)).setElement(s5._elements[0]), o5.setNickAndAvatar(n5), o5.setNameCard(this._getNameCardByGroupID(s5)), o5.setRelayFlag(true), o5)) : E4({ code: k2.MSG_FORWARD_INVALID_ELEMENTS });
      } }, { key: "downloadMergerMessage", value: function(e5) {
        return this._mergerMessageHandler.downloadMergerMessage(e5);
      } }, { key: "createFileMessage", value: function(e5) {
        if (v3) {
          if (!le2 && !pe2 && !fe2)
            return;
          var t5 = I3.getSystemInfoSync().SDKVersion;
          if (le2 && xt2(t5, "2.5.0") < 0)
            return void this.warn("WXChooseMessageFile");
          if (pe2 && xt2(t5, "1.18.0") < 0)
            return void this.warn("QQChooseMessageFile");
        }
        Ie2 || fe2 ? at2(e5.payload.file) ? (t5 = e5.payload.file, e5.payload.file = { files: [t5] }) : m3(e5.payload.file) && "undefined" != typeof uni && (o5 = (t5 = e5.payload.file).tempFiles, t5 = t5.files, n5 = null, O3(o5) ? n5 = o5[0] : O3(t5) && (n5 = t5[0]), e5.payload.file = { files: [n5] }) : le2 || pe2 ? (t5 = y2(y2({}, (o5 = e5.payload.file.tempFiles)[0]), {}, { url: o5[0].path }), e5.payload.file = { files: [t5] }) : ve2 && (o5 = y2(y2({}, n5 = e5.payload.file), {}, { url: n5.uri }), e5.payload.file = { files: [o5] });
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), o5 = new mo({ uuid: this._generateUUID(e5.payload.file), file: e5.payload.file }), t5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(o5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), this._messageOptionsMap.set(n5.clientSequence, e5), n5;
      } }, { key: "createLocationMessage", value: function(e5) {
        var t5 = this.getMyUserID(), n5 = (e5.currentUser = t5, e5.senderTinyID = this.getMyTinyID(), new Do(e5)), e5 = new Mo(e5.payload), t5 = this._getNickAndAvatarByUserID(t5);
        return n5.setElement(e5), n5.setNickAndAvatar(t5), n5.setNameCard(this._getNameCardByGroupID(n5)), n5;
      } }, { key: "_onNoModule", value: function() {
        return E4({ code: k2.NO_MODULE });
      } }, { key: "sendMessageInstance", value: function(i5, a5) {
        var s5 = this;
        if (false === this.get(29).filterMessage(i5, a5))
          return i5.hasRiskContent = true, this._onSendMessageFailed(i5, new L3({ code: k2.PROFANITY_FOUND }));
        var r5, c5, u5, l5, t5 = null;
        if (i5.conversationType === R3.CONV_C2C)
          t5 = this.get(6);
        else {
          if (i5.conversationType !== R3.CONV_GROUP)
            return E4({ code: k2.MSG_INVALID_CONV_TYPE });
          t5 = this.get(7);
        }
        return t5 ? (c5 = "".concat(this._n, ".sendMessageInstance"), u5 = this.get(11), l5 = t5.isOnlineMessage(i5, a5), this.get(17).upload(i5).then(function() {
          return s5._getSendMessageSpecifiedKey(i5) === jn && s5.get(26).addSuccessCount(Jn), s5._guardForGroup(i5).then(function() {
            if (!i5.isSendable())
              return E4({ code: k2.MSG_F_URL_IS_EMPTY });
            s5._addSendMessageTotalCount(i5), r5 = Date.now();
            var e5 = function(e6) {
              var t6 = "utf-8";
              Ie2 && document && (t6 = document.charset.toLowerCase());
              var n5, o5 = 0, i6 = e6.length;
              if ("utf-8" === t6 || "utf8" === t6)
                for (var a6 = 0; a6 < i6; a6++)
                  (n5 = e6.codePointAt(a6)) <= 127 ? o5 += 1 : n5 <= 2047 ? o5 += 2 : n5 <= 65535 ? o5 += 3 : (o5 += 4, a6++);
              else if ("utf-16" === t6 || "utf16" === t6)
                for (var s6 = 0; s6 < i6; s6++)
                  (n5 = e6.codePointAt(s6)) <= 65535 ? o5 += 2 : (o5 += 4, s6++);
              else
                o5 = e6.replace(/[^\x00-\xff]/g, "aa").length;
              return o5;
            }(JSON.stringify(i5));
            return i5.type === R3.MSG_MERGER && 11264 < e5 ? s5._mergerMessageHandler.uploadMergerMessage(i5, e5).then(function(e6) {
              e6 = s5._mergerMessageHandler.createMergerMessagePack(i5, a5, e6);
              return s5.req(e6);
            }) : (u5.setMessageRandom(i5), t5.sendMessage(i5, a5));
          }).then(function(e5) {
            var e5 = e5.data, t6 = e5.time, n5 = e5.sequence, o5 = e5.readReceiptCode, e5 = e5.messageDropReason, e5 = (A3(o5) && 0 !== o5 && (new P3("sendMessageWithReceipt").setMessage("from:".concat(i5.from, " to:").concat(i5.to, " sequence:").concat(n5, " readReceiptCode:").concat(o5)).end(), M3.w("".concat(c5, " readReceiptCode:").concat(o5, " message:").concat(s5.getErrMsg(o5)))), e5 && (o5 = new P3("messageDropReason"), e5 = "from:".concat(i5.from, " to:").concat(i5.to, " sequence:").concat(n5, " messageDropReason:").concat(e5), o5.setMessage(e5).end(), M3.w("".concat(c5, " ").concat(e5))), s5._addSendMessageSuccessCount(i5, r5), s5._messageOptionsMap.delete(i5.clientSequence), true === i5.isResend && (o5 = u5.findMessage(i5.ID)) && (M3.l("".concat(c5, " resend ok. ID:").concat(o5.ID)), u5.deleteLocalMessage(o5)), i5.status = On, i5.time = t6, false);
            return i5.conversationType === R3.CONV_GROUP ? i5.sequence = n5 : i5.conversationType === R3.CONV_C2C && (o5 = u5.getLatestMessageSentByMe(i5.conversationID)) && (t6 = o5.nick, n5 = o5.avatar, t6 === i5.nick && n5 === i5.avatar || (e5 = true)), e5 && u5.modifyMessageSentByMe({ conversationID: i5.conversationID, latestNick: i5.nick, latestAvatar: i5.avatar }), true === l5 ? i5._onlineOnlyFlag = true : (u5.appendToMessageList(i5), o5 = i5, m3(a5) && m3(a5.messageControlInfo) && (true === a5.messageControlInfo.excludedFromLastMessage && (i5._isExcludedFromLastMessage = true, o5 = ""), true === a5.messageControlInfo.excludedFromUnreadCount) && (i5._isExcludedFromUnreadCount = true), t6 = i5.conversationType, Nt2(i5.to) && (t6 = R3.CONV_TOPIC, s5.get(10).onMessageSent({ groupID: jt2(i5.to), topicID: i5.to, lastMessage: o5 })), u5.onMessageSent({ conversationOptionsList: [{ conversationID: i5.conversationID, unreadCount: 0, type: t6, subType: i5.conversationSubType, lastMessage: o5 }] })), i5._relayFlag || "TIMImageElem" !== i5.type || Bt2(i5.payload.imageInfoArray), T4({ message: i5 });
          });
        }).catch(function(e5) {
          return s5._onSendMessageFailed(i5, e5, l5);
        })) : this._onNoModule();
      } }, { key: "_guardForGroup", value: function(e5) {
        if (e5.conversationType !== R3.CONV_GROUP)
          return Promise.resolve();
        var t5 = this.get(7);
        if (!t5)
          return this._onNoModule();
        if (Ot2({ groupID: e5.to })) {
          var n5 = t5.getLocalGroupProfile(e5.to);
          if (n5 && n5.isSupportTopic)
            return E4({ code: k2.MSG_SEND_GRP_WITH_TOPIC_FAIL });
        }
        return t5.guardForAVChatRoom(e5);
      } }, { key: "_onSendMessageFailed", value: function(e5, t5) {
        var n5 = 2 < arguments.length && void 0 !== arguments[2] && arguments[2], o5 = "".concat(this._n, "._onSendMessageFailed"), i5 = (e5.status = Nn, 80001 !== t5.code && 80004 !== t5.code || (e5.hasRiskContent = true), this.get(11)), a5 = (i5.deleteMessageRandom(e5), 10100 <= t5.code && t5.code <= 10200 || 120001 <= t5.code && t5.code <= 13e4), n5 = (n5 || a5 || true === i5.appendToMessageList(e5) && M3.l("".concat(o5, " message stored, ID:").concat(e5.ID)), this._addSendMessageFailCountOnUser(e5, t5), new P3("sendMessage")), a5 = "head.seq:".concat(t5.data.headSeq, " type:").concat(e5.type, " from:").concat(e5.from, " to:").concat(e5.to);
        return Ie2 && ("connection" in navigator && (i5 = navigator.connection, a5 += " downlink:".concat(i5.downlink, " effectiveType:").concat(i5.effectiveType, " rtt:").concat(i5.rtt)), "memory" in window.performance) && (i5 = window.performance.memory, a5 += " usedJSHeapSize:".concat(i5.usedJSHeapSize, " totalJSHeapSize:").concat(i5.totalJSHeapSize, " jsHeapSizeLimit:").concat(i5.jsHeapSizeLimit)), n5.setMessage(a5).setError(t5).end(), M3.e("".concat(o5, " ").concat(a5, " error:"), t5), E4(new L3({ code: t5 && t5.code ? t5.code : k2.MSG_SEND_FAIL, message: t5 && t5.message ? t5.message : void 0, data: { message: e5 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e5) {
        if ([R3.MSG_IMAGE, R3.MSG_AUDIO, R3.MSG_VIDEO, R3.MSG_FILE].includes(e5.type))
          return jn;
        if (e5.conversationType === R3.CONV_C2C)
          return Kn;
        if (e5.conversationType === R3.CONV_GROUP) {
          var t5 = this.get(7);
          if (t5) {
            t5 = t5.getLocalGroupProfile(e5.to);
            if (t5)
              return e5 = t5.type, At2(e5) ? Yn : Wn;
          }
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e5) {
        e5 = this._getSendMessageSpecifiedKey(e5);
        e5 && this.get(26).addTotalCount(e5);
      } }, { key: "_addSendMessageSuccessCount", value: function(e5, t5) {
        var n5, e5 = this._getSendMessageSpecifiedKey(e5);
        e5 && ((n5 = this.get(26)).addSuccessCount(e5), n5.addCost(e5, tn(t5, false)));
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e5, t5) {
        var n5, t5 = t5.code, t5 = void 0 === t5 ? -1 : t5, o5 = this.get(26), e5 = this._getSendMessageSpecifiedKey(e5);
        e5 === jn && (n5 = false, n5 = wi.includes(t5) ? true : n5) ? o5.addFailedCountOfUserSide(Jn) : qi(t5) && e5 && o5.addFailedCountOfUserSide(e5);
      } }, { key: "resendMessage", value: function(e5, t5) {
        return e5.isResend = true, e5.status = An, this.sendMessageInstance(e5, t5);
      } }, { key: "revokeMessage", value: function(n5) {
        var o5, i5, t5 = this, e5 = null;
        return n5.conversationType === R3.CONV_C2C ? e5 = this.get(6) : n5.conversationType === R3.CONV_GROUP && (e5 = this.get(7)), e5 ? ((o5 = new P3("revokeMessage")).setMessage("type:".concat(n5.type, " from:").concat(n5.from, " to:").concat(n5.to)), i5 = "".concat(this._n, ".").concat("revokeMessage"), e5.revokeMessage(n5).then(function(e6) {
          var e6 = e6.data.recallRetList;
          return S3(e6) || 0 === e6[0].retCode ? (M3.i("".concat(i5, " ok. ID:").concat(n5.ID)), n5.isRevoked = true, o5.end(), t5.get(11).onMessageRevoked([n5]), T4({ message: n5 })) : (e6 = new L3({ code: e6[0].retCode, data: { message: n5 } }), o5.setCode(e6.code).setMoreMessage(e6.message).end(), E4(e6));
        }).catch(function(e6) {
          o5.setError(e6).end();
          var t6 = new L3({ code: e6 && e6.code ? e6.code : k2.MSG_REVOKE_FAIL, message: e6 && e6.message ? e6.message : void 0, data: { message: n5 } });
          return M3.w("".concat(i5, " failed. error:"), e6), E4(t6);
        })) : this._onNoModule();
      } }, { key: "deleteMessage", value: function(e5) {
        var t5 = this, n5 = null, o5 = e5[0], i5 = o5.conversationID, a5 = "", s5 = [], r5 = [];
        if (o5.conversationType === R3.CONV_C2C)
          n5 = this.get(6), a5 = i5.replace(R3.CONV_C2C, ""), e5.forEach(function(e6) {
            e6 && e6.status === On && e6.conversationID === i5 && (e6._onlineOnlyFlag || s5.push("".concat(e6.sequence, "_").concat(e6.random, "_").concat(e6.time)), r5.push(e6));
          });
        else if (o5.conversationType === R3.CONV_GROUP)
          n5 = this.get(7), a5 = i5.replace(R3.CONV_GROUP, ""), e5.forEach(function(e6) {
            e6 && e6.status === On && e6.conversationID === i5 && (e6._onlineOnlyFlag || s5.push("".concat(e6.sequence)), r5.push(e6));
          });
        else if (o5.conversationType === R3.CONV_SYSTEM)
          return E4({ code: k2.CANNOT_DELETE_GRP_SYSTEM_NOTICE });
        if (!n5)
          return this._onNoModule();
        if (0 === s5.length)
          return this._onMessageDeleted(r5);
        30 < s5.length && (s5 = s5.slice(0, 30), r5 = r5.slice(0, 30));
        var c5 = new P3("deleteMessage"), u5 = (c5.setMessage("to:".concat(a5, " count:").concat(s5.length)), "".concat(this._n, ".").concat("deleteMessage"));
        return n5.deleteMessage({ to: a5, keyList: s5 }).then(function(e6) {
          return c5.end(), M3.i("".concat(u5, " ok")), t5._onMessageDeleted(r5);
        }).catch(function(e6) {
          c5.setError(e6).end(), M3.w("".concat(u5, " failed. error:"), e6);
          e6 = new L3({ code: e6 && e6.code ? e6.code : k2.MSG_DELETE_FAIL, message: e6 && e6.message ? e6.message : void 0 });
          return E4(e6);
        });
      } }, { key: "_onMessageDeleted", value: function(e5) {
        return this.get(11).onMessageDeleted(e5), D2({ messageList: e5 });
      } }, { key: "translateText", value: function(e5) {
        var o5 = "".concat(this._n, ".").concat("translateText"), t5 = e5.sourceTextList, n5 = e5.sourceLanguage, e5 = e5.targetLanguage, i5 = new P3("translateText");
        return i5.setMessage("sourceLanguage:".concat(n5, " targetLanguage:").concat(e5)), this.req({ P: G2.TRANSLATE_TEXT, data: { sourceTextList: t5, source: n5 || "auto", target: e5, from: this.getMyTinyID(), SDKAppID: this.getSDKAppID() } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.error, n6 = e6.requestID, e6 = e6.translatedTextList;
          if (0 === t6.code)
            return i5.end(), M3.i("".concat(o5, " ok. requestID:").concat(n6)), T4({ translatedTextList: e6 });
          throw y2(y2({}, t6), {}, { requestID: n6 });
        }).catch(function(e6) {
          return i5.setCode(e6.code).setMoreMessage(e6.requestID).end(), M3.w("".concat(o5, " failed. error:"), e6), E4({ code: k2.TRANSLATE_TEXT_FAIL });
        });
      } }, { key: "convertVoiceToText", value: function(e5) {
        var t5, o5, i5, n5 = e5.message, e5 = e5.language, a5 = n5.payload.url, n5 = (n5.from === this.getMyUserID() && "out" === n5.flow && (a5 = n5.payload.remoteAudioUrl), /\.(wav|pcm|ogg-opus|speex|silk|mp3|m4a|aac|amr)/);
        return n5.test(a5) ? (n5 = n5.exec(a5)[1] || "mp3", t5 = "16k_zh-PY", e5 ? "zh (cmn-Hans-CN)" === e5 ? t5 = "16k_zh" : "en-US" === e5 ? t5 = "16k_en" : "yue-Hant-HK" === e5 ? t5 = "16k_yue" : "ja-JP" === e5 && (t5 = "16k_ja") : t5 = "16k_zh-PY", e5 = "serviceType:".concat(t5, " url:").concat(a5), o5 = "".concat(this._n, ".").concat("convertVoiceToText"), M3.i("".concat(o5, " ").concat(e5)), (i5 = new P3("convertVoiceToText")).setMessage(e5), this.req({ P: G2.VOICE_TO_TEXT, data: { url: a5, language: t5, SDKAppID: this.getSDKAppID(), format: n5 } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.error, n6 = e6.requestID, e6 = e6.result;
          if (0 === t6.code)
            return i5.end(), M3.i("".concat(o5, " ok. requestID:").concat(n6)), T4({ result: e6 });
          throw y2(y2({}, t6), {}, { requestID: n6 });
        }).catch(function(e6) {
          return i5.setCode(e6.code).setMoreMessage(e6.requestID || "").end(), M3.w("".concat(o5, " failed. error:"), e6), E4({ code: k2.VOICE_TO_TEXT_FAIL });
        })) : E4({ code: k2.UNSUPPORTED_VOICE_FORMAT });
      } }, { key: "modifyRemoteMessage", value: function(n5) {
        var o5 = this;
        if (false === this.get(29).filterMessage(n5))
          return n5.hasRiskContent = true, E4({ code: k2.PROFANITY_FOUND, data: { message: n5 } });
        var e5 = null, t5 = n5.conversationType, i5 = n5.to;
        if (t5 === R3.CONV_C2C)
          e5 = this.get(6);
        else if (t5 === R3.CONV_GROUP) {
          if (!(e5 = this.get(7)))
            return this._onNoModule();
          if (e5.isMessageFromOrToAVChatroom(i5))
            return E4({ code: k2.MSG_MODIFY_DISABLED_IN_AV, data: { message: n5 } });
        }
        var a5 = new P3("modifyMessage"), s5 = (a5.setMessage("to:".concat(i5)), "".concat(this._n, ".modifyRemoteMessage"));
        return e5.modifyRemoteMessage(n5).then(function(e6) {
          a5.end(), M3.i("".concat(s5, " ok"));
          e6 = o5._onModifyRemoteMessageResp(n5, e6.data);
          return T4({ message: e6 });
        }).catch(function(e6) {
          var t6;
          return a5.setCode(e6.code).setMoreMessage(e6.message).end(), M3.w("".concat(s5, " failed. error:"), e6), 20027 === e6.code ? (t6 = o5._onModifyRemoteMessageResp(n5, e6.data), E4({ code: k2.MSG_MODIFY_CONFLICT, data: { message: t6 } })) : E4({ code: e6.code, message: e6.message, data: { message: n5 } });
        });
      } }, { key: "_onModifyRemoteMessageResp", value: function(e5, t5) {
        M3.d("".concat(this._n, "._onModifyRemoteMessageResp options:"), t5);
        var n5 = e5.conversationType, o5 = e5.from, i5 = e5.to, a5 = e5.random, s5 = e5.sequence, e5 = e5.time, r5 = t5.elements, c5 = t5.messageVersion, t5 = t5.cloudCustomData, t5 = void 0 === t5 ? "" : t5;
        return this.get(11).onMessageModified({ conversationType: n5, from: o5, to: i5, time: e5, random: a5, sequence: s5, elements: r5, cloudCustomData: t5, messageVersion: c5 });
      } }, { key: "_generateUUID", value: function(e5) {
        var t5 = this.get(12), t5 = "".concat(t5.getSDKAppID(), "-").concat(t5.getUserID(), "-").concat(gt2()), e5 = e5.name || e5.value || e5.url || e5.tempFilePath, e5 = e5 && e5.slice(e5.lastIndexOf(".") + 1);
        return t5 = e5 ? "".concat(t5, ".").concat(e5) : t5;
      } }, { key: "getMessageOption", value: function(e5) {
        return this._messageOptionsMap.get(e5);
      } }, { key: "_getNickAndAvatarByUserID", value: function(e5) {
        return this.get(4).getNickAndAvatarByUserID(e5);
      } }, { key: "_getNameCardByGroupID", value: function(e5) {
        if (e5.conversationType === R3.CONV_GROUP) {
          var t5 = this.get(7);
          if (t5)
            return t5.getMyNameCardByGroupID(e5.to);
        }
        return "";
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._messageOptionsMap.clear();
      } }]), Vi = (t4(Zi, c4), e4(Zi, [{ key: "onMsgExtNotify", value: function(e5) {
        var o5 = this, e5 = e5.dataList, t5 = e5.messageInfo, i5 = e5.operateType, n5 = e5.operateResultList, a5 = e5.tinyID, e5 = e5.globalSequence, s5 = t5.clientTime, t5 = t5.random, r5 = "".concat(a5, "-").concat(s5, "-").concat(t5), c5 = [], u5 = [], l5 = (M3.l("".concat(this._n, ".onMsgExtNotify messageID:").concat(r5, " operateType:").concat(i5, " globalSequence:").concat(e5)), this._updateGlobalSeq(r5, e5), false), d4 = false;
        n5.forEach(function(e6) {
          var t6 = e6.extensions, t6 = void 0 === t6 ? [] : t6, n6 = e6.clearSequence;
          1 === i5 ? (l5 = true, t6.forEach(function(e7) {
            c5.push({ key: e7.key, value: e7.value });
          }), o5._updateLocalExt(r5, t6)) : 2 === i5 ? (d4 = true, t6.forEach(function(e7) {
            u5.push(e7.key);
          }), o5._updateLocalExt(r5, t6)) : 3 === i5 && (d4 = true, o5._hasLocalExt(r5) && o5._getLocalExt(r5).forEach(function(e7, t7) {
            e7.seq <= n6 && !S3(e7.value) && u5.push(t7);
          }), o5._clearLocalExt(r5, n6));
        }), l5 && this.emitOEvt(h4.MESSAGE_EXTENSIONS_UPDATED, { messageID: r5, extensions: c5 }), d4 && this.emitOEvt(h4.MESSAGE_EXTENSIONS_DELETED, { messageID: r5, keyList: u5 });
      } }, { key: "setMessageExtensions", value: function(e5, t5) {
        var o5, n5, i5, a5, s5, r5, c5, u5 = "setMessageExtensions";
        return this.canIUse(g4.MSG_EXT) ? (o5 = "".concat(this._n, ".").concat(u5), n5 = e5.ID, i5 = e5.conversationID, a5 = e5.sequence, s5 = e5.time, r5 = d3(t5), 20 < t5.length && (r5 = t5.slice(0, 20), M3.w("".concat(o5, ". the length of extensions cannot exceed 20."))), t5 = "convID:".concat(i5, " messageID:").concat(n5, " sequence:").concat(a5, " time:").concat(s5, " count:").concat(r5.length), (c5 = new P3(u5)).setMessage(t5), M3.l("".concat(o5, " ").concat(t5)), this._modifyMsgExts(e5, r5).then(function(e6) {
          var t6 = e6.resultList, n6 = e6.successCount, e6 = e6.failureCount, n6 = "successCount:".concat(n6, " failCount:").concat(e6);
          return c5.setMoreMessage(n6).end(), M3.l("".concat(o5, " ok. ").concat(n6)), T4({ extensions: t6 });
        }).catch(function(e6) {
          return c5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(u5);
      } }, { key: "getMessageExtensions", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5, c5 = this, u5 = "getMessageExtensions";
        return this.canIUse(g4.MSG_EXT) ? (t5 = "".concat(this._n, ".").concat(u5), n5 = e5.ID, a5 = e5.conversationID, o5 = e5.sequence, i5 = e5.time, a5 = "convID:".concat(a5, " messageID:").concat(n5, " sequence:").concat(o5, " time:").concat(i5), (s5 = new P3(u5)).setMessage(a5), r5 = void M3.l("".concat(t5, " ").concat(a5)), this.getMsgExtsMap.has(n5) && (r5 = this._getGlobalSeq(n5)), this._getMsgExts(e5, r5).then(function(e6) {
          return s5.end(), M3.l("".concat(t5, " ok. extCount:").concat(e6.length)), N3(r5) && 0 < e6.length && c5.getMsgExtsMap.set(n5, 1), T4({ extensions: e6 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(u5);
      } }, { key: "deleteMessageExtensions", value: function(e5, t5) {
        var i5, n5, a5, o5, s5, r5, c5, u5 = "deleteMessageExtensions";
        return this.canIUse(g4.MSG_EXT) ? (i5 = "".concat(this._n, ".").concat(u5), n5 = [], a5 = 3, S3(t5) || (a5 = 2, t5.forEach(function(e6) {
          n5.push({ key: e6, value: "", seq: 0 });
        })), t5 = e5.ID, r5 = e5.conversationID, o5 = e5.sequence, s5 = e5.time, r5 = "convID:".concat(r5, " messageID:").concat(t5, " sequence:").concat(o5, " time:").concat(s5, " operateType:").concat(a5), (c5 = new P3(u5)).setMessage(r5), M3.l("".concat(i5, " ").concat(r5)), this._modifyMsgExts(e5, n5, a5).then(function(e6) {
          var t6 = e6.resultList, n6 = e6.successCount, e6 = e6.failureCount, o6 = "";
          return 2 === a5 && (o6 = "success count:".concat(n6, " fail count:").concat(e6)), c5.setMoreMessage("".concat(o6)).end(), M3.l("".concat(i5, " ok. ").concat(o6)), T4({ extensions: t6 });
        }).catch(function(e6) {
          return c5.setError(e6).end(), M3.e("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(u5);
      } }, { key: "_modifyMsgExts", value: function(n5, e5) {
        var o5 = this, t5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, i5 = Nt2(n5.to) ? R3.CONV_TOPIC : n5.conversationType, a5 = void 0, s5 = (3 !== t5 && (a5 = this._getReqExts(n5, e5)), null);
        switch (i5) {
          case R3.CONV_C2C:
            s5 = this.get(6);
            break;
          case R3.CONV_GROUP:
            s5 = this.get(7);
            break;
          case R3.CONV_TOPIC:
            s5 = this.get(10);
            break;
          default:
            return E4({ code: k2.NO_MODULE });
        }
        return s5.modifyMsgExts(n5, a5, t5).then(function(e6) {
          var e6 = e6.data, t6 = e6.extensions, e6 = e6.seq, i6 = [], a6 = 0, s6 = 0, r5 = [];
          return (t6 = S3(t6) ? [] : t6).forEach(function(e7) {
            var t7 = e7.errorCode, e7 = e7.extension, n6 = e7.key, o6 = e7.value, e7 = e7.seq;
            i6.push({ code: t7, key: n6, value: o6 }), 0 === t7 ? a6++ : s6++, r5.push({ key: n6, value: o6, seq: e7 });
          }), o5._updateGlobalSeq(n5.ID, e6), 0 < r5.length && (o5._updateLocalExt(n5.ID, r5), r5 = null), { resultList: i6, successCount: a6, failureCount: s6 };
        }).catch(function(e6) {
          return E4(e6);
        });
      } }, { key: "_getReqExts", value: function(e5, t5) {
        var o5, i5 = [];
        return this._hasLocalExt(e5.ID) ? (o5 = this._getLocalExt(e5.ID), t5.forEach(function(e6) {
          var t6 = e6.key, e6 = e6.value, n5 = 0;
          o5.has(t6) && (n5 = o5.get(t6).seq), i5.push({ key: t6, value: e6, seq: n5 });
        })) : t5.forEach(function(e6) {
          var t6 = e6.key, e6 = e6.value;
          i5.push({ key: t6, value: e6, seq: 0 });
        }), i5;
      } }, { key: "_getMsgExts", value: function(i5, e5) {
        var a5 = this, s5 = "".concat(this._n, "._getMsgExts"), r5 = i5.ID, t5 = i5.to, n5 = null;
        switch (Nt2(t5) ? R3.CONV_TOPIC : i5.conversationType) {
          case R3.CONV_C2C:
            n5 = this.get(6);
            break;
          case R3.CONV_GROUP:
            n5 = this.get(7);
            break;
          case R3.CONV_TOPIC:
            n5 = this.get(10);
            break;
          default:
            return E4({ code: k2.NO_MODULE });
        }
        return n5.getMessageExtensions(i5, e5).then(function(e6) {
          var e6 = e6.data, t6 = e6.extensions, n6 = e6.completeFlag, o5 = e6.globalSequence, e6 = e6.clearSequence, t6 = S3(t6) ? [] : t6;
          return M3.l("".concat(s5, " ok. completeFlag:").concat(n6, " globalSequence:").concat(o5, " clearSequence:").concat(e6, " count:").concat(t6.length)), a5._updateLocalExt(r5, t6), a5._clearLocalExt(r5, e6), a5._updateGlobalSeq(r5, o5), 1 !== n6 ? (e6 = t6.slice(-1)[0].seq + 1, a5._getMsgExts(i5, e6)) : a5._getLocalExtList(r5);
        }).catch(function(e6) {
          return E4(e6);
        });
      } }, { key: "_hasLocalExt", value: function(e5) {
        return this.msgExtMap.has(e5);
      } }, { key: "_getLocalExt", value: function(e5) {
        return this.msgExtMap.get(e5);
      } }, { key: "_updateLocalExt", value: function(e5, t5) {
        this._hasLocalExt(e5) || this.msgExtMap.set(e5, /* @__PURE__ */ new Map());
        var o5 = this._getLocalExt(e5);
        t5.forEach(function(e6) {
          var t6 = e6.key, n5 = e6.value, e6 = e6.seq;
          o5.set(t6, { value: void 0 === n5 ? "" : n5, seq: e6 });
        });
      } }, { key: "_clearLocalExt", value: function(e5, n5) {
        var o5;
        n5 <= 0 || !this._hasLocalExt(e5) || (o5 = this._getLocalExt(e5)).forEach(function(e6, t5) {
          e6.seq <= n5 && o5.delete(t5);
        });
      } }, { key: "_getLocalExtList", value: function(e5) {
        var n5 = [];
        return this._hasLocalExt(e5) && this._getLocalExt(e5).forEach(function(e6, t5) {
          e6 = e6.value;
          S3(e6) || n5.push({ key: t5, value: e6 });
        }), n5;
      } }, { key: "_getGlobalSeq", value: function(e5) {
        return this.globalSeqMap.get(e5);
      } }, { key: "_updateGlobalSeq", value: function(e5, t5) {
        this.globalSeqMap.set(e5, t5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this.msgExtMap.clear(), this.globalSeqMap.clear(), this.getMsgExtsMap.clear();
      } }])), Bi = (t4(Xi, c4), e4(Xi, [{ key: "onReactionNotifyList", value: function(e5) {
        var a5 = this, e5 = (e5 || {}).dataList;
        (void 0 === e5 ? [] : e5).forEach(function(e6) {
          var t5 = e6.C2CMessageInfo, n5 = e6.groupMessageInfo, n5 = void 0 === n5 ? {} : n5, e6 = e6.reactionList, e6 = void 0 === e6 ? [] : e6, t5 = y2(y2({}, void 0 === t5 ? {} : t5), n5), n5 = t5.tinyID, o5 = t5.clientTime, t5 = t5.random, n5 = "".concat(n5, "-").concat(o5, "-").concat(t5), i5 = [];
          e6.forEach(function(e7) {
            N3(e7.userIDList) && (e7.userIDList = [], e7.count = 0), i5.push.apply(i5, d3(e7.userIDList));
          }), M3.l("".concat(a5._n, ".onReactionNotifyList messageID:").concat(n5, " reactionList:").concat(e6.length)), a5._handleReactionSummary([{ messageID: n5, reactionList: e6 }], i5).then(function(e7) {
            a5.emitOEvt(h4.MESSAGE_REACTIONS_UPDATED, y2({}, e7[0]));
          });
        });
      } }, { key: "onReactionNotify", value: function(e5) {
        var e5 = e5.dataList || {}, t5 = e5.C2CMessageInfo, n5 = e5.groupMessageInfo, n5 = void 0 === n5 ? {} : n5, o5 = e5.reactionID, e5 = e5.operateType, t5 = y2(y2({}, void 0 === t5 ? {} : t5), n5), n5 = t5.tinyID, i5 = t5.clientTime, t5 = t5.random, n5 = "".concat(n5, "-").concat(i5, "-").concat(t5), i5 = (M3.l("".concat(this._n, ".onReactionNotify messageID:").concat(n5, " reactionID:").concat(o5, " operateType:").concat(e5)), 1 === e5 ? this._addReactedByMyselfMap(n5, o5) : this._removeReactedByMyselfMap(n5, o5), "".concat(n5, "-").concat(o5));
        this._reactionInfoMap.has(i5) && ((t5 = this._reactionInfoMap.get(i5)).reactedByMyself = 1 === e5, this.emitOEvt(h4.MESSAGE_REACTIONS_UPDATED, { messageID: n5, reactionList: [t5] }));
      } }, { key: "addMessageReaction", value: function(t5, n5) {
        var o5, e5, i5, a5, s5 = this, r5 = "addMessageReaction";
        return this.canIUse(g4.MSG_REACTION) ? (o5 = "".concat(this._n, ".").concat(r5), a5 = t5.ID, e5 = t5.conversationID, e5 = "convID:".concat(e5, " messageID:").concat(a5, " reactionID:").concat(n5), (i5 = new P3(r5)).setMessage(e5), M3.l("".concat(o5, " ").concat(e5)), a5 = this._createReactionOperationPack(t5, n5, 1), this._addReactedByMyselfMap(t5.ID, n5), this.req(a5).then(function() {
          return i5.end(), M3.l("".concat(o5, " ok.")), T4();
        }).catch(function(e6) {
          return s5._removeReactedByMyselfMap(t5.ID, n5), i5.setError(e6).end(), M3.e("".concat(o5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(r5);
      } }, { key: "removeMessageReaction", value: function(e5, t5) {
        var n5, o5, i5, a5, s5 = "removeMessageReaction";
        return this.canIUse(g4.MSG_REACTION) ? (n5 = "".concat(this._n, ".").concat(s5), a5 = e5.ID, o5 = e5.conversationID, o5 = "convID:".concat(o5, " messageID:").concat(a5, " reactionID:").concat(t5), (i5 = new P3(s5)).setMessage(o5), M3.l("".concat(n5, " ").concat(o5)), a5 = this._createReactionOperationPack(e5, t5, 2), this._removeReactedByMyselfMap(e5.ID, t5), this.req(a5).then(function() {
          return i5.end(), M3.l("".concat(n5, " ok.")), T4();
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(s5);
      } }, { key: "getMessageReactions", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5 = this, c5 = "getMessageReactions";
        return this.canIUse(g4.MSG_REACTION) ? (t5 = "".concat(this._n, ".").concat(c5), n5 = e5.messageList, s5 = e5.maxUserCountPerReaction, o5 = n5[0].conversationID, o5 = "convID:".concat(o5, " maxUserCountPerReaction:").concat(s5, " msgCount:").concat(n5.length), (i5 = new P3(c5)).setMessage(o5), M3.l("".concat(t5, " ").concat(o5)), a5 = /* @__PURE__ */ new Map(), s5 = this._createReactionSummaryPack(y2(y2({}, e5), {}, { messageIDMap: a5 })), this.req(s5).then(function(e6) {
          var e6 = e6.data.resultList, o6 = [], i6 = [];
          return (void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.messageKey, t6 = void 0 === t6 ? void 0 : t6, n6 = e7.messageSequence, n6 = void 0 === n6 ? void 0 : n6, e7 = e7.reactionList, e7 = void 0 === e7 ? [] : e7, n6 = N3(t6) ? a5.get(n6) : a5.get(t6);
            o6.push({ messageID: n6, reactionList: e7 }), e7.forEach(function(e8) {
              i6.push.apply(i6, d3(e8.userIDList));
            });
          }), r5._handleReactionSummary(o6, i6);
        }).then(function(e6) {
          return i5.end(), M3.l("".concat(t5, " ok.")), a5.clear(), T4({ resultList: e6 });
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(c5);
      } }, { key: "getAllUserListOfMessageReaction", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5, c5, u5 = this, l5 = "getAllUserListOfMessageReaction";
        return this.canIUse(g4.MSG_REACTION) ? (t5 = "".concat(this._n, ".").concat(l5), a5 = e5.message, n5 = e5.reactionID, o5 = e5.nextSeq, i5 = e5.count, c5 = a5.ID, a5 = a5.conversationID, a5 = "convID:".concat(a5, " messageID:").concat(c5, " reactionID:").concat(n5, " nextSeq:").concat(o5, " count:").concat(i5), (s5 = new P3(l5)).setMessage(a5), M3.l("".concat(t5, " ").concat(a5)), r5 = { userList: [], nextSeq: 0, isCompleted: false }, c5 = this._createReactionUserListPack(e5), this.req(c5).then(function(e6) {
          var e6 = e6.data, t6 = e6.userIDList, t6 = void 0 === t6 ? [] : t6, e6 = e6.nextSeq, e6 = void 0 === e6 ? 0 : e6;
          return r5.nextSeq = e6, r5.isCompleted = 0 === e6, u5.get(4).getUserNickAndAvatar(t6);
        }).then(function(e6) {
          return r5.userList = e6, s5.end(), M3.l("".concat(t5, " ok.")), T4(r5);
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse(l5);
      } }, { key: "_createReactionOperationPack", value: function(e5, t5, n5) {
        var o5, i5, a5 = void 0, t5 = { reactionID: t5, userIDList: [this.getMyUserID()] };
        return e5.conversationType === R3.CONV_C2C && (o5 = this.get(6), a5 = 1 === n5 ? G2.ADD_C2C_MSG_REACTION : G2.RM_C2C_MSG_REACTION, t5.from = e5.from, t5.to = e5.to, t5.messageKey = o5.getMessageKey(e5)), e5.conversationType === R3.CONV_GROUP && (o5 = void 0, i5 = e5.to, Nt2(e5.to) && (i5 = jt2(o5 = e5.to)), a5 = 1 === n5 ? G2.ADD_GRP_MSG_REACTION : G2.RM_GRP_MSG_REACTION, t5.groupID = i5, t5.topicID = o5, t5.messageSequence = e5.sequence), { P: a5, data: t5 };
      } }, { key: "_createReactionSummaryPack", value: function(e5) {
        var n5, t5, o5, i5 = e5.messageList, a5 = e5.maxUserCountPerReaction, a5 = void 0 === a5 ? 10 : a5, s5 = e5.messageIDMap, e5 = i5[0], r5 = void 0, c5 = void 0;
        return e5.conversationType === R3.CONV_C2C && (n5 = this.get(6), t5 = i5.map(function(e6) {
          var t6 = n5.getMessageKey(e6);
          return s5.set(t6, e6.ID), t6;
        }), r5 = G2.GET_C2C_MSG_REACTIONS, c5 = { from: e5.from, to: e5.to, messageKeyList: t5, count: a5 }), e5.conversationType === R3.CONV_GROUP && (t5 = void 0, o5 = e5.to, Nt2(e5.to) && (o5 = jt2(t5 = e5.to)), e5 = i5.map(function(e6) {
          return s5.set(e6.sequence, e6.ID), e6.sequence;
        }), r5 = G2.GET_GRP_MSG_REACTIONS, c5 = { groupID: o5, topicID: t5, messageSequenceList: e5, count: a5 }), { P: r5, data: c5 };
      } }, { key: "_createReactionUserListPack", value: function(e5) {
        var t5 = e5.message, n5 = e5.reactionID, o5 = e5.nextSeq, e5 = e5.count, e5 = void 0 === e5 ? 100 : e5, i5 = void 0, n5 = { reactionID: n5, nextSeq: void 0 === o5 ? 0 : o5, count: 100 < e5 ? 100 : e5 };
        return t5.conversationType === R3.CONV_C2C && (o5 = this.get(6), i5 = G2.GET_C2C_MSG_REACTION_USER_LIST, n5.from = t5.from, n5.to = t5.to, n5.messageKey = o5.getMessageKey(t5)), t5.conversationType === R3.CONV_GROUP && (e5 = void 0, o5 = t5.to, Nt2(t5.to) && (o5 = jt2(e5 = t5.to)), i5 = G2.GET_GRP_MSG_REACTION_USER_LIST, n5.groupID = o5, n5.topicID = e5, n5.messageSequence = t5.sequence), { P: i5, data: n5 };
      } }, { key: "_handleReactionSummary", value: function(t5, e5) {
        var c5 = this;
        return this.get(4).getUserNickAndAvatar(e5).then(function(r5) {
          var e6 = [];
          return t5.forEach(function(a5) {
            var s5 = [];
            a5.reactionList.forEach(function(e7) {
              var t6 = e7.reactionID, n5 = e7.count, o5 = e7.userIDList, e7 = e7.reactedByMyself, e7 = void 0 === e7 ? void 0 : e7, i5 = [], o5 = (o5.forEach(function(t7) {
                r5.forEach(function(e8) {
                  t7 === e8.userID && i5.push(e8);
                });
              }), { reactionID: t6, totalUserCount: n5, partialUserList: i5, reactedByMyself: c5._computeReactedByMyself({ reactedByMyself: e7, messageID: a5.messageID, reactionID: t6 }) });
              s5.push(o5), N3(e7) && !c5._reactedByMyselfMap.has(a5.messageID) && (n5 = "".concat(a5.messageID, "-").concat(t6), c5._reactionInfoMap.set(n5, o5));
            }), e6.push({ messageID: a5.messageID, reactionList: s5 });
          }), e6;
        });
      } }, { key: "_addReactedByMyselfMap", value: function(e5, t5) {
        this._reactedByMyselfMap.has(e5) || this._reactedByMyselfMap.set(e5, []);
        e5 = this._reactedByMyselfMap.get(e5);
        -1 === e5.indexOf(t5) && e5.push(t5);
      } }, { key: "_removeReactedByMyselfMap", value: function(e5, t5) {
        this._reactedByMyselfMap.has(e5) && -1 < (t5 = (e5 = this._reactedByMyselfMap.get(e5)).indexOf(t5)) && e5.splice(t5, 1);
      } }, { key: "_computeReactedByMyself", value: function(e5) {
        var t5 = e5.reactedByMyself, n5 = e5.messageID, e5 = e5.reactionID;
        return N3(t5) ? !!this._reactedByMyselfMap.has(n5) && this._reactedByMyselfMap.get(n5).includes(e5) : 1 === t5;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._reactedByMyselfMap.clear(), this._reactionInfoMap.clear();
      } }])), Hi = (t4(zi, c4), e4(zi, [{ key: "sendMessage", value: function(e5) {
        var o5 = this, i5 = this._createMsg(e5);
        if (null === i5)
          return E4({ code: k2.MSG_SEND_FAIL });
        this._addSendMessageTotalCount(i5);
        var a5 = Date.now();
        return this.get(11).setMessageRandom(i5), this._sendComboMessage(i5, e5).then(function(e6) {
          var e6 = e6.data, t5 = e6.time, n5 = e6.sequence, e6 = e6.readReceiptCode, e6 = (A3(e6) && 0 !== e6 && (new P3("sendMessageWithReceipt").setMessage("from:".concat(i5.from, " to:").concat(i5.to, " sequence:").concat(n5, " readReceiptCode:").concat(e6)).end(), M3.w("".concat(o5._n, ".sendMessage readReceiptCode:").concat(e6, " message:").concat(o5.getErrMsg(e6)))), o5._addSendMessageSuccessCount(i5, a5), o5.get(11)), t5 = (i5.status = On, i5.time = t5, i5.conversationType === R3.CONV_GROUP && (i5.sequence = n5), e6.appendToMessageList(i5), i5);
          return true === i5._isExcludedFromLastMessage && (t5 = ""), e6.onMessageSent({ conversationOptionsList: [{ conversationID: i5.conversationID, unreadCount: 0, type: i5.conversationType, subType: i5.conversationSubType, lastMessage: t5 }] }), T4({ message: i5 });
        }).catch(function(e6) {
          return o5._onSendMessageFailed(i5, e6);
        });
      } }, { key: "_sendComboMessage", value: function(e5, t5) {
        var n5 = this._m.get(20), o5 = "";
        return e5.conversationType === R3.CONV_C2C && (o5 = "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SEND_C2C_MSG)), e5.conversationType === R3.CONV_GROUP && (o5 = "".concat(a4.NAME.GRP, ".").concat(G2.SEND_GRP_MSG)), n5.sendComboMessage({ servcmd: o5, data: t5 });
      } }, { key: "_createMsg", value: function(e5) {
        var t5 = "".concat(this._n, "._createMsg"), n5 = null;
        try {
          var o5, i5 = this.getMyUserID(), a5 = {};
          a5.senderTinyID = this.getMyTinyID(), a5.currentUser = i5, a5.from = e5.From_Account || i5, e5.GroupId ? (a5.conversationID = "".concat(R3.CONV_GROUP).concat(e5.GroupId), a5.conversationType = R3.CONV_GROUP, a5.to = e5.GroupId) : e5.To_Account && (a5.conversationID = "".concat(R3.CONV_C2C).concat(e5.To_Account), a5.conversationType = R3.CONV_C2C, a5.to = e5.To_Account), a5.time = e5.MsgTimeStamp || 0, a5.random = e5.Random || e5.MsgRandom || 0, a5.priority = e5.MsgPriority, C4(e5.CloudCustomData) && 0 < e5.CloudCustomData.length && (a5.cloudCustomData = e5.CloudCustomData), O3(e5.SendMsgControl) && (a5.messageControlInfo = {}, e5.SendMsgControl.includes("NoUnread") && (a5.messageControlInfo.excludedFromUnreadCount = 1), e5.SendMsgControl.includes("NoLastMsg")) && (a5.messageControlInfo.excludedFromLastMessage = 1), a5.conversationType === R3.CONV_GROUP && O3(e5.To_Account) && 0 < e5.To_Account.length && (o5 = e5.To_Account, 50 < e5.To_Account.length && (o5 = e5.To_Account.slice(0, 50), M3.w("".concat(t5, " To_Account must be less than or equal to 50."))), a5.receiverList = d3(o5), e5.To_Account = d3(o5)), 1 !== e5.IsNeedReadReceipt && 1 !== e5.NeedReadReceipt || (a5.needReadReceipt = true), 1 === e5.SupportMessageExtension && (a5.isSupportExtension = true), (n5 = new Do(a5)).status = An, e5.MsgClientTime = n5.clientTime, n5.conversationType === R3.CONV_C2C && (e5.MsgSeq = n5.sequence);
          for (var s5, r5 = e5.MsgBody.length, c5 = 0; c5 < r5; c5++)
            "TIMTextElem" === (s5 = e5.MsgBody[c5]).MsgType ? n5.setTextElement(s5.MsgContent.Text) : "TIMCustomElem" === s5.MsgType ? n5.setCustomElement({ data: s5.MsgContent.Data || "", description: s5.MsgContent.Desc || "", extension: s5.MsgContent.Ext || "" }) : "TIMFaceElem" === s5.MsgType && n5.setFaceElement({ index: s5.MsgContent.Index, data: s5.MsgContent.Data });
          var u5 = n5.getElements();
          n5.payload = u5[0].content, n5.type = u5[0].type;
        } catch (e6) {
          n5 = null, M3.e("".concat(t5, " failed. error:"), e6);
        }
        return n5;
      } }, { key: "_onSendMessageFailed", value: function(e5, t5) {
        e5.status = Nn, this.get(11).deleteMessageRandom(e5), this._addSendMessageFailCountOnUser(e5, t5);
        var n5 = new P3("sendMessage"), o5 = "head.seq:".concat(t5.data.headSeq, "  type:").concat(e5.type, " from:").concat(e5.from, " to:").concat(e5.to);
        return n5.setMessage(o5).setError(t5).end(), M3.e("".concat(this._n, "._onSendMessageFailed ").concat(o5, " error:"), t5), E4(new L3({ code: t5 && t5.code ? t5.code : k2.MSG_SEND_FAIL, message: t5 && t5.message ? t5.message : void 0, data: { message: e5 } }));
      } }, { key: "_getSendMessageSpecifiedKey", value: function(e5) {
        if (e5.conversationType === R3.CONV_C2C)
          return Kn;
        if (e5.conversationType === R3.CONV_GROUP) {
          var e5 = this.get(7).getLocalGroupProfile(e5.to);
          if (e5)
            return e5 = e5.type, At2(e5) ? Yn : Wn;
        }
      } }, { key: "_addSendMessageTotalCount", value: function(e5) {
        e5 = this._getSendMessageSpecifiedKey(e5);
        e5 && this.get(26).addTotalCount(e5);
      } }, { key: "_addSendMessageSuccessCount", value: function(e5, t5) {
        var n5, e5 = this._getSendMessageSpecifiedKey(e5);
        e5 && ((n5 = this.get(26)).addSuccessCount(e5), n5.addCost(e5, tn(t5, false)));
      } }, { key: "_addSendMessageFailCountOnUser", value: function(e5, t5) {
        var t5 = t5.code, t5 = void 0 === t5 ? -1 : t5, n5 = this.get(26), e5 = this._getSendMessageSpecifiedKey(e5);
        qi(t5) && e5 && n5.addFailedCountOfUserSide(e5);
      } }])), Ki = (t4(Ji, c4), e4(Ji, [{ key: "registerPlugin", value: function(t5) {
        var n5 = this, o5 = "0";
        Object.keys(t5).forEach(function(e5) {
          n5.plugins[e5] = t5[e5], "tim-upload-plugin" === e5 && "function" == typeof t5[e5].getVersion && (o5 = t5[e5].getVersion());
        }), new P3("registerPlugin").setMessage("".concat(Object.keys(t5))).setMoreMessage("version:".concat(o5)).end();
      } }, { key: "getPlugin", value: function(e5) {
        return this.plugins[e5];
      } }, { key: "reset", value: function() {
      } }])), Wi = (t4(ji, c4), e4(ji, [{ key: "_init", value: function() {
        this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "_startSync", value: function(e5) {
        var i5 = this, t5 = e5.cookie, n5 = e5.syncFlag, o5 = e5.isOnlineSync, a5 = "".concat(this._n, "._startSync"), s5 = (M3.l("".concat(a5, " options:"), e5), new P3("syncUnread"));
        s5.setMessage(JSON.stringify(e5)), this.req({ P: G2.SYNC_UNREAD_MSG, data: { cookie: t5, syncFlag: n5, isOnlineSync: o5 } }).then(function(e6) {
          var t6 = e6.data, n6 = t6.cookie, t6 = t6.syncFlag, o6 = "$cookie:".concat(n6, " syncFlag:").concat(t6);
          M3.l("".concat(a5, " ok. ").concat(o6)), i5._cookie = n6, s5.setMoreMessage(o6).end(), S3(n6) || (0 === t6 || 1 === t6 ? (i5._dispatch(y2(y2({}, e6.data), {}, { isSyncingEnded: false })), i5._startSync({ cookie: n6, syncFlag: t6, isOnlineSync: 0 })) : 2 === t6 && i5._dispatch(y2(y2({}, e6.data), {}, { isSyncingEnded: true })));
        }).catch(function(e6) {
          s5.setError(e6).end(), M3.e("".concat(a5, " failed. error:"), e6);
        });
      } }, { key: "_dispatch", value: function(e5) {
        e5.eventArray && this.get(20).onMessage({ head: {}, body: { eventArray: e5.eventArray, isInstantMessage: this._onlineSyncFlag, isSyncingEnded: e5.isSyncingEnded } }), this.get(6).onNewMessage({ dataList: e5.messageList, isInstantMessage: !!e5.isSyncingEnded && this._onlineSyncFlag, C2CRemainingUnreadList: e5.C2CRemainingUnreadList, C2CPairUnreadList: e5.C2CPairUnreadList, isSyncingEnded: e5.isSyncingEnded });
      } }, { key: "syncOnNeed", value: function() {
        M3.l("".concat(this._n, ".syncOnNeed cookie:").concat(this._cookie)), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 1 });
      } }, { key: "syncOnReconnected", value: function() {
        M3.l("".concat(this._n, ".syncOnReconnected cookie:").concat(this._cookie)), this._onlineSyncFlag = true, this._startSync({ cookie: this._cookie, syncFlag: 0, isOnlineSync: 0 });
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._onlineSyncFlag = false, this._cookie = "";
      } }])), Yi = { req: { toAccount: "To_Account", fromAccount: "From_Account", to: "To_Account", from: "From_Account", groupID: "GroupId", groupAtUserID: "GroupAt_Account", extension: "Ext", data: "Data", description: "Desc", elements: "MsgBody", sizeType: "Type", downloadFlag: "Download_Flag", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", videoUrl: "", imageUrl: "URL", fileUrl: "Url", uuid: "UUID", priority: "MsgPriority", receiverUserID: "To_Account", receiverGroupID: "GroupId", messageSender: "SenderId", messageReceiver: "ReceiverId", nick: "From_AccountNick", avatar: "From_AccountHeadurl", messageNumber: "MsgNum", pbDownloadKey: "PbMsgKey", downloadKey: "JsonMsgKey", applicationType: "PendencyType", userIDList: "To_Account", groupNameList: "GroupName", userID: "To_Account", groupAttributeList: "GroupAttr", mainSequence: "AttrMainSeq", avChatRoomKey: "BytesKey", attributeControl: "AttrControl", sequence: "seq", messageControlInfo: "SendMsgControl", updateSequence: "UpdateSeq", clientTime: "MsgClientTime", sequenceList: "MsgSeqList", topicID: "TopicId", customData: "CustomString", isSupportTopic: "SupportTopic", isWebUniapp: "is_web_uniapp", isSupportExtension: "SupportMessageExtension", messageSequence: "MsgSeq", messageKey: "MsgKey", startSequence: "startSeq", simplifiedMessage: "DownsizeFlag", isRelayMessage: "IsRelayMsg", reactionID: "Reaction", messageSequenceList: "MsgSeqList", messageKeyList: "MsgKeyList", cmConfigID: "CustomModerationConfigID" }, res: { MsgPriority: "priority", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", Download_Flag: "downloadFlag", GroupId: "groupID", Member_Account: "userID", MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", MsgSeq: "sequence", MsgRandom: "random", MsgTime: "time", MsgTimeStamp: "time", MsgContent: "content", MsgBody: "elements", From_AccountNick: "nick", From_AccountHeadurl: "avatar", GroupWithdrawInfoArray: "revokedInfos", GroupReadInfoArray: "groupMessageReadNotice", LastReadMsgSeq: "lastMessageSeq", WithdrawC2cMsgNotify: "c2cMessageRevokedNotify", C2cWithdrawInfoArray: "revokedInfos", C2cReadedReceipt: "c2cMessageReadReceipt", ReadC2cMsgNotify: "c2cMessageReadNotice", LastReadTime: "peerReadTime", MsgRand: "random", MsgType: "type", MsgShow: "messageShow", NextMsgSeq: "nextMessageSeq", FaceUrl: "avatar", ProfileDataMod: "profileModify", Profile_Account: "userID", ValueBytes: "value", ValueNum: "value", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation", Operator_Account: "operatorID", OpType: "operationType", ReportType: "operationType", UserId: "userID", User_Account: "userID", List_Account: "userIDList", MsgOperatorMemberExtraInfo: "operatorInfo", MsgMemberExtraInfo: "memberInfoList", ImageUrl: "avatar", NickName: "nick", MsgGroupNewInfo: "newGroupProfile", MsgAppDefinedData: "groupCustomField", Owner_Account: "ownerID", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupNotification: "notification", GroupApplyJoinOption: "joinOption", MsgKey: "messageKey", GroupInfo: "groupProfile", ShutupTime: "muteTime", Desc: "description", Ext: "extension", GroupAt_Account: "groupAtUserID", MsgNum: "messageNumber", PbMsgKey: "pbDownloadKey", JsonMsgKey: "downloadKey", MsgModifiedFlag: "isModified", PendencyItem: "applicationItem", PendencyType: "applicationType", AddTime: "time", AddSource: "source", AddWording: "wording", ProfileImImage: "avatar", PendencyAdd: "friendApplicationAdded", FrienPencydDel_Account: "friendApplicationDeletedUserIDList", Peer_Account: "userID", GroupAttr: "groupAttributeList", GroupAttrAry: "groupAttributeList", AttrMainSeq: "mainSequence", seq: "sequence", GroupAttrOption: "groupAttributeOption", BytesChangedKeys: "changedKeyList", GroupAttrInfo: "groupAttributeList", GroupAttrSeq: "mainSequence", PushChangedAttrValFlag: "isWithChangedAttributeInfo", SubKeySeq: "sequence", Val: "value", MsgGroupFromCardName: "senderNameCard", MsgGroupFromNickName: "senderNick", C2cNick: "peerNick", C2cImage: "peerAvatar", SendMsgControl: "messageControlInfo", NoLastMsg: "excludedFromLastMessage", NoUnread: "excludedFromUnreadCount", UpdateSeq: "updateSequence", MuteNotifications: "muteFlag", MsgClientTime: "clientTime", TinyId: "tinyID", GroupMsgReceiptList: "readReceiptList", ReadNum: "readCount", UnreadNum: "unreadCount", TopicId: "topicID", MillionGroupFlag: "communityType", SupportTopic: "isSupportTopic", MsgTopicNewInfo: "newTopicInfo", ShutupAll: "muteAllMembers", CustomString: "customData", TopicFaceUrl: "avatar", TopicIntroduction: "introduction", TopicNotification: "notification", TopicIdArray: "topicIDList", MsgVersion: "messageVersion", C2cMsgModNotifys: "c2cMessageModified", GroupMsgModNotifys: "groupMessageModified", ApplyJoinOption: "joinOption", MsgFlag: "messageRemindType", AtInfoList: "groupAtInfoList", AtFlagList: "groupAtType", AtMsgSeq: "sequence", BanDuration: "duration", BanDescription: "reason", NotVisible: "invisible", BytesTag: "tag", BytesValue: "value", RptBytesValue: "value", LatestSeq: "globalSequence", ClearSeq: "clearSequence", SupportMessageExtension: "isSupportExtension", ExtensionList: "extensions", GroupCounter: "counterList", Revoker_Account: "revoker", MsgExtensionNotify: "messageExtensionNotify", ExtensionC2cMsgInfo: "messageInfo", ExtensionGroupMsgInfo: "messageInfo", MsgOptType: "operateType", SetKVInfo: "operateResultList", DeleteKVInfo: "operateResultList", ClearKVInfo: "operateResultList", MsgKeyValue: "extensions", ClearMsgSeq: "clearSequence", MsgLastSeq: "globalSequence", InviteJoinOption: "inviteOption", MemberList_Account: "inviteeList", MsgMemberExtraInfoList: "inviteeInfoList", E: "event", GInf: "groupProfile", MCT: "clientTime", MR: "random", MP: "priority", MTS: "time", GId: "groupID", MS: "sequence", CCD: "cloudCustomData", F_Account: "from", F_Hd: "avatar", F_NN: "nick", GN: "groupName", GT: "groupType", IsSys: "isSystemMessage", OpInf: "operatorInfo", Img: "avatar", NN: "nick", OnlineInf: "onlineMemberInfo", ET: "expireTime", Num: "onlineMemberNum", Opt: "operationType", O_Account: "operatorID", RT: "operationType", UDF: "userDefinedField", L_Account: "userIDList", IsPlaceMsg: "isPlaceMessage", MsgCheckResult: "checkResult", Results: "resultList", Reaction: "reactionID", Reaction_Account: "userIDList", MsgReactionNotifyList: "messageReactionNotifyList", MsgReactionNotify: "messageReactionNotify", MsgReactionSummary: "reactionList", C2CMsgInfo: "C2CMessageInfo", GroupMsgInfo: "groupMessageInfo", int32_err_code: "errorCode", str_err_msg: "errorMsg", MsgDropReason: "messageDropReason", ReactedByMe: "reactedByMyself", Level: "messageRemindType", PeerReadTime: "timestamp", NoUnreadSeqList: "excludedUnreadSequenceList", NewMsg: "topicLatestMessage" }, ignoreKeyWord: ["C2C", "ID", "USP"] };
      function ji(e5) {
        return p4(this, ji), (e5 = i4(this, ji, [e5]))._n = "SyncUnreadMsgModule", e5._cookie = "", e5._onlineSyncFlag = false, e5.getIEmitInst().on(U3.A2KEY_AND_TINYID_UPDATED, e5._init, e5), e5;
      }
      function Ji(e5) {
        return p4(this, Ji), (e5 = i4(this, Ji, [e5]))._n = "PluginModule", e5.plugins = {}, e5;
      }
      function zi(e5) {
        return p4(this, zi), (e5 = i4(this, zi, [e5]))._n = "ComboMsgModule", e5;
      }
      function Xi(e5) {
        return p4(this, Xi), (e5 = i4(this, Xi, [e5]))._n = "MsgReactionModule", e5._reactedByMyselfMap = /* @__PURE__ */ new Map(), e5._reactionInfoMap = /* @__PURE__ */ new Map(), e5;
      }
      function Zi(e5) {
        return p4(this, Zi), (e5 = i4(this, Zi, [e5]))._n = "MsgExtModule", e5.msgExtMap = /* @__PURE__ */ new Map(), e5.globalSeqMap = /* @__PURE__ */ new Map(), e5.getMsgExtsMap = /* @__PURE__ */ new Map(), e5;
      }
      function Qi(e5) {
        return p4(this, Qi), (e5 = i4(this, Qi, [e5]))._n = "MessageModule", e5._messageOptionsMap = /* @__PURE__ */ new Map(), e5._mergerMessageHandler = new Ui(e5), e5;
      }
      function $i(e5, t5) {
        if ("string" == typeof e5 || Array.isArray(e5))
          return t5 = Object.assign({ pascalCase: false }, t5), 0 === (e5 = Array.isArray(e5) ? e5.map(function(e6) {
            return e6.trim();
          }).filter(function(e6) {
            return e6.length;
          }).join("-") : e5.trim()).length ? "" : 1 === e5.length ? t5.pascalCase ? e5.toUpperCase() : e5.toLowerCase() : (e5 = e5 = (e5 = e5 !== e5.toLowerCase() ? ea(e5) : e5).replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, function(e6, t6) {
            return t6.toUpperCase();
          }).replace(/\d+(\w|$)/g, function(e6) {
            return e6.toUpperCase();
          }), t5.pascalCase ? e5.charAt(0).toUpperCase() + e5.slice(1) : e5);
        throw new TypeError("Expected the input to be `string | string[]`");
      }
      var ea = function(e5) {
        for (var t5 = false, n5 = false, o5 = false, i5 = 0; i5 < e5.length; i5++) {
          var a5 = e5[i5];
          t5 && /[a-zA-Z]/.test(a5) && a5.toUpperCase() === a5 ? (e5 = e5.slice(0, i5) + "-" + e5.slice(i5), o5 = n5, n5 = !(t5 = false), i5++) : n5 && o5 && /[a-zA-Z]/.test(a5) && a5.toLowerCase() === a5 ? (e5 = e5.slice(0, i5 - 1) + "-" + e5.slice(i5 - 1), o5 = n5, t5 = !(n5 = false)) : (t5 = a5.toLowerCase() === a5 && a5.toUpperCase() !== a5, o5 = n5, n5 = a5.toUpperCase() === a5 && a5.toLowerCase() !== a5);
        }
        return e5;
      };
      function ta(e5, t5) {
        var r5 = 0;
        return function n5(e6, i5) {
          var t6, o5, a5, s5;
          return 100 < ++r5 ? (r5--, e6) : O3(e6) ? (t6 = e6.map(function(e7) {
            return st2(e7) ? n5(e7, i5) : e7;
          }), r5--, t6) : st2(e6) ? (o5 = e6, a5 = function(e7, t7) {
            if (!lt2(t7))
              return false;
            if (t7 !== $i(t7))
              for (var n6 = 0; n6 < Yi.ignoreKeyWord.length && !t7.includes(Yi.ignoreKeyWord[n6]); n6++)
                ;
            var o6;
            return N3(i5[t7]) ? (o6 = t7)[0].toUpperCase() + $i(o6).slice(1) : i5[t7];
          }, s5 = /* @__PURE__ */ Object.create(null), Object.keys(o5).forEach(function(e7) {
            var t7 = a5(o5[e7], e7);
            t7 && (s5[t7] = o5[e7]);
          }), t6 = bt2(t6 = s5, function(e7, t7) {
            return O3(e7) || st2(e7) ? n5(e7, i5) : e7;
          }), r5--, t6) : void 0;
        }(e5, t5);
      }
      for (var na = String.fromCharCode, oa = function(e5) {
        var t5 = 0 | e5.charCodeAt(0);
        if (55296 <= t5)
          if (t5 < 56320) {
            e5 = 0 | e5.charCodeAt(1);
            if (56320 <= e5 && e5 <= 57343) {
              if (65535 < (t5 = (t5 << 10) + e5 - 56613888 | 0))
                return na(240 | t5 >>> 18, 128 | t5 >>> 12 & 63, 128 | t5 >>> 6 & 63, 128 | 63 & t5);
            } else
              t5 = 65533;
          } else
            t5 <= 57343 && (t5 = 65533);
        return t5 <= 2047 ? na(192 | t5 >>> 6, 128 | 63 & t5) : na(224 | t5 >>> 12, 128 | t5 >>> 6 & 63, 128 | 63 & t5);
      }, ia = function(e5) {
        for (var t5 = void 0 === e5 ? "" : ("" + e5).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g, oa), n5 = 0 | t5.length, o5 = new Uint8Array(n5), i5 = 0; i5 < n5; i5 = i5 + 1 | 0)
          o5[i5] = 0 | t5.charCodeAt(i5);
        return o5;
      }, aa = e4(function e5(t5) {
        p4(this, e5);
        var n5, i5, o5 = (this._handler = t5).getURL();
        this._socket = null, this._workerSocket = null, this._id = ht2(), this._handler.getIsWorkerEnabled() ? (n5 = URL.createObjectURL(new Blob([';let _socket = null;onmessage = function(event) {  if (event.data.cmd === "start") {    const url = event.data.url;    _socket = new WebSocket(url);    _socket.binaryType = "arraybuffer";    _socket.onopen = function() {      postMessage({ callback: "onOpen", extensions: _socket.extensions });    };    _socket.onclose = function(e) {      postMessage({ callback: "onOpen", e: { code: e.code, reason: e.reason } });    };    _socket.onmessage = function(e) {      postMessage({ callback: "onMessage", data: e.data });    };    _socket.onerror = function(e) {      postMessage({ callback: "onError", e: { isTrusted: "true" } });    };  } else if (event.data.cmd === "sendMessage") {    if (_socket !== null) {      _socket.send(event.data.data);    }  } else if (event.data.cmd === "stop") {    if (_socket !== null) {      _socket.close(event.data.code);      _socket = null;    }  }};'], { type: "application/javascript; charset=utf-8" })), this._workerSocket = new Worker(n5), (i5 = this)._workerSocket.onmessage = function(e6) {
          var t6 = e6.data, n6 = t6.callback, o6 = t6.e, t6 = t6.extensions;
          "onOpen" === n6 ? i5._onOpen(t6) : "onClose" === n6 ? i5._onClose(o6) : "onError" === n6 ? i5._onError(o6) : "onMessage" === n6 && i5._onMessage(e6.data);
        }, this._workerSocket.postMessage({ cmd: "start", id: this._id, url: o5 })) : v3 ? ge2 ? (I3.connectSocket({ url: o5, header: { "content-type": "application/json" } }), I3.onSocketClose(this._onClose.bind(this)), I3.onSocketOpen(this._onOpen.bind(this)), I3.onSocketMessage(this._onMessage.bind(this)), I3.onSocketError(this._onError.bind(this))) : (this._socket = I3.connectSocket({ url: o5, header: { "content-type": "application/json" }, complete: function() {
        } }), this._socket.onClose(this._onClose.bind(this)), this._socket.onOpen(this._onOpen.bind(this)), this._socket.onMessage(this._onMessage.bind(this)), this._socket.onError(this._onError.bind(this))) : (this._socket = new WebSocket(o5), this._socket.binaryType = "arraybuffer", this._socket.onopen = this._onOpen.bind(this, this._socket.extensions), this._socket.onmessage = this._onMessage.bind(this), this._socket.onclose = this._onClose.bind(this), this._socket.onerror = this._onError.bind(this)), this._canIUseBinaryFrame = t5.canIUseBinaryFrame();
      }, [{ key: "getID", value: function() {
        return this._id;
      } }, { key: "_onOpen", value: function(e5) {
        this._handler.onOpen({ id: this._id, res: JSON.stringify(e5) });
      } }, { key: "_onClose", value: function(e5) {
        this._handler.onClose({ id: this._id, e: e5 });
      } }, { key: "_onMessage", value: function(e5) {
        e5 = this._canIUseBinaryFrame ? this._isAppCompressedData(e5.data) ? this._handler.inflate(e5.data) : function(e6) {
          for (var t5 = new Uint8Array(e6), n5 = "", o5 = 0, i5 = t5.length; o5 < i5; ) {
            var a5 = t5[o5], s5 = 0, r5 = 0;
            if (a5 <= 127 ? (s5 = 0, r5 = 255 & a5) : a5 <= 223 ? (s5 = 1, r5 = 31 & a5) : a5 <= 239 ? (s5 = 2, r5 = 15 & a5) : a5 <= 244 && (s5 = 3, r5 = 7 & a5), 0 < i5 - o5 - s5)
              for (var c5 = 0; c5 < s5; )
                r5 = r5 << 6 | 63 & (a5 = t5[o5 + c5 + 1]), c5 += 1;
            else
              r5 = 65533, s5 = i5 - o5;
            n5 += String.fromCodePoint(r5), o5 += s5 + 1;
          }
          return n5;
        }(e5.data) : e5.data;
        this._handler.onMessage({ data: e5 });
      } }, { key: "_isAppCompressedData", value: function(e5) {
        e5 = new Uint8Array(e5);
        return 67 === e5[0] && 79 === e5[1] && 77 === e5[2] && 80 === e5[3];
      } }, { key: "_onError", value: function(e5) {
        this._handler.onError({ id: this._id, e: e5 });
      } }, { key: "setIsWorkerEnabled", value: function(e5) {
        this._isWorkerEnabled = true;
      } }, { key: "close", value: function(e5) {
        this._workerSocket && (this._workerSocket.postMessage({ cmd: "stop", code: e5 }), this._workerSocket.terminate(), this._workerSocket = null), ge2 ? (I3.offSocketClose(), I3.offSocketMessage(), I3.offSocketOpen(), I3.offSocketError(), I3.closeSocket()) : this._socket && (v3 ? (this._socket.onClose(function() {
        }), this._socket.onOpen(function() {
        }), this._socket.onMessage(function() {
        }), this._socket.onError(function() {
        })) : (this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null), he2 ? this._socket.close({ code: e5 }) : this._socket.close(e5), this._socket = null);
      } }, { key: "send", value: function(e5) {
        this._workerSocket ? this._workerSocket.postMessage({ cmd: "sendMessage", data: this._canIUseBinaryFrame ? ia(e5.data).buffer : e5.data }) : ge2 ? I3.sendSocketMessage({ data: e5.data, fail: function() {
          e5.fail && e5.requestID && e5.fail(e5.requestID);
        } }) : this._socket && (v3 ? this._socket.send({ data: this._canIUseBinaryFrame ? ia(e5.data).buffer : e5.data, fail: function() {
          e5.fail && e5.requestID && e5.fail(e5.requestID);
        } }) : this._socket.send(this._canIUseBinaryFrame ? ia(e5.data) : e5.data));
      } }]), sa = ["keyMap"], ra = ["keyMap"], ca = "connected", ua = "connecting", la = "disconnected", da = e4(function e5(t5) {
        p4(this, e5), this._chM = t5, this._n = "SocketHandler", this._promiseMap = /* @__PURE__ */ new Map(), this._readyState = la, this._simpleRequestMap = /* @__PURE__ */ new Map(), this.MAX_SIZE = 100, this._startSequence = ht2(), this._startTs = 0, this._reConnectFlag = false, this._nextPingTs = 0, this._reConnectCount = 0, this.MAX_RECONNECT_COUNT = 3, this._socketID = -1, this._random = 0, this._socket = null, this._url = "", this._onOpenTs = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true, this._currentSite = ae2, this._setWebsocketHost(), this._initConnection();
      }, [{ key: "_setWebsocketHost", value: function() {
        var e5 = this._chM.get(12);
        this._currentSite = ae2, this._chM.isOversea() && (this._currentSite = "OVERSEA"), e5.isSingaporeSite() ? this._currentSite = "SINGAPORE" : e5.isKoreaSite() ? this._currentSite = "KOREA" : e5.isGermanySite() ? this._currentSite = "GERMANY" : e5.isIndiaSite() ? this._currentSite = "IND" : e5.isJapanSite() ? this._currentSite = "JPN" : e5.isUSASite() ? this._currentSite = "USA" : e5.isIndonesiaSite() && (this._currentSite = "INDONESIA"), a4.HOST.setCurrent(this._currentSite);
      } }, { key: "_initConnection", value: function() {
        var e5 = this._chM.get(12).getSDKAppID() + "", t5 = this._chM.get(12).isIndependentDomainDisabled(), t5 = (N3(a4.HOST.CURRENT.BACKUP) ? this._url = a4.HOST.CURRENT.DEFAULT : "" === this._url ? this._url = t5 ? a4.HOST.CURRENT.DEFAULT : a4.HOST.CURRENT.DEFAULT0.replace("*", e5) : -1 < this._url.indexOf(e5) ? this._url = a4.HOST.CURRENT.DEFAULT : this._url === a4.HOST.CURRENT.DEFAULT ? this._url = a4.HOST.CURRENT.IPV6 : this._url === a4.HOST.CURRENT.IPV6 ? this._url = Ie2 ? this._genRandomDomain() : a4.HOST.CURRENT.BACKUP : this._isWebBackupUrl(this._url) || this._url === a4.HOST.CURRENT.BACKUP ? this._url = this._canIUseAnyCast() ? a4.HOST.CURRENT.ANYCAST : a4.HOST.CURRENT.DEFAULT : this._url === a4.HOST.CURRENT.ANYCAST && (a4.HOST.CURRENT.ANYCAST = "", this._url = a4.HOST.CURRENT.DEFAULT), this._chM.get(12)), e5 = t5.getProxyServer();
        S3(e5) || (this._url = e5), t5.isTestEnv() && (this._url = ee2.TEST[this._currentSite].DEFAULT), this._connect(), this._nextPingTs = 0;
      } }, { key: "_genRandomDomain", value: function() {
        var e5 = Math.floor(10001 * Math.random()) + 1e4;
        return a4.HOST.CURRENT.BACKUP_WEB.replace("*", e5);
      } }, { key: "_isWebBackupUrl", value: function(e5) {
        return e5.includes("my-cpaas.com");
      } }, { key: "_canIUseAnyCast", value: function() {
        return Ie2 && a4.HOST.CURRENT.ANYCAST;
      } }, { key: "onCheckTimer", value: function(e5) {
        e5 % 1 == 0 && (this._checkPromiseMap(), this._checkNativeAppWS());
      } }, { key: "_checkPromiseMap", value: function() {
        var a5 = this;
        0 !== this._promiseMap.size && this._promiseMap.forEach(function(e5, t5) {
          var n5 = e5.reject, o5 = e5.timestamp, e5 = e5.headSeq, i5 = 15e3;
          -1 !== t5.indexOf(G2.LOGIN) ? i5 = 9e4 : -1 !== t5.indexOf(G2.PING) && (i5 = 3e3), Date.now() - o5 >= i5 && (M3.l("".concat(a5._n, "._checkPromiseMap request timeout, delete requestID:").concat(t5)), a5._promiseMap.delete(t5), n5(new L3({ code: k2.NETWORK_TIMEOUT, data: { headSeq: e5 } })), a5._chM.onRequestTimeout());
        });
      } }, { key: "_checkNativeAppWS", value: function() {
        fe2 && !this.isConnected() && this._reConnect();
      } }, { key: "onOpen", value: function(e5) {
        var t5, n5;
        this._readyState !== la && (this._onOpenTs = Date.now(), n5 = e5.id, e5 = e5.res, this._socketID = n5, t5 = tn(this._startTs, false), n5 = "socketID:".concat(n5, " res:").concat(e5), M3.l("".concat(this._n, "._onOpen cost:").concat(t5, " ms. ").concat(n5)), new P3("wsOnOpen").setMessage(t5).setCostTime(t5).setMoreMessage(n5).end(), this._readyState = ca, this._reConnectCount = 0, this._resend(), true === this._reConnectFlag && (this._chM.onReconnected(), this._reConnectFlag = false), this._chM.onOpen());
      } }, { key: "onClose", value: function(e5) {
        var t5 = new P3("wsOnClose"), n5 = e5.id, e5 = e5.e, o5 = "sourceSocketID:".concat(n5, " currentSocketID:").concat(this._socketID, " code:").concat(e5.code, " reason:").concat(e5.reason), i5 = 0;
        0 !== this._onOpenTs && (i5 = Date.now() - this._onOpenTs), t5.setMessage(i5).setCostTime(i5).setMoreMessage(o5).setCode(e5.code).end(true), M3.l("".concat(this._n, "._onClose ").concat(o5, " onlineTime:").concat(i5)), n5 === this._socketID && (this._readyState = la, i5 < 1e3 ? this._chM.onReconnectFailed() : this._chM.onClose());
      } }, { key: "onError", value: function(e5) {
        var t5 = e5.id, e5 = e5.e, n5 = "sourceSocketID:".concat(t5, " currentSocketID:").concat(this._socketID);
        new P3("wsOnError").setMessage(e5.errMsg || JSON.stringify(e5, ["message", "code"])).setMoreMessage(n5).setLevel("error").end(true), M3.w("".concat(this._n, "._onError"), e5, n5), t5 === this._socketID && (this._readyState = la, this._chM.onError());
      } }, { key: "onMessage", value: function(t5) {
        var e5, n5, o5, i5, a5, s5;
        try {
          e5 = JSON.parse(t5.data);
        } catch (e6) {
          new P3("jsonParseError").setMessage(t5.data).end();
        }
        e5 && e5.head && (t5 = this._getRequestIDFromHead(e5.head), n5 = e5.body, this._chM.get(30).isTRTCCommand(t5) || (s5 = Ht2(e5.head), n5 = function t6(e6, n6) {
          var o6, i6, a6;
          return O3(e6) ? e6.map(function(e7) {
            return st2(e7) ? t6(e7, n6) : e7;
          }) : st2(e6) ? (o6 = e6, i6 = function(e7, t7) {
            return N3(n6[t7]) ? $i(t7) : n6[t7];
          }, a6 = {}, Object.keys(o6).forEach(function(e7) {
            a6[i6(o6[e7], e7)] = o6[e7];
          }), bt2(a6, function(e7) {
            return O3(e7) || st2(e7) ? t6(e7, n6) : e7;
          })) : void 0;
        }(e5.body, this._getResKeyMap(s5))), M3.d("".concat(this._n, ".onMessage ret:").concat(JSON.stringify(n5), " requestID:").concat(t5, " has:").concat(this._promiseMap.has(t5))), this._setNextPingTs(), this._promiseMap.has(t5) ? (o5 = (s5 = this._promiseMap.get(t5)).resolve, i5 = s5.reject, a5 = s5.timestamp, s5 = s5.headSeq, this._promiseMap.delete(t5), this._calcRTT(a5), n5.errorCode && 0 !== n5.errorCode ? (this._chM.onErrorCodeNotZero(n5), i5(new L3({ code: n5.errorCode, message: n5.errorInfo || "", data: t5.includes(G2.MODIFY_C2C_MSG) || t5.includes(G2.MODIFY_GRP_MSG) ? { elements: n5.elements, messageVersion: n5.messageVersion, cloudCustomData: n5.cloudCustomData, headSeq: s5 } : { headSeq: s5 } }))) : o5(T4(n5))) : this._chM.onMessage({ head: e5.head, body: n5 }));
      } }, { key: "_calcRTT", value: function(e5) {
        e5 = Date.now() - e5;
        this._chM.get(26).addRTT(e5);
      } }, { key: "_connect", value: function() {
        this._readyState !== ua && this._readyState !== ca && (this._startTs = Date.now(), this._onOpenTs = 0, this._readyState = ua, this._socket = new aa(this), this._socketID = this._socket.getID(), M3.l("".concat(this._n, "._connect isWorkerEnabled:").concat(this.getIsWorkerEnabled(), " socketID:").concat(this._socketID, " url:").concat(this.getURL())), new P3("wsConnect").setMessage("socketID:".concat(this._socketID, " url:").concat(this.getURL())).end());
      } }, { key: "getURL", value: function() {
        this._chM.isDevMode() && (this._canIUseBinaryFrame = false);
        var e5 = qt2(), t5 = ((ge2 || le2 && "windows" === e5 || fe2) && (this._canIUseBinaryFrame = false), -1), n5 = ("ios" === e5 ? t5 = Te2 || -1 : "android" === e5 && (t5 = Ee2 || -1), this._chM.get(12)), o5 = this._chM.getPlatform(), i5 = n5.getSDKAppID(), n5 = n5.getInstanceID(), i5 = "sdkappid=".concat(i5, "&instanceid=").concat(n5, "&random=").concat(this._getRandom(), "&platform=").concat(o5, "&host=").concat(e5) + "&version=".concat(t5, "&sdkversion=").concat("3.5.3");
        return de2 && (i5 += "&isminigame=1"), this._chM.canIUseInflate() && (i5 += "&compress=gzip"), (this._canIUseBinaryFrame ? "".concat(this._url, "/binfo?") : "".concat(this._url, "/info?")).concat(i5);
      } }, { key: "_closeConnection", value: function(e5) {
        M3.l("".concat(this._n, "._closeConnection socketID:").concat(this._socketID)), this._socket && (this._socket.close(e5), this._socketID = -1, this._socket = null, this._readyState = la);
      } }, { key: "_resend", value: function() {
        var i5 = this;
        if (M3.l("".concat(this._n, "._resend reConnectFlag:").concat(this._reConnectFlag), "promiseMap.size:".concat(this._promiseMap.size, " simpleRequestMap.size:").concat(this._simpleRequestMap.size)), 0 < this._promiseMap.size && this._promiseMap.forEach(function(e6, t6) {
          var n6 = e6.uplinkData, o6 = e6.resolve, e6 = e6.reject;
          -1 !== t6.indexOf(G2.AV_POLLING) ? i5._promiseMap.delete(t6) : (i5._promiseMap.set(t6, { resolve: o6, reject: e6, timestamp: Date.now(), uplinkData: n6 }), i5._execute(t6, n6));
        }), 0 < this._simpleRequestMap.size) {
          var e5, t5 = F2(this._simpleRequestMap);
          try {
            for (t5.s(); !(e5 = t5.n()).done; ) {
              var n5 = j2(e5.value, 2), o5 = n5[0], a5 = n5[1];
              this._execute(o5, a5);
            }
          } catch (e6) {
            t5.e(e6);
          } finally {
            t5.f();
          }
          this._simpleRequestMap.clear();
        }
      } }, { key: "send", value: function(n5) {
        var o5 = this, i5 = (n5.head.seq = this._getSequence(), n5.head.reqtime = Math.floor(Date.now() / 1e3), n5.head.cs = this._calcCheckSum(n5.head.servcmd, n5.body), n5.keyMap, W2(n5, sa)), a5 = this._getRequestIDFromHead(n5.head), s5 = JSON.stringify(i5);
        return new Promise(function(e5, t5) {
          o5._promiseMap.set(a5, { resolve: e5, reject: t5, timestamp: Date.now(), uplinkData: s5, headSeq: n5.head.seq }), M3.d("".concat(o5._n, ".send uplinkData:").concat(JSON.stringify(i5), " requestID:").concat(a5, " readyState:").concat(o5._readyState)), o5._readyState !== ca ? o5._reConnect() : (o5._execute(a5, s5), o5._chM.get(26).addRequestCount());
        });
      } }, { key: "simplySend", value: function(e5) {
        e5.head.seq = this._getSequence(), e5.head.reqtime = Math.floor(Date.now() / 1e3), e5.keyMap;
        var t5 = W2(e5, ra), e5 = this._getRequestIDFromHead(e5.head), t5 = JSON.stringify(t5);
        this._readyState !== ca ? (this._simpleRequestMap.size < this.MAX_SIZE ? this._simpleRequestMap.set(e5, t5) : M3.l("".concat(this._n, ".simplySend. simpleRequestMap is full, drop request!")), this._reConnect()) : this._execute(e5, t5);
      } }, { key: "_execute", value: function(e5, t5) {
        this._socket.send({ data: t5, fail: v3 ? this._onSendFail.bind(this) : void 0, requestID: e5 });
      } }, { key: "_onSendFail", value: function(e5) {
        M3.l("".concat(this._n, "._onSendFail requestID:").concat(e5)), this._chM.onSendFail();
      } }, { key: "_getSequence", value: function() {
        var e5;
        if (this._startSequence < 2415919103)
          return e5 = this._startSequence, this._startSequence += 1, 2415919103 === this._startSequence && (this._startSequence = ht2()), e5;
      } }, { key: "_getRequestIDFromHead", value: function(e5) {
        return e5.servcmd + e5.seq;
      } }, { key: "_getResKeyMap", value: function(e5) {
        e5 = this._chM.getKeyMap(e5);
        return y2(y2({}, Yi.res), e5.res);
      } }, { key: "_reConnect", value: function() {
        this._readyState !== ca && this._readyState !== ua && this.forcedReconnect();
      } }, { key: "forcedReconnect", value: function() {
        var e5 = "".concat(this._n, ".forcedReconnect");
        M3.l("".concat(e5, " count:").concat(this._reConnectCount, " readyState:").concat(this._readyState)), this._reConnectFlag = true, this._resetRandom(), this._reConnectCount < this.MAX_RECONNECT_COUNT ? (this._reConnectCount += 1, this._closeConnection(4001), this._initConnection()) : (this._reConnectCount = 0, this._chM.get(15).isOnline() ? (M3.w("".concat(e5, " disconnected from wsserver but network is ok, continue...")), this._closeConnection(4001), this._initConnection()) : this._chM.onReconnectFailed());
      } }, { key: "getReconnectFlag", value: function() {
        return this._reConnectFlag;
      } }, { key: "_setNextPingTs", value: function() {
        this._nextPingTs = fe2 ? Date.now() + 5e3 : Date.now() + 1e4;
      } }, { key: "getNextPingTs", value: function() {
        return this._nextPingTs;
      } }, { key: "isConnected", value: function() {
        return this._readyState === ca;
      } }, { key: "canIUseBinaryFrame", value: function() {
        return this._canIUseBinaryFrame;
      } }, { key: "getSocketID", value: function() {
        return this._socketID;
      } }, { key: "inflate", value: function(e5) {
        if (this._chM.canIUseInflate())
          return this._chM.get(37).inflate(e5);
      } }, { key: "setIsWorkerEnabled", value: function(e5) {
        M3.l("".concat(this._n, ".setIsWorkerEnabled flag:").concat(e5)), this._isWorkerEnabled = e5;
      } }, { key: "getIsWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Ae2;
      } }, { key: "_getRandom", value: function() {
        return 0 === this._random && (this._random = Math.random()), this._random;
      } }, { key: "_resetRandom", value: function() {
        this._random = 0;
      } }, { key: "_calcCheckSum", value: function(e5, t5) {
        if (-1 !== e5.indexOf(G2.PING) || -1 !== e5.indexOf(G2.LOGIN) || -1 !== e5.indexOf(G2.LOGOUT) || -1 !== e5.indexOf(G2.AV_POLLING) || -1 !== e5.indexOf(G2.AV_NOAUTH_POLLING))
          return 0;
        for (var n5 = ia(JSON.stringify(t5)), o5 = 4294967295, i5 = 0, a5 = n5.length; i5 < a5; i5++) {
          o5 ^= n5[i5];
          for (var s5 = 0; s5 < 8; s5++)
            1 == (1 & o5) ? o5 = o5 >>> 1 ^ 3988292384 : o5 >>>= 1;
        }
        return (4294967295 ^ o5) >>> 0;
      } }, { key: "close", value: function() {
        M3.l("".concat(this._n, ".close")), this._closeConnection(4e3), this._promiseMap.clear(), this._startSequence = ht2(), this._readyState = la, this._simpleRequestMap.clear(), this._reConnectFlag = false, this._reConnectCount = 0, this._onOpenTs = 0, this._url = "", this._random = 0, this._canIUseBinaryFrame = true, this._isWorkerEnabled = true;
      } }]), pa = function(a5, s5, r5) {
        return new Promise(function(t5, e5) {
          var n5, o5, i5 = "application/x-www-form-urlencoded;charset=UTF-8";
          v3 ? I3.request({ url: s5, data: r5, method: a5, timeout: 3e3, header: { "content-type": i5 }, success: function(e6) {
            e6 && e6.data && e6.data.NetCheckInfo && M3.l("".concat("getconninfo ok in", " miniapp. ret:"), e6.data), t5();
          }, fail: function() {
            e5(new L3({ code: k2.NETWORK_ERROR }));
          } }) : (n5 = new XMLHttpRequest(), o5 = setTimeout(function() {
            n5.abort(), e5(new L3({ code: k2.NETWORK_TIMEOUT }));
          }, 3e3), n5.onreadystatechange = function() {
            4 === n5.readyState && (o5 && clearTimeout(o5), 200 === n5.status || 304 === n5.status ? (n5.responseText && -1 < n5.responseText.indexOf("NetCheckInfo") && M3.l("".concat("getconninfo ok in", " web. ret:"), JSON.parse(n5.responseText)), t5()) : e5(new L3({ code: k2.NETWORK_ERROR })));
          }, n5.open(a5, s5, true), n5.setRequestHeader("Content-type", i5), r5 ? n5.send(r5) : n5.send());
        });
      }, _a = (t4(Da, c4), e4(Da, [{ key: "onCheckTimer", value: function(e5) {
        this._socketHandler && (this.isLoggedIn() ? (0 < this._timerForNotLoggedIn && (clearInterval(this._timerForNotLoggedIn), this._timerForNotLoggedIn = -1), this._socketHandler.onCheckTimer(e5)) : this._socketHandler.onCheckTimer(1), this._checkNextPing());
      } }, { key: "onErrorCodeNotZero", value: function(e5) {
        this.get(20).onErrorCodeNotZero(e5);
      } }, { key: "onMessage", value: function(e5) {
        this.get(20).onMessage(e5);
      } }, { key: "send", value: function(e5) {
        return this._socketHandler ? this._previousState !== R3.NET_STATE_CONNECTED && e5.head.servcmd.includes(G2.SSO_STAT) ? (this.reConnect(), this.isPrivateNetWork() ? Promise.resolve() : this._sendLogViaHTTP(e5)) : this._socketHandler.send(e5) : Promise.reject();
      } }, { key: "_sendLogViaHTTP", value: function(e5) {
        var t5 = a4.HOST.CURRENT.STAT, t5 = "".concat(t5, "/v4/imopenstat/tim_web_report_v2?sdkappid=").concat(e5.head.sdkappid, "&reqtime=").concat(Date.now()), e5 = JSON.stringify(e5.body);
        return pa("POST", t5, e5);
      } }, { key: "simplySend", value: function(e5) {
        return this._socketHandler ? this._socketHandler.simplySend(e5) : Promise.reject();
      } }, { key: "onOpen", value: function() {
        this._ping();
      } }, { key: "onClose", value: function() {
        this._socketHandler && this._socketHandler.getReconnectFlag() && this._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED), this.reConnect();
      } }, { key: "onError", value: function() {
        v3 && !fe2 && this.warn("DomainNameInMP"), this._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED);
      } }, { key: "getKeyMap", value: function(e5) {
        return this.get(20).getKeyMap(e5);
      } }, { key: "onRequestTimeout", value: function() {
        3e4 <= Date.now() - this._lastDiagnoseTS && this.diagnose();
      } }, { key: "onSendFail", value: function() {
        this._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED);
      } }, { key: "onReconnected", value: function() {
        M3.l("".concat(this._n, ".onReconnected cost:").concat(tn(this._disconnectedTS, true, true))), this._m.restartTimer(), this.get(20).onReconnected(tn(this._disconnectedTS, false, false)), this._disconnectedTS = 0, this._emitNetStateChangeEvent(R3.NET_STATE_CONNECTED);
      } }, { key: "onReconnectFailed", value: function() {
        M3.l("".concat(this._n, ".onReconnectFailed")), this._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED);
      } }, { key: "setIsWorkerEnabled", value: function(e5) {
        this._socketHandler && this._socketHandler.setIsWorkerEnabled(false);
      } }, { key: "offline", value: function() {
        this._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED);
      } }, { key: "reConnect", value: function() {
        var e5 = 0 < arguments.length && void 0 !== arguments[0] && arguments[0], t5 = false, n5 = (this._socketHandler && (t5 = this._socketHandler.getReconnectFlag()), "forcedFlag:".concat(e5, " fatalErrorFlag:").concat(this._fatalErrorFlag, " previousState:").concat(this._previousState, " reconnectFlag:").concat(t5));
        M3.l("".concat(this._n, ".reConnect ").concat(n5)), this._fatalErrorFlag || !this._socketHandler || true !== e5 && this._previousState === R3.NET_STATE_CONNECTING && t5 || (this._socketHandler.forcedReconnect(), this._emitNetStateChangeEvent(R3.NET_STATE_CONNECTING));
      } }, { key: "_emitNetStateChangeEvent", value: function(e5) {
        this._previousState !== e5 && (M3.l("".concat(this._n, "._emitNetStateChangeEvent from ").concat(this._previousState, " to ").concat(e5)), e5 === R3.NET_STATE_DISCONNECTED && 0 === this._disconnectedTS && (this._disconnectedTS = Date.now(), this.diagnose()), this._previousState = e5, this.emitOEvt(h4.NET_STATE_CHANGE, { state: e5 }));
      } }, { key: "_ping", value: function() {
        var e5, n5 = this;
        true !== this._probing && (this._probing = true, e5 = this.get(20).getProtocolData({ P: G2.PING }), this.send(e5).then(function() {
          n5._probing = false;
        }).catch(function(e6) {
          n5._probing = false;
          var t5 = n5.get(15).isOnline();
          M3.w("".concat(n5._n, "._ping failed. bOnline:").concat(t5, " error:"), e6), e6 && 60002 === e6.code ? (new P3("error").setMessage("code:".concat(e6.code, " message:").concat(e6.message)).end(), n5._fatalErrorFlag = true, n5._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED)) : t5 ? n5.reConnect() : n5._emitNetStateChangeEvent(R3.NET_STATE_DISCONNECTED);
        }));
      } }, { key: "_checkNextPing", value: function() {
        this._socketHandler && this._socketHandler.isConnected() && Date.now() >= this._socketHandler.getNextPingTs() && this._ping();
      } }, { key: "dealloc", value: function() {
        this._socketHandler && (this._socketHandler.close(), this._socketHandler = null), -1 < this._timerForNotLoggedIn && clearInterval(this._timerForNotLoggedIn);
      } }, { key: "onRestApiKickedOut", value: function() {
        this._socketHandler && (this._socketHandler.close(), this.reConnect(true));
      } }, { key: "canIUseInflate", value: function() {
        return this._m.canIUseInflate();
      } }, { key: "getSocketID", value: function() {
        if (this._socketHandler)
          return this._socketHandler.getSocketID();
      } }, { key: "diagnose", value: function() {
        this.isPrivateNetWork() || (this._lastDiagnoseTS = Date.now(), this._diagnoseBySSO(), this._diagnoseByCDN());
      } }, { key: "_diagnoseBySSO", value: function() {
        var t5 = this, e5 = this._socketHandler.getURL(), n5 = e5.split("/")[2];
        n5.startsWith("ws") && (e5 = e5.slice(e5.indexOf("info?") + 5), n5 = "https://".concat(n5, "/v3/netcheck/getconninfo?").concat(e5, "&reqtime=").concat(Date.now()), pa("GET", n5).catch(function(e6) {
          M3.w("".concat(t5._n, "._diagnoseBySSO failed. error:"), e6);
        }));
      } }, { key: "_diagnoseByCDN", value: function() {
        var t5 = this, e5 = this._socketHandler.getURL(), e5 = e5.slice(e5.indexOf("info?") + 5), e5 = "https://boce-cdn.my-imcloud.com/v3/netcheck/getconninfo?".concat(e5, "&reqtime=").concat(Date.now());
        pa("GET", e5).catch(function(e6) {
          M3.w("".concat(t5._n, "._diagnoseByCDN failed. error:"), e6);
        });
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._previousState = R3.NET_STATE_CONNECTED, this._probing = false, this._fatalErrorFlag = false, this._timerForNotLoggedIn = setInterval(this.onCheckTimer.bind(this), 1e3), this._disconnectedTS = 0, this._lastDiagnoseTS = 0;
      } }])), ha = ["a2", "tinyid"], ga = ["a2", "tinyid"], fa = e4(function e5(t5) {
        p4(this, e5), this._n = "PHandler", this._sessionM = t5, this._map = /* @__PURE__ */ new Map(), this._fillMap();
      }, [{ key: "_fillMap", value: function() {
        this._map.clear();
        var e5 = this._sessionM.genCommonHead(), t5 = this._sessionM.genCosSpecifiedHead(), n5 = this._sessionM.genSSOReportHead();
        this._map.set(G2.LOGIN, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.LOGIN) }), body: { state: "Online", isWebUniapp: 0, deviceBrand: 0, customInfo: "" }, keyMap: { req: { deviceBrand: "InstType" }, res: { InstId: "instanceID", HelloInterval: "helloInterval", RichMsgAuthKey: "authKey" } } }), this._map.set(G2.LOGOUT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.LOGOUT) }), body: { type: 0, isWebUniapp: 0 }, keyMap: { req: { type: "wslogout_type" } } }), this._map.set(G2.HELLO, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.HELLO) }), body: { isWebUniapp: 0 }, keyMap: { res: { NewInstInfo: "newInstanceInfo" } } }), this._map.set(G2.KICK_OTHER, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.STAT_SERVICE, ".").concat(G2.KICK_OTHER) }), body: {} }), this._map.set(G2.COS_SIGN, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.IM_COS_SIGN, ".").concat(G2.COS_SIGN) }), body: { cmd: "open_im_cos_svc", subCmd: "get_cos_token", duration: 300, version: 2 }, keyMap: { req: { userSig: "usersig", subCmd: "sub_cmd", cmd: "cmd", duration: "duration", version: "version" }, res: { expired_time: "expiredTime", bucket_name: "bucketName", session_token: "sessionToken", tmp_secret_id: "secretId", tmp_secret_key: "secretKey" } } }), this._map.set(G2.COS_PRE_SIG, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.CUSTOM_UPLOAD, ".").concat(G2.COS_PRE_SIG) }), body: { fileType: void 0, fileName: void 0, uploadMethod: 0, duration: 900 }, keyMap: { req: { userSig: "usersig", fileType: "file_type", fileName: "file_name", uploadMethod: "upload_method" }, res: { expired_time: "expiredTime", request_id: "requestId", head_url: "headUrl", upload_url: "uploadUrl", download_url: "downloadUrl", ci_url: "ciUrl", snapshot_url: "requestSnapshotUrl" } } }), this._map.set(G2.SIMPLE_COS_PRE_SIG, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.CUSTOM_UPLOAD, ".").concat(G2.SIMPLE_COS_PRE_SIG) }), body: { uploadMethod: 0, platform: 2, SDKAppID: 0, userID: "", conversationType: 1, uploadConfig: [{ fileID: 1, fileType: 1, fileName: "" }] }, keyMap: { req: { platform: "uint32_platform", SDKAppID: "uint32_sdkappid", userID: "str_user_id", uploadMethod: "uint32_upload_method", conversationType: "uint32_scene", uploadConfig: "rpt_upload_object", fileID: "uint32_file_id", fileType: "uint32_file_type", fileName: "str_file_name" }, res: { str_final_ip: "uploadIP", rpt_pre_sig: "preSig", uint32_file_id: "fileID", uint32_exist_flag: "existFlag", str_download_url: "downloadUrl", str_upload_url: "uploadUrl", str_snapshot_url: "requestSnapshotUrl", str_file_key: "fileKey" } } }), this._map.set(G2.GET_IMAGE_INFO, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.CUSTOM_UPLOAD, ".").concat(G2.GET_IMAGE_INFO) }), body: { imageUrl: "" }, keyMap: { req: { imageUrl: "str_image_url" }, res: { rpt_msg_image_info: "imageInfoArray", uint32_image_type: "type", str_url: "url", uint32_width: "width", uint32_height: "height", str_image_format: "imageFormat" } } }), this._map.set(G2.GET_IP, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.CUSTOM_UPLOAD, ".").concat(G2.GET_IP) }), body: { domainName: "" }, keyMap: { req: { domainName: "str_domain" }, res: { str_final_ip: "ip" } } }), this._map.set(G2.VIDEO_COVER, { head: y2(y2({}, t5), {}, { servcmd: "".concat(a4.NAME.CUSTOM_UPLOAD, ".").concat(G2.VIDEO_COVER) }), body: { version: 1, platform: void 0, coverName: void 0, requestSnapshotUrl: void 0 }, keyMap: { req: { version: "version", platform: "platform", coverName: "cover_name", requestSnapshotUrl: "snapshot_url" }, res: { error_code: "errorCode", error_msg: "errorInfo", download_url: "snapshotUrl" } } }), this._map.set(G2.FETCH_COMMERCIAL_CONFIG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_CONFIG_MANAGER, ".").concat(G2.FETCH_COMMERCIAL_CONFIG) }), body: { SDKAppID: 0 }, keyMap: { req: { SDKAppID: "uint32_sdkappid" }, res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } }), this._map.set(G2.PUSHED_COMMERCIAL_CONFIG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_CONFIG_MANAGER, ".").concat(G2.PUSHED_COMMERCIAL_CONFIG) }), body: {}, keyMap: { res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_purchase_bits: "purchaseBits", uint32_expired_time: "expiredTime" } } }), this._map.set(G2.FETCH_CLOUD_CTRL_CONFIG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_CONFIG_MANAGER, ".").concat(G2.FETCH_CLOUD_CTRL_CONFIG) }), body: { SDKAppID: 0, version: 0 }, keyMap: { req: { SDKAppID: "uint32_sdkappid", version: "uint64_version" }, res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } }), this._map.set(G2.PUSHED_CLOUD_CTRL_CONFIG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_CONFIG_MANAGER, ".").concat(G2.PUSHED_CLOUD_CTRL_CONFIG) }), body: {}, keyMap: { res: { int32_error_code: "errorCode", str_error_message: "errorMessage", str_json_config: "cloudControlConfig", uint32_expired_time: "expiredTime", uint32_sdkappid: "SDKAppID", uint64_version: "version" } } }), this._map.set(G2.OVERLOAD_NOTIFY, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OVERLOAD_PUSH, ".").concat(G2.OVERLOAD_NOTIFY) }), body: {}, keyMap: { res: { OverLoadServCmd: "overloadCommand", DelaySecs: "waitingTime" } } }), this._map.set(G2.SYNC_UNREAD_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SYNC_UNREAD_MSG) }), body: { cookie: "", syncFlag: 0, needAbstract: 1, isOnlineSync: 0, needSignaling: 1, needCachedMsg: 1 }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", from: "From_Account", to: "To_Account", time: "MsgTimeStamp", sequence: "MsgSeq", random: "MsgRandom", elements: "MsgBody" }, res: { MsgList: "messageList", SyncFlag: "syncFlag", To_Account: "to", From_Account: "from", ClientSeq: "clientSequence", MsgSeq: "sequence", NoticeSeq: "noticeSequence", NotifySeq: "notifySequence", MsgRandom: "random", MsgTimeStamp: "time", MsgContent: "content", ToGroupId: "to", MsgKey: "messageKey", GroupTips: "groupTips", MsgBody: "elements", MsgType: "type", C2CRemainingUnreadCount: "C2CRemainingUnreadList", C2CPairUnreadCount: "C2CPairUnreadList" } } }), this._map.set(G2.GET_PROFANITY_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_MSG_AUDIT_MGR, ".").concat(G2.GET_PROFANITY_LIST) }), body: { version: 0, deviceID: "", startIndex: void 0 }, keyMap: { req: { version: "uint64_version", deviceID: "str_device_id", startIndex: "uint64_start_index" }, res: { msg_cmd_error_code: "errorInfo", str_err_msg: "errorMessage", uint32_code: "errorCode", msg_scene_ctl_config: "filterConfig", uint64_c2c_custom_msg_flag: "c2c_custom_message", uint64_c2c_text_msg_flag: "c2c_text_message", uint64_group_custom_msg_flag: "group_custom_message", uint64_group_text_msg_flag: "group_text_message", uint64_group_info_flag: "group_profile", uint64_group_member_info_flag: "group_member_profile", uint64_relation_chain_flag: "sns", uint64_user_info_flag: "user_profile", rpt_msg_dirty_word: "lexicon", str_dirty_word: "profanity", str_replaced_content: "replacement", uint64_filter_type: "filterType", uint64_id: "id", uint64_word_type: "profanityType", uint64_complete_flag: "completeFlag", uint64_next_start_index: "nextStartIndex", uint64_version: "version", uint64_expired_time: "expiredTime" } } }), this._map.set(G2.SEND_C2C_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SEND_C2C_MSG) }), body: { fromAccount: "", toAccount: "", msgSeq: 0, msgRandom: 0, msgBody: [], cloudCustomData: void 0, nick: "", avatar: "", msgLifeTime: void 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { sound: "", badgeMode: 0, isVoipPush: void 0, image: "" }, androidInfo: { sound: "", XiaoMiChannelID: "", OPPOChannelID: "", GoogleChannelID: "", VIVOClassification: 1, VIVOCategory: "", HuaWeiCategory: "", OPPOCategory: "", HuaWeiImage: "", HonorImage: "", GoogleImage: "", HonorImportance: "" } }, messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, isSupportExtension: 0, isRelayMessage: 0, cmConfigID: void 0, forbidCallbackControl: void 0 }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", count: "MaxCnt", lastMessageTime: "LastMsgTime", messageKey: "MsgKey", peerAccount: "Peer_Account", data: "Data", description: "Desc", extension: "Ext", type: "MsgType", content: "MsgContent", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", nick: "From_AccountNick", avatar: "From_AccountHeadurl", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "IsNeedReadReceipt", GoogleChannelID: "GoogleChannelID", XiaoMiChannelID: "XiaoMiChannelID", OPPOChannelID: "OPPOChannelID", OPPOCategory: "OPPOCategory", VIVOClassification: "VIVOClassification", VIVOCategory: "VIVOCategory", HonorImportance: "HonorImportance" } } }), this._map.set(G2.SEND_GRP_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.SEND_GRP_MSG) }), body: { fromAccount: "", groupID: "", random: 0, clientSequence: 0, priority: "", msgBody: [], cloudCustomData: void 0, onlineOnlyFlag: 0, offlinePushInfo: { pushFlag: 0, title: "", desc: "", ext: "", apnsInfo: { sound: "", badgeMode: 0, isVoipPush: void 0, image: "" }, androidInfo: { sound: "", XiaoMiChannelID: "", OPPOChannelID: "", GoogleChannelID: "", VIVOClassification: 1, VIVOCategory: "", HuaWeiCategory: "", OPPOCategory: "", HuaWeiImage: "", HonorImage: "", GoogleImage: "", HonorImportance: "" } }, groupAtInfo: [], messageControlInfo: void 0, clientTime: void 0, needReadReceipt: 0, topicID: void 0, receiverList: void 0, isSupportExtension: 0, isRelayMessage: 0, cmConfigID: void 0, forbidCallbackControl: void 0 }, keyMap: { req: { to: "GroupId", extension: "Ext", data: "Data", description: "Desc", random: "Random", sequence: "ReqMsgSeq", count: "ReqMsgNumber", type: "MsgType", priority: "MsgPriority", content: "MsgContent", elements: "MsgBody", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", clientSequence: "ClientSeq", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody", needReadReceipt: "NeedReadReceipt", receiverList: "To_Account", GoogleChannelID: "GoogleChannelID", XiaoMiChannelID: "XiaoMiChannelID", OPPOChannelID: "OPPOChannelID", OPPOCategory: "OPPOCategory", VIVOClassification: "VIVOClassification", VIVOCategory: "VIVOCategory", HonorImportance: "HonorImportance" }, res: { MsgTime: "time", MsgSeq: "sequence" } } }), this._map.set(G2.REVOKE_C2C_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.REVOKE_C2C_MSG) }), body: { msgInfo: { fromAccount: "", toAccount: "", msgTimeStamp: 0, msgSeq: 0, msgRandom: 0 } }, keyMap: { req: { msgInfo: "MsgInfo", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom" } } }), this._map.set(G2.REVOKE_GRP_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.REVOKE_GRP_MSG) }), body: { groupID: "", msgSeqList: void 0, topicID: "" }, keyMap: { req: { msgSeqList: "MsgSeqList", msgSeq: "MsgSeq" } } }), this._map.set(G2.GET_C2C_ROAMING_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.GET_C2C_ROAMING_MSG) }), body: { peerAccount: "", count: 15, lastMessageTime: 0, messageKey: "", withRecalledMessage: 1, direction: 0 }, keyMap: { req: { messageKey: "MsgKey", peerAccount: "Peer_Account", count: "MaxCnt", lastMessageTime: "LastMsgTime", withRecalledMessage: "WithRecalledMsg", direction: "GetDirection" }, res: { LastMsgTime: "lastMessageTime", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer" } } }), this._map.set(G2.MODIFY_C2C_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.MODIFY_C2C_MSG) }), body: { from: "", to: "", sequence: 0, random: 0, time: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { req: { sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } }), this._map.set(G2.GET_GRP_ROAMING_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_ROAMING_MSG) }), body: { withRecalledMsg: 1, groupID: "", count: 15, sequence: "", topicID: void 0 }, keyMap: { req: { sequence: "ReqMsgSeq", count: "ReqMsgNumber", withRecalledMessage: "WithRecalledMsg" }, res: { Random: "random", MsgTime: "time", MsgSeq: "sequence", ReqMsgSeq: "sequence", RspMsgList: "messageList", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgPriority: "priority", MsgBody: "elements", MsgType: "type", MsgContent: "content", IsFinished: "complete", Download_Flag: "downloadFlag", ClientSeq: "clientSequence", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList", NextReqMsgSeq: "nextSequence" } } }), this._map.set(G2.SET_C2C_MSG_READ, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SET_C2C_MSG_READ) }), body: { C2CMsgReaded: void 0 }, keyMap: { req: { lastMessageTime: "LastedMsgTime" } } }), this._map.set(G2.SET_C2C_PEER_MUTE_NOTIFICATIONS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { userIDList: void 0, muteFlag: 0 }, keyMap: { req: { userIDList: "Peer_Account", muteFlag: "Mute_Notifications" } } }), this._map.set(G2.GET_C2C_PEER_MUTE_NOTIFICATIONS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.GET_C2C_PEER_MUTE_NOTIFICATIONS) }), body: { toAccount: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Peer_Account" }, res: { MuteNotificationsList: "muteFlagList" } } }), this._map.set(G2.SET_GRP_MSG_READ, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.SET_GRP_MSG_READ) }), body: { groupID: void 0, messageReadSeq: void 0, topicID: void 0 }, keyMap: { req: { messageReadSeq: "MsgReadedSeq" } } }), this._map.set(G2.SET_ALL_MSG_READ, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SET_ALL_MSG_READ) }), body: { readAllC2CMessage: 0, groupMessageReadInfoList: [] }, keyMap: { req: { readAllC2CMessage: "C2CReadAllMsg", groupMessageReadInfoList: "GroupReadInfo", messageSequence: "MsgSeq" }, res: { C2CReadAllMsg: "readAllC2CMessage", GroupReadInfoArray: "groupMessageReadInfoList" } } }), this._map.set(G2.DEL_C2C_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.DEL_C2C_MSG) }), body: { fromAccount: "", to: "", keyList: void 0 }, keyMap: { req: { keyList: "MsgKeyList" } } }), this._map.set(G2.DEL_GRP_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.DEL_GRP_MSG) }), body: { groupID: "", deleter: "", keyList: void 0, topicID: void 0 }, keyMap: { req: { deleter: "Deleter_Account", keyList: "Seqs" } } }), this._map.set(G2.TRANSLATE_TEXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_TRANSLATE, ".").concat(G2.TRANSLATE_TEXT) }), body: { sourceTextList: void 0, SDKAppID: 0, from: 0, source: "", target: "" }, keyMap: { req: { sourceTextList: "SourceText", SDKAppID: "SdkAppId", from: "FromAccount" }, res: { TargetText: "translatedTextList", RequestId: "requestID", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } }), this._map.set(G2.VOICE_TO_TEXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_SPEECH, ".").concat(G2.VOICE_TO_TEXT) }), body: { url: "", SDKAppID: 0, format: "", sourceType: 0, language: "" }, keyMap: { req: { url: "BytesUrl", SDKAppID: "Uint32Sdkappid", format: "BytesVoiceFormat", sourceType: "Uint64SourceType", language: "BytesEngServiceType" }, res: { BytesRequestid: "requestID", BytesResult: "result", CmdErrorCode: "error", ErrorCode: "code", ErrorInfo: "message" } } }), this._map.set(G2.MODIFY_GRP_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.MODIFY_GRP_MSG) }), body: { groupID: "", topicID: void 0, sequence: 0, version: 0, elements: void 0, cloudCustomData: void 0 }, keyMap: { req: { sequence: "MsgSeq", version: "MsgVersion", type: "MsgType", content: "MsgContent" } } }), this._map.set(G2.GET_READ_RECEIPT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { req: { sequence: "MsgSeq" } } }), this._map.set(G2.SEND_C2C_READ_RECEIPT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.SEND_C2C_READ_RECEIPT) }), body: { peerAccount: "", messageInfoList: void 0 }, keyMap: { req: { peerAccount: "Peer_Account", messageInfoList: "C2CMsgInfo", fromAccount: "From_Account", toAccount: "To_Account", sequence: "MsgSeq", random: "MsgRandom", time: "MsgTime", clientTime: "MsgClientTime" } } }), this._map.set(G2.SEND_READ_RECEIPT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.SEND_READ_RECEIPT) }), body: { groupID: "", sequenceList: void 0 }, keyMap: { req: { sequenceList: "MsgSeqList", sequence: "MsgSeq" } } }), this._map.set(G2.GET_READ_RECEIPT_DETAIL, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_READ_RECEIPT_DETAIL) }), body: { groupID: "", sequence: void 0, flag: 0, cursor: 0, count: 0 }, keyMap: { req: { sequence: "MsgSeq", count: "Num" }, res: { ReadList: "readUserIDList", Read_Account: "userID", UnreadList: "unreadUserIDList", Unread_Account: "userID", IsFinish: "isCompleted" } } }), this._map.set(G2.GET_GRP_RECEIPTS_BY_USERS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_RECEIPTS_BY_USERS) }), body: { groupID: "", dataList: void 0 }, keyMap: { req: { dataList: "MemberReadMsgList", sequence: "MsgSeq", userIDList: "MemberList_Account" }, res: { MsgReadList: "dataList", Read_Account: "userID", Read_Time: "readTime" } } }), this._map.set(G2.MODIFY_C2C_MSG_EXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.MODIFY_C2C_MSG_EXT) }), body: { from: void 0, to: void 0, messageKey: void 0, operateType: void 0, extensionList: void 0 } }), this._map.set(G2.GET_C2C_MSG_EXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_C2C_MSG_EXT) }), body: { from: void 0, to: void 0, messageKey: void 0, startSequence: void 0 } }), this._map.set(G2.MODIFY_GRP_MSG_EXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.MODIFY_GRP_MSG_EXT) }), body: { groupID: void 0, topicID: void 0, messageSequence: void 0, operateType: void 0, extensionList: void 0 } }), this._map.set(G2.GET_GRP_MSG_EXT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_GRP_MSG_EXT) }), body: { groupID: void 0, topicID: void 0, messageSequence: void 0, startSequence: void 0 } }), this._map.set(G2.ADD_C2C_MSG_REACTION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.ADD_C2C_MSG_REACTION) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Add_Account" } } }), this._map.set(G2.RM_C2C_MSG_REACTION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.RM_C2C_MSG_REACTION) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Del_Account" } } }), this._map.set(G2.GET_C2C_MSG_REACTIONS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_C2C_MSG_REACTIONS) }), body: { from: void 0, to: void 0, messageKeyList: void 0, count: void 0 } }), this._map.set(G2.GET_C2C_MSG_REACTION_USER_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_C2C_MSG_REACTION_USER_LIST) }), body: { from: void 0, to: void 0, reactionID: void 0, messageKey: void 0, count: void 0 } }), this._map.set(G2.ADD_GRP_MSG_REACTION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.ADD_GRP_MSG_REACTION) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Add_Account" } } }), this._map.set(G2.RM_GRP_MSG_REACTION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.RM_GRP_MSG_REACTION) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, userIDList: void 0 }, keyMap: { req: { userIDList: "Del_Account" } } }), this._map.set(G2.GET_GRP_MSG_REACTIONS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_GRP_MSG_REACTIONS) }), body: { groupID: void 0, topicID: void 0, messageSequenceList: void 0, count: void 0 }, keyMap: { res: { MsgSeq: "messageSequence" } } }), this._map.set(G2.GET_GRP_MSG_REACTION_USER_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM_MSG_EXT, ".").concat(G2.GET_GRP_MSG_REACTION_USER_LIST) }), body: { groupID: void 0, topicID: void 0, reactionID: void 0, messageSequence: void 0, nextSeq: void 0, count: void 0 } }), this._map.set(G2.GET_C2C_PEER_READ_TIME, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.GET_C2C_PEER_READ_TIME) }), body: { userIDList: void 0 }, keyMap: { req: { userIDList: "To_Account" }, res: { ReadTime: "peerReadTimeList" } } }), this._map.set(G2.PAGING_GET_CONV_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.PAGING_GET_CONV_LIST) }), body: { fromAccount: void 0, timeStamp: void 0, startIndex: void 0, pinnedTimeStamp: void 0, pinnedStartIndex: void 0, orderType: void 0, messageAssistFlag: 15, assistFlag: 31 }, keyMap: { req: { messageAssistFlag: "MsgAssistFlags", assistFlag: "AssistFlags", pinnedTimeStamp: "TopTimeStamp", pinnedStartIndex: "TopStartIndex" }, res: { SessionItem: "conversations", ToAccount: "groupID", To_Account: "userID", UnreadMsgCount: "unreadCount", MsgGroupReadedSeq: "messageReadSeq", C2cPeerReadTime: "c2cPeerReadTime", LastMsgFlags: "lastMessageFlag", TopFlags: "isPinned", TopTimeStamp: "pinnedTimeStamp", TopStartIndex: "pinnedStartIndex", GroupId: "convGroupID", C2cRemark: "friendRemark", MsgRecvOption: "messageRemindType", GroupIgnoredUnreadSeqCount: "noUnreadCount", GroupNextMsgSeq: "nextMessageSeq" } } }), this._map.set(G2.DEL_CONV, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.DEL_CONV) }), body: { fromAccount: "", conversationList: void 0, clearHistoryMessage: void 0 }, keyMap: { req: { toGroupID: "ToGroupid", clearHistoryMessage: "ClearRamble", conversationList: "ContactItem" }, res: { ResultItem: "resultList", ToGroupid: "groupID", ResultCode: "code", ResultInfo: "info" } } }), this._map.set(G2.CLEAR_HISTORY_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.CLEAR_HISTORY_MSG) }), body: { fromAccount: "", toAccount: void 0, type: 1, toGroupID: void 0 }, keyMap: { req: { toGroupID: "ToGroupid" } } }), this._map.set(G2.PIN_CONV, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.PIN_CONV) }), body: { fromAccount: "", operationType: 1, itemList: void 0 }, keyMap: { req: { itemList: "RecentContactItem" } } }), this._map.set(G2.DEL_GROUP_AT_TIPS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.DEL_GROUP_AT_TIPS) }), body: { messageListToDelete: void 0 }, keyMap: { req: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } }), this._map.set(G2.SET_CONV_CUSTOM_DATA, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.MARK_CONV) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, res: { ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(G2.MARK_CONV, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.MARK_CONV) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "MarkItem", operationType: "OptType", groupID: "ToGroupId" }, res: { ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(G2.CREATE_CONV_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.CREATE_CONV_GRP) }), body: { fromAccount: "", itemList: void 0 }, keyMap: { req: { itemList: "GroupContactItem", groupID: "ToGroupId" }, res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType" } } }), this._map.set(G2.DEL_CONV_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.DEL_CONV_GRP) }), body: { fromAccount: "", groupName: void 0 }, keyMap: { res: { GroupId: "convGroupID" } } }), this._map.set(G2.RENAME_CONV_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 }, keyMap: { req: { oldName: "OldGroupName", newName: "NewGroupName", groupID: "ToGroupId", operationType: "ContactOptType", groupName: "OldGroupName", updateItem: "ContactUpdateItem" }, res: { ContactOptType: "operationType", ToGroupId: "groupID", GroupId: "convGroupID" } } }), this._map.set(G2.ADD_CONV_TO_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: { groupName: void 0, updateGroupType: void 0, updateItem: void 0 } } }), this._map.set(G2.DEL_CONV_FROM_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.RENAME_CONV_GRP) }), body: { fromAccount: "", updateType: void 0, updateGroup: void 0 } }), this._map.set(G2.GET_CONV_GRP_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.GET_CONV_GRP_LIST) }), body: { fromAccount: "", startIndex: void 0 }, keyMap: { res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList" } } }), this._map.set(G2.SEARCH_CONV_GRP_MARK, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.RECENT_CONTACT, ".").concat(G2.SEARCH_CONV_GRP_MARK) }), body: { fromAccount: "", contactItem: void 0 }, keyMap: { req: { groupID: "ToGroupId" }, res: { GroupId: "convGroupID", ToGroupId: "groupID", OptType: "operationType", CustomMark: "customData", ContactGroupId: "convGroupIDList", ContactResultItem: "contactItem" } } }), this._map.set(G2.GET_USER_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.PROFILE, ".").concat(G2.GET_USER_PROFILE) }), body: { fromAccount: "", userItem: [] }, keyMap: { req: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } }), this._map.set(G2.UPDATE_MY_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.PROFILE, ".").concat(G2.UPDATE_MY_PROFILE) }), body: { fromAccount: "", profileItem: [{ tag: f3.NICK, value: "" }, { tag: f3.GENDER, value: "" }, { tag: f3.ALLOWTYPE, value: "" }, { tag: f3.AVATAR, value: "" }] }, keyMap: { req: { toAccount: "To_Account", standardSequence: "StandardSequence", customSequence: "CustomSequence" } } }), this._map.set(G2.GET_BL, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.GET_BL) }), body: { fromAccount: "", startIndex: 0, maxLimited: 30 } }), this._map.set(G2.ADD_TO_BL, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.ADD_TO_BL) }), body: { fromAccount: "", toAccount: [] } }), this._map.set(G2.RM_FROM_BL, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.RM_FROM_BL) }), body: { fromAccount: "", toAccount: [] } }), this._map.set(G2.SET_SELF_STATUS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.SET_SELF_STATUS) }), body: { customStatus: "" } }), this._map.set(G2.GET_USER_STATUS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.GET_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { res: { UserStatusList: "successUserList", ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID", Status: "statusType" } } }), this._map.set(G2.SUB_USER_STATUS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.SUB_USER_STATUS) }), body: { userIDList: void 0 }, keyMap: { res: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } }), this._map.set(G2.UNSUB_USER_STATUS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.UNSUB_USER_STATUS) }), body: { userIDList: void 0, unsubscribeAll: void 0 }, keyMap: { res: { ErrorList: "failureUserList", To_Account: "userID", Invalid_Account: "invalidUserID" } } }), this._map.set(G2.GET_FD_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.GET_FD_LIST) }), body: { fromAccount: "", startIndex: 0, standardSequence: 0, customSequence: 0 }, keyMap: { res: { FriendNum: "friendCount", UserDataItem: "resultList", ValueItem: "tagValueList" } } }), this._map.set(G2.ADD_FD, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.ADD_FD) }), body: { fromAccount: "", addFriendItem: [], type: "" }, keyMap: { req: { source: "AddSource", wording: "AddWording", type: "AddType" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.UPDATE_FD, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.UPDATE_FD) }), body: { fromAccount: "", updateItem: void 0 }, keyMap: { req: { snsItem: "SnsItem" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.DEL_FD, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.DEL_FD) }), body: { fromAccount: "", userIDList: [], type: "" }, keyMap: { req: { type: "DeleteType" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.GET_FD_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.GET_FD_PROFILE) }), body: { fromAccount: "", userIDList: void 0 }, keyMap: { res: { InfoItem: "resultList", SnsProfileItem: "tagValueList" } } }), this._map.set(G2.CHECK_FD, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.CHECK_FD) }), body: { fromAccount: "", userIDList: [], type: "" }, keyMap: { req: { type: "CheckType" }, res: { InfoItem: "resultList" } } }), this._map.set(G2.GET_FD_APPLICATION_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.GET_FD_APPLICATION_LIST) }), body: { fromAccount: "", applicationType: "", startTime: 0, maxLimited: 0, lastSequence: 0 }, keyMap: { res: { PendencyItem: "resultList", AddSource: "source", AddTime: "time", AddWording: "wording", Image: "avatar", UnreadPendencyCount: "unreadCount", To_Account: "userID", PendencyType: "type" } } }), this._map.set(G2.RESPOND_FD_APPLICATION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.RESPOND_FD_APPLICATION) }), body: { fromAccount: "", responseFriendItem: [] }, keyMap: { req: { tag: "TagName", action: "ResponseAction" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.DEL_FD_APPLICATION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.DEL_FD_APPLICATION) }), body: { fromAccount: "", type: "", userIDList: void 0 }, keyMap: { req: { type: "PendencyType", userIDList: "To_Account" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.REPORT_FD_APPLICATION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.REPORT_FD_APPLICATION) }), body: { fromAccount: "", latestTimeStamp: "" }, keyMap: { req: { latestTimeStamp: "LatestPendencyTimeStamp" } } }), this._map.set(G2.CREATE_FD_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.CREATE_FD_GRP) }), body: { fromAccount: "", groupName: void 0, userIDList: void 0 }, keyMap: { req: { groupName: "GroupName", userIDList: "To_Account" }, res: { ResultItem: "resultList" } } }), this._map.set(G2.DEL_FD_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.DEL_FD_GRP) }), body: { fromAccount: "", nameList: void 0 }, keyMap: { req: { nameList: "GroupName" } } }), this._map.set(G2.GET_FD_GRP_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.GET_FD_GRP_LIST) }), body: { fromAccount: "", lastSequence: 0, needFriend: "Need_Friend_Type_Yes" }, keyMap: { res: { ResultItem: "resultList", GroupName: "name", FriendNumber: "friendCount", To_Account: "userIDList" } } }), this._map.set(G2.UPDATE_FD_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FD, ".").concat(G2.UPDATE_FD_GRP) }), body: { fromAccount: "", oldName: "", newName: void 0, updateGroupItem: void 0 }, keyMap: { req: { oldName: "GroupOldName", newName: "GroupNewName" }, res: { UpdateType: "type", ResultItem: "resultList" } } }), this._map.set(G2.GET_GRP_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_LIST) }), body: { memberAccount: "", limit: void 0, offset: void 0, groupType: void 0, responseFilter: { groupBaseInfoFilter: void 0, selfInfoFilter: void 0 }, isSupportTopic: 0, needAppDefineData: 1 }, keyMap: { req: { memberAccount: "Member_Account" }, res: { GroupIdList: "groups", MsgSeq: "readedSequence", LastRecallTime: "_lastRevokedTime", AppDefinedData: "groupCustomField" } } }), this._map.set(G2.GET_GRP_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_PROFILE) }), body: { groupIDList: void 0, responseFilter: { groupBaseInfoFilter: void 0, groupCustomFieldFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 } }, keyMap: { req: { groupIDList: "GroupIdList", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", groupCustomFieldFilter: "AppDefinedDataFilter_Group", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { GroupIdList: "groups", AppDefinedData: "groupCustomField", AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_Group: "groupCustomFieldFilter", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", InfoSeq: "infoSequence", MemberList: "members", GroupInfo: "groups", ShutUpUntil: "muteUntil", ShutUpAllMember: "muteAllMembers" } } }), this._map.set(G2.CREATE_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.CREATE_GRP) }), body: { type: void 0, name: void 0, groupID: void 0, ownerID: void 0, introduction: void 0, notification: void 0, maxMemberNum: void 0, joinOption: void 0, memberList: void 0, groupCustomField: void 0, memberCustomField: void 0, webPushFlag: 1, avatar: "", isSupportTopic: void 0, inviteOption: void 0 }, keyMap: { req: { ownerID: "Owner_Account", userID: "Member_Account", avatar: "FaceUrl", maxMemberNum: "MaxMemberCount", joinOption: "ApplyJoinOption", groupCustomField: "AppDefinedData", memberCustomField: "AppMemberDefinedData", inviteOption: "InviteJoinOption" }, res: { HugeGroupFlag: "avChatRoomFlag", OverJoinedGroupLimit_Account: "overLimitUserIDList" } } }), this._map.set(G2.DISMISS_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.DISMISS_GRP) }), body: { groupID: void 0 } }), this._map.set(G2.UPDATE_GRP_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.UPDATE_GRP_PROFILE) }), body: { groupID: void 0, name: void 0, introduction: void 0, notification: void 0, avatar: void 0, joinOption: void 0, groupCustomField: void 0, muteAllMembers: void 0, inviteOption: void 0 }, keyMap: { req: { groupCustomField: "AppDefinedData", muteAllMembers: "ShutUpAllMember", joinOption: "ApplyJoinOption", avatar: "FaceUrl", inviteOption: "InviteJoinOption" }, res: { AppDefinedData: "groupCustomField", ShutUpAllMember: "muteAllMembers" } } }), this._map.set(G2.APPLY_JOIN_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.APPLY_JOIN_GRP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1, historyMessageFlag: void 0 }, keyMap: { req: { applyMessage: "ApplyMsg", historyMessageFlag: "HugeGroupHistoryMsgFlag" }, res: { HugeGroupFlag: "avChatRoomFlag", AVChatRoomKey: "avChatRoomKey", RspMsgList: "messageList", ToGroupId: "to" } } }), this._map.set(G2.APPLY_JOIN_GRP_NOAUTH, (e5.a2, e5.tinyid, { head: y2(y2({}, W2(e5, ha)), {}, { servcmd: "".concat(a4.NAME.BIG_GRP_NO_AUTH, ".").concat(G2.APPLY_JOIN_GRP) }), body: { groupID: void 0, applyMessage: void 0, userDefinedField: void 0, webPushFlag: 1 }, keyMap: { req: { applyMessage: "ApplyMsg" }, res: { HugeGroupFlag: "avChatRoomFlag" } } })), this._map.set(G2.QUIT_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.QUIT_GRP) }), body: { groupID: void 0 } }), this._map.set(G2.SEARCH_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.SEARCH_GRP) }), body: { groupIDList: void 0, responseFilter: { groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "InviteJoinOption"] } } }), this._map.set(G2.CHANGE_GRP_OWNER, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.CHANGE_GRP_OWNER) }), body: { groupID: void 0, newOwnerID: void 0 }, keyMap: { req: { newOwnerID: "NewOwner_Account" } } }), this._map.set(G2.HANDLE_GRP_APPLICATION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.HANDLE_GRP_APPLICATION) }), body: { groupID: void 0, applicant: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { req: { applicant: "Applicant_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } }), this._map.set(G2.HANDLE_INVITE_JOIN_GRP, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.HANDLE_INVITE_JOIN_GRP) }), body: { groupID: void 0, applicant: void 0, invitee: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, userDefinedField: void 0 }, keyMap: { req: { applicant: "Applicant_Account", invitee: "Invited_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg" } } }), this._map.set(G2.HANDLE_GRP_INVITATION, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.HANDLE_GRP_INVITATION) }), body: { groupID: void 0, inviter: void 0, handleAction: void 0, handleMessage: void 0, authentication: void 0, messageKey: void 0, userDefinedField: void 0 }, keyMap: { req: { inviter: "Inviter_Account", handleAction: "HandleMsg", handleMessage: "ApprovalMsg", messageKey: "MsgKey" } } }), this._map.set(G2.GET_GRP_PENDENCY, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_PENDENCY) }), body: { startTime: void 0, limit: void 0, handleAccount: void 0 }, keyMap: { req: { handleAccount: "Handle_Account" }, res: { To_Account: "userID", ApplyInviteMsg: "note" } } }), this._map.set(G2.DEL_GRP_SYSTEM_NOTICE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.DEL_GRP_SYSTEM_NOTICE) }), body: { messageListToDelete: void 0 }, keyMap: { req: { messageListToDelete: "DelMsgList", messageSeq: "MsgSeq", messageRandom: "MsgRandom" } } }), this._map.set(G2.AV_POLLING, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.BIG_GRP_POLLING, ".").concat(G2.AV_POLLING) }), body: { USP: 1, startSeq: 1, startBroadcastSeq: void 0, holdTime: 90, key: void 0, simplifiedMessage: void 0 }, keyMap: { req: { USP: "USP" }, res: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } }), this._map.set(G2.AV_NOAUTH_POLLING, (e5.a2, e5.tinyid, { head: y2(y2({}, W2(e5, ga)), {}, { servcmd: "".concat(a4.NAME.BIG_GRP_POLLING_NO_AUTH, ".").concat(G2.AV_POLLING) }), body: { USP: 1, startSeq: 1, holdTime: 90, key: void 0, simplifiedMessage: void 0 }, keyMap: { req: { USP: "USP" }, res: { ToGroupId: "groupID", RspBroadcastMsgList: "broadcastMessageList", IsSystemMsg: "isSystemMessage" } } })), this._map.set(G2.GET_ONLINE_MBR_NUM, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_ONLINE_MBR_NUM) }), body: { groupID: void 0 }, keyMap: { res: { OnlineMemberNum: "memberCount" } } }), this._map.set(G2.SET_GRP_ATTR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.SET_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key", value: "value" } } }), this._map.set(G2.MODIFY_GRP_ATTR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.MODIFY_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key", value: "value" } } }), this._map.set(G2.DEL_GRP_ATTR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.DEL_GRP_ATTR) }), body: { groupID: void 0, groupAttributeList: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] }, keyMap: { req: { key: "key" } } }), this._map.set(G2.CLEAR_GRP_ATTR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.CLEAR_GRP_ATTR) }), body: { groupID: void 0, mainSequence: void 0, avChatRoomKey: void 0, attributeControl: ["RaceConflict"] } }), this._map.set(G2.GET_GRP_ATTR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_ATTR, ".").concat(G2.GET_GRP_ATTR) }), body: { groupID: void 0, avChatRoomKey: void 0, groupType: 1 }, keyMap: { req: { avChatRoomKey: "Key", groupType: "GroupType" } } }), this._map.set(G2.GET_GRP_NOTIFY, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_NOTIFY) }), body: { notifyReqList: [] }, keyMap: { req: { notifyReqList: "NotifyReqList" }, res: { NextMsgTime: "nextRevokedTime", NotifyMsgList: "notifyList", NotifyRspList: "notifyRspList" } } }), this._map.set(G2.UPDATE_GRP_COUNTER, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.UPDATE_GRP_COUNTER) }), body: { groupID: void 0, counterList: void 0, avChatRoomKey: void 0, mode: void 0 }, keyMap: { req: { counterList: "GroupCounter" } } }), this._map.set(G2.GET_GRP_COUNTER, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_COUNTER) }), body: { groupID: void 0, keyList: [], avChatRoomKey: void 0 }, keyMap: { req: { keyList: "GroupCounterKeys" } } }), this._map.set(G2.CREATE_TOPIC, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_COMMUNITY, ".").concat(G2.CREATE_TOPIC) }), body: { groupID: void 0, topicName: void 0, avatar: void 0, customData: void 0, topicID: void 0, notification: void 0, introduction: void 0 }, keyMap: { req: { avatar: "FaceUrl" } } }), this._map.set(G2.DEL_TOPIC, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_COMMUNITY, ".").concat(G2.DEL_TOPIC) }), body: { groupID: void 0, topicIDList: void 0 }, keyMap: { req: { topicIDList: "TopicIdList" }, res: { DestroyResultItem: "resultList" } } }), this._map.set(G2.UPDATE_TOPIC_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_COMMUNITY, ".").concat(G2.UPDATE_TOPIC_PROFILE) }), body: { groupID: void 0, topicID: void 0, avatar: void 0, customData: void 0, notification: void 0, introduction: void 0, muteAllMembers: void 0, topicName: void 0 }, keyMap: { req: { avatar: "FaceUrl", muteAllMembers: "ShutUpAllMember" } } }), this._map.set(G2.GET_TOPIC_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_COMMUNITY, ".").concat(G2.GET_TOPIC_LIST) }), body: { groupID: void 0, topicIDList: void 0, MemberInfoFilter: ["NoUnreadSeqList"] }, keyMap: { req: { topicIDList: "TopicIdList" }, res: { TopicAndSelfInfo: "topicInfoList", TopicInfo: "topic", GroupID: "groupID", ShutUpTime: "muteTime", ShutUpAllFlag: "muteAllMembers", LastMsgTime: "lastMessageTime", MsgSeq: "readedSequence", LastMsgSeq: "sequence" } } }), this._map.set(G2.GET_GRP_MBR_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_MBR_LIST) }), body: { groupID: void 0, limit: 0, offset: void 0, next: void 0, memberRoleFilter: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { req: { memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { AppMemberDefinedData: "memberCustomField", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", MemberList: "members", ShutUpUntil: "muteUntil" } } }), this._map.set(G2.GET_AV_MBR_LIST, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_AV, ".").concat(G2.GET_AV_MBR_LIST) }), body: { groupID: void 0, offset: void 0, filter: void 0 }, keyMap: { req: { offset: "Timestamp", filter: "Mark" }, res: { NextTimestamp: "offset" } } }), this._map.set(G2.GET_GRP_MBR_PROFILE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.GET_GRP_MBR_PROFILE) }), body: { groupID: void 0, userIDList: void 0, memberInfoFilter: void 0, memberCustomFieldFilter: void 0 }, keyMap: { req: { userIDList: "Member_List_Account", memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember" }, res: { MemberList: "members", ShutUpUntil: "muteUntil", AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter", AppMemberDefinedData: "memberCustomField" } } }), this._map.set(G2.ADD_GRP_MBR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.ADD_GRP_MBR) }), body: { groupID: void 0, silence: void 0, userIDList: void 0 }, keyMap: { req: { userID: "Member_Account", userIDList: "MemberList" }, res: { MemberList: "members" } } }), this._map.set(G2.DEL_GRP_MBR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.DEL_GRP_MBR) }), body: { groupID: void 0, userIDList: void 0, reason: void 0 }, keyMap: { req: { userIDList: "MemberToDel_Account" } } }), this._map.set(G2.BAN_AV_MBR, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.BAN_AV_MBR) }), body: { groupID: void 0, userIDList: void 0, duration: void 0, reason: "" }, keyMap: { req: { userIDList: "Members_Account", duration: "Duration", reason: "Description" } } }), this._map.set(G2.MODIFY_GRP_MBR_INFO, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP, ".").concat(G2.MODIFY_GRP_MBR_INFO) }), body: { groupID: void 0, topicID: void 0, userID: void 0, messageRemindType: void 0, nameCard: void 0, role: void 0, memberCustomField: void 0, muteTime: void 0 }, keyMap: { req: { userID: "Member_Account", memberCustomField: "AppMemberDefinedData", muteTime: "ShutUpTime", messageRemindType: "MsgFlag" } } }), this._map.set(G2.MARK_AV_MBR_INFO, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_AV, ".").concat(G2.MARK_AV_MBR_INFO) }), body: { groupID: void 0, operationType: 1, memberList: [] }, keyMap: { req: { operationType: "CommandType", memberList: "MemberList", markType: "Marks", userID: "Member_Account" }, res: { CommandType: "operationType", Marks: "markType", Member_Account: "userID" } } }), this._map.set(G2.CS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.MSG_SEARCH, ".").concat(G2.CS) }), body: { keywordList: void 0, keywordListMatchType: "or", account: void 0, groupID: void 0, count: 100, cursor: void 0, messageTypeList: void 0, senderUserIDList: void 0, startTime: void 0, endTime: void 0 }, keyMap: { req: { keywordListMatchType: "MatchType", account: "PeerAccount", groupID: "GroupID", messageTypeList: "MsgTypeList", senderUserIDList: "SendUserIDList", keywords: "Keywords", keywordMatchType: "KeywordMatchType", count: "Count", miniBirthday: "UserBirthStart", maxBirthday: "UserBirthEnd", gender: "UserGenderType", groupTypeList: "GroupType", groupIDList: "GroupIdList" }, res: { GroupID: "groupID", UserID: "userID", ErrorCode: "code", ErrorInfo: "message", TotalCount: "totalCount", Count: "messageCount", LastMsgTime: "lastMessageTime", ConversationMsgs: "searchResult", IsNeedReadReceipt: "needReadReceipt", IsPeerRead: "readReceiptSentByPeer", MsgSeq: "sequence", ReqMsgSeq: "sequence", IsSystemMsg: "isSystemMessage", ToGroupId: "to", EnumFrom_AccountType: "fromAccountType", EnumTo_AccountType: "toAccountType", GroupCode: "groupCode", MsgContent: "content", ClientSeq: "clientSequence", ToTopicId: "topicID", InvisibleMsgSeq: "invisibleSequenceList", Users: "userList", ProfileItems: "profileItems", StrValue: "value", IntValue: "value", Groups: "groupList", GroupFaceUrl: "avatar", GroupIntroduction: "introduction", GroupOwnerUserID: "ownerID", GroupOwnerUserName: "ownerNick", GroupOwnerTinyID: "ownerTinyID", GroupMemberNum: "memberNum", GroupName: "name", GroupType: "type", GroupMembers: "groupMemberList", GroupMemberUserID: "userID", GroupMemberTinyID: "userTinyID", GroupMemberUserName: "nick", GroupMemberNameCard: "nameCard" } } }), this._map.set(G2.USER_CS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.USER_SEARCH, ".").concat(G2.CS) }), body: { keywords: void 0, keywordMatchType: 0, miniBirthday: void 0, maxBirthday: void 0, gender: void 0, count: 20, cursor: void 0 } }), this._map.set(G2.GRP_CS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_SEARCH, ".").concat(G2.CS) }), body: { keywords: void 0, keywordMatchType: 0, groupType: void 0, count: 20, cursor: void 0 } }), this._map.set(G2.MBR_CS, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.GRP_MEMBER_SEARCH, ".").concat(G2.CS) }), body: { keywords: void 0, keywordMatchType: 0, groupType: void 0, groupIDList: void 0, count: 20, cursor: void 0 } }), this._map.set(G2.SSO_STAT, { head: y2(y2({}, n5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STAT, ".").concat(G2.SSO_STAT) }), body: { header: {}, event: [], quality: [] }, keyMap: { req: { SDKType: "sdk_type", SDKVersion: "sdk_version", deviceType: "device_type", platform: "platform", instanceID: "instance_id", traceID: "trace_id", SDKAppID: "sdk_app_id", userID: "user_id", tinyID: "tiny_id", extension: "extension", timestamp: "timestamp", networkType: "network_type", eventType: "event_type", code: "error_code", message: "error_message", moreMessage: "more_message", duplicate: "duplicate", costTime: "cost_time", level: "level", qualityType: "quality_type", reportIndex: "report_index", wholePeriod: "whole_period", totalCount: "total_count", rttCount: "success_count_business", successRateOfRequest: "percent_business", countLessThan1Second: "success_count_business", percentOfCountLessThan1Second: "percent_business", countLessThan3Second: "success_count_platform", percentOfCountLessThan3Second: "percent_platform", successCountOfBusiness: "success_count_business", successRateOfBusiness: "percent_business", successCountOfPlatform: "success_count_platform", successRateOfPlatform: "percent_platform", successCountOfMessageReceived: "success_count_business", successRateOfMessageReceived: "percent_business", avgRTT: "average_value", avgDelay: "average_value", avgValue: "average_value", uiPlatform: "ui_platform" } } }), this._map.set(G2.PING, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.HEARTBEAT, ".").concat(G2.PING) }), body: {} }), this._map.set(G2.MSG_PUSH, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_PUSH, ".").concat(G2.MSG_PUSH) }), body: {}, keyMap: { res: { C2cMsgArray: "C2CMessageArray", GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", C2cNotifyMsgArray: "C2CNotifyMessageArray", C2cMsgInfo: "C2CReadReceiptArray", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyAdd_Account: "userID", ProfileImNick: "nick", PendencyType: "applicationType", C2CReadAllMsg: "readAllC2CMessage", IsNeedReadReceipt: "needReadReceipt", Status: "statusType" } } }), this._map.set(G2.MULTI_MSG_PUSH, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_PUSH, ".").concat(G2.MULTI_MSG_PUSH) }), body: {}, keyMap: { res: { GroupMsgArray: "groupMessageArray", GroupTips: "groupTips", ClientSeq: "clientSequence", MsgPriority: "priority", NoticeSeq: "noticeSequence", MsgContent: "content", MsgType: "type", MsgBody: "elements", ToGroupId: "to", Desc: "description", Ext: "extension", IsSyncMsg: "isSyncMessage", Flag: "needSync", NeedAck: "needAck", PendencyType: "applicationType" } } }), this._map.set(G2.MSG_PUSH_ACK, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OPEN_IM, ".").concat(G2.MSG_PUSH_ACK) }), body: { sessionData: void 0 }, keyMap: { req: { sessionData: "SessionData" } } }), this._map.set(G2.STATUS_FORCE_OFFLINE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.STATUS_FORCE_OFFLINE) }), body: {}, keyMap: { res: { C2cNotifyMsgArray: "C2CNotifyMessageArray", NoticeSeq: "noticeSequence", KickoutMsgNotify: "kickoutMsgNotify", NewInstInfo: "newInstanceInfo" } } }), this._map.set(G2.DOWNLOAD_MERGER_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_LONG_MSG, ".").concat(G2.DOWNLOAD_MERGER_MSG) }), body: { downloadKey: "" }, keyMap: { res: { Data: "data", Desc: "description", Ext: "extension", Download_Flag: "downloadFlag", ThumbUUID: "thumbUUID", VideoUUID: "videoUUID" } } }), this._map.set(G2.UPLOAD_MERGER_MSG, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_LONG_MSG, ".").concat(G2.UPLOAD_MERGER_MSG) }), body: { messageList: [] }, keyMap: { req: { fromAccount: "From_Account", toAccount: "To_Account", msgTimeStamp: "MsgTimeStamp", msgSeq: "MsgSeq", msgRandom: "MsgRandom", msgBody: "MsgBody", type: "MsgType", content: "MsgContent", data: "Data", description: "Desc", extension: "Ext", sizeType: "Type", uuid: "UUID", url: "", imageUrl: "URL", fileUrl: "Url", remoteAudioUrl: "Url", remoteVideoUrl: "VideoUrl", thumbUUID: "ThumbUUID", videoUUID: "VideoUUID", videoUrl: "", downloadFlag: "Download_Flag", from: "From_Account", time: "MsgTimeStamp", messageRandom: "MsgRandom", messageSequence: "MsgSeq", elements: "MsgBody", clientSequence: "ClientSeq", payload: "MsgContent", messageList: "MsgList", messageNumber: "MsgNum", abstractList: "AbstractList", messageBody: "MsgBody" } } }), this._map.set(G2.FOLLOW, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FOLLOW, ".").concat(G2.FOLLOW) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "FollowItem" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(G2.UNFOLLOW, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FOLLOW, ".").concat(G2.UNFOLLOW) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(G2.GET_FOLLOW_INFO, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FOLLOW, ".").concat(G2.GET_FOLLOW_INFO) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { FollowInfo: "followInfoList", To_Account: "userID", FollowerCount: "followersCount", FollowingCount: "followingCount", MutualFollowingCount: "mutualFollowersCount" } } }), this._map.set(G2.GET_FOLLOW, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FOLLOW, ".").concat(G2.GET_FOLLOW) }), body: { fromAccount: "", type: 1, nextCursor: "", count: 500 }, keyMap: { req: { type: "FollowType", nextCursor: "StartCursor", count: "WantNum" }, res: { FollowItem: "resultList", To_Account: "userID", ProfileItem: "profileList" } } }), this._map.set(G2.CHECK_FOLLOW_TYPE, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.FOLLOW, ".").concat(G2.CHECK_FOLLOW_TYPE) }), body: { fromAccount: "", userIDList: [] }, keyMap: { req: { userIDList: "To_Account" }, res: { ResultItem: "resultList", To_Account: "userID" } } }), this._map.set(G2.SET_TOKEN, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.SET_TOKEN) }), body: { tokenID: "", pushMsg: 0, sdkAppID: 0, businessID: "", deviceBrand: "", deviceToken: "", isTpns: 0, isWebUniapp: 0, notificationStatus: 0, deviceModel: "", systemVersion: "", pushVersion: "" }, keyMap: { req: { tokenID: "TokenID", pushMsg: "PushMsg", sdkAppID: "EnterVersion", businessID: "BusiID", deviceBrand: "InstType", deviceToken: "VarToken", isTpns: "IsTpns", notificationStatus: "NotificationStatus", deviceModel: "DeviceModel", systemVersion: "SystemVersion", pushVersion: "PushPluginVersion" } } }), this._map.set(G2.STAT_FOREGROUND, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.STAT_FOREGROUND) }), body: { isWebUniapp: 0 } }), this._map.set(G2.STAT_BACKGROUND, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_OPEN_STATUS, ".").concat(G2.STAT_BACKGROUND) }), body: { C2CUnread: 0, GroupUnread: 0, isWebUniapp: 0 }, keyMap: { req: { c2cUnreadCount: "C2cUnread", groupUnreadCount: "GrpUnread" } } }), this._map.set(G2.PUSH_REPORT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.OFFLINE_PUSH_REPORT, ".").concat(G2.PUSH_REPORT) }), body: { eventList: [] }, keyMap: { req: { eventList: "UinappPushEvents", type: "EventType", time: "EventTime", pushId: "ClickExt" } } }), this._map.set(G2.SET_ALL_RECEIVE_MSG_OPT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_MSG_LOGIC, ".").concat(G2.SET_ALL_RECEIVE_MSG_OPT) }), body: { startTime: 0, endTime: 0, isRepeated: 0, messageRemindType: 0 }, keyMap: { req: { messageRemindType: "Level" } } }), this._map.set(G2.GET_ALL_RECEIVE_MSG_OPT, { head: y2(y2({}, e5), {}, { servcmd: "".concat(a4.NAME.IM_MSG_LOGIC, ".").concat(G2.GET_ALL_RECEIVE_MSG_OPT) }), body: { toAccount: void 0 } });
      } }, { key: "has", value: function(e5) {
        return this._map.has(e5);
      } }, { key: "get", value: function(e5) {
        return this._map.get(e5);
      } }, { key: "update", value: function() {
        this._fillMap();
      } }, { key: "getKeyMap", value: function(e5) {
        return this.has(e5) ? this.get(e5).keyMap || {} : (M3.w("".concat(this._n, ".getKeyMap unknown P:").concat(e5)), {});
      } }, { key: "getProtocolData", value: function(e5) {
        var t5 = e5.P, n5 = e5.data, e5 = this.get(t5), t5 = null;
        if (n5) {
          var o5, i5 = this._simpleDeepCopy(e5), i5 = this._updateService(n5, i5), a5 = i5.body, s5 = /* @__PURE__ */ Object.create(null);
          for (o5 in a5)
            if (Object.prototype.hasOwnProperty.call(a5, o5)) {
              if (s5[o5] = a5[o5], void 0 === n5[o5])
                continue;
              s5[o5] = n5[o5];
            }
          i5.body = s5, t5 = this._getUplinkData(i5);
        } else
          t5 = this._getUplinkData(e5);
        return t5;
      } }, { key: "_getUplinkData", value: function(e5) {
        var e5 = this._dataCleaner(e5), t5 = Ht2(e5.head), t5 = ta(e5.body, this._getReqKeyMap(t5));
        return e5.body = t5, e5;
      } }, { key: "_updateService", value: function(e5, t5) {
        var n5, o5, i5 = Ht2(t5.head);
        return this._isFromGroupRequest(t5) && (n5 = e5.type, o5 = e5.groupID, e5 = void 0 === (e5 = e5.groupIDList) ? [] : e5, N3(o5 = void 0 === o5 ? void 0 : o5) && (o5 = e5[0] || ""), Ot2({ type: n5, groupID: o5 })) && (t5.head.servcmd = "".concat(a4.NAME.GRP_COMMUNITY, ".").concat(i5)), t5;
      } }, { key: "_isFromGroupRequest", value: function(e5) {
        return e5.head.servcmd.includes(a4.NAME.GRP) || e5.head.servcmd.includes(a4.NAME.GRP_ATTR);
      } }, { key: "_getReqKeyMap", value: function(e5) {
        e5 = this.getKeyMap(e5);
        return y2(y2({}, Yi.req), e5.req);
      } }, { key: "_dataCleaner", value: function(e5) {
        var t5, n5 = Array.isArray(e5) ? [] : /* @__PURE__ */ Object.create(null);
        for (t5 in e5)
          Object.prototype.hasOwnProperty.call(e5, t5) && lt2(t5) && null !== e5[t5] && void 0 !== e5[t5] && ("object" !== z2(e5[t5]) ? n5[t5] = e5[t5] : n5[t5] = this._dataCleaner.bind(this)(e5[t5]));
        return n5;
      } }, { key: "_simpleDeepCopy", value: function(e5) {
        for (var t5, n5 = Object.keys(e5), o5 = {}, i5 = 0, a5 = n5.length; i5 < a5; i5++)
          t5 = n5[i5], O3(e5[t5]) ? o5[t5] = Array.from(e5[t5]) : st2(e5[t5]) ? o5[t5] = this._simpleDeepCopy(e5[t5]) : o5[t5] = e5[t5];
        return o5;
      } }]), ma = [G2.MSG_PUSH_ACK], va = e4(function e5(t5) {
        p4(this, e5), this._sessionM = t5, this._n = "MsgDispatcher", this._eventHandlerMap = /* @__PURE__ */ new Map(), this._eventHandlerMap.set("C2CMessageArray", this._onC2CMsgArray.bind(this)), this._eventHandlerMap.set("groupMessageArray", this._onGroupMsgArray.bind(this)), this._eventHandlerMap.set("groupTips", this._onGroupTips.bind(this)), this._eventHandlerMap.set("C2CNotifyMessageArray", this._onC2CNotifyMsgArray.bind(this)), this._eventHandlerMap.set("C2CReadReceiptArray", this._onC2CReadReceiptArray.bind(this)), this._eventHandlerMap.set("profileModify", this._onProfileModified.bind(this)), this._eventHandlerMap.set("friendListMod", this._onRelationChainModified.bind(this)), this._eventHandlerMap.set("recentContactMod", this._onRecentContact.bind(this)), this._eventHandlerMap.set("readAllC2CMessage", this._onAllMsgRead.bind(this)), this._eventHandlerMap.set("c2cMessageModified", this._onC2CMsgModified.bind(this)), this._eventHandlerMap.set("groupMessageModified", this._onGroupMsgModified.bind(this)), this._eventHandlerMap.set("userStatusList", this._onUserStatusList.bind(this)), this._eventHandlerMap.set("messageExtensionNotify", this._onMsgExtNotify.bind(this)), this._eventHandlerMap.set("messageReactionNotifyList", this._onMsgReactionNotifyList.bind(this)), this._eventHandlerMap.set("messageReactionNotify", this._onMsgReactionNotify.bind(this)), this._eventHandlerMap.set("followChangeList", this._onFollowNotify.bind(this)), this._keys = d3(this._eventHandlerMap.keys());
      }, [{ key: "_onC2CMsgArray", value: function(e5) {
        var t5 = this._sessionM.get(6);
        e5.dataList.forEach(function(e6) {
          var t6;
          1 === e6.isSyncMessage && (t6 = e6.from, e6.from = e6.to, e6.to = t6);
        }), 1 === e5.needSync && this._sessionM.get(19).syncOnNeed(), t5.onNewMessage({ dataList: e5.dataList, isInstantMessage: true });
      } }, { key: "_onC2CMsgModified", value: function(e5) {
        this._sessionM.get(6).onMsgModified(e5);
      } }, { key: "_onGroupMsgArray", value: function(e5) {
        var t5 = this._sessionM.get(7);
        t5 && t5.onNewMessage({ event: e5.event, dataList: e5.dataList, isInstantMessage: true });
      } }, { key: "_onGroupMsgModified", value: function(e5) {
        var t5 = this._sessionM.get(7);
        t5 && t5.onMsgModified(e5);
      } }, { key: "_onGroupTips", value: function(e5) {
        var t5 = this._sessionM.get(7);
        if (t5) {
          var n5 = e5.event, o5 = e5.dataList, i5 = e5.isInstantMessage, a5 = void 0 === i5 || i5, s5 = e5.isSyncingEnded;
          switch (n5) {
            case 4:
            case 6:
              t5.onNewGroupTips({ event: n5, dataList: o5 });
              break;
            case 5:
              for (var r5 = 0; r5 < o5.length; r5++)
                if (O3(o5[r5].elements.revokedInfos))
                  t5.onMsgRevoked({ dataList: o5 });
                else if (O3(o5[r5].elements.groupMessageReadNotice))
                  t5.onMsgReadNotice({ dataList: o5 });
                else {
                  if (!O3(o5[r5].elements.readReceiptList)) {
                    t5.onNewGroupSystemNotice({ dataList: o5, isInstantMessage: a5, isSyncingEnded: s5 });
                    break;
                  }
                  t5.onReadReceiptList({ dataList: o5 });
                }
              break;
            case 12:
              this._sessionM.get(11).onNewGroupAtTips({ dataList: o5 });
              break;
            default:
              M3.l("".concat(this._n, "._onGroupTips unknown event:").concat(n5, " dataList:"), o5);
          }
        }
      } }, { key: "_onC2CNotifyMsgArray", value: function(e5) {
        var o5, i5 = this, a5 = e5.dataList;
        O3(a5) && (o5 = this._sessionM.get(6), a5.forEach(function(e6) {
          var t5, n5;
          m3(e6) && (e6.hasOwnProperty("kickoutMsgNotify") ? (t5 = (n5 = e6.kickoutMsgNotify).kickType, n5 = void 0 === (n5 = n5.newInstanceInfo) ? {} : n5, 1 === t5 ? i5._sessionM.onMultipleAccountKickedOut(n5) : 2 === t5 ? i5._sessionM.onMultipleDeviceKickedOut(n5) : 3 === t5 && i5._sessionM.onRestApiKickedOut(n5)) : e6.hasOwnProperty("c2cMessageRevokedNotify") ? o5 && o5.onMsgRevoked({ dataList: a5 }, true) : e6.hasOwnProperty("c2cMessageReadReceipt") ? o5 && o5.onMsgReadReceipt({ dataList: a5 }) : e6.hasOwnProperty("c2cMessageReadNotice") ? o5 && o5.onMsgReadNotice({ dataList: a5 }) : e6.hasOwnProperty("muteNotificationsSync") && i5._sessionM.get(11).onC2CMsgRemindTypeSynced({ dataList: a5 }));
        }));
      } }, { key: "_onC2CReadReceiptArray", value: function(e5) {
        this._sessionM.get(6).onReadReceiptList(e5);
      } }, { key: "_onProfileModified", value: function(e5) {
        this._sessionM.get(4).onProfileModified({ dataList: e5.dataList });
        var t5 = this._sessionM.get(8);
        t5 && t5.onFriendProfileModified({ dataList: e5.dataList });
      } }, { key: "_onRelationChainModified", value: function(e5) {
        this._sessionM.get(4).onRelationChainModified({ dataList: e5.dataList });
        var t5 = this._sessionM.get(8);
        t5 && t5.onRelationChainModified({ dataList: e5.dataList });
      } }, { key: "_onRecentContact", value: function(e5) {
        var i5, e5 = e5.dataList;
        O3(e5) && (i5 = this._sessionM.get(11)) && e5.forEach(function(e6) {
          var t5, n5, o5 = e6.pushType;
          1 === o5 ? (t5 = e6.recentContactDeleteItem, i5.onConvDeleted(t5.recentContactList)) : 2 === o5 ? (t5 = e6.recentContactTopItem, i5.onConvPinnedStatus(t5.recentContactList, true)) : 3 === o5 ? (t5 = e6.recentContactTopItem, i5.onConvPinnedStatus(t5.recentContactList, false)) : 4 === o5 ? (t5 = e6.recentContactMarkContact, i5.onConvMarkUpdated(t5.recentContactMarkContactItem)) : 5 === o5 ? (t5 = e6.recentContactCreateContactGroup, i5.onConvGroupCreated(t5.msgContactGroupContactItem)) : 6 === o5 ? (t5 = e6.recentContactDelContactGroup, i5.onConvGroupDeleted(t5.msgGroupItem)) : 7 === o5 && (o5 = (t5 = e6.recentContactUpdateContactGroup).updateType, e6 = t5.msgUpdateGroup, t5 = t5.msgUpdateContact, 1 === o5 ? 1 === (n5 = e6.updateGroupType) ? i5.onConvGroupNameUpdated(e6) : 2 === n5 && i5.onConvInGroupUpdated(e6) : 2 === o5 && i5.onConvAddedToOrDeletedFromGroup(t5));
        });
      } }, { key: "_onAllMsgRead", value: function(e5) {
        var e5 = e5.dataList, t5 = this._sessionM.get(11);
        t5 && t5.onPushedAllMessageRead(e5);
      } }, { key: "_onUserStatusList", value: function(e5) {
        this._sessionM.get(4).onUserStatusUpdated(e5);
      } }, { key: "_onMsgExtNotify", value: function(e5) {
        this._sessionM.get(3).onMsgExtNotify(e5);
      } }, { key: "_onMsgReactionNotifyList", value: function(e5) {
        this._sessionM.get(34).onReactionNotifyList(e5);
      } }, { key: "_onMsgReactionNotify", value: function(e5) {
        this._sessionM.get(34).onReactionNotify(e5);
      } }, { key: "_onFollowNotify", value: function(e5) {
        this._sessionM.get(35).onFollowNotify(e5);
      } }, { key: "_onTopicLatestMsg", value: function(e5) {
        this._sessionM.get(10).onTopicLatestMsg(e5);
      } }, { key: "onMessage", value: function(e5) {
        var t5 = this, n5 = e5.body;
        if (this._filterMsgFromIMOpenPush(e5)) {
          var o5, i5 = n5.eventArray, a5 = n5.isInstantMessage, s5 = n5.isSyncingEnded, r5 = n5.needSync;
          if (O3(i5))
            for (var c5, u5, l5, d4 = 0, p5 = i5.length; d4 < p5; d4++)
              100 !== (l5 = (c5 = i5[d4]).event) ? 24 !== l5 ? 26 !== l5 ? (o5 = Object.keys(c5).find(function(e6) {
                return -1 !== t5._keys.indexOf(e6);
              })) ? (u5 = 14 === l5 ? { readAllC2CMessage: c5[o5], groupMessageReadInfoList: c5.groupMessageReadNotice || [] } : 16 === l5 ? { userID: c5.userID, timestamp: c5.timestamp, readReceiptList: c5[o5] } : c5[o5], this._eventHandlerMap.get(o5)({ event: l5, dataList: u5, isInstantMessage: a5, isSyncingEnded: s5, needSync: r5 })) : M3.l("".concat(this._n, ".onMessage unknown eventItem:"), c5) : this._onTopicLatestMsg(c5) : this._onAllRcvMsgOptNotify(c5) : this._onRoomCustomData(c5.content);
        }
      } }, { key: "_onRoomCustomData", value: function(e5) {
        this._sessionM.get(30).onRoomCustomDataReceived(e5), M3.l("".concat(this._n, "._onRoomCustomData data:").concat(e5));
      } }, { key: "_onAllRcvMsgOptNotify", value: function(e5) {
        this._sessionM.get(11).onAllRcvMsgOptNotify(e5);
      } }, { key: "_filterMsgFromIMOpenPush", value: function(e5) {
        var t5 = e5.head, e5 = e5.body, t5 = t5.servcmd, n5 = false;
        return !(n5 = N3(t5) ? n5 : t5.includes(a4.NAME.IM_CONFIG_MANAGER) || t5.includes(a4.NAME.OVERLOAD_PUSH) || t5.includes(a4.NAME.STAT_SERVICE)) || (t5.includes(G2.PUSHED_CLOUD_CTRL_CONFIG) ? this._sessionM.get(23).onPushedConfig(e5) : t5.includes(G2.PUSHED_COMMERCIAL_CONFIG) ? this._sessionM.get(27).onPushedConfig(e5) : t5.includes(G2.OVERLOAD_NOTIFY) ? this._sessionM.onPushedServerOverload(e5) : t5.includes(G2.KICK_OTHER) && (n5 = Date.now(), this._sessionM.reLoginOnKickOther(), e5 = new P3("kickOther"), n5 = n5 - (t5 = this._sessionM.get(1).getLastWsHelloTs()), e5.setMessage("last wshello time:".concat(t5, " diff:").concat(n5, "ms")).end()), false);
      } }]), Ia = [{ cmd: G2.GET_GRP_PROFILE, interval: 1, count: 8 }, { cmd: G2.UPDATE_GRP_PROFILE, interval: 1, count: 8 }, { cmd: G2.GET_AV_MBR_LIST, interval: 3, count: 1 }, { cmd: G2.GET_GRP_PENDENCY, interval: 1, count: 15 }, { cmd: G2.GET_TOPIC_LIST, interval: 1, count: 10 }, { cmd: G2.SET_GRP_ATTR, interval: 5, count: 10 }, { cmd: G2.MODIFY_GRP_ATTR, interval: 5, count: 10 }, { cmd: G2.DEL_GRP_ATTR, interval: 5, count: 10 }, { cmd: G2.CLEAR_GRP_ATTR, interval: 5, count: 10 }, { cmd: G2.GET_GRP_ATTR, interval: 5, count: 20 }, { cmd: G2.UPDATE_GRP_COUNTER, interval: 5, count: 20 }, { cmd: G2.GET_GRP_COUNTER, interval: 5, count: 20 }, { cmd: G2.SET_ALL_MSG_READ, interval: 1, count: 1 }, { cmd: G2.GET_USER_STATUS, interval: 5, count: 20 }, { cmd: G2.SUB_USER_STATUS, interval: 5, count: 20 }, { cmd: G2.UNSUB_USER_STATUS, interval: 5, count: 20 }, { cmd: G2.CS, interval: 5, count: 20 }, { cmd: G2.GRP_CS, interval: 5, count: 20 }, { cmd: G2.MBR_CS, interval: 5, count: 20 }, { cmd: G2.USER_CS, interval: 5, count: 20 }, { cmd: G2.CHECK_FOLLOW_TYPE, interval: 5, count: 20 }, { cmd: G2.GET_GRP_ROAMING_MSG, interval: 1, count: 20 }, { cmd: G2.GET_C2C_ROAMING_MSG, interval: 1, count: 20 }], Ma = /* @__PURE__ */ new Map(), ya = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"], Ca = 0, Ta = ya.length; Ca < Ta; Ca++)
        Ma.set(Ca, ya[Ca]);
      function Da(e5) {
        return p4(this, Da), (e5 = i4(this, Da, [e5]))._n = "ChannelModule", e5._socketHandler = new da(e5), e5._probing = false, e5._isAppShowing = true, e5._previousState = R3.NET_STATE_CONNECTED, e5._timerForNotLoggedIn = -1, e5._timerForNotLoggedIn = setInterval(e5.onCheckTimer.bind(e5), 1e3), e5._fatalErrorFlag = false, e5._disconnectedTS = 0, e5._lastDiagnoseTS = 0, e5;
      }
      function Ea(e5) {
        for (var t5, n5, o5 = e5, i5 = "", a5 = 0, s5 = (o5 = e5.length % 8 != 0 ? "0".repeat(8 - e5.length % 8) + e5 : o5).length; a5 < s5; a5 += 8)
          t5 = parseInt(o5.slice(a5, a5 + 4), 2), n5 = parseInt(o5.slice(a5 + 4, a5 + 8), 2), i5 += Ma.get(t5) + Ma.get(n5);
        return i5;
      }
      function La(e5) {
        var t5;
        return e5 < 0 || 53 < e5 ? NaN : (t5 = 0 | 1073741824 * Math.random(), 30 < e5 ? t5 + 1073741824 * (0 | Math.random() * (1 << e5 - 30)) : t5 >>> 30 - e5);
      }
      function Sa(e5, t5) {
        for (var n5 = e5.toString(16), o5 = t5 - n5.length, i5 = "0"; 0 < o5; o5 >>>= 1, i5 += i5)
          1 & o5 && (n5 = i5 + n5);
        return n5;
      }
      t4(vs, c4);
      var ka = e4(vs, [{ key: "_init", value: function() {
        this._updateCmdFreqLimitMap(Ia);
      } }, { key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("cmd_frequency_limit");
        N3(e5) || (e5 = JSON.parse(e5), this._updateCmdFreqLimitMap(e5));
      } }, { key: "_updateCmdFreqLimitMap", value: function(e5) {
        var t5 = this;
        e5.forEach(function(e6) {
          t5._cmdFreqLimitMap.set(e6.cmd, { interval: e6.interval, count: e6.count });
        });
      } }, { key: "updateProtocolConfig", value: function() {
        this._pHandler.update();
      } }, { key: "req", value: function(e5) {
        M3.d("".concat(this._n, ".req options:"), e5);
        var t5, n5, o5 = e5.P;
        return this._pHandler.has(o5) ? (t5 = (e5 = this.getProtocolData(e5)).head.servcmd, this._isFreqOverLimit(t5) ? E4({ code: n5 = k2.OVER_FREQUENCY_LIMIT, message: this.getErrMsg(n5, this._getCmd(t5)) }) : this._isServerOverload(t5) ? E4({ code: n5 = k2.OPEN_SERVICE_OVERLOAD_ERROR, message: this.getErrMsg(n5, this._getCmd(t5)) }) : (n5 = this.get(21), ma.includes(o5) ? n5.simplySend(e5) : n5.send(e5))) : (M3.w("".concat(this._n, ".req unknown P:").concat(o5)), E4({ code: k2.NO_PROTOCOL }));
      } }, { key: "getKeyMap", value: function(e5) {
        return this._pHandler.getKeyMap(e5);
      } }, { key: "genCommonHead", value: function() {
        var e5 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: oe2, websdkversion: ne2, a2: e5.getA2Key() || void 0, tinyid: e5.getTinyID() || void 0, status_instid: e5.getStatusInstanceID(), sdkappid: e5.getSDKAppID(), contenttype: e5.getContentType(), reqtime: 0, identifier: e5.getA2Key() ? void 0 : e5.getUserID(), usersig: e5.getA2Key() ? void 0 : e5.getUserSig(), sdkability: 75689843, sdkability_ext: Ea(""), cappid: e5.getApplicationID(), cs: 0 };
      } }, { key: "genCosSpecifiedHead", value: function() {
        var e5 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: oe2, websdkversion: ne2, sdkappid: e5.getSDKAppID(), contenttype: e5.getContentType(), reqtime: 0, identifier: e5.getUserID(), usersig: e5.getUserSig(), status_instid: e5.getStatusInstanceID(), sdkability: 75689843, sdkability_ext: Ea(""), cappid: e5.getApplicationID(), cs: 0 };
      } }, { key: "genSSOReportHead", value: function() {
        var e5 = this.get(12);
        return { ver: "v4", platform: this._platform, websdkappid: oe2, websdkversion: ne2, sdkappid: e5.getSDKAppID(), contenttype: "", reqtime: 0, identifier: "", usersig: "", status_instid: e5.getStatusInstanceID(), sdkability: 75689843, sdkability_ext: Ea(""), cappid: e5.getApplicationID(), cs: 0 };
      } }, { key: "getProtocolData", value: function(e5) {
        return this._pHandler.getProtocolData(e5);
      } }, { key: "trans", value: function(e5) {
        var t5 = e5.servcmd, e5 = e5.data, t5 = { head: y2(y2({}, this.genCommonHead()), {}, { servcmd: t5 }), body: e5 };
        return this.get(21).send(t5);
      } }, { key: "sendComboMessage", value: function(e5) {
        var t5 = e5.servcmd, e5 = e5.data, t5 = { head: y2(y2({}, this.genCommonHead()), {}, { servcmd: t5 }), body: e5 };
        return this.get(21).send(t5);
      } }, { key: "onErrorCodeNotZero", value: function(e5) {
        var t5, n5 = e5.errorCode;
        n5 === k2.HELLO_ANSWER_KICKED_OUT && (t5 = e5.kickType, e5 = void 0 === (e5 = e5.newInstanceInfo) ? {} : e5, 1 === t5 ? this.onMultipleAccountKickedOut(e5) : 2 === t5 ? this.onMultipleDeviceKickedOut(e5) : 3 === t5 && this.onRestApiKickedOut(e5)), n5 !== k2.MSG_A2KEY_EXPIRED && n5 !== k2.ACCOUNT_A2KEY_EXPIRED || (this._onUserSigExpired(), this.get(21).reConnect());
      } }, { key: "onMessage", value: function(e5) {
        var t5 = e5.body, n5 = t5.needAck, t5 = t5.sessionData;
        1 === (void 0 === n5 ? 0 : n5) && this._sendACK(t5), this._msgDispatcher.onMessage(e5);
      } }, { key: "onReconnected", value: function(e5) {
        this._incrementalPullContactFlag = e5 <= 300, this._reLoginOnReconnected();
      } }, { key: "reLoginOnKickOther", value: function() {
        M3.l("".concat(this._n, ".reLoginOnKickOther")), this._reLogin();
      } }, { key: "_reLoginOnReconnected", value: function() {
        M3.l("".concat(this._n, "._reLoginOnReconnected")), this._reLogin();
      } }, { key: "_reLogin", value: function() {
        var e5, t5, s5, r5 = this, c5 = "".concat(this._n, "._reLogin");
        this.isLoggedIn() && (e5 = 0, (t5 = this.get(1).getPushModule()) && (e5 = t5.getUniAppPlatform()), s5 = new P3("reLogin"), this.req({ P: G2.LOGIN, data: { isWebUniapp: e5, customInfo: this.get(12).getCustomLoginInfo() } }).then(function(e6) {
          var e6 = e6.data, t6 = e6.instanceID, e6 = e6.customStatus, n5 = r5.get(12), o5 = Go(e6), i5 = (n5.setStatusInstanceID(t6), r5.get(21)), a5 = i5.getSocketID(), a5 = "socketID:".concat(a5, " instanceID:").concat(t6, " customStatus:").concat(o5), t6 = (s5.setMessage(a5).end(true), M3.l("".concat(c5, " ok. ").concat(a5)), n5.getCustomStatus() !== o5 && r5.get(4).onUserStatusUpdated({ dataList: [{ to: r5.getMyUserID(), statusType: R3.USER_STATUS_ONLINE, customStatus: e6 }] }), i5.diagnose(), r5.get(11).syncConvList(r5._incrementalPullContactFlag).then(function() {
            M3.l("".concat(c5, ", sync conv list ok.")), r5.get(25).start();
          }), r5.get(7)), a5 = (t6 && t6.updateLocalMainSequenceOnReconnected(), r5.get(10)), n5 = (a5.resetGetTopicTime(), a5.getTopicListOnReconnected(), r5.get(35));
          n5 && n5.clearCacheOnReconnected();
        }));
      } }, { key: "onMultipleAccountKickedOut", value: function(e5) {
        this.get(1).onMultipleAccountKickedOut(e5);
      } }, { key: "onMultipleDeviceKickedOut", value: function(e5) {
        this.get(1).onMultipleDeviceKickedOut(e5);
      } }, { key: "_onUserSigExpired", value: function() {
        this.get(1).onUserSigExpired();
      } }, { key: "onRestApiKickedOut", value: function(e5) {
        this.get(1).onRestApiKickedOut(e5);
      } }, { key: "_sendACK", value: function(e5) {
        this.req({ P: G2.MSG_PUSH_ACK, data: { sessionData: e5 } });
      } }, { key: "_isFreqOverLimit", value: function(e5) {
        var t5, n5, o5, i5, e5 = e5.split(".")[1];
        return !!this._cmdFreqLimitMap.has(e5) && (!this._cmdReqInfoMap.has(e5) || (t5 = (n5 = this._cmdFreqLimitMap.get(e5)).count, n5 = n5.interval, o5 = (i5 = this._cmdReqInfoMap.get(e5)).startTime, i5 = i5.requestCount, Date.now() - o5 > 1e3 * n5) ? (this._cmdReqInfoMap.set(e5, { startTime: Date.now(), requestCount: 1 }), false) : (this._cmdReqInfoMap.set(e5, { startTime: o5, requestCount: i5 += 1 }), t5 < i5));
      } }, { key: "_isServerOverload", value: function(e5) {
        var t5, n5;
        return !!this._serverOverloadInfoMap.has(e5) && (t5 = (n5 = this._serverOverloadInfoMap.get(e5)).overloadTime, n5 = n5.waitingTime, Date.now() - t5 <= 1e3 * n5 || (this._serverOverloadInfoMap.delete(e5), false));
      } }, { key: "_getCmd", value: function(e5) {
        var t5 = "";
        if (e5.includes(".")) {
          var n5, o5 = e5.split(".")[1];
          for (n5 in G2)
            if (G2[n5] === o5) {
              t5 = n5;
              break;
            }
        }
        return t5;
      } }, { key: "onPushedServerOverload", value: function(e5) {
        var t5 = e5.overloadCommand, e5 = e5.waitingTime;
        this._serverOverloadInfoMap.set(t5, { overloadTime: Date.now(), waitingTime: e5 }), M3.w("".concat(this._n, ".onPushedServerOverload waitingTime:").concat(e5, "s cmd:").concat(this._getCmd(t5)));
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._updateCmdFreqLimitMap(Ia), this._cmdReqInfoMap.clear(), this._serverOverloadInfoMap.clear(), this._incrementalPullContactFlag = true;
      } }]), Ra = (t4(ms, c4), e4(ms, [{ key: "getCloudConfig", value: function(e5) {
        return N3(e5) ? this._cloudConfig : this._cloudConfig.has(e5) ? this._cloudConfig.get(e5) : void 0;
      } }, { key: "getServerConfig", value: function(e5) {
        var t5 = { code: 0, data: "" };
        return !N3(e5) && this._cloudConfig.has(e5) && (t5.data = this._cloudConfig.get(e5)), Promise.resolve(t5);
      } }, { key: "_canFetch", value: function() {
        return this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime;
      } }, { key: "fetchConfig", value: function() {
        var o5, i5 = this, a5 = "".concat(this._n, ".fetchConfig"), e5 = this._canFetch();
        M3.l("".concat(a5, " canFetch:").concat(e5)), e5 && (o5 = new P3("fetchCloudCtrlConfig"), e5 = this.get(12).getSDKAppID(), this._isFetching = true, this.req({ P: G2.FETCH_CLOUD_CTRL_CONFIG, data: { SDKAppID: e5, version: this._version } }).then(function(e6) {
          i5._isFetching = false;
          var t5 = e6.data, n5 = t5.version, t5 = t5.cloudControlConfig;
          o5.setMessage("version:".concat(i5._version, " newVersion:").concat(n5, " config:").concat(t5)).end(), M3.l("".concat(a5, " ok")), i5._parse(e6.data);
        }).catch(function(e6) {
          i5._isFetching = false, o5.setError(e6).end(), M3.l("".concat(a5, " failed. error:"), e6), i5._setExpiredTime(12e4);
        }));
      } }, { key: "onPushedConfig", value: function(e5) {
        M3.l("".concat(this._n, ".onPushedConfig config:"), e5), new P3("pushedCloudCtrlConfig").setMessage("newVersion:".concat(e5.version, " config:").concat(e5.cloudControlConfig)).end(), this._parse(e5);
      } }, { key: "onCheckTimer", value: function(e5) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "_parse", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, "._parse"), o5 = e5.errorCode, i5 = e5.errorMessage, a5 = e5.cloudControlConfig, s5 = e5.version, r5 = e5.expiredTime;
        if (0 === o5) {
          if (this._version !== s5) {
            var c5 = null;
            try {
              c5 = JSON.parse(a5);
            } catch (e6) {
              this.isPrivateNetWork() || M3.e("".concat(n5, " failed. config:"), a5);
            }
            c5 && (this._cloudConfig.clear(), Object.keys(c5).forEach(function(e6) {
              t5._cloudConfig.set(e6, c5[e6]);
            }), this._version = s5, this.emitIEvt(U3.CLOUD_CONFIG));
          }
          this._setExpiredTime(1e3 * r5);
        } else
          N3(o5) ? (M3.l("".concat(n5, " failed. Invalid message format:"), e5), this._setExpiredTime(36e5)) : (M3.e("".concat(n5, " errorCode:").concat(o5, " errorMessage:").concat(i5)), this._setExpiredTime(12e4));
      } }, { key: "_setExpiredTime", value: function(e5) {
        this._expiredTime = Date.now() + e5;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._cloudConfig.clear(), this._expiredTime = 0, this._version = 0, this._isFetching = false;
      } }])), Aa = (t4(fs, c4), e4(fs, [{ key: "start", value: function() {
        this._recoverGroupChat(), this._recoverC2CChat();
      } }, { key: "_recoverGroupChat", value: function() {
        var n5, o5, i5, a5, s5 = this, e5 = this._getLocalConvList().filter(function(e6) {
          return e6.type === R3.CONV_GROUP && e6.groupProfile.type !== R3.GRP_AVCHATROOM;
        }), r5 = this.get(11), c5 = [];
        e5.forEach(function(e6) {
          var t5 = e6.conversationID, e6 = e6.lastMessage;
          n5 = t5.replace(R3.CONV_GROUP, ""), o5 = r5.getLocalLastMessage(t5), e6 && 0 !== e6.lastSequence && o5 && (i5 = e6.lastSequence, o5 = o5.sequence, a5 = i5 - o5, 0 < o5) && 1 <= a5 && a5 < 300 ? s5._recoverGroupMsg({ groupID: n5, localLastMessageSequence: o5, remoteLastMessageSequence: i5 }) : c5.push(n5);
        }), this._getGroupNotice(c5);
      } }, { key: "_recoverC2CChat", value: function() {
        var n5, o5, i5, a5 = this, e5 = this._getLocalConvList().filter(function(e6) {
          return e6.type === R3.CONV_C2C;
        }), s5 = this.get(11), r5 = [Promise.resolve()];
        e5.forEach(function(e6) {
          var t5 = e6.conversationID, e6 = e6.lastMessage;
          n5 = s5.getLocalLastMessage(t5), e6 && 0 !== e6.lastTime && n5 && (o5 = e6.lastTime, n5 = n5.time, i5 = o5 - n5, 0 < n5) && 1 <= i5 && i5 <= 600 && r5.push(a5._recoverC2CMsg({ conversationID: t5, localLastMessageTime: n5, remoteLastMessageTime: o5 }));
        }), Promise.all(r5).then(function() {
          M3.l("".concat(a5._n, "._recoverC2CChat all done")), a5.get(19).syncOnReconnected();
        });
      } }, { key: "_getLocalConvList", value: function() {
        return this.get(11).getLocalConvList();
      } }, { key: "_recoverGroupMsg", value: function(e5) {
        var d4 = this, p5 = "".concat(this._n, ".").concat("_recoverGroupMsg"), _4 = (M3.l("".concat(p5, " options:"), e5), e5.groupID), h5 = e5.localLastMessageSequence, g5 = e5.remoteLastMessageSequence, f4 = JSON.stringify(e5), m4 = new P3("_recoverGroupMsg");
        m4.setMessage(f4), this._getGroupRoamingMsg({ groupID: _4, sequence: h5 }).then(function(e6) {
          var e6 = e6.data, t5 = e6.complete, n5 = e6.messageList;
          if (!N3(n5)) {
            var e6 = n5[0].sequence, o5 = n5.map(function(e7) {
              return e7.sequence;
            }), o5 = "".concat(f4, " complete:").concat(t5, " sequenceList:").concat(o5), i5 = (M3.l("".concat(p5, " ").concat(o5)), e6 !== h5 && e6 < g5 && 2 !== t5 && d4._recoverGroupMsg({ groupID: _4, localLastMessageSequence: e6, remoteLastMessageSequence: g5 }), m4.setMessage(o5).end(), d4.get(7));
            1 < n5.length && n5.sort(function(e7, t6) {
              return e7.sequence - t6.sequence;
            });
            for (var a5 = false, s5 = 0, r5 = n5.length; s5 < r5; s5++)
              if (n5[s5].from === R3.CONV_SYSTEM) {
                a5 = true;
                break;
              }
            if (a5)
              for (var c5 = 0, u5 = n5.length; c5 < u5; c5++) {
                var l5 = n5[c5];
                l5.from !== R3.CONV_SYSTEM ? i5.onNewMessage({ dataList: [l5], isInstantMessage: false, updateUnreadCount: false }) : i5.onNewGroupTips({ event: l5.event, dataList: [l5] });
              }
            else
              i5.onNewMessage({ dataList: n5, isInstantMessage: false, updateUnreadCount: false });
          }
        }).catch(function(e6) {
          m4.setError(e6).end(), M3.w("".concat(p5, " failed. error:"), e6);
        });
      } }, { key: "_getGroupNotice", value: function(e5) {
        var t5 = e5.length;
        if (M3.l("".concat(this._n, "._getGroupNotice length:").concat(t5)), 0 !== t5) {
          var n5 = this.get(7);
          if (t5 <= 10)
            n5.getNotice(e5);
          else {
            var o5 = Math.floor(t5 / 10);
            5 <= o5 && (o5 = 5);
            for (var i5 = 0; i5 <= o5; i5++)
              n5.getNotice(e5.slice(10 * i5, 10 * (i5 + 1)));
          }
        }
      } }, { key: "_getGroupRoamingMsg", value: function(e5) {
        var t5 = e5.groupID, e5 = e5.sequence;
        return this.req({ P: G2.GET_GRP_ROAMING_MSG, data: { groupID: t5, count: this.PULL_LIMIT_COUNT, sequence: e5 + this.PULL_LIMIT_COUNT - 1 } });
      } }, { key: "_recoverC2CMsg", value: function(e5) {
        var o5 = this, i5 = "".concat(this._n, ".").concat("_recoverC2CMsg"), a5 = (M3.l("".concat(i5, " options:"), e5), e5.conversationID), t5 = e5.localLastMessageTime, s5 = e5.remoteLastMessageTime, r5 = JSON.stringify(e5), c5 = new P3("_recoverC2CMsg");
        return c5.setMessage(r5), this._getC2CRoamingMsg({ conversationID: a5, time: t5 }).then(function(e6) {
          var e6 = e6.data, t6 = e6.complete, e6 = e6.messageList;
          if (!N3(e6)) {
            var n5 = e6.length, n5 = (o5.get(6).onNewMessage({ dataList: e6, isInstantMessage: true }), e6[n5 - 1].time), e6 = e6.map(function(e7) {
              return e7.random;
            }), e6 = "".concat(r5, " complete:").concat(t6, " randomList:").concat(e6);
            if (M3.l("".concat(i5, " ").concat(e6)), c5.setMessage(e6).end(), n5 < s5 && 1 !== t6)
              return o5._recoverC2CMsg({ conversationID: a5, localLastMessageTime: n5, remoteLastMessageTime: s5 });
          }
        }).catch(function(e6) {
          c5.setError(e6).end(), M3.w("".concat(i5, " failed. error:"), e6);
        });
      } }, { key: "_getC2CRoamingMsg", value: function(e5) {
        var t5 = e5.conversationID, e5 = e5.time;
        return this.req({ P: G2.GET_C2C_ROAMING_MSG, data: { peerAccount: t5.replace(R3.CONV_C2C, ""), count: this.PULL_LIMIT_COUNT + 1, lastMessageTime: e5, direction: 1 } });
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }])), Oa = e4(function e5() {
        p4(this, e5), this._n = "AvgE2EDelay", this._e2eDelayArray = [];
      }, [{ key: "addMessageDelay", value: function(e5) {
        e5 = xe2() - e5;
        0 <= e5 && this._e2eDelayArray.push(e5);
      } }, { key: "_calcAvg", value: function(e5, t5) {
        var n5;
        return 0 === t5 ? 0 : (n5 = 0, e5.forEach(function(e6) {
          n5 += e6;
        }), Kt2(n5 / t5, 1));
      } }, { key: "_calcCountWithLimit", value: function(e5) {
        var t5 = e5.e2eDelayArray, n5 = e5.min, o5 = e5.max;
        return t5.filter(function(e6) {
          return n5 <= e6 && e6 < o5;
        }).length;
      } }, { key: "_calcPercent", value: function(e5, t5) {
        e5 = Kt2(e5 / t5 * 100, 2);
        return e5 = 100 < e5 ? 100 : e5;
      } }, { key: "_checkE2EDelayException", value: function(e5, t5) {
        var n5, o5, i5, a5 = e5.filter(function(e6) {
          return t5 < e6;
        });
        0 < a5.length && (n5 = a5.length, o5 = Math.min.apply(Math, d3(a5)), i5 = Math.max.apply(Math, d3(a5)), a5 = this._calcAvg(a5, n5), 50 < (e5 = Kt2(n5 / e5.length * 100, 2))) && new P3("messageE2EDelayException").setMessage("count:".concat(n5, " min:").concat(o5, " max:").concat(i5, " avg:").concat(a5, " percent:").concat(e5)).setLevel("warning").end();
      } }, { key: "getStatResult", value: function() {
        var e5, t5, n5, o5, i5, a5, s5 = this._e2eDelayArray.length;
        return 0 === s5 ? null : (e5 = d3(this._e2eDelayArray), t5 = this._calcCountWithLimit({ e2eDelayArray: e5, min: 0, max: 1 }), n5 = this._calcCountWithLimit({ e2eDelayArray: e5, min: 1, max: 3 }), o5 = this._calcPercent(t5, s5), i5 = this._calcPercent(n5, s5), a5 = this._calcAvg(e5, s5), this._checkE2EDelayException(e5, 3), e5.length = 0, this.reset(), { totalCount: s5, countLessThan1Second: t5, percentOfCountLessThan1Second: o5, countLessThan3Second: n5, percentOfCountLessThan3Second: i5, avgDelay: a5 });
      } }, { key: "reset", value: function() {
        this._e2eDelayArray.length = 0;
      } }]), Na = e4(function e5() {
        p4(this, e5), this._n = "AvgRTT", this._requestCount = 0, this._rttArray = [];
      }, [{ key: "addRequestCount", value: function() {
        this._requestCount += 1;
      } }, { key: "addRTT", value: function(e5) {
        this._rttArray.push(e5);
      } }, { key: "_calcTotalCount", value: function() {
        return this._requestCount;
      } }, { key: "_calcRTTCount", value: function(e5) {
        return e5.length;
      } }, { key: "_calcSuccessRateOfRequest", value: function(e5, t5) {
        return 0 === t5 ? 0 : 100 < (e5 = Kt2(e5 / t5 * 100, 2)) ? 100 : e5;
      } }, { key: "_calcAvg", value: function(e5, t5) {
        var n5;
        return 0 === t5 ? 0 : (n5 = 0, e5.forEach(function(e6) {
          n5 += e6;
        }), parseInt(n5 / t5));
      } }, { key: "_calcMax", value: function() {
        return Math.max.apply(Math, d3(this._rttArray));
      } }, { key: "_calcMin", value: function() {
        return Math.min.apply(Math, d3(this._rttArray));
      } }, { key: "getStatResult", value: function() {
        var e5, t5, n5 = this._calcTotalCount(), o5 = d3(this._rttArray);
        return 0 === n5 ? null : (e5 = this._calcRTTCount(o5), t5 = this._calcSuccessRateOfRequest(e5, n5), o5 = this._calcAvg(o5, e5), M3.l("".concat(this._n, ".getStatResult max:").concat(this._calcMax(), " min:").concat(this._calcMin(), " avg:").concat(o5)), this.reset(), { totalCount: n5, rttCount: e5, successRateOfRequest: t5, avgRTT: o5 });
      } }, { key: "reset", value: function() {
        this._requestCount = 0, this._rttArray.length = 0;
      } }]), Ga = e4(function e5() {
        p4(this, e5), this._map = /* @__PURE__ */ new Map();
      }, [{ key: "initMap", value: function(e5) {
        var t5 = this;
        e5.forEach(function(e6) {
          t5._map.set(e6, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
        });
      } }, { key: "addTotalCount", value: function(e5) {
        return !(N3(e5) || !this._map.has(e5) || (this._map.get(e5).totalCount += 1, 0));
      } }, { key: "addSuccessCount", value: function(e5) {
        return !(N3(e5) || !this._map.has(e5) || (this._map.get(e5).successCount += 1, 0));
      } }, { key: "addFailedCountOfUserSide", value: function(e5) {
        return !(N3(e5) || !this._map.has(e5) || (this._map.get(e5).failedCountOfUserSide += 1, 0));
      } }, { key: "addCost", value: function(e5, t5) {
        return !(N3(e5) || !this._map.has(e5) || (this._map.get(e5).costArray.push(t5), 0));
      } }, { key: "addFileSize", value: function(e5, t5) {
        return !(N3(e5) || !this._map.has(e5) || (this._map.get(e5).fileSizeArray.push(t5), 0));
      } }, { key: "_calcSuccessRateOfBusiness", value: function(e5) {
        return N3(e5) || !this._map.has(e5) ? -1 : 100 < (e5 = Kt2((e5 = this._map.get(e5)).successCount / e5.totalCount * 100, 2)) ? 100 : e5;
      } }, { key: "_calcSuccessRateOfPlatform", value: function(e5) {
        var t5;
        return N3(e5) || !this._map.has(e5) ? -1 : (t5 = this._map.get(e5), 100 < (e5 = Kt2(e5 = this._calcSuccessCountOfPlatform(e5) / t5.totalCount * 100, 2)) ? 100 : e5);
      } }, { key: "_calcTotalCount", value: function(e5) {
        return N3(e5) || !this._map.has(e5) ? -1 : this._map.get(e5).totalCount;
      } }, { key: "_calcSuccessCountOfBusiness", value: function(e5) {
        return N3(e5) || !this._map.has(e5) ? -1 : this._map.get(e5).successCount;
      } }, { key: "_calcSuccessCountOfPlatform", value: function(e5) {
        return N3(e5) || !this._map.has(e5) ? -1 : (e5 = this._map.get(e5)).successCount + e5.failedCountOfUserSide;
      } }, { key: "_calcAvg", value: function(e5) {
        return N3(e5) || !this._map.has(e5) ? -1 : e5 === Jn ? this._calcAvgSpeed(e5) : this._calcAvgCost(e5);
      } }, { key: "_calcAvgCost", value: function(e5) {
        var t5, n5 = this._map.get(e5).costArray.length;
        return 0 === n5 ? 0 : (t5 = 0, this._map.get(e5).costArray.forEach(function(e6) {
          t5 += e6;
        }), parseInt(t5 / n5));
      } }, { key: "_calcAvgSpeed", value: function(e5) {
        var t5 = 0, n5 = 0;
        return this._map.get(e5).costArray.forEach(function(e6) {
          t5 += e6;
        }), this._map.get(e5).fileSizeArray.forEach(function(e6) {
          n5 += e6;
        }), parseInt(1e3 * n5 / t5);
      } }, { key: "getStatResult", value: function(e5) {
        var t5, n5, o5, i5, a5, s5 = this._calcTotalCount(e5);
        return 0 === s5 ? null : (t5 = this._calcSuccessCountOfBusiness(e5), n5 = this._calcSuccessRateOfBusiness(e5), o5 = this._calcSuccessCountOfPlatform(e5), i5 = this._calcSuccessRateOfPlatform(e5), a5 = this._calcAvg(e5), this.reset(e5), { totalCount: s5, successCountOfBusiness: t5, successRateOfBusiness: n5, successCountOfPlatform: o5, successRateOfPlatform: i5, avgValue: a5 });
      } }, { key: "reset", value: function(e5) {
        N3(e5) ? this._map.clear() : this._map.set(e5, { totalCount: 0, successCount: 0, failedCountOfUserSide: 0, costArray: [], fileSizeArray: [] });
      } }]), Pa = e4(function e5() {
        p4(this, e5), this._lastMap = /* @__PURE__ */ new Map(), this._currentMap = /* @__PURE__ */ new Map();
      }, [{ key: "initMap", value: function(e5) {
        var t5 = this;
        e5.forEach(function(e6) {
          t5._lastMap.set(e6, /* @__PURE__ */ new Map()), t5._currentMap.set(e6, /* @__PURE__ */ new Map());
        });
      } }, { key: "addMessageSequence", value: function(e5) {
        var t5, n5, o5, i5 = e5.key, a5 = e5.message;
        return !(N3(i5) || !this._lastMap.has(i5) || !this._currentMap.has(i5) || (t5 = a5.conversationID, a5 = a5.sequence, t5 = t5.replace(R3.CONV_GROUP, ""), 0 !== this._lastMap.get(i5).size && this._lastMap.get(i5).has(t5) && (o5 = (n5 = this._lastMap.get(i5).get(t5)).length - 1, a5 > n5[0]) && a5 < n5[o5] ? (n5.push(a5), n5.sort(), this._lastMap.get(i5).set(t5, n5)) : this._addCurrentMap(e5), 0));
      } }, { key: "_addCurrentMap", value: function(e5) {
        var t5 = e5.key, e5 = e5.message, n5 = e5.conversationID, e5 = e5.sequence, n5 = n5.replace(R3.CONV_GROUP, "");
        this._currentMap.get(t5).has(n5) || this._currentMap.get(t5).set(n5, []), this._currentMap.get(t5).get(n5).push(e5);
      } }, { key: "_copyData", value: function(e5) {
        if (!N3(e5)) {
          this._lastMap.set(e5, /* @__PURE__ */ new Map());
          var t5, n5 = this._lastMap.get(e5), o5 = F2(this._currentMap.get(e5));
          try {
            for (o5.s(); !(t5 = o5.n()).done; ) {
              var i5 = j2(t5.value, 2), a5 = i5[0], s5 = i5[1];
              n5.set(a5, s5);
            }
          } catch (e6) {
            o5.e(e6);
          } finally {
            o5.f();
          }
          n5 = null, this._currentMap.set(e5, /* @__PURE__ */ new Map());
        }
      } }, { key: "getStatResult", value: function(e5) {
        var o5, i5, t5;
        return N3(this._currentMap.get(e5)) || N3(this._lastMap.get(e5)) ? null : 0 === this._lastMap.get(e5).size ? (this._copyData(e5), null) : (i5 = o5 = 0, this._lastMap.get(e5).forEach(function(e6, t6) {
          var e6 = d3(e6.values()), n5 = e6.length, e6 = e6[n5 - 1] - e6[0] + 1;
          o5 += e6, i5 += n5;
        }), 0 === o5 ? null : (100 < (t5 = Kt2(i5 / o5 * 100, 2)) && (t5 = 100), this._copyData(e5), { totalCount: o5, successCountOfMessageReceived: i5, successRateOfMessageReceived: t5 }));
      } }, { key: "reset", value: function() {
        this._currentMap.clear(), this._lastMap.clear();
      } }]), Ua = (t4(gs, c4), e4(gs, [{ key: "_onLoginSuccess", value: function() {
        var t5 = this, e5 = (this._rateMessageSent.initMap(this._messageSentItems), this._rateMessageReceived.initMap(this._messageReceivedItems), this.get(13)), n5 = e5.getItem(this.TAG, false);
        !S3(n5) && ct2(n5.forEach) && (M3.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n5.length)), n5.forEach(function(e6) {
          t5._statInfoArr.push(e6);
        }), e5.removeItem(this.TAG, false));
      } }, { key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("q_rpt_interval"), t5 = this.getCloudConfig("q_rpt_sdkappid_bl"), n5 = this.getCloudConfig("q_rpt_tinyid_wl");
        N3(e5) || (this.REPORT_INTERVAL = Number(e5)), N3(t5) || (this.REPORT_SDKAPPID_BLACKLIST = t5.split(",").map(function(e6) {
          return Number(e6);
        })), N3(n5) || (this.REPORT_TINYID_WHITELIST = n5.split(","));
      } }, { key: "onCheckTimer", value: function(e5) {
        this.isLoggedIn() && e5 % this.REPORT_INTERVAL == 0 && (this.wholePeriod = true, this._report());
      } }, { key: "addRequestCount", value: function() {
        this._avgRTT.addRequestCount();
      } }, { key: "addRTT", value: function(e5) {
        this._avgRTT.addRTT(e5);
      } }, { key: "addMessageDelay", value: function(e5) {
        this._avgE2EDelay.addMessageDelay(e5);
      } }, { key: "addTotalCount", value: function(e5) {
        this._rateMessageSent.addTotalCount(e5) || M3.w("".concat(this._n, ".addTotalCount invalid key:"), e5);
      } }, { key: "addSuccessCount", value: function(e5) {
        this._rateMessageSent.addSuccessCount(e5) || M3.w("".concat(this._n, ".addSuccessCount invalid key:"), e5);
      } }, { key: "addFailedCountOfUserSide", value: function(e5) {
        this._rateMessageSent.addFailedCountOfUserSide(e5) || M3.w("".concat(this._n, ".addFailedCountOfUserSide invalid key:"), e5);
      } }, { key: "addCost", value: function(e5, t5) {
        this._rateMessageSent.addCost(e5, t5) || M3.w("".concat(this._n, ".addCost invalid key or cost:"), e5, t5);
      } }, { key: "addFileSize", value: function(e5, t5) {
        this._rateMessageSent.addFileSize(e5, t5) || M3.w("".concat(this._n, ".addFileSize invalid key or size:"), e5, t5);
      } }, { key: "addMessageSequence", value: function(e5) {
        this._rateMessageReceived.addMessageSequence(e5) || M3.w("".concat(this._n, ".addMessageSequence invalid key:"), e5.key);
      } }, { key: "_getQualityItem", value: function(e5) {
        var t5 = {}, n5 = eo[this.get(15).getNetworkType()], n5 = (N3(n5) && (n5 = 8), { qualityType: Qn[e5], timestamp: He2(), networkType: n5, extension: "" });
        switch (e5) {
          case Bn:
            t5 = this._avgRTT.getStatResult();
            break;
          case Hn:
            t5 = this._avgE2EDelay.getStatResult();
            break;
          case Kn:
          case Wn:
          case Yn:
          case jn:
          case Jn:
            t5 = this._rateMessageSent.getStatResult(e5);
            break;
          case zn:
          case Xn:
          case Zn:
            t5 = this._rateMessageReceived.getStatResult(e5);
        }
        return null === t5 ? null : y2(y2({}, n5), t5);
      } }, { key: "_report", value: function(e5) {
        var t5 = this, n5 = [], o5 = null, e5 = (N3(e5) ? this._qualityItems.forEach(function(e6) {
          null !== (o5 = t5._getQualityItem(e6)) && (o5.reportIndex = t5.reportIndex, o5.wholePeriod = t5.wholePeriod, n5.push(o5));
        }) : null !== (o5 = this._getQualityItem(e5)) && (o5.reportIndex = this.reportIndex, o5.wholePeriod = this.wholePeriod, n5.push(o5)), M3.d("".concat(this._n, "._report"), n5), 0 < this._statInfoArr.length && (n5 = n5.concat(this._statInfoArr), this._statInfoArr = []), this.get(12)), i5 = e5.getSDKAppID(), e5 = e5.getTinyID();
        0 < (n5 = Wt2(this.REPORT_SDKAPPID_BLACKLIST, i5) && !Yt2(this.REPORT_TINYID_WHITELIST, e5) ? [] : n5).length && this._doReport(n5);
      } }, { key: "_doReport", value: function(t5) {
        var n5 = this, e5 = { header: yi(this), quality: t5 };
        this.req({ P: G2.SSO_STAT, data: y2({}, e5) }).then(function() {
          n5.reportIndex++, n5.wholePeriod = false;
        }).catch(function(e6) {
          M3.w("".concat(n5._n, "._doReport failed. error:"), e6), n5._statInfoArr = n5._statInfoArr.concat(t5), n5._flushAtOnce();
        });
      } }, { key: "_flushAtOnce", value: function() {
        var e5 = this.get(13), t5 = e5.getItem(this.TAG, false), n5 = this._statInfoArr, o5 = "".concat(this._n, "._flushAtOnce");
        S3(t5) ? (M3.l("".concat(o5, " count:").concat(n5.length)), e5.setItem(this.TAG, n5, true, false)) : (10 < (n5 = n5.concat(t5)).length && (n5 = n5.slice(0, 10)), M3.l("".concat(o5, " count:").concat(n5.length)), e5.setItem(this.TAG, n5, true, false)), this._statInfoArr = [];
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._report(), this.reportIndex = 0, this.wholePeriod = false, this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [], this._avgRTT.reset(), this._avgE2EDelay.reset(), this._rateMessageSent.reset(), this._rateMessageReceived.reset();
      } }])), ba = e4(function e5(t5) {
        p4(this, e5), S3(t5) || (this.userID = t5.userID || "", this.nick = t5.nick || "", this.avatar = t5.avatar || "", this.time = t5.time || 0, this.source = t5.source || "", this.wording = t5.wording || "", this.type = t5.type || "");
      }), wa = e4(function e5(t5) {
        p4(this, e5), this._snsM = t5, this._n = "FriendApplicationHandler", this._startTime = 0, this._maxLimited = 100, this._currentSeq = 0, this._map = /* @__PURE__ */ new Map(), this._unreadCount = 0;
      }, [{ key: "getLocalApplicationList", value: function() {
        return { friendApplicationList: d3(this._map.values()), unreadCount: this._unreadCount };
      } }, { key: "_onApplicationListUpdated", value: function() {
        this._snsM.emitOEvt(h4.FRIEND_APPLICATION_LIST_UPDATED, { friendApplicationList: d3(this._map.values()), unreadCount: this._unreadCount });
      } }, { key: "onApplicationRead", value: function() {
        this._unreadCount = 0, this._onApplicationListUpdated();
      } }, { key: "onApplicationAdded", value: function(e5, t5) {
        var n5, o5, i5 = this;
        S3(e5) || (n5 = "", n5 = t5 === this._snsM.getMyUserID() ? R3.SNS_APPLICATION_SENT_BY_ME : R3.SNS_APPLICATION_SENT_TO_ME, o5 = false, e5.forEach(function(e6) {
          var t6 = "".concat(e6.userID, "_").concat(n5);
          n5 !== R3.SNS_APPLICATION_SENT_TO_ME || i5._map.has(t6) || (i5._unreadCount += 1), i5._map.set(t6, new ba(y2(y2({}, e6), {}, { type: n5 }))), o5 = true;
        }), o5 && this._onApplicationListUpdated());
      } }, { key: "onApplicationDeleted", value: function(e5) {
        S3(e5) || (this._startTime = 0, this._currentSeq = 0, this.getApplicationList());
      } }, { key: "getApplicationList", value: function() {
        var a5 = this, s5 = "".concat(this._n, ".").concat("getApplicationList"), r5 = new P3("getApplicationList");
        return this._snsM.req({ P: G2.GET_FD_APPLICATION_LIST, data: { applicationType: R3.SNS_APPLICATION_TYPE_BOTH, fromAccount: this._snsM.getMyUserID(), maxLimited: this._maxLimited, startTime: this._startTime, lastSequence: this._currentSeq } }).then(function(e5) {
          var e5 = e5.data, t5 = e5.resultList, n5 = e5.unreadCount, o5 = e5.startTime, e5 = e5.currentSequence, i5 = (a5._startTime = o5, a5._currentSeq = e5, a5._unreadCount = n5, O3(t5) ? t5.length : 0), i5 = "applicationCount:".concat(i5, " unreadCount:").concat(n5, " startTime:").concat(o5, " currentSequence:").concat(e5);
          r5.setMessage(i5).end(), M3.i("".concat(s5, " ok. ").concat(i5)), a5._map.clear(), O3(t5) && t5.forEach(function(e6) {
            var t6 = e6.userID, n6 = e6.type, e6 = new ba(e6);
            a5._map.set("".concat(t6, "_").concat(n6), e6);
          }), a5._onApplicationListUpdated();
        }).catch(function(e5) {
          return r5.setError(e5).end(), M3.w("".concat(s5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "deleteApplication", value: function(e5) {
        var i5, a5 = "".concat(this._n, ".").concat("deleteApplication"), s5 = e5.userID, r5 = e5.type;
        return r5 && (r5 === R3.SNS_APPLICATION_SENT_BY_ME || r5 === R3.SNS_APPLICATION_SENT_TO_ME) || (r5 = R3.SNS_APPLICATION_SENT_TO_ME), this._map.has("".concat(s5, "_").concat(r5)) ? ((i5 = new P3("deleteApplication")).setMessage("userID:".concat(s5, " type:").concat(r5)), this._snsM.req({ P: G2.DEL_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), userIDList: [s5], type: r5 } }).then(function(e6) {
          var e6 = e6.data.resultList, t5 = e6[0], n5 = t5.to, o5 = t5.resultCode, t5 = t5.resultInfo;
          return i5.setMoreMessage("resultList:".concat(JSON.stringify(e6))).end(), M3.i("".concat(a5, " ok. userID:").concat(s5, " type:").concat(r5)), 0 === o5 ? T4() : E4({ userID: n5, code: o5, message: t5 });
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.w("".concat(a5, " failed. error:"), e6), E4(e6);
        })) : E4({ code: k2.FRIEND_APPLICATION_NOT_EXIST });
      } }, { key: "acceptApplication", value: function(e5) {
        var n5 = "".concat(this._n, ".").concat("acceptApplication"), o5 = e5.userID, t5 = e5.remark, i5 = e5.tag, a5 = e5.type, s5 = (a5 && (a5 === R3.SNS_APPLICATION_AGREE || a5 === R3.SNS_APPLICATION_AGREE_AND_ADD) || (a5 = R3.SNS_APPLICATION_AGREE_AND_ADD), new P3("acceptApplication"));
        return s5.setMessage("userID:".concat(o5, " type:").concat(a5)), this._snsM.req({ P: G2.RESPOND_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), responseFriendItem: [{ userID: o5, remark: t5, tag: i5, action: a5 }] } }).then(function(e6) {
          s5.end();
          var e6 = e6.data.resultList[0], t6 = e6.resultCode, e6 = e6.resultInfo;
          if (0 !== t6)
            return E4({ code: t6, message: e6 });
          M3.i("".concat(n5, " ok. userID:").concat(o5, " type:").concat(a5));
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.w("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "refuseApplication", value: function(e5) {
        var n5 = "".concat(this._n, ".").concat("refuseApplication"), o5 = e5.userID, i5 = new P3("refuseApplication");
        return i5.setMessage("userID:".concat(o5)), this._snsM.req({ P: G2.RESPOND_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), responseFriendItem: [{ userID: o5, action: "Response_Action_Reject" }] } }).then(function(e6) {
          i5.end();
          var e6 = e6.data.resultList[0], t5 = e6.resultCode, e6 = e6.resultInfo;
          if (0 !== t5)
            return E4({ code: t5, message: e6 });
          M3.i("".concat(n5, " ok. userID:").concat(o5));
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.w("".concat(n5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "setApplicationRead", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".").concat("setApplicationRead"), o5 = new P3("setApplicationRead");
        return this._snsM.req({ P: G2.REPORT_FD_APPLICATION, data: { fromAccount: this._snsM.getMyUserID(), latestTimeStamp: Kt2(He2() / 1e3, 0) } }).then(function(e5) {
          o5.end(), M3.i("".concat(n5, " ok")), t5._unreadCount = 0;
        }).catch(function(e5) {
          return o5.setError(e5).end(), M3.w("".concat(n5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "reset", value: function() {
        this._maxLimited = 100, this._currentSeq = 0, this._unreadCount = 0, this._map.clear();
      } }]), Fa = e4(function e5(t5, n5) {
        p4(this, e5), this.userID = t5, this.remark = "", this.groupList = [], this.source = "", this.addTime = 0, this.friendCustomField = [], this.timestamp = 0;
        var o5 = {}, i5 = [];
        if (o5.userID = t5, !S3(n5))
          for (var a5, s5 = "", r5 = 0, c5 = n5.length; r5 < c5; r5++)
            if (s5 = n5[r5].tag, a5 = n5[r5].value, -1 < s5.indexOf("Tag_SNS_Custom"))
              this.friendCustomField.push({ key: s5, value: a5 });
            else if (-1 < s5.indexOf("Tag_Profile_Custom"))
              i5.push({ key: s5, value: a5 });
            else
              switch (s5) {
                case f3.NICK:
                  o5.nick = a5;
                  break;
                case f3.GENDER:
                  o5.gender = a5;
                  break;
                case f3.BIRTHDAY:
                  o5.birthday = a5;
                  break;
                case f3.LOCATION:
                  o5.location = a5;
                  break;
                case f3.SELFSIGNATURE:
                  o5.selfSignature = a5;
                  break;
                case f3.ALLOWTYPE:
                  o5.allowType = a5;
                  break;
                case f3.LANGUAGE:
                  o5.language = a5;
                  break;
                case f3.AVATAR:
                  o5.avatar = a5;
                  break;
                case f3.MESSAGESETTINGS:
                  o5.messageSettings = a5;
                  break;
                case f3.ADMINFORBIDTYPE:
                  o5.adminForbidType = a5;
                  break;
                case f3.LEVEL:
                  o5.level = a5;
                  break;
                case f3.ROLE:
                  o5.role = a5;
                  break;
                case Je2.REMARK:
                  this.remark = a5;
                  break;
                case Je2.ADDTIME:
                  this.addTime = a5;
                  break;
                case Je2.GROUP:
                  this.groupList = JSON.parse(JSON.stringify(a5));
                  break;
                case Je2.ADDSOURCE:
                  this.source = a5;
                  break;
                case Je2.ADDWORDING:
                  break;
                default:
                  M3.l("snsProfileItem unknown tag->", n5[r5].tag);
              }
        this.profile = new bo(y2(y2({}, o5), {}, { profileCustomField: i5 }));
      }, [{ key: "validate", value: function(e5) {
        var t5, n5 = true, o5 = "";
        if (S3(e5))
          return { valid: false, tips: "empty options" };
        if (e5.profileCustomField)
          for (var i5 = e5.profileCustomField.length, a5 = null, s5 = 0; s5 < i5; s5++) {
            if (a5 = e5.profileCustomField[s5], !C4(a5.key) || -1 === a5.key.indexOf("Tag_Profile_Custom"))
              return { valid: false, tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom" };
            if (!C4(a5.value))
              return { valid: false, tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String" };
          }
        for (t5 in e5)
          if (Object.prototype.hasOwnProperty.call(e5, t5)) {
            if ("profileCustomField" === t5)
              continue;
            if (S3(e5[t5]) && !C4(e5[t5]) && !A3(e5[t5])) {
              o5 = "key:" + t5 + ", invalid value:" + e5[t5], n5 = false;
              continue;
            }
            switch (t5) {
              case "nick":
                C4(e5[t5]) || (n5 = !(o5 = "nick must be a string")), 500 < _t2(e5[t5]) && (o5 = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(_t2(e5[t5]), " bytes"), n5 = false);
                break;
              case "gender":
                ft2(ze2, e5.gender) || (o5 = "key:gender, invalid value:" + e5.gender, n5 = false);
                break;
              case "birthday":
                A3(e5.birthday) || (n5 = !(o5 = "birthday must be a number"));
                break;
              case "location":
                C4(e5.location) || (n5 = !(o5 = "location must be a string"));
                break;
              case "selfSignature":
                C4(e5.selfSignature) || (n5 = !(o5 = "selfSignature must be a string"));
                break;
              case "allowType":
                ft2(Ze2, e5.allowType) || (o5 = "key:allowType, invalid value:" + e5.allowType, n5 = false);
                break;
              case "language":
                A3(e5.language) || (n5 = !(o5 = "language must be a number"));
                break;
              case "avatar":
                C4(e5.avatar) || (n5 = !(o5 = "avatar must be a string"));
                break;
              case "messageSettings":
                0 !== e5.messageSettings && 1 !== e5.messageSettings && (n5 = !(o5 = "messageSettings must be 0 or 1"));
                break;
              case "adminForbidType":
                ft2(Xe2, e5.adminForbidType) || (o5 = "key:adminForbidType, invalid value:" + e5.adminForbidType, n5 = false);
                break;
              case "level":
                A3(e5.level) || (n5 = !(o5 = "level must be a number"));
                break;
              case "role":
                A3(e5.role) || (n5 = !(o5 = "role must be a number"));
                break;
              default:
                o5 = "unknown key:" + t5 + "  " + e5[t5], n5 = false;
            }
          }
        return { valid: n5, tips: o5 };
      } }, { key: "update", value: function(e5) {
        var n5 = this, o5 = "", i5 = "", a5 = [];
        this.friendCustomField.forEach(function(e6) {
          a5.push(e6.key);
        });
        for (var s5 = 0, t5 = e5.length; s5 < t5; s5++)
          !function() {
            if (o5 = e5[s5].tag, i5 = e5[s5].value, -1 < o5.indexOf("Tag_SNS_Custom"))
              -1 < a5.indexOf(o5) ? n5.friendCustomField.forEach(function(e6) {
                e6.key === o5 && (e6.value = i5);
              }) : n5.friendCustomField.push({ key: o5, value: i5 });
            else if (-1 < o5.indexOf("Tag_Profile_Custom")) {
              var t6 = false;
              n5.profile.profileCustomField.forEach(function(e6) {
                e6.key === o5 && (e6.value = i5, t6 = true);
              }), t6 || n5.profile.profileCustomField.push({ key: o5, value: i5 });
            } else
              switch (o5) {
                case f3.NICK:
                  n5.profile.nick = i5;
                  break;
                case f3.GENDER:
                  n5.profile.gender = i5;
                  break;
                case f3.BIRTHDAY:
                  n5.profile.birthday = i5;
                  break;
                case f3.LOCATION:
                  n5.profile.location = i5;
                  break;
                case f3.SELFSIGNATURE:
                  n5.profile.selfSignature = i5;
                  break;
                case f3.ALLOWTYPE:
                  n5.profile.allowType = i5;
                  break;
                case f3.LANGUAGE:
                  n5.profile.language = i5;
                  break;
                case f3.AVATAR:
                  n5.profile.avatar = i5;
                  break;
                case f3.MESSAGESETTINGS:
                  n5.profile.messageSettings = i5;
                  break;
                case f3.ADMINFORBIDTYPE:
                  n5.profile.adminForbidType = i5;
                  break;
                case f3.LEVEL:
                  n5.profile.level = i5;
                  break;
                case f3.ROLE:
                  n5.profile.role = i5;
                  break;
                case Je2.REMARK:
                  n5.remark = i5;
                  break;
                case Je2.ADDTIME:
                  n5.addTime = i5;
                  break;
                case Je2.GROUP:
                  n5.groupList = JSON.parse(JSON.stringify(i5));
                  break;
                case Je2.ADDSOURCE:
                  n5.source = i5;
                  break;
                case Je2.ADDWORDING:
                  break;
                default:
                  M3.d("snsProfileItem unkown tag->", e5[s5].tag);
              }
          }();
        this.timestamp = Date.now(), a5.length = 0;
      } }, { key: "updateProfile", value: function(e5) {
        this.profile = JSON.parse(JSON.stringify(e5)), this.timestamp = Date.now();
      } }, { key: "addToGroupList", value: function(e5) {
        -1 === this.groupList.indexOf(e5) && (this.groupList.push(e5), this.count = this.groupList.length);
      } }, { key: "removeFromGroupList", value: function(e5) {
        e5 = this.groupList.indexOf(e5);
        -1 < e5 && (this.groupList.splice(e5, 1), this.count = this.groupList.length);
      } }]), qa = e4(function e5(t5) {
        p4(this, e5), this._snsM = t5, this._n = "FriendHandler", this._map = /* @__PURE__ */ new Map(), this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0, this._expirationTime = 18e4;
      }, [{ key: "getLocalFriendList", value: function() {
        return d3(this._map.values());
      } }, { key: "getFriendRemark", value: function(e5) {
        return this._map.has(e5) ? this._map.get(e5).remark : "";
      } }, { key: "onFriendProfileModified", value: function(e5) {
        var o5, i5 = this, e5 = e5.dataList;
        S3(e5) || (o5 = this._snsM.get(11), e5.forEach(function(e6) {
          var t5, n5 = e6.userID, e6 = e6.profileList;
          i5.isMyFriend(n5) && (M3.l("".concat(i5._n, ".onFriendProfileModified. friend account:").concat(n5, ", profileList:").concat(JSON.stringify(e6))), (t5 = i5._map.get(n5)).update(e6), o5.modifyMessageSentByPeer({ conversationID: "".concat(R3.CONV_C2C).concat(n5), latestNick: t5.profile.nick, latestAvatar: t5.profile.avatar }));
        }), this._onFriendListUpdated());
      } }, { key: "onFriendAdded", value: function(t5) {
        var n5 = this;
        0 !== t5.length && (M3.l("".concat(this._n, ".onFriendAdded userIDList:").concat(t5)), t5.forEach(function(e5) {
          n5._map.set(e5, new Fa(e5));
        }), this.getFriendProfile({ userIDList: t5 }).then(function(e5) {
          t5.forEach(function(e6) {
            var t6 = n5._map.get(e6);
            0 < t6.groupList.length && n5._snsM.updateWhenFriendAdded({ nameList: t6.groupList, userID: e6 });
          }), n5._onFriendListUpdated();
        }));
      } }, { key: "onFriendDeleted", value: function(e5) {
        var n5 = this;
        0 !== e5.length && (M3.l("".concat(this._n, ".onFriendDeleted userIDList:").concat(e5)), e5.forEach(function(e6) {
          var t5 = n5._map.get(e6);
          0 < t5.groupList.length && n5._snsM.updateWhenFriendDeleted({ nameList: t5.groupList, userID: e6 }), n5._map.delete(e6);
        }), this._onFriendListUpdated());
      } }, { key: "_onFriendListUpdated", value: function() {
        this._snsM.emitOEvt(h4.FRIEND_LIST_UPDATED), this._snsM.get(11).checkAndPatchRemark();
      } }, { key: "getFriendProfile", value: function(e5) {
        var t5, a5 = this, n5 = "".concat(this._n, ".").concat("getFriendProfile"), e5 = e5.userIDList, s5 = [], r5 = [], o5 = [];
        return e5.forEach(function(e6) {
          var t6;
          a5._map.has(e6) ? (t6 = a5._map.get(e6), Date.now() - t6.timestamp < a5._expirationTime ? r5.push(t6) : o5.push(e6)) : s5.push({ userID: e6, code: k2.NOT_MY_FRIEND, message: a5._snsM.getErrMsg(k2.NOT_MY_FRIEND) });
        }), 0 === o5.length ? (M3.i("".concat(n5, " newUserIDList is empty")), D2({ friendList: r5, failureUserIDList: s5 })) : ((t5 = new P3("getFriendProfile")).setMessage("userIDList:".concat(o5)), M3.i("".concat(n5, " userIDList:").concat(o5)), this._snsM.req({ P: G2.GET_FD_PROFILE, data: { fromAccount: this._snsM.getMyUserID(), userIDList: o5 } }).then(function(e6) {
          return t5.end(), M3.i("".concat(n5, " ok")), e6.data.resultList.forEach(function(e7) {
            var t6, n6 = e7.to, o6 = e7.resultCode, i5 = e7.resultInfo, e7 = e7.tagValueList;
            N3(o6) || 0 === o6 ? (a5._map.has(n6) ? (t6 = a5._map.get(n6)).update(e7) : (t6 = new Fa(n6, e7), a5._map.set(n6, t6)), r5.push(t6)) : s5.push({ userID: n6, code: o6, message: i5 });
          }), T4({ friendList: r5, failureUserIDList: s5 });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.w("".concat(n5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "isMyFriend", value: function(e5) {
        return this._map.has(e5);
      } }, { key: "pagingGetFriendList", value: function() {
        var s5 = this, r5 = "".concat(this._n, ".").concat("getFriendList"), c5 = new P3("getFriendList"), u5 = Date.now();
        this._snsM.req({ P: G2.GET_FD_LIST, data: { fromAccount: this._snsM.getMyUserID(), startIndex: this._startIdx, standardSequence: this._standardSeq, customSequence: this._customSeq } }).then(function(e5) {
          var e5 = e5.data, t5 = e5.friendCount, n5 = e5.resultList, o5 = e5.nextStartIndex, i5 = e5.standardSequence, a5 = e5.customSequence, e5 = e5.completeFlag, t5 = (s5._startIdx = o5, s5._standardSeq = i5, s5._customSeq = a5, "friendCount:".concat(t5, " nextStartIndex:").concat(o5, " standardSequence:").concat(i5, " ") + "customSequence:".concat(a5, " completeFlag:").concat(e5, " cost:").concat(tn(u5)));
          c5.setMessage(t5).end(), M3.i("".concat(r5, " ok."), t5), S3(n5) || n5.forEach(function(e6) {
            var t6 = e6.to, e6 = e6.tagValueList;
            s5._map.set(t6, new Fa(t6, e6));
          }), 0 === e5 ? s5.pagingGetFriendList() : (s5._snsM.emitOEvt(h4.FRIEND_LIST_UPDATED), s5._pagingGetFriendProfile());
        }).catch(function(e5) {
          return c5.setError(e5).end(), M3.w("".concat(r5, " failed. error:"), e5), E4(e5);
        });
      } }, { key: "_pagingGetFriendProfile", value: function() {
        var n5 = this, e5 = d3(this._map.keys()), t5 = this._snsM.get(4), o5 = e5.length, i5 = o5 <= 100 ? 1 : Math.ceil(o5 / 100);
        M3.l("".concat(this._n, "._pagingGetFriendProfile friendCount:").concat(o5, " pageCount:").concat(i5));
        for (var a5 = 0; a5 < i5; a5++)
          t5.getUserProfile({ userIDList: e5.slice(100 * a5, 100 * (a5 + 1)) }).then(function(e6) {
            e6.data.forEach(function(e7) {
              var t6 = n5._map.get(e7.userID);
              t6 && t6.updateProfile(e7);
            }), n5._onFriendListUpdated();
          });
      } }, { key: "addFriend", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5, c5 = this, u5 = "".concat(this._n, ".").concat("addFriend");
        return e5.wording && false === this._snsM.filterProfanity("wording", e5) ? E4({ code: k2.PROFANITY_FOUND }) : (t5 = e5.to, n5 = e5.source, o5 = e5.type, i5 = e5.wording, a5 = e5.remark, e5 = e5.groupName, (s5 = o5) && (s5 === R3.SNS_ADD_TYPE_SINGLE || s5 === R3.SNS_ADD_TYPE_BOTH) || (s5 = R3.SNS_ADD_TYPE_BOTH), (r5 = new P3("addFriend")).setMessage("to:".concat(t5, " source:").concat(n5, " type:").concat(s5)), this._snsM.req({ P: G2.ADD_FD, data: { fromAccount: this._snsM.getMyUserID(), addFriendItem: [{ to: t5, source: n5, wording: i5, remark: a5, groupName: e5 }], type: s5 } }).then(function(e6) {
          var e6 = e6.data.resultList, e6 = (r5.setMoreMessage("resultList:".concat(JSON.stringify(e6))).end(), e6[0]), t6 = e6.to, n6 = e6.resultCode, e6 = e6.resultInfo;
          return M3.i("".concat(u5, " ok. to:").concat(t6, " type:").concat(s5, " code:").concat(n6)), N3(n6) || 0 === n6 ? T4({ userID: t6, code: 0 }) : 30539 === n6 ? T4({ userID: t6, code: n6, message: c5._snsM.getErrMsg(n6) }) : E4({ userID: t6, code: n6, message: c5._snsM.getErrMsg(n6) || e6 });
        }).catch(function(e6) {
          return r5.setError(e6).end(), M3.w("".concat(u5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "deleteFriend", value: function(e5) {
        var t5, n5 = this, o5 = "".concat(this._n, ".").concat("deleteFriend"), i5 = e5.userIDList, e5 = e5.type, a5 = (1e3 < i5.length && (M3.w("".concat(o5, " ").concat(Qt2(1e3))), i5.length = 1e3), []), s5 = [], r5 = [];
        return i5.forEach(function(e6) {
          n5._map.has(e6) ? r5.push(e6) : a5.push({ userID: e6, code: k2.NOT_MY_FRIEND, message: n5._snsM.getErrMsg(k2.NOT_MY_FRIEND) });
        }), 0 === r5.length ? D2({ successUserIDList: s5, failureUserIDList: a5 }) : ((i5 = e5) && (i5 === R3.SNS_DELETE_TYPE_SINGLE || i5 === R3.SNS_DELETE_TYPE_BOTH) || (i5 = R3.SNS_DELETE_TYPE_BOTH), (t5 = new P3("deleteFriend")).setMessage("userIDList:".concat(r5, " type:").concat(i5)), this._snsM.req({ P: G2.DEL_FD, data: { fromAccount: this._snsM.getMyUserID(), userIDList: r5, type: i5 } }).then(function(e6) {
          t5.end(), M3.i("".concat(o5, " ok"));
          e6 = e6.data.resultList;
          return S3(e6) || e6.forEach(function(e7) {
            var t6 = e7.to, n6 = e7.resultCode, e7 = e7.resultInfo;
            N3(n6) || 0 === n6 ? s5.push({ userID: t6 }) : a5.push({ userID: t6, code: n6, message: e7 });
          }), T4({ successUserIDList: s5, failureUserIDList: a5 });
        }).catch(function(e6) {
          return t5.setError(e6).end(), M3.w("".concat(o5, " error:"), e6), E4(e6);
        }));
      } }, { key: "updateFriend", value: function(e5) {
        var o5, i5, t5, a5 = this, n5 = e5.userID, s5 = e5.remark, r5 = e5.friendCustomField;
        return this._map.has(n5) ? (o5 = "".concat(this._n, ".").concat("updateFriend"), (i5 = new P3("updateFriend")).setMessage("userID:".concat(n5, " remark:").concat(s5, " friendCustomField:").concat(r5)), t5 = [], N3(s5) || t5.push({ tag: Je2.REMARK, value: s5 }), O3(r5) && 0 < r5.length && r5.forEach(function(e6) {
          t5.push({ tag: e6.key, value: e6.value });
        }), this._snsM.req({ P: G2.UPDATE_FD, data: { fromAccount: this._snsM.getMyUserID(), updateItem: [{ to: n5, snsItem: t5 }] } }).then(function(e6) {
          i5.end(), M3.i("".concat(o5, " ok"));
          var e6 = e6.data.resultList[0], t6 = e6.to, n6 = e6.resultCode, e6 = e6.resultInfo;
          return N3(n6) || 0 === n6 ? ((t6 = a5._map.get(t6)) && (N3(s5) || (t6.remark = s5), O3(r5) && 0 < r5.length && Lt2(t6.friendCustomField, r5), a5._onFriendListUpdated()), T4(t6)) : E4({ code: n6, message: e6 });
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.w("".concat(o5, " failed. error:"), e6), E4(e6);
        })) : E4({ code: k2.NOT_MY_FRIEND });
      } }, { key: "checkFriend", value: function(e5) {
        var t5 = "".concat(this._n, ".").concat("checkFriend"), n5 = e5.userIDList, o5 = e5.type, s5 = (o5 && (o5 === R3.SNS_CHECK_TYPE_SINGLE || o5 === R3.SNS_CHECK_TYPE_BOTH) || (o5 = R3.SNS_CHECK_TYPE_BOTH), new P3("checkFriend"));
        return s5.setMessage("userIDList:".concat(n5, " type:").concat(o5)), this._snsM.req({ P: G2.CHECK_FD, data: { fromAccount: this._snsM.getMyUserID(), userIDList: n5, type: o5 } }).then(function(e6) {
          s5.end(), M3.i("".concat(t5, " ok. userIDList:").concat(n5, " type:").concat(o5));
          var i5 = [], a5 = [], e6 = e6.data.resultList;
          return O3(e6) && e6.forEach(function(e7) {
            var t6 = e7.to, n6 = e7.relation, o6 = e7.resultCode, e7 = e7.resultInfo;
            N3(o6) || 0 === o6 ? i5.push({ userID: t6, code: 0, relation: n6 }) : a5.push({ userID: t6, code: o6, message: e7 });
          }), T4({ successUserIDList: i5, failureUserIDList: a5 });
        }).catch(function(e6) {
          return s5.setError(e6).end(), M3.w("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "onAddedToFriendGroup", value: function(e5) {
        var t5 = this, n5 = e5.name, e5 = e5.userIDList;
        M3.l("".concat(this._n, ".onAddedToFriendGroup groupName:").concat(n5, " userIDList:").concat(e5)), n5 && !S3(e5) && e5.forEach(function(e6) {
          t5._map.has(e6) && t5._map.get(e6).addToGroupList(n5);
        });
      } }, { key: "onRemovedFromFriendGroup", value: function(e5) {
        var t5 = this, n5 = e5.name, e5 = e5.userIDList;
        M3.l("".concat(this._n, ".onRemovedFromFriendGroup groupName:").concat(n5, " userIDList:").concat(e5)), n5 && !S3(e5) && e5.forEach(function(e6) {
          t5._map.has(e6) && t5._map.get(e6).removeFromGroupList(n5);
        });
      } }, { key: "reset", value: function() {
        this._map.clear(), this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0;
      } }]), xa = e4(function e5(t5) {
        p4(this, e5), S3(t5) || (this.name = t5.name || "", this.userIDList = t5.userIDList || [], this.count = this.userIDList.length || 0);
      }, [{ key: "addToUserIDList", value: function(e5) {
        -1 === this.userIDList.indexOf(e5) && (this.userIDList.push(e5), this.count = this.userIDList.length);
      } }, { key: "removeFromUserIDList", value: function(e5) {
        e5 = this.userIDList.indexOf(e5);
        -1 < e5 && (this.userIDList.splice(e5, 1), this.count = this.userIDList.length);
      } }]), Va = e4(function e5(t5) {
        p4(this, e5), this._snsM = t5, this._n = "FriendGroupHandler", this._map = /* @__PURE__ */ new Map();
      }, [{ key: "getLocalGroupList", value: function() {
        return d3(this._map.values());
      } }, { key: "_onGroupListUpdated", value: function() {
        var e5 = d3(this._map.values());
        this._snsM.emitOEvt(h4.FRIEND_GROUP_LIST_UPDATED, e5);
      } }, { key: "getGroupList", value: function() {
        var n5 = this, t5 = "".concat(this._n, ".").concat("getGroupList"), o5 = new P3("getGroupList");
        return this._snsM.req({ P: G2.GET_FD_GRP_LIST, data: { fromAccount: this._snsM.getMyUserID() } }).then(function(e5) {
          o5.end();
          e5 = e5.data.resultList;
          S3(e5) ? M3.i("".concat(t5, " ok. count:0")) : (M3.i("".concat(t5, " ok. count:").concat(e5.length)), n5._map.clear(), e5.forEach(function(e6) {
            var t6 = new xa(e6);
            n5._map.set(e6.name, t6);
          }), n5._onGroupListUpdated());
        }).catch(function(e5) {
          return o5.setError(e5).end(), M3.w("".concat(t5, " error:"), e5), E4(e5);
        });
      } }, { key: "createGroup", value: function(e5) {
        var t5, n5, o5 = this, s5 = "".concat(this._n, ".").concat("createGroup"), r5 = e5.name, e5 = e5.userIDList;
        return this._map.has(r5) ? E4({ code: k2.FRIEND_GRP_EXISTED }) : (t5 = "name:".concat(r5, " userIDList:").concat(e5), (n5 = new P3("createGroup")).setMessage(t5), this._snsM.req({ P: G2.CREATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), groupName: [r5], userIDList: O3(e5) ? e5 : void 0 } }).then(function(e6) {
          n5.end(), M3.l("".concat(s5, " ok. ").concat(t5));
          var e6 = e6.data.resultList, i5 = [], a5 = [], e6 = (e6 && e6.forEach(function(e7) {
            var t6 = e7.to, n6 = e7.resultCode, o6 = e7.resultInfo;
            N3(n6) || 0 === n6 ? i5.push(t6) : (t6 = { userID: e7.to, code: n6, message: o6 }, a5.push(t6));
          }), new xa({ name: r5, userIDList: i5 }));
          return o5._map.set(r5, e6), o5._snsM.onAddedToFriendGroup({ name: r5, userIDList: i5 }), o5._onGroupListUpdated(), T4({ friendGroup: e6, failureUserIDList: a5 });
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.w("".concat(s5, " failed. error:"), e6), E4(e6);
        }));
      } }, { key: "deleteGroup", value: function(e5) {
        var n5, o5, i5 = this, a5 = "".concat(this._n, ".").concat("deleteGroup"), s5 = e5.name;
        return this._map.has(s5) ? (n5 = "name:".concat(s5), (o5 = new P3("deleteGroup")).setMessage(n5), this._snsM.req({ P: G2.DEL_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), nameList: [s5] } }).then(function(e6) {
          o5.end(), M3.l("".concat(a5, " ok. ").concat(n5));
          var t5 = i5._map.get(s5);
          return t5 && (i5._snsM.onRemovedFromFriendGroup({ name: s5, userIDList: t5.userIDList }), i5._map.delete(s5), t5.userIDList.length = 0), i5._onGroupListUpdated(), T4(t5);
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.w("".concat(a5, " failed. error:"), e6), E4(e6);
        })) : this._onGroupNotExist();
      } }, { key: "renameGroup", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".").concat("renameGroup"), a5 = e5.oldName, s5 = e5.newName;
        return this._map.has(a5) ? (t5 = "oldName:".concat(a5, " newName:").concat(s5), (n5 = new P3("renameGroup")).setMessage(t5), this._snsM.req({ P: G2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a5, newName: s5 } }).then(function() {
          var e6;
          return n5.end(), M3.l("".concat(i5, " ok. ").concat(t5)), o5._map.has(a5) ? ((e6 = o5._map.get(a5)).name = s5, o5._map.delete(a5), o5._map.set(s5, e6), o5._snsM.onRemovedFromFriendGroup({ name: a5, userIDList: e6.userIDList }), o5._snsM.onAddedToFriendGroup({ name: s5, userIDList: e6.userIDList }), o5._onGroupListUpdated(), T4(e6)) : T4();
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.w("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this._onGroupNotExist();
      } }, { key: "addToGroup", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".").concat("addToGroup"), a5 = e5.name, e5 = e5.userIDList;
        return this._map.has(a5) ? (t5 = "name:".concat(a5, " userIDList:").concat(e5), (n5 = new P3("addToGroup")).setMessage(t5), this._snsM.req({ P: G2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a5, updateGroupItem: e5.filter(function(e6) {
          return o5._snsM.isMyFriend(e6);
        }).map(function(e6) {
          return { to: e6, updateType: "Update_Type_Add" };
        }) } }).then(function(e6) {
          return n5.end(), M3.l("".concat(i5, " ok. ").concat(t5)), o5._onGroupUpdated(a5, e6);
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.w("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this._onGroupNotExist();
      } }, { key: "removeFromGroup", value: function(e5) {
        var t5, n5, o5 = this, i5 = "".concat(this._n, ".").concat("removeFromGroup"), a5 = e5.name, e5 = e5.userIDList;
        return this._map.has(a5) ? (t5 = "name:".concat(a5, " userIDList:").concat(e5), (n5 = new P3("removeFromGroup")).setMessage(t5), this._snsM.req({ P: G2.UPDATE_FD_GRP, data: { fromAccount: this._snsM.getMyUserID(), oldName: a5, updateGroupItem: e5.filter(function(e6) {
          return o5._snsM.isMyFriend(e6);
        }).map(function(e6) {
          return { to: e6, updateType: "Update_Type_Delete" };
        }) } }).then(function(e6) {
          return n5.end(), M3.l("".concat(i5, " ok. ").concat(t5)), o5._onGroupUpdated(a5, e6);
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.w("".concat(i5, " failed. error:"), e6), E4(e6);
        })) : this._onGroupNotExist();
      } }, { key: "_onGroupUpdated", value: function(e5, t5) {
        var t5 = t5.data.resultList, a5 = this._map.get(e5), s5 = [], r5 = [], c5 = [];
        return O3(t5) && t5.forEach(function(e6) {
          var t6 = e6.to, n5 = e6.resultCode, o5 = e6.resultInfo, i5 = e6.type;
          0 === n5 ? "Update_Type_Add" === i5 ? a5 && (a5.addToUserIDList(t6), r5.push(t6)) : "Update_Type_Delete" === i5 && a5 && (a5.removeFromUserIDList(t6), c5.push(t6)) : s5.push({ to: e6.to, code: n5, message: o5 });
        }), M3.l("".concat(this._n, "._onGroupUpdated name:").concat(e5, " userIDList:").concat(a5.userIDList)), 0 < r5.length && this._snsM.onAddedToFriendGroup({ name: e5, userIDList: r5 }), 0 < c5.length && this._snsM.onRemovedFromFriendGroup({ name: e5, userIDList: c5 }), T4({ friendGroup: a5, failureUserIDList: s5 });
      } }, { key: "updateWhenFriendAdded", value: function(e5) {
        var t5 = this, n5 = e5.nameList, o5 = e5.userID;
        M3.l("".concat(this._n, ".updateWhenFriendAdded userID:").concat(o5, " nameList:").concat(n5)), S3(n5) || n5.forEach(function(e6) {
          t5._map.has(e6) && t5._map.get(e6).addToUserIDList(o5);
        });
      } }, { key: "updateWhenFriendDeleted", value: function(e5) {
        var t5 = this, n5 = e5.nameList, o5 = e5.userID;
        M3.l("".concat(this._n, ".updateWhenFriendDeleted userID:").concat(o5, " nameList:").concat(n5)), S3(n5) || n5.forEach(function(e6) {
          t5._map.has(e6) && t5._map.get(e6).removeFromUserIDList(o5);
        });
      } }, { key: "_onGroupNotExist", value: function(e5) {
        return E4({ code: k2.FRIEND_GRP_NOT_EXIST });
      } }, { key: "reset", value: function() {
        this._map.clear();
      } }]), Ba = (t4(hs, c4), e4(hs, [{ key: "onContextUpdated", value: function(e5) {
        this._friendHandler.pagingGetFriendList(), this._friendGroupHandler.getGroupList(), this._friendApplicationHandler.getApplicationList();
      } }, { key: "onRelationChainModified", value: function(e5) {
        var n5, o5, i5, a5, s5, r5, c5 = this, e5 = e5.dataList;
        S3(e5) || (n5 = [], o5 = [], i5 = [], s5 = !(a5 = []), r5 = "", e5.forEach(function(e6) {
          var t5;
          3 !== e6.pushType && 4 !== e6.pushType || !e6.from || (r5 = e6.from), e6.friendAddAccount && (n5.push.apply(n5, d3(e6.friendAddAccount)), a5.push.apply(a5, d3(e6.friendAddAccount))), e6.friendDelAccount && o5.push.apply(o5, d3(e6.friendDelAccount)), e6.friendApplicationAdded && i5.push.apply(i5, d3(e6.friendApplicationAdded)), e6.friendApplicationDeletedUserIDList && a5.push.apply(a5, d3(e6.friendApplicationDeletedUserIDList)), e6.reportTime && 7 === e6.pushType && (s5 = true), e6.friendUpInfo && (t5 = { dataList: [] }, e6.friendUpInfo.forEach(function(e7) {
            t5.dataList.push({ userID: e7.friendAccount, profileList: d3(e7.sns) });
          }), c5.onFriendProfileModified(t5));
        }), s5 && this._friendApplicationHandler.onApplicationRead(), this._friendApplicationHandler.onApplicationAdded(i5, r5), this._friendApplicationHandler.onApplicationDeleted(a5), this._friendHandler.onFriendAdded(n5), this._friendHandler.onFriendDeleted(o5));
      } }, { key: "isMyFriend", value: function(e5) {
        return this._friendHandler.isMyFriend(e5);
      } }, { key: "filterProfanity", value: function(e5, t5) {
        var n5, o5 = this.get(29);
        return !o5 || (n5 = (o5 = o5.filterText(t5[e5], "sns")).isAllowedToSend, o5 = o5.modifiedText, true === n5 && (t5[e5] = o5, true));
      } }, { key: "onFriendProfileModified", value: function(e5) {
        this._friendHandler.onFriendProfileModified(e5);
      } }, { key: "getLocalFriendList", value: function() {
        var e5 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t5 = this._friendHandler.getLocalFriendList();
        return e5 ? D2(t5) : t5;
      } }, { key: "getFriendRemark", value: function(e5) {
        return this._friendHandler.getFriendRemark(e5);
      } }, { key: "getFriendList", value: function() {
        return this._friendHandler.pagingGetFriendList();
      } }, { key: "addFriend", value: function(e5) {
        return this._friendHandler.addFriend(e5);
      } }, { key: "deleteFriend", value: function(e5) {
        return this._friendHandler.deleteFriend(e5);
      } }, { key: "checkFriend", value: function(e5) {
        return this._friendHandler.checkFriend(e5);
      } }, { key: "getFriendProfile", value: function(e5) {
        return this._friendHandler.getFriendProfile(e5);
      } }, { key: "updateFriend", value: function(e5) {
        return this._friendHandler.updateFriend(e5);
      } }, { key: "onAddedToFriendGroup", value: function(e5) {
        this._friendHandler.onAddedToFriendGroup(e5);
      } }, { key: "onRemovedFromFriendGroup", value: function(e5) {
        this._friendHandler.onRemovedFromFriendGroup(e5);
      } }, { key: "getLocalFriendApplicationList", value: function() {
        var e5 = this._friendApplicationHandler.getLocalApplicationList();
        return D2(e5);
      } }, { key: "deleteFriendApplication", value: function(e5) {
        return this._friendApplicationHandler.deleteApplication(e5);
      } }, { key: "refuseFriendApplication", value: function(e5) {
        return this._friendApplicationHandler.refuseApplication(e5);
      } }, { key: "acceptFriendApplication", value: function(e5) {
        return this._friendApplicationHandler.acceptApplication(e5);
      } }, { key: "setFriendApplicationRead", value: function(e5) {
        return this._friendApplicationHandler.setApplicationRead(e5);
      } }, { key: "getLocalFriendGroupList", value: function() {
        var e5 = this._friendGroupHandler.getLocalGroupList();
        return D2(e5);
      } }, { key: "createFriendGroup", value: function(e5) {
        return this._friendGroupHandler.createGroup(e5);
      } }, { key: "deleteFriendGroup", value: function(e5) {
        return this._friendGroupHandler.deleteGroup(e5);
      } }, { key: "addToFriendGroup", value: function(e5) {
        return this._friendGroupHandler.addToGroup(e5);
      } }, { key: "removeFromFriendGroup", value: function(e5) {
        return this._friendGroupHandler.removeFromGroup(e5);
      } }, { key: "renameFriendGroup", value: function(e5) {
        return this._friendGroupHandler.renameGroup(e5);
      } }, { key: "updateWhenFriendAdded", value: function(e5) {
        this._friendGroupHandler.updateWhenFriendAdded(e5);
      } }, { key: "updateWhenFriendDeleted", value: function(e5) {
        this._friendGroupHandler.updateWhenFriendDeleted(e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._friendHandler.reset(), this._friendGroupHandler.reset(), this._friendApplicationHandler.reset();
      } }])), Ha = (t4(_s, c4), e4(_s, [{ key: "isWorkerEnabled", value: function() {
        return this._isWorkerEnabled && Ae2;
      } }, { key: "startWorkerTimer", value: function() {
        M3.l("".concat(this._n, ".startWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("start");
      } }, { key: "stopWorkerTimer", value: function() {
        M3.l("".concat(this._n, ".stopWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("stop");
      } }, { key: "_init", value: function() {
        var e5, t5;
        Ae2 && (e5 = URL.createObjectURL(new Blob(['let interval = -1;onmessage = function(event) {  if (event.data === "start") {    if (interval > 0) {      clearInterval(interval);    }    interval = setInterval(() => {      postMessage("");    }, 1000);    postMessage(interval);  } else if (event.data === "stop") {    clearInterval(interval);    interval = -1;  }};'], { type: "application/javascript; charset=utf-8" })), this._workerTimer = new Worker(e5), (t5 = this)._workerTimer.onmessage = function(e6) {
          e6.data ? (t5._timerID = e6.data, M3.l("".concat(t5._n, "._init seed:").concat(t5._timerID))) : t5._m.onCheckTimer();
        });
      } }, { key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("enable_worker");
        M3.l("".concat(this._n, "._onCloudConfig enableWorker:").concat(e5)), N3(e5) || "1" === e5 ? !this._isWorkerEnabled && Ae2 && (this._isWorkerEnabled = true, this.startWorkerTimer(), this._m.onWorkerTimerEnabled()) : this._isWorkerEnabled && Ae2 && (this._isWorkerEnabled = false, this.stopWorkerTimer(), this._m.onWorkerTimerDisabled());
      } }, { key: "terminate", value: function() {
        M3.l("".concat(this._n, ".terminate")), this._workerTimer && (this._workerTimer.terminate(), this._workerTimer = null, this._timerID = -1);
      } }, { key: "getTimerID", value: function() {
        return this._timerID;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }])), Ka = e4(function e5(t5) {
        p4(this, e5), this._commercialConfigM = t5, this._n = "PurchasedFeatureHandler", this._isCSPluginReported = false, this._featureMap = /* @__PURE__ */ new Map();
      }, [{ key: "isValidPurchaseBits", value: function(e5) {
        return e5 && "string" == typeof e5 && 1 <= e5.length && e5.length <= 64 && /[01]{1,64}/.test(e5);
      } }, { key: "parsePurchaseBits", value: function(e5) {
        if (this.isValidPurchaseBits(e5)) {
          this._featureMap.clear();
          for (var t5, n5 = e5.length - 1, o5 = 0; 0 <= n5; n5--, o5++)
            t5 = (o5 < 32 ? new $2(0, Math.pow(2, o5)) : new $2(Math.pow(2, o5 - 32), 0)).toString(), "1" === e5[n5] ? this._featureMap.set(t5, true) : this._featureMap.set(t5, false);
        } else
          M3.w("".concat(this._n, ".parsePurchaseBits invalid purchasebits:").concat(e5));
      } }, { key: "hasPurchasedFeature", value: function(e5) {
        return !!this._featureMap.get(e5);
      } }, { key: "isFeatureEnabled", value: function(e5) {
        for (var t5 = parseInt(e5).toString(2), n5 = void 0, o5 = true, i5 = t5.length - 1, a5 = 0; 0 <= i5; i5--, a5++)
          if ("1" === t5.charAt(i5) && (n5 = (a5 < 32 ? new $2(0, Math.pow(2, a5)) : new $2(Math.pow(2, a5 - 32), 0)).toString(), !this._featureMap.get(n5))) {
            o5 = false;
            break;
          }
        return M3.l("".concat(this._n, ".isFeatureEnabled decimalNumber:").concat(e5, " key:").concat(n5, " ret:").concat(o5)), D2({ enabled: o5 });
      } }, { key: "isFeatureEnabledForStat", value: function(e5) {
        for (var t5 = parseInt(e5).toString(2), n5 = t5.length - 1, o5 = 0; 0 <= n5; n5--, o5++)
          if ("1" === t5.charAt(n5)) {
            if (i5 = (o5 < 32 ? new $2(0, Math.pow(2, o5)) : new $2(Math.pow(2, o5 - 32), 0)).toString(), !this._featureMap.get(i5))
              break;
            var i5, a5 = "", s5 = 0;
            i5 === g4.PLUGIN_TRANSLATE ? (a5 = "plugin_translate", s5 = 16) : i5 === g4.PLUGIN_VOICE_TO_TEXT ? (a5 = "plugin_voice_to_text", s5 = 17) : i5 === g4.PLUGIN_CS ? (a5 = "plugin_cs", s5 = 14) : i5 === g4.PLUGIN_PUSH ? (a5 = "plugin_push", s5 = 13) : i5 === g4.PLUGIN_BOT ? (a5 = "plugin_bot", s5 = 15) : i5 === g4.MSG_REACTION && (a5 = "plugin_emoji_reaction", s5 = 18), "" !== a5 && (i5 = this._commercialConfigM.get(12).getUIPlatform(), new P3(a5).setCode(s5).setUIPlatform(i5).end(), M3.l("".concat(this._n, ".isFeatureEnabledForStat ").concat(a5, " code:").concat(s5, " uiPlatform:").concat(i5)));
          }
      } }, { key: "isCSPluginEnabled", value: function() {
        var e5;
        this._isCSPluginReported || (e5 = this._commercialConfigM.get(12).getUIPlatform(), new P3("plugin_search").setCode(6).setUIPlatform(e5).end(), this._isCSPluginReported = true);
      } }, { key: "clear", value: function() {
        this._featureMap.clear(), this._isCSPluginReported = false;
      } }]), Wa = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "CommercialConfigModule", this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler = new Ka(this);
      }, [{ key: "_canFetch", value: function() {
        return this.get(12).isLoggedIn() ? !this._isFetching && Date.now() >= this._expiredTime : (this._expiredTime = Date.now() + 2e3, false);
      } }, { key: "onCheckTimer", value: function(e5) {
        this._canFetch() && this.fetchConfig();
      } }, { key: "fetchConfig", value: function() {
        var t5, e5, n5 = this, o5 = this._canFetch(), i5 = "".concat(this._n, ".fetchConfig");
        M3.l("".concat(i5, " canFetch:").concat(o5)), o5 && (t5 = new P3("fetchCommercialConfig"), o5 = this.get(12).getSDKAppID(), e5 = this.get(20), this._isFetching = true, e5.req({ P: G2.FETCH_COMMERCIAL_CONFIG, data: { SDKAppID: o5 } }).then(function(e6) {
          t5.setMessage("purchaseBits:".concat(e6.data.purchaseBits)).end(), M3.l("".concat(i5, " ok.")), n5._parseConfig(e6.data), n5._isFetching = false;
        }).catch(function(e6) {
          t5.setError(e6).end(), n5._isFetching = false;
        }));
      } }, { key: "onPushedConfig", value: function(e5) {
        var t5 = "".concat(this._n, ".onPushedConfig data:").concat(JSON.stringify(e5));
        M3.l("".concat(t5)), new P3("pushedCommercialConfig").setMessage("purchaseBits:".concat(e5.purchaseBits)).end(), this._parseConfig(e5);
      } }, { key: "_parseConfig", value: function(e5) {
        var t5 = "".concat(this._n, "._parseConfig"), n5 = e5.errorCode, o5 = e5.errorMessage, i5 = e5.purchaseBits, a5 = e5.expiredTime;
        0 === n5 ? (this._purchasedFeatureHandler.parsePurchaseBits(i5), this._expiredTime = Date.now() + 1e3 * a5) : N3(n5) ? (M3.l("".concat(t5, " failed. Invalid message format:"), e5), this._setExpiredTimeOnResponseError(36e5)) : (M3.e("".concat(t5, " errorCode:").concat(n5, " errorMessage:").concat(o5)), this._setExpiredTimeOnResponseError(12e4));
      } }, { key: "_setExpiredTimeOnResponseError", value: function(e5) {
        this._expiredTime = Date.now() + e5;
      } }, { key: "canIUse", value: function(e5) {
        return this._purchasedFeatureHandler.hasPurchasedFeature(e5);
      } }, { key: "isFeatureEnabled", value: function(e5) {
        return this._purchasedFeatureHandler.isFeatureEnabled(e5);
      } }, { key: "isFeatureEnabledForStat", value: function(e5) {
        this._purchasedFeatureHandler.isFeatureEnabledForStat(e5);
      } }, { key: "isCSPluginEnabled", value: function() {
        this._purchasedFeatureHandler.isCSPluginEnabled();
      } }, { key: "get", value: function(e5) {
        return this._m.get(e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._expiredTime = 0, this._isFetching = false, this._purchasedFeatureHandler.clear();
      } }]), Ya = (t4(ps, c4), e4(ps, [{ key: "registerPlugin", value: function(e5) {
        var t5, n5, o5, i5, a5, s5, r5, c5, u5, l5, d4, p5, _4;
        fe2 ? (this._offlinePushPlugin = e5["tim-offline-push-plugin"], t5 = (_4 = e5.offlinePushConfig || {}).huaweiBusinessID, n5 = _4.xiaomiBusinessID, o5 = _4.xiaomiAppID, i5 = _4.xiaomiAppKey, a5 = _4.meizuBusinessID, s5 = _4.meizuAppID, r5 = _4.meizuAppKey, c5 = _4.vivoBusinessID, u5 = _4.oppoBusinessID, l5 = _4.oppoAppKey, d4 = _4.oppoAppSecret, p5 = _4.honorBusinessID, _4 = _4.iosBusinessID, this._androidPushConfig.huaweiPushBussinessId = t5, this._androidPushConfig.xiaomiPushBussinessId = n5, this._androidPushConfig.xiaomiPushAppId = o5, this._androidPushConfig.xiaomiPushAppKey = i5, this._androidPushConfig.meizuPushBussinessId = a5, this._androidPushConfig.meizuPushAppId = s5, this._androidPushConfig.meizuPushAppKey = r5, this._androidPushConfig.vivoPushBussinessId = c5, this._androidPushConfig.oppoPushBussinessId = u5, this._androidPushConfig.oppoPushAppKey = l5, this._androidPushConfig.oppoPushAppSecret = d4, this._androidPushConfig.honorPushBussinessId = p5, new P3("registerPlugin").setMessage("tim-offline-push-plugin").setMoreMessage("isExist:".concat(!N3(this._offlinePushPlugin))).end(true), M3.l("".concat(this._n, ".").concat("registerPlugin", " ok. offlinePushConfig:").concat(JSON.stringify(e5.offlinePushConfig))), this._iosBusinessID = _4, this._setAppShowListener()) : this.warn("OfflinePushInUniapp");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._getDeviceToken();
      } }, { key: "_getDeviceToken", value: function() {
        var c5, u5 = this, l5 = "".concat(this._n, ".").concat("_getDeviceToken");
        ct2(this._offlinePushPlugin.getDeviceToken) ? (c5 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), ", iosBusinessID:").concat(this._iosBusinessID), M3.l("".concat(l5, " start. ").concat(c5)), new P3("_getDeviceToken").setMessage("".concat(c5)).end(true), this._offlinePushPlugin.getDeviceToken(this._androidPushConfig, function(e5) {
          var t5, n5, o5, i5, a5 = new P3("getDeviceTokenRes"), s5 = e5.code, r5 = e5.msg;
          0 === s5 ? (t5 = (i5 = e5.data).deviceToken, n5 = i5.deviceBrand, o5 = i5.deviceType, i5 = i5.bussinessId, u5._deviceToken = t5, u5._businessID = i5 || u5._iosBusinessID, c5 = "deviceToken:".concat(t5, ", deviceBrand:").concat(n5 || o5, ", businessID:").concat(u5._businessID), M3.l("".concat(l5, " ok. ").concat(c5)), a5.setMessage(c5).end(true), u5._setToken()) : (a5.setMessage("code:".concat(s5, ", msg:").concat(r5)).end(true), M3.e("".concat(l5, " failed. error:"), e5));
        })) : M3.e("".concat(l5, " getDeviceToken is not a function"));
      } }, { key: "canIUseOfflinePush", value: function() {
        return fe2 && !N3(this._offlinePushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".").concat("_setAppShowListener");
        N3(this._offlinePushPlugin) ? M3.e("".concat(n5, " offlinePushPlugin is undefined")) : ct2(this._offlinePushPlugin.setAppShowListener) ? (new P3("_setAppShowListener").end(true), M3.l("".concat(n5, " start")), this._offlinePushPlugin.setAppShowListener(function(e5) {
          e5 = (e5 || {}).appShow;
          new P3("setAppShowListenerRes").setMessage("appShow:".concat(e5)).end(true), M3.l("".concat(n5, " ok. appShow:").concat(e5)), t5._m.isReady() && (0 === e5 ? (t5._getConvUnreadCount(), t5._onBackground()) : 1 === e5 && t5._onForeground());
        })) : M3.e("".concat(n5, " setAppShowListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        var e5;
        if (!N3(this._offlinePushPlugin) && ct2(this._offlinePushPlugin.getDeviceType))
          return e5 = (this._offlinePushPlugin.getDeviceType() || {}).deviceType, M3.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e5)), e5;
      } }, { key: "_setToken", value: function() {
        var t5 = "".concat(this._n, "._setToken"), e5 = this.get(12), n5 = 1, o5 = "", i5 = "", a5 = (S3(this._deviceToken) && (n5 = 0), this.getUniAppPlatform()), s5 = this.getDeviceBrand(), r5 = (a5 === te2.IOS || a5 === te2.IPAD || a5 === te2.MAC ? i5 = this._deviceToken : a5 === te2.ANDROID && (o5 = this._deviceToken), new P3("offlinePushSetToken")), a5 = "deviceToken:".concat(i5 || o5, ", businessID:").concat(this._businessID, ", ") + "deviceBrand:".concat(s5, ", isWebUniapp:").concat(this._isWebUniapp, ", pushMsg:").concat(n5, ", platform:").concat(a5);
        return r5.setMessage("".concat(a5)), M3.l("".concat(t5, " ").concat(a5)), this.req({ P: G2.SET_TOKEN, data: { tokenID: o5, pushMsg: n5, sdkAppID: e5.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: s5, deviceToken: i5, isWebUniapp: this._isWebUniapp } }).then(function(e6) {
          return r5.end(), M3.l("".concat(t5, " ok")), e6;
        }).catch(function(e6) {
          return r5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var t5 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach(function(e5) {
          e5.type === R3.CONV_C2C && (t5._c2cUnreadCount += e5.unreadCount), e5.type === R3.CONV_GROUP && (t5._groupUnreadCount += e5.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".").concat("_onBackground"), o5 = new P3("_onBackground");
        this.req({ P: G2.STAT_BACKGROUND, data: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return o5.setMessage("c2cUnreadCount: ".concat(t5._c2cUnreadCount, ", groupUnreadCount: ").concat(t5._groupUnreadCount)).end(), M3.l("".concat(n5, " ok")), e5;
        }).catch(function(e5) {
          o5.setError(e5).end(), M3.e("".concat(n5, " failed. error:"), e5);
        });
      } }, { key: "_onForeground", value: function() {
        var t5 = "".concat(this._n, ".").concat("_onForeground"), n5 = new P3("_onForeground");
        this.req({ P: G2.STAT_FOREGROUND, data: { isWebUniapp: this._isWebUniapp } }).then(function(e5) {
          return n5.end(), M3.l("".concat(t5, " ok")), e5;
        }).catch(function(e5) {
          n5.setError(e5).end(), M3.e("".concat(t5, " failed. error:"), e5);
        });
      } }, { key: "getUniAppPlatform", value: function() {
        var e5 = uni.getSystemInfoSync().platform, t5 = this.getDeviceBrand();
        return "ios" === e5 ? te2.IOS : "android" === e5 ? te2.ANDROID : 1002 === t5 ? te2.IPAD : 1001 === t5 ? te2.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, M3.l("".concat(this._n, ".reset"));
      } }])), ja = (t4(ds, c4), e4(ds, [{ key: "registerPlugin", value: function(e5) {
        var t5, n5, o5;
        fe2 ? (t5 = "".concat(this._n, ".").concat("registerPlugin"), this._pushPlugin = e5["tim-push"], this._getDeviceInfo(), n5 = (o5 = e5.pushConfig || {}).androidConfig, o5 = o5.iOSConfig, st2(n5) && (this._androidPushConfig = n5[this._deviceInfo.packageName]), n5 = (o5 || {}).iOSBusinessID, this._iOSBusinessID = n5, o5 = !N3(this._pushPlugin), new P3("registerPlugin").setMessage(this._pluginName).setMoreMessage("isExisted:".concat(o5)).end(true), M3.l("".concat(t5, " ok. pushConfig:").concat(JSON.stringify(e5.pushConfig))), o5 ? (this._setAppShowListener(), this._setPushEventReportListener()) : M3.e("".concat(t5, " ").concat(this._pluginName, " is undefined"))) : this.warn("TIMPushInUniapp");
      } }, { key: "init", value: function() {
        this._isWebUniapp = this.getUniAppPlatform(), this._reportEventCacheList(), this._getDeviceToken(), this.get(27).isFeatureEnabledForStat(Math.pow(2, 41));
      } }, { key: "_reportEventCacheList", value: function() {
        var a5 = this, s5 = "".concat(this._n, ".").concat("_reportEventCacheList");
        ct2(this._pushPlugin.getPushEventCacheList) ? (new P3("_reportEventCacheList").end(true), this._pushPlugin.getPushEventCacheList(function(e5) {
          var t5 = e5.code, n5 = e5.data.eventList, o5 = new P3("getPushEventCacheListRes");
          if (o5.setCode(t5), 0 !== t5)
            o5.setMessage("res:".concat(JSON.stringify(e5))).end(true), M3.e("".concat(s5, " failed. error:").concat(JSON.stringify(e5)));
          else {
            t5 = n5.length < 10 ? "eventList:".concat(JSON.stringify(n5)) : "eventList.length:".concat(n5.length);
            M3.l("".concat(s5, " ok. ").concat(t5)), o5.setMessage(t5).end(true);
            for (var i5 = y2(y2({}, e5.data), {}, { eventList: [] }); 0 < n5.length; )
              i5.eventList = n5.splice(0, 40), a5._pushReport(i5);
          }
        })) : M3.e("".concat(this._pluginName, ".getPushEventCacheList is not a function"));
      } }, { key: "_getDeviceToken", value: function() {
        var r5, c5 = this, u5 = "".concat(this._n, ".").concat("_getDeviceToken");
        ct2(this._pushPlugin.getDeviceToken) ? (r5 = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), " iOSBusinessID:").concat(this._iOSBusinessID), M3.l("".concat(u5, " start. ").concat(r5)), new P3("_getDeviceToken").setMessage("".concat(r5)).end(true), this._pushPlugin.getDeviceToken(this._androidPushConfig, function(e5) {
          var t5, n5, o5, i5 = e5.code, a5 = e5.msg, s5 = new P3("getDeviceTokenRes");
          s5.setCode(i5), 0 === i5 ? (t5 = (i5 = e5.data).deviceToken, n5 = i5.deviceBrand, o5 = i5.deviceType, i5 = i5.bussinessId, c5._deviceToken = t5, c5._businessID = i5 || c5._iOSBusinessID, r5 = "deviceToken:".concat(t5, " deviceBrand:").concat(n5 || o5, " businessID:").concat(c5._businessID), M3.l("".concat(u5, " ok. ").concat(r5)), s5.setMessage(r5).end(true), c5._setToken()) : (s5.setMessage(a5).end(true), M3.e("".concat(u5, " failed. error:").concat(JSON.stringify(e5))));
        })) : M3.e("".concat(this._pluginName, ".getDeviceToken is not a function"));
      } }, { key: "_getDeviceInfo", value: function() {
        var e5, t5, n5, o5, i5 = "".concat(this._n, ".").concat("_getDeviceInfo");
        ct2(this._pushPlugin.getDeviceInfo) ? (o5 = (e5 = this._pushPlugin.getDeviceInfo()).code, t5 = e5.data, (n5 = new P3("_getDeviceInfo")).setCode(o5), 0 === o5 ? (this._deviceInfo = y2(y2({}, this._deviceInfo), t5), this._deviceInfo.pushVersion || (this._deviceInfo.pushVersion = "1.0.1"), o5 = "deviceInfo:".concat(JSON.stringify(this._deviceInfo)), M3.l("".concat(i5, " ok. ").concat(o5)), n5.setMessage(o5).end(true)) : (n5.setMessage("deviceInfoRes:".concat(JSON.stringify(e5))).end(true), M3.e("".concat(i5, " failed. error:").concat(JSON.stringify(e5))))) : M3.e("".concat(this._pluginName, ".getDeviceInfo is not a function"));
      } }, { key: "canIUseTIMPush", value: function() {
        return fe2 && !N3(this._pushPlugin);
      } }, { key: "_setAppShowListener", value: function() {
        var t5 = this, n5 = "".concat(this._n, ".").concat("_setAppShowListener");
        ct2(this._pushPlugin.setAppShowListener) ? (new P3("_setAppShowListener").end(true), M3.l("".concat(n5, " start")), this._pushPlugin.setAppShowListener(function(e5) {
          e5 = (e5 || {}).appShow;
          new P3("setAppShowListenerRes").setMessage("appShow:".concat(e5)).end(true), M3.l("".concat(n5, " ok. appShow:").concat(e5)), t5._m.isReady() && (0 === e5 ? (t5._getConvUnreadCount(), t5._onBackground()) : 1 === e5 && t5._onForeground());
        })) : M3.e("".concat(this._pluginName, ".setAppShowListener is not a function"));
      } }, { key: "_setPushEventReportListener", value: function() {
        var a5 = this, s5 = "".concat(this._n, ".").concat("_setPushEventReportListener");
        ct2(this._pushPlugin.setPushEventReportListener) ? (new P3("_setPushEventReportListener").end(true), this._pushPlugin.setPushEventReportListener(function(e5) {
          var t5 = e5.code, n5 = e5.data, o5 = n5.eventList, i5 = new P3("setPushEventReportListenerRes");
          i5.setCode(t5), 0 === t5 ? (t5 = "eventList:".concat(JSON.stringify(o5)), M3.l("".concat(s5, " ok. ").concat(t5)), i5.setMessage(t5).end(true), a5._m.isReady() && O3(o5) && 0 < o5.length && a5._pushReport(n5)) : (i5.setMessage("res:".concat(JSON.stringify(e5))).end(true), M3.e("".concat(s5, " failed. error:").concat(JSON.stringify(e5))));
        })) : M3.e("".concat(this._pluginName, ".setPushEventReportListener is not a function"));
      } }, { key: "getDeviceBrand", value: function() {
        var e5;
        if (!N3(this._pushPlugin) && ct2(this._pushPlugin.getDeviceType))
          return e5 = (this._pushPlugin.getDeviceType() || {}).deviceType, M3.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e5)), e5;
      } }, { key: "_setToken", value: function() {
        var t5 = "".concat(this._n, ".").concat("_setToken"), e5 = this.get(12), n5 = 1, o5 = "", i5 = "", a5 = (S3(this._deviceToken) && (n5 = 0), this.getUniAppPlatform()), s5 = this.getDeviceBrand(), a5 = (a5 === te2.IOS || a5 === te2.IPAD || a5 === te2.MAC ? i5 = this._deviceToken : a5 === te2.ANDROID && (o5 = this._deviceToken), y2({ tokenID: o5, pushMsg: n5, sdkAppID: e5.getSDKAppID(), businessID: parseInt(this._businessID), deviceBrand: s5, deviceToken: i5, isWebUniapp: this._isWebUniapp }, this._deviceInfo)), r5 = new P3("_setToken"), o5 = "data:".concat(JSON.stringify(a5));
        r5.setMessage("".concat(o5)), M3.l("".concat(t5, " ").concat(o5)), this.req({ P: G2.SET_TOKEN, data: a5 }).then(function() {
          r5.end(), M3.w("".concat(t5, " ok"));
        }).catch(function(e6) {
          r5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_getConvUnreadCount", value: function() {
        var t5 = this;
        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach(function(e5) {
          e5.type === R3.CONV_C2C && (t5._c2cUnreadCount += e5.unreadCount), e5.type === R3.CONV_GROUP && (t5._groupUnreadCount += e5.unreadCount);
        });
      } }, { key: "_onBackground", value: function() {
        var e5 = this, t5 = "".concat(this._n, ".").concat("_onBackground"), n5 = new P3("_onBackground");
        this.req({ P: G2.STAT_BACKGROUND, data: { c2cUnreadCount: this._c2cUnreadCount, groupUnreadCount: this._groupUnreadCount, isWebUniapp: this._isWebUniapp } }).then(function() {
          n5.setMessage("c2cUnreadCount:".concat(e5._c2cUnreadCount, " groupUnreadCount:").concat(e5._groupUnreadCount)).end(), M3.l("".concat(t5, " ok"));
        }).catch(function(e6) {
          n5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6);
        });
      } }, { key: "_onForeground", value: function() {
        var t5 = "".concat(this._n, ".").concat("_onForeground"), n5 = new P3("_onForeground");
        this.req({ P: G2.STAT_FOREGROUND, data: { isWebUniapp: this._isWebUniapp } }).then(function() {
          n5.end(), M3.l("".concat(t5, " ok"));
        }).catch(function(e5) {
          n5.setError(e5).end(), M3.e("".concat(t5, " failed. error:"), e5);
        });
      } }, { key: "_pushReport", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("_pushReport"), o5 = new P3("_pushReport");
        this.req({ P: G2.PUSH_REPORT, data: { eventList: e5.eventList } }).then(function() {
          o5.end(), t5._notifyReportSuccess(e5);
        }).catch(function(e6) {
          o5.setError(e6).end(), M3.e("".concat(n5, " failed. error:"), e6);
        });
      } }, { key: "_notifyReportSuccess", value: function(e5) {
        !N3(this._pushPlugin) && ct2(this._pushPlugin.notifyReportSuccess) && (this._pushPlugin.notifyReportSuccess(e5), M3.l("".concat(this._n, "._notifyReportSuccess ok")));
      } }, { key: "getUniAppPlatform", value: function() {
        var e5 = uni.getSystemInfoSync().platform, t5 = this.getDeviceBrand();
        return "ios" === e5 ? te2.IOS : "android" === e5 ? te2.ANDROID : 1002 === t5 ? te2.IPAD : 1001 === t5 ? te2.MAC : void 0;
      } }, { key: "reset", value: function() {
        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, M3.l("".concat(this._n, ".reset"));
      } }])), Ja = (t4(ls, c4), e4(ls, [{ key: "init", value: function() {
        var e5 = this.get(18).getPlugin("tim-profanity-filter-plugin");
        e5 && (this._plugin = new e5({ logger: M3, isArray: O3, isMap: ot2, isDevMode: this.isDevMode() }), this._getLexicon());
      } }, { key: "onCheckTimer", value: function() {
        this._plugin && this._canIUseLexicon && this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime && this._getLexicon();
      } }, { key: "filterMessage", value: function(e5, t5) {
        var n5 = true;
        if (this._plugin && this._canIUseLexicon && (!t5 || !t5.messageControlInfo || true !== t5.messageControlInfo.excludedFromContentModeration)) {
          var t5 = e5.type, o5 = e5.conversationType;
          if (t5 === R3.MSG_TEXT || t5 === R3.MSG_CUSTOM) {
            var i5, a5 = "".concat(this._n, ".filterMessage");
            if (M3.l("".concat(a5)), t5 === R3.MSG_TEXT) {
              if (o5 === R3.CONV_C2C ? i5 = "c2c_text_message" : o5 === R3.CONV_GROUP && (i5 = "group_text_message"), !this._isConfigOn(i5))
                return n5;
              var s5 = this._plugin.filter(e5.payload.text), r5 = s5.type, s5 = s5.modifiedText;
              1 === r5 ? n5 = false : 2 === r5 && (e5.payload.text = s5);
            } else if (t5 === R3.MSG_CUSTOM) {
              if (o5 === R3.CONV_C2C ? i5 = "c2c_custom_message" : o5 === R3.CONV_GROUP && (i5 = "group_custom_message"), !this._isConfigOn(i5))
                return n5;
              r5 = this._plugin.filter(e5.payload.data), s5 = this._plugin.filter(e5.payload.description), t5 = this._plugin.filter(e5.payload.extension);
              1 === r5.type || 1 === s5.type || 1 === t5.type ? n5 = false : (2 === r5.type && (e5.payload.data = r5.modifiedText), 2 === s5.type && (e5.payload.description = s5.modifiedText), 2 === t5.type && (e5.payload.extension = t5.modifiedText));
            }
            M3.l("".concat(a5, " done. isAllowedToSend:").concat(n5));
          }
        }
        return n5;
      } }, { key: "filterText", value: function(e5, t5) {
        var n5 = "".concat(this._n, ".filterText"), o5 = { isAllowedToSend: true, modifiedText: e5 };
        return this._plugin && this._canIUseLexicon && this._isConfigOn(t5) && (M3.l("".concat(n5)), e5 = (t5 = this._plugin.filter(e5)).type, t5 = t5.modifiedText, 1 === e5 ? o5.isAllowedToSend = false : 2 === e5 && (o5.modifiedText = t5), M3.l("".concat(n5, " done. ret:"), o5)), o5;
      } }, { key: "_getLexicon", value: function() {
        var l5 = this, d4 = new P3("profanityFilter"), p5 = "".concat(this._n, "._getLexicon");
        this._isFetching = true, this.req({ P: G2.GET_PROFANITY_LIST, data: { startIndex: this._startIndex, version: this._version } }).then(function(e5) {
          var e5 = e5.data, t5 = e5.errorInfo, n5 = e5.filterConfig, o5 = e5.lexicon, i5 = e5.strToken, a5 = e5.completeFlag, s5 = e5.nextStartIndex, r5 = e5.version, e5 = e5.expiredTime, c5 = t5.errorCode, u5 = t5.errorMessage;
          return 0 !== c5 ? (l5._isFetching = false, M3.w("".concat(p5, " failed. error:"), t5), void d4.setCode(c5).setMessage(u5).end()) : (l5._onFilterConfig(n5), l5._getToken(i5), 1 === a5 ? (M3.l("".concat(p5, " done. version:").concat(r5, " expiredTime:").concat(e5)), l5._version = r5, l5._canIUseLexicon = true, l5._isFetching = false, l5._expiredTime = Date.now() + 1e3 * e5, void l5._plugin.onLexiconCompleted(o5)) : (l5._startIndex = s5, l5._plugin.onLexiconSliced(o5), void l5._getLexicon()));
        }).catch(function(e5) {
          d4.setError(e5).end(), l5._isFetching = false, M3.l("".concat(p5, " failed. error:"), e5);
        });
      } }, { key: "_onFilterConfig", value: function(t5) {
        var n5 = this;
        S3(t5) || (this._filterConfigMap.clear(), Object.keys(t5).forEach(function(e5) {
          n5._filterConfigMap.set(e5, t5[e5]);
        }), M3.l("".concat(this._n, "._onFilterConfig. keys:").concat(Array.from(this._filterConfigMap.keys()), " values:").concat(Array.from(this._filterConfigMap.values()))));
      } }, { key: "_isConfigOn", value: function(e5) {
        return 1 === this._filterConfigMap.get(e5);
      } }, { key: "_getToken", value: function(e5) {
        if (C4(e5)) {
          var t5 = e5.length, n5 = "";
          if (t5 % 2 == 0)
            for (var o5 = 0; o5 <= t5 - 1; o5 += 2)
              n5 = (n5 += e5[o5 + 1]) + e5[o5];
          else {
            for (var i5 = 0; i5 < t5 - 1; i5 += 2)
              n5 = (n5 += e5[i5 + 1]) + e5[i5];
            n5 += e5[t5 - 1];
          }
          this._plugin.onToken(n5);
        }
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._plugin && (this._plugin.reset(), this._plugin = null), this._filterConfigMap.clear(), this._startIndex = 0, this._version = 0, this._canIUseLexicon = false, this._isFetching = false, this._expiredTime = 0;
      } }])), za = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "TransCmdModule", this._TRTCCommandList = ["tui_room_svr.*", "callkit_records_svr.*", "room_engine_srv.*", "room_engine_http_srv.*", "room_engine_mic.*", "live_engine_srv.*", "live_engine_http_srv.*", "live_engine_pk.*", "trtc_ai_service.*", "call_engine_srv.*"], this._TRTCCommandMap = /* @__PURE__ */ new Map(), this._setTRTCCommandMap(), this._m.getIEmitInst().on(U3.CLOUD_CONFIG, this._onCloudConfig, this);
      }, [{ key: "_onCloudConfig", value: function() {
        var t5 = this, e5 = this._m.get(23).getCloudConfig("rtc_cmd");
        N3(e5) || ((e5 = JSON.parse(e5)).forEach(function(e6) {
          t5._TRTCCommandList.includes(e6) || t5._TRTCCommandList.push(e6);
        }), this._setTRTCCommandMap());
      } }, { key: "_setTRTCCommandMap", value: function() {
        for (var e5, t5 = 0, n5 = this._TRTCCommandList.length; t5 < n5; t5++)
          e5 = this._TRTCCommandList[t5].split(".")[0], this._TRTCCommandMap.set(e5, 1);
      } }, { key: "onRoomCustomDataReceived", value: function(e5) {
        this._m.getOEmitInst().emit(h4.ROOM_CUSTOM_DATA_RECEIVED, e5);
      } }, { key: "sendTRTCCustomData", value: function(e5) {
        var t5 = e5.serviceCommand, e5 = e5.data, n5 = "".concat(a4.NAME.TUIROOM_SVR, ".*");
        return N3(t5) || (n5 = t5), this._isValidServiceCommand(n5) ? this._trans({ servcmd: n5, data: e5 }) : E4({ code: k2.INVALID_TRTC_CMD });
      } }, { key: "_trans", value: function(e5) {
        M3.d("".concat(this._n, "._trans. options:").concat(JSON.stringify(e5)));
        var t5 = e5.servcmd, e5 = e5.data;
        return this._m.get(20).trans({ servcmd: t5, data: C4(e5) ? JSON.parse(e5) : e5 });
      } }, { key: "_isValidServiceCommand", value: function(e5) {
        return e5.endsWith(".*") ? this._TRTCCommandList.includes(e5) : (e5 = e5.split(".")[0], this._TRTCCommandMap.has(e5));
      } }, { key: "isTRTCCommand", value: function(e5) {
        e5 = e5.split(".")[0];
        return this._TRTCCommandMap.has(e5);
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }]), Xa = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "ErrMsgModule", this.TIM_ERROR_ASSISTANCE = "tim_error_assistance", this.STORAGE_EXPIRES_TIME = 6048e5, this._map = /* @__PURE__ */ new Map(), this._init();
      }, [{ key: "_init", value: function() {
        var e5, t5 = this._getStorageModule().getItem(this.TIM_ERROR_ASSISTANCE, false);
        if (t5) {
          try {
            e5 = JSON.parse(t5);
          } catch (e6) {
            this._getStorageModule().removeItem(this.TIM_ERROR_ASSISTANCE, false), M3.w("".concat(this._n, "._init error:"), e6);
          }
          e5 && (this._needToUpdate(e5) ? this._fetch() : this._fillMap(e5.message));
        } else
          this._fetch();
      } }, { key: "_needToUpdate", value: function(e5) {
        var t5 = e5.localSavedTime, e5 = e5.localSavedVersion, t5 = t5 && (/* @__PURE__ */ new Date()).getTime() - t5 >= this.STORAGE_EXPIRES_TIME, e5 = !e5 || "3.5.3" !== e5;
        return M3.l("".concat(this._n, "._needToUpdate isTimeout:").concat(t5, " isDifferentVersion:").concat(e5)), t5 || e5;
      } }, { key: "_fetch", value: function() {
        var e5, t5, n5, o5, i5, a5;
        this._m.get(12).isPrivateNetWork() || (e5 = "https://web.sdk.qcloud.com/im/download/error-message/v3/0.0.7/tim-error-message.txt", t5 = "application/x-www-form-urlencoded;charset=UTF-8", n5 = "".concat(this._n, "._fetch ok in"), o5 = this, v3 ? I3.request({ url: e5, method: "GET", timeout: 3e3, header: { "content-type": t5 }, dataType: "text", success: function(e6) {
          o5._fillAndSave(e6.data), M3.l("".concat(n5, " mini program"));
        }, fail: function() {
        } }) : (i5 = new XMLHttpRequest(), a5 = setTimeout(function() {
          i5.abort();
        }, 3e3), i5.onreadystatechange = function() {
          4 === i5.readyState && (a5 && clearTimeout(a5), 200 !== i5.status && 304 !== i5.status || (M3.l("".concat(n5, " browser")), o5._fillAndSave(i5.responseText)));
        }, i5.open("GET", e5, true), i5.setRequestHeader("Content-type", t5), i5.send()));
      } }, { key: "_fillAndSave", value: function(e5) {
        this._fillMap(e5), this._getStorageModule().setItem(this.TIM_ERROR_ASSISTANCE, JSON.stringify({ message: e5, localSavedTime: (/* @__PURE__ */ new Date()).getTime(), localSavedVersion: "3.5.3" }), true, false);
      } }, { key: "_getStorageModule", value: function() {
        return this._m.get(13);
      } }, { key: "_fillMap", value: function(e5) {
        this._map.clear();
        for (var t5, n5, o5 = e5.split(";\n"), i5 = o5.length, a5 = new RegExp(/'/g), s5 = 0; s5 < i5; s5++)
          if (n5 = o5[s5].indexOf(":"), t5 = o5[s5].slice(0, n5), n5 = o5[s5].slice(n5 + 1, o5[s5].length), !t5.startsWith("//")) {
            if (N3(n5))
              continue;
            this._map.set(t5, n5.replace(a5, ""));
          }
      } }, { key: "get", value: function(e5) {
        var t5 = e5.isIntl, n5 = e5.key, o5 = e5.replacement1, e5 = e5.replacement2, t5 = "".concat(n5, t5 ? "_en" : "_cn"), n5 = (!this._map.has(t5) && this._map.has(n5) && (t5 = n5), "");
        return this._map.has(t5) && (n5 = this._map.get(t5), N3(o5) || (n5 = n5.replace("$replacement1", o5)), N3(e5) || (n5 = n5.replace("$replacement2", e5))), n5;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset"));
      } }]), Za = e4(function e5(t5) {
        p4(this, e5), this._n = "RemoteSignalingHandler", this._sigM = t5;
      }, [{ key: "onNewMessageList", value: function(e5) {
        var n5 = this;
        e5.forEach(function(e6) {
          var t5 = n5.getPayloadData(e6);
          t5 && n5._handleActionType(t5, e6);
        });
      } }, { key: "onMessageModified", value: function(e5) {
        var n5 = this;
        e5.forEach(function(e6) {
          var t5 = n5.getPayloadData(e6);
          t5 && n5._onInvitationModified(t5, e6);
        });
      } }, { key: "getPayloadData", value: function(t5) {
        var n5 = "".concat(this._n, ".getPayloadData"), t5 = t5.payload.data;
        try {
          return JSON.parse(t5);
        } catch (e5) {
          return M3.e("".concat(n5, " JSON parse error. signalingData:").concat(t5)), null;
        }
      } }, { key: "_handleActionType", value: function(e5, t5) {
        switch (e5.actionType) {
          case _3.ACTION_TYPE_INVITE:
            this._onNewInvitationReceived(e5, t5);
            break;
          case _3.ACTION_TYPE_REJECT_INVITE:
            this._onInviteeRejected(e5);
            break;
          case _3.ACTION_TYPE_ACCEPT_INVITE:
            this._onInviteeAccepted(e5);
            break;
          case _3.ACTION_TYPE_CANCEL_INVITE:
            this._onInvitationCancelled(e5);
            break;
          case _3.ACTION_TYPE_INVITE_TIMEOUT:
            this._onInvitationTimeout(e5);
        }
      } }, { key: "_genBaseEmitData", value: function(e5) {
        return { inviteID: e5.inviteID, inviter: e5.inviter, groupID: e5.groupID, data: e5.data || "" };
      } }, { key: "_onNewInvitationReceived", value: function(e5, t5) {
        var n5 = "".concat(this._n, "._onNewInvitationReceived"), o5 = e5.inviteID, i5 = e5.inviteeList, a5 = e5.groupID, s5 = e5.inviter, r5 = this._sigM.getMyUserID(), c5 = i5.includes(r5), u5 = e5.timeout, l5 = (Fe2().getTime() - 1e3 * t5.time) / 1e3, n5 = (0 < u5 && 0 < l5 && l5 < u5 && (u5 -= l5), "".concat(n5, " myselfIncluded:").concat(c5, " groupID:").concat(a5, " signalObj:").concat(JSON.stringify(e5)));
        M3.l("".concat(n5, " timeout:").concat(u5, "s delta:").concat(l5, "s")), !(a5 && c5 || !a5) || (n5 = this._sigM.getInviteInfo(o5)) && n5 === e5 || (n5 || this._sigM.setInviteInfo(o5, y2(y2({}, e5), {}, { message: t5 })), this._sigM.emitEvent(_3.NEW_INVITATION_RECEIVED, y2(y2({}, this._genBaseEmitData(e5)), {}, { inviteeList: i5 })), s5 !== r5 && this._sigM.startTimer(y2(y2({}, e5), {}, { timeout: u5 })));
      } }, { key: "_onInviteeRejected", value: function(e5) {
        var t5 = "".concat(this._n, "._onInviteeRejected"), n5 = e5.inviteID, o5 = e5.inviter, i5 = e5.groupID, a5 = this._sigM.hasInviteInfo(n5);
        M3.l("".concat(t5, " inviteID:").concat(n5, " hasInviteID:").concat(a5, " inviter:").concat(o5, " groupID:").concat(i5)), a5 && (this._sigM.updateInviteInfo(e5), this._sigM.emitEvent(_3.INVITEE_REJECTED, y2(y2({}, this._genBaseEmitData(e5)), {}, { invitee: e5.inviteeList[0] })));
      } }, { key: "_onInviteeAccepted", value: function(e5) {
        var t5 = "".concat(this._n, "._onInviteeAccepted"), n5 = e5.inviteID, o5 = e5.inviter, i5 = e5.groupID, a5 = this._sigM.hasInviteInfo(n5);
        M3.l("".concat(t5, " inviteID:").concat(n5, " hasInviteID:").concat(a5, " inviter:").concat(o5, " groupID:").concat(i5)), a5 && (this._sigM.updateInviteInfo(e5), this._sigM.emitEvent(_3.INVITEE_ACCEPTED, y2(y2({}, this._genBaseEmitData(e5)), {}, { invitee: e5.inviteeList[0] })));
      } }, { key: "_onInvitationCancelled", value: function(e5) {
        var t5 = "".concat(this._n, "._onInvitationCancelled"), n5 = e5.inviteID, o5 = e5.inviter, i5 = e5.groupID, a5 = this._sigM.hasInviteInfo(n5);
        M3.l("".concat(t5, " inviteID:").concat(n5, " hasInviteID:").concat(a5, " inviter:").concat(o5, " groupID:").concat(i5)), a5 && (this._sigM.deleteInviteInfo(n5), this._sigM.emitEvent(_3.INVITATION_CANCELLED, this._genBaseEmitData(e5)));
      } }, { key: "_onInvitationTimeout", value: function(e5) {
        var t5 = "".concat(this._n, "._onInvitationTimeout"), n5 = e5.inviteID, o5 = e5.inviter, i5 = e5.groupID, a5 = e5.inviteeList, s5 = this._sigM.hasInviteInfo(n5);
        M3.l("".concat(t5, " inviteID:").concat(n5, " hasInviteID:").concat(s5, " inviter:").concat(o5, " groupID:").concat(i5, "  data:").concat(e5.data)), s5 && (this._sigM.updateInviteInfo(e5), this._sigM.emitEvent(_3.INVITATION_TIMEOUT, y2(y2({}, this._genBaseEmitData(e5)), {}, { inviteeList: a5, isSelfTimeout: false })));
      } }, { key: "_onInvitationModified", value: function(e5, t5) {
        var n5 = "".concat(this._n, "._onInvitationModified"), o5 = e5.inviteID, i5 = e5.data, a5 = this._sigM.hasInviteInfo(o5);
        M3.l("".concat(n5, " inviteID:").concat(o5, " hasInviteID:").concat(a5, " data:").concat(i5)), a5 && (this._sigM.setInviteInfo(o5, y2(y2({}, e5), {}, { message: t5 })), this._sigM.emitEvent(_3.INVITATION_MODIFIED, { inviteID: o5, data: i5 }));
      } }]), Qa = e4(function e5(t5) {
        p4(this, e5), this._n = "LocalSignalingHandler", this._sigM = t5;
      }, [{ key: "generateInviteID", value: function() {
        var e5, t5 = (t5 = Sa)((e5 = La)(32), 8) + "-" + t5(e5(16), 4) + "-" + t5(16384 | e5(12), 4) + "-" + t5(32768 | e5(14), 4) + "-" + t5(e5(48), 12);
        return M3.l("".concat(this._n, ".generateInviteID inviteID:").concat(t5)), t5;
      } }, { key: "createInviteInfo", value: function(e5) {
        var t5 = this.generateInviteID(), e5 = this.createInviteCustomData(y2(y2({}, e5), {}, { inviteID: t5 })), n5 = e5.groupID, o5 = e5.inviteeList, n5 = n5 || o5[0];
        return { customData: e5, message: this._sigM.createSignaling(e5, n5), inviteID: t5 };
      } }, { key: "_genBaseCustomData", value: function(e5) {
        var t5 = e5.data, n5 = e5.inviteID, e5 = e5.groupID;
        return { businessID: 1, timeout: 0, data: void 0 === t5 ? "" : t5, inviteID: void 0 === n5 ? "" : n5, groupID: void 0 === e5 ? "" : e5 };
      } }, { key: "createInviteCustomData", value: function(e5) {
        var t5 = e5.userID, n5 = e5.timeout, n5 = void 0 === n5 ? 0 : n5, o5 = e5.groupID, o5 = void 0 === o5 ? "" : o5, i5 = this._sigM.getMyUserID(), i5 = y2(y2({}, this._genBaseCustomData(e5)), {}, { actionType: _3.ACTION_TYPE_INVITE, inviter: i5, inviteeList: o5 ? e5.inviteeList : [t5], timeout: n5 });
        return M3.l("".concat(this._n, ".createInviteCustomData customData:"), i5), i5;
      } }, { key: "createCancelCustomData", value: function(e5) {
        var t5, n5 = "".concat(this._n, ".createCancelCustomData"), o5 = e5.inviteID, i5 = this._sigM.getMyUserID(), o5 = this._sigM.getInviteInfo(o5), a5 = o5.inviteeList, s5 = o5.groupID, o5 = o5.inviter;
        return o5 === i5 ? t5 = y2(y2({}, this._genBaseCustomData(e5)), {}, { actionType: _3.ACTION_TYPE_CANCEL_INVITE, groupID: s5, inviter: i5, inviteeList: a5 }) : M3.e("".concat(n5, " unmatched inviter:").concat(o5, " and my userID:").concat(i5)), M3.l("".concat(n5, " customData:"), t5), t5;
      } }, { key: "createAcceptCustomData", value: function(e5) {
        var t5, n5 = "".concat(this._n, ".createAcceptCustomData"), o5 = e5.inviteID, i5 = this._sigM.getMyUserID(), a5 = this._sigM.getInviteInfo(o5), s5 = a5.inviter, r5 = a5.groupID;
        return a5.inviteeList.includes(i5) ? t5 = y2(y2({}, this._genBaseCustomData(e5)), {}, { actionType: _3.ACTION_TYPE_ACCEPT_INVITE, groupID: r5, inviter: s5, inviteeList: [i5] }) : M3.e("".concat(n5, " userID:").concat(i5, " not in inviteeList. inviteID:").concat(o5, " groupID:").concat(r5)), M3.l("".concat(n5, " customData:"), t5), t5;
      } }, { key: "createRejectCustomData", value: function(e5) {
        var t5, n5 = "".concat(this._n, ".createRejectCustomData"), o5 = e5.inviteID, i5 = this._sigM.getMyUserID(), a5 = this._sigM.getInviteInfo(o5), s5 = a5.inviter, r5 = a5.groupID;
        return a5.inviteeList.includes(i5) ? t5 = y2(y2({}, this._genBaseCustomData(e5)), {}, { actionType: _3.ACTION_TYPE_REJECT_INVITE, groupID: r5, inviter: s5, inviteeList: [i5] }) : M3.e("".concat(n5, " userID:").concat(i5, " not in inviteeList. inviteID:").concat(o5, " groupID:").concat(r5)), M3.l("".concat(n5, " customData:"), t5), t5;
      } }, { key: "createTimeoutCustomData", value: function(e5) {
        var t5 = "".concat(this._n, ".createTimeoutCustomData"), n5 = e5.inviteeList, o5 = e5.inviter, i5 = e5.isInviter, i5 = void 0 !== i5 && i5, a5 = this._sigM.getMyUserID(), e5 = y2(y2({}, this._genBaseCustomData(e5)), {}, { actionType: _3.ACTION_TYPE_INVITE_TIMEOUT, inviter: o5, inviteeList: i5 ? n5 : [a5] });
        return M3.l("".concat(t5, " customData:"), e5), e5;
      } }]), $a = e4(function e5(t5) {
        p4(this, e5), this._n = "HistorySignalingHandler", this._sigM = t5, this.COUNT = 20, this.EXPIRED_TIME = 300, this._map = /* @__PURE__ */ new Map(), this._relatedToMeMap = /* @__PURE__ */ new Map();
      }, [{ key: "setCloudConfig", value: function() {
        var e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 20, t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 300;
        this.COUNT = e5, this.EXPIRED_TIME = t5, M3.l("".concat(this._n, ".setCloudConfig count:").concat(e5, ", time:").concat(t5));
      } }, { key: "getHistorySignaling", value: function() {
        var t5 = this, e5 = this._sigM.get(11).getLocalConvList();
        S3(e5) || (this._getC2CSignalingList(), e5 = this._getValidGroupConvList(e5), this._getGroupSignalingList(e5).then(function(e6) {
          t5._handleSignalingList(e6);
        }));
      } }, { key: "_getC2CSignalingList", value: function() {
        var e5 = this._sigM.get(6).getMessageListFromUnreadDB(), e5 = this._sigM.filterMessageList(e5);
        this._getRelatedToMeMap(e5);
      } }, { key: "_getGroupSignalingList", value: function(e5) {
        var n5 = this, e5 = this._createPromiseList(e5);
        return 0 === e5.length ? Promise.resolve(this._sortSignaling(this._relatedToMeMap)) : this._concurrentGetMessageList(e5).then(function(e6) {
          var t5 = /* @__PURE__ */ new Map();
          return e6.forEach(function(e7) {
            e7 = e7.list, e7 = n5._getRelatedToMeMap(e7);
            t5 = new Map([].concat(d3(t5), d3(e7)));
          }), n5._sortSignaling(t5);
        });
      } }, { key: "_handleSignalingList", value: function(e5) {
        S3(e5) || this._sigM.onNewMessageList(e5);
      } }, { key: "_getValidGroupConvList", value: function(e5) {
        for (var t5 = [], n5 = 0, o5 = e5.length; n5 < o5; n5++) {
          var i5 = e5[n5], a5 = i5.type, s5 = i5.unreadCount, i5 = i5.lastMessage, a5 = a5 === R3.CONV_GROUP, i5 = this._isNotExpired(i5);
          a5 && s5 && i5 && t5.push(e5[n5]);
        }
        return t5;
      } }, { key: "_isNotExpired", value: function(e5) {
        return !(!e5 || !e5.lastTime) && e5.lastTime > xe2() - this.EXPIRED_TIME;
      } }, { key: "_createPromiseList", value: function(e5) {
        for (var t5 = [], n5 = 0; n5 < e5.length; n5++) {
          var o5 = e5[n5], i5 = o5.conversationID, o5 = o5.unreadCount, o5 = o5 < this.COUNT ? o5 : this.COUNT, o5 = (this._map.set(i5, { msgCount: o5, list: [] }), this._sigM.get(11).getMessageList({ conversationID: i5 }));
          t5.push(o5);
        }
        return t5;
      } }, { key: "_concurrentGetMessageList", value: function(e5) {
        var i5 = this, a5 = [];
        return Promise.all(e5).then(function(e6) {
          for (var t5 = 0; t5 < e6.length; t5++) {
            var n5 = e6[t5], o5 = n5.code, n5 = n5.data;
            0 === o5 && 0 !== n5.messageList.length && (i5._handleMessageList(n5.messageList), o5 = i5._relayGetMessageList(n5)) && a5.push(o5);
          }
          return 0 < a5.length ? i5._concurrentGetMessageList(a5) : i5._map;
        });
      } }, { key: "_relayGetMessageList", value: function(e5) {
        var t5, n5 = e5.messageList, o5 = e5.nextReqMessageID, e5 = e5.isCompleted;
        return 0 === n5.length || (n5 = n5[0].conversationID, 0 === (t5 = this._map.get(n5).msgCount)) || e5 ? null : this._sigM.get(11).getMessageList({ conversationID: n5, nextReqMessageID: o5, count: t5 });
      } }, { key: "_handleMessageList", value: function(e5) {
        var t5 = e5.length, n5 = e5[0].conversationID, o5 = this._map.get(n5), i5 = o5.msgCount, o5 = o5.list;
        this._map.set(n5, { msgCount: 0 < i5 - t5 ? i5 - t5 : 0, list: o5.concat(this._sigM.filterMessageList(e5)) });
      } }, { key: "_getRelatedToMeMap", value: function(e5) {
        for (var t5 = 0; t5 < e5.length; t5++) {
          var n5 = e5[t5];
          this._saveRelatedToMe(n5);
        }
        return this._relatedToMeMap;
      } }, { key: "_saveRelatedToMe", value: function(e5) {
        var t5 = this._sigM.getPayloadData(e5) || {}, n5 = t5.actionType, t5 = t5.inviteID, o5 = void 0 === t5 ? "" : t5;
        switch (void 0 === n5 ? "" : n5) {
          case _3.ACTION_TYPE_INVITE:
            this._setHistoryInvite(e5);
            break;
          case _3.ACTION_TYPE_REJECT_INVITE:
          case _3.ACTION_TYPE_ACCEPT_INVITE:
            this._updateHistoryInvite(e5);
            break;
          case _3.ACTION_TYPE_CANCEL_INVITE:
            this._delHistoryInvite(o5);
            break;
          case _3.ACTION_TYPE_INVITE_TIMEOUT:
            this._updateHistoryInvite(e5);
        }
      } }, { key: "_setHistoryInvite", value: function(e5) {
        var t5 = this._sigM.getPayloadData(e5) || {}, n5 = t5.inviteID, n5 = void 0 === n5 ? "" : n5, o5 = t5.inviteeList, o5 = void 0 === o5 ? [] : o5, i5 = t5.timeout, i5 = void 0 === i5 ? 0 : i5, a5 = this._sigM.getMyUserID();
        o5.includes(a5) && (o5 = xe2() - e5.time, 0 < i5 && i5 < o5 && 0 !== i5 || this._relatedToMeMap.set(n5, y2(y2({}, t5), {}, { messageList: [e5] })));
      } }, { key: "_delHistoryInvite", value: function(e5) {
        this._relatedToMeMap.has(e5) && this._relatedToMeMap.delete(e5);
      } }, { key: "_updateHistoryInvite", value: function(e5) {
        var t5 = this._sigM.getPayloadData(e5) || {}, n5 = t5.inviteID, n5 = void 0 === n5 ? "" : n5, t5 = t5.inviteeList, o5 = void 0 === t5 ? [] : t5;
        if (this._relatedToMeMap.has(n5)) {
          for (var t5 = this._relatedToMeMap.get(n5), i5 = t5.inviteeList, t5 = t5.messageList, a5 = 0; a5 < o5.length; a5++) {
            var s5 = o5[a5];
            i5.includes(s5) && i5.splice(i5.indexOf(s5), 1);
          }
          0 === i5.length ? this._delHistoryInvite(n5) : t5.push(e5);
        } else
          this._delHistoryInvite(n5);
      } }, { key: "_sortSignaling", value: function(e5) {
        var t5 = [];
        return e5.forEach(function(e6) {
          t5 = [].concat(d3(t5), d3(e6.messageList));
        }), t5.sort(function(e6, t6) {
          return e6.time - t6.time;
        });
      } }, { key: "reset", value: function() {
        this._map.clear(), this._relatedToMeMap.clear();
      } }]), es2 = e4(function e5(t5, n5) {
        p4(this, e5), this.businessID = t5.businessID || 1, this.inviteID = t5.inviteID, this.groupID = t5.groupID || "", this.inviter = t5.inviter || "", this.inviteeList = t5.inviteeList || [], this.data = t5.data || "", this.actionType = t5.actionType || _3.ACTION_TYPE_INVITE, this.timeout = t5.timeout || 0;
      }), ts2 = ["message"], ns = ["message"], os = (t4(us, c4), e4(us, [{ key: "onC2CUnreadHandleCompleted", value: function() {
        this._isC2CUnreadHandleCompleted = true, this._isCloudConfigCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "onConvSyncCompleted", value: function() {
        this._isConvSyncCompleted = true, this._isC2CUnreadHandleCompleted && this._isCloudConfigCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "onCloudConfig", value: function() {
        this._isCloudConfigCompleted = true;
        var e5 = this.getCloudConfig("history_s_count"), t5 = this.getCloudConfig("history_s_time");
        N3(e5) || (e5 = Number(e5)), N3(t5) || (t5 = Number(t5)), this._historySignalingHandler.setCloudConfig(e5, t5), this._isC2CUnreadHandleCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady();
      } }, { key: "_isListenerExisted", value: function() {
        return -1 < this._m.getOEmitInst().eventNames().indexOf(_3.NEW_INVITATION_RECEIVED);
      } }, { key: "onReady", value: function() {
        this._isSyncCompleted = true;
        var e5 = this._isListenerExisted();
        M3.l("".concat(this._n, ".onReady. isListenerExisted: ").concat(e5)), e5 && this._historySignalingHandler.getHistorySignaling();
      } }, { key: "onNewMessageList", value: function(e5) {
        e5 = this.filterMessageList(e5);
        if (0 < e5.length)
          return this._remoteSignalingHandler.onNewMessageList(e5);
      } }, { key: "onMessageModified", value: function(e5) {
        e5 = this.filterMessageList(e5);
        if (0 < e5.length)
          return this._remoteSignalingHandler.onMessageModified(e5);
      } }, { key: "hasInviteInfo", value: function(e5) {
        return this._inviteInfoMap.has(e5);
      } }, { key: "getInviteInfo", value: function(e5) {
        return this._inviteInfoMap.get(e5);
      } }, { key: "setInviteInfo", value: function(e5, t5) {
        var n5 = t5.message, t5 = W2(t5, ts2);
        M3.l("".concat(this._n, ".setInviteInfo inviteID:").concat(e5, " data:"), t5), this._inviteInfoMap.set(e5, y2(y2({}, t5), {}, { message: n5 }));
      } }, { key: "deleteInviteInfo", value: function(e5) {
        this.hasInviteInfo(e5) && (M3.l("".concat(this._n, ".deleteInviteInfo inviteID:").concat(e5, ".")), this._inviteInfoMap.delete(e5));
      } }, { key: "updateInviteInfo", value: function(e5) {
        var t5 = "".concat(this._n, ".updateInviteInfo"), n5 = e5.inviteID, o5 = e5.inviter, i5 = e5.inviteeList, e5 = e5.groupID;
        M3.l("".concat(t5, " inviteID:").concat(n5, " inviter:").concat(o5, " groupID:").concat(e5)), e5 && this.hasInviteInfo(n5) && (o5 = i5[0], (e5 = this.getInviteInfo(n5).inviteeList).includes(o5) && (e5.splice(e5.indexOf(o5), 1), M3.l("".concat(t5, " remove ").concat(o5, ". localInviteeList.length:").concat(e5.length))), 0 !== e5.length) || this.deleteInviteInfo(n5);
      } }, { key: "canIUseSignaling", value: function() {
        return this._canIUseSignaling;
      } }, { key: "emitEvent", value: function(e5, t5) {
        this.emitOEvt(e5, t5);
      } }, { key: "addSignalingListener", value: function(e5, t5, n5) {
        this._canIUseSignaling || (this._canIUseSignaling = true), this._m.getOEmitInst().on(e5, t5, n5);
      } }, { key: "removeSignalingListener", value: function(e5, t5, n5) {
        this._m.getOEmitInst().off(e5, t5, n5), this._isListenerExisted() || (this._canIUseSignaling = false);
      } }, { key: "invite", value: function(e5) {
        var t5 = this, n5 = "".concat(this._n, ".").concat("invite"), o5 = this._localSignalingHandler.createInviteInfo(e5), i5 = o5.message, a5 = o5.customData, s5 = o5.inviteID;
        return M3.l("".concat(n5, " options:").concat(JSON.stringify(e5), " inviteID:").concat(s5)), this.sendSignaling(i5, e5).then(function(e6) {
          return e6 && 0 === e6.code ? (t5.setInviteInfo(s5, y2(y2({}, a5), {}, { message: i5 })), t5.startTimer(y2(y2({}, a5), {}, { inviteID: s5 })), y2(y2({}, e6), {}, { inviteID: s5 })) : e6;
        }).catch(function(e6) {
          return E4(e6);
        });
      } }, { key: "inviteSync", value: function(e5, t5, n5) {
        var o5 = this, i5 = "".concat(this._n, ".").concat("inviteSync"), a5 = this._localSignalingHandler.createInviteInfo(e5), s5 = a5.message, r5 = a5.customData, c5 = a5.inviteID;
        return M3.l("".concat(i5, " options:").concat(JSON.stringify(e5), " inviteID:").concat(c5)), this.sendSignaling(s5, e5).then(function(e6) {
          if (e6 && 0 === e6.code)
            return o5.setInviteInfo(c5, y2(y2({}, r5), {}, { message: s5 })), o5.startTimer(y2(y2({}, r5), {}, { inviteID: c5 })), t5 && t5({ inviteID: c5 }), { inviteID: c5 };
          n5 && n5(0 === e6.code, e6.message || "");
        }).catch(function(e6) {
          return n5 && n5(e6.code, e6.message), E4(e6);
        }), c5;
      } }, { key: "_handleImResponse", value: function(e5, t5, n5) {
        t5 && 0 === t5.code && (this._isHandling = false, n5 ? this.deleteInviteInfo(e5.inviteID) : this.updateInviteInfo(e5));
      } }, { key: "cancel", value: function(t5) {
        var n5 = this, e5 = "".concat(this._n, ".").concat("cancel");
        if (M3.l("".concat(e5, " options:").concat(JSON.stringify(t5))), !this.hasInviteInfo(t5.inviteID) || this._isHandling)
          return E4({ code: k2.INVALID_CANCEL_MESSAGE });
        this._isHandling = true;
        var o5, i5 = this._localSignalingHandler.createCancelCustomData(t5);
        return i5 ? (e5 = i5.groupID, o5 = i5.inviteeList, e5 = e5 || o5[0], o5 = this.createSignaling(i5, e5), this.sendSignaling(o5, t5).then(function(e6) {
          return n5._handleImResponse(i5, e6, true), 0 === e6.code ? y2(y2({}, e6), {}, { inviteID: t5.inviteID }) : e6;
        }).catch(function(e6) {
          return E4(e6);
        })) : (this._isHandling = false, E4({ code: k2.SIGNALING_NO_PERMISSION }));
      } }, { key: "accept", value: function(t5) {
        var n5 = this, e5 = "".concat(this._n, ".").concat("accept");
        if (M3.l("".concat(e5, " options:").concat(JSON.stringify(t5))), !this.hasInviteInfo(t5.inviteID) || this._isHandling)
          return E4({ code: k2.SIGNALING_INVALID_INVITE_ID });
        this._isHandling = true;
        var o5 = this._localSignalingHandler.createAcceptCustomData(t5);
        return o5 ? (e5 = this.createSignaling(o5), this.sendSignaling(e5, t5).then(function(e6) {
          return n5._handleImResponse(o5, e6), 0 === e6.code ? y2(y2({}, e6), {}, { inviteID: t5.inviteID }) : e6;
        }).catch(function(e6) {
          return E4(e6);
        })) : (this._isHandling = false, E4({ code: k2.SIGNALING_NO_PERMISSION }));
      } }, { key: "reject", value: function(t5) {
        var n5 = this, e5 = "".concat(this._n, ".").concat("reject");
        if (M3.l("".concat(e5, " options:").concat(JSON.stringify(t5))), !this.hasInviteInfo(t5.inviteID) || this._isHandling)
          return E4({ code: k2.SIGNALING_INVALID_INVITE_ID });
        this._isHandling = true;
        var o5 = this._localSignalingHandler.createRejectCustomData(t5);
        return o5 ? (e5 = this.createSignaling(o5), this.sendSignaling(e5, t5).then(function(e6) {
          return n5._handleImResponse(o5, e6, true), 0 === e6.code ? y2(y2({}, e6), {}, { inviteID: t5.inviteID }) : e6;
        }).catch(function(e6) {
          return E4(e6);
        })) : (this._isHandling = false, E4({ code: k2.SIGNALING_NO_PERMISSION }));
      } }, { key: "getSignalingInfo", value: function(e5) {
        var t5 = "".concat(this._n, ".getSignalingInfo"), n5 = e5.ID, o5 = e5.from, i5 = e5.to, a5 = this._filterSignaling(e5), s5 = null, e5 = (a5 && (e5 = this.getPayloadData(e5), s5 = new es2(e5)), a5 ? "actionType:".concat(s5.actionType) : "");
        return M3.l("".concat(t5, " messageID:").concat(n5, " from:").concat(o5, " to:").concat(i5, " ") + "".concat(e5, " isSignaling:").concat(a5)), s5;
      } }, { key: "modifyInvitation", value: function(e5) {
        var t5, n5, o5, i5, a5 = this, s5 = e5.inviteID, e5 = e5.data;
        return this.hasInviteInfo(s5) ? (t5 = this.getInviteInfo(s5), n5 = t5.message, o5 = W2(t5, ns), i5 = n5.payload.data, o5.data = e5, n5.payload.data = JSON.stringify(o5), this.get(2).modifyRemoteMessage(n5).then(function(e6) {
          return a5.hasInviteInfo(s5) && a5.setInviteInfo(s5, y2(y2({}, o5), {}, { message: n5 })), e6;
        }).catch(function(e6) {
          return n5.payload.data = i5, E4(e6);
        })) : E4({ code: k2.SIGNALING_INVALID_INVITE_ID });
      } }, { key: "_genMsgCtrlInfo", value: function() {
        var e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t5 = e5.data, t5 = void 0 === t5 ? "" : t5, n5 = e5.onlineUserOnly, o5 = e5.inviteID, o5 = void 0 === o5 ? "" : o5, i5 = e5.offlinePushInfo, e5 = e5.actionType, a5 = { _onlineOnlyFlag: false }, o5 = { onlineUserOnly: (a5 = o5 && this.getInviteInfo(o5) ? this.getInviteInfo(o5).message : a5)._onlineOnlyFlag || n5 || false, offlinePushInfo: i5, messageControlInfo: { excludedFromContentModeration: true, excludedFromUnreadCount: false, excludedFromLastMessage: false } };
        return e5 === _3.ACTION_TYPE_INVITE_TIMEOUT ? (a5 = !!t5.match(/excludeTimeoutSignalingFromHistoryMessage/), o5.messageControlInfo.excludedFromUnreadCount = a5, o5.messageControlInfo.excludedFromLastMessage = a5) : (n5 = !!t5.match(/excludeFromHistoryMessage/), i5 = !!t5.match(/excludeOriginalSignalingFromHistoryMessage/), o5.messageControlInfo.excludedFromUnreadCount = n5 || i5, o5.messageControlInfo.excludedFromLastMessage = n5 || i5), o5;
      } }, { key: "sendSignaling", value: function(e5, t5) {
        var n5 = this;
        return this.get(2).sendMessageInstance(e5, this._genMsgCtrlInfo(t5)).catch(function(e6) {
          return n5._isHandling = false, E4(e6);
        });
      } }, { key: "filterMessageList", value: function(e5) {
        var t5 = this;
        return e5.filter(function(e6) {
          return t5._filterSignaling(e6);
        });
      } }, { key: "getPayloadData", value: function(e5) {
        return this._remoteSignalingHandler.getPayloadData(e5);
      } }, { key: "createSignaling", value: function(e5, t5) {
        var n5 = e5.groupID, o5 = e5.inviter, t5 = { to: t5 || n5 || o5, conversationType: n5 ? R3.CONV_GROUP : R3.CONV_C2C, priority: R3.MSG_PRIORITY_HIGH, payload: { data: JSON.stringify(e5) } }, o5 = this.get(2).createCustomMessage(t5);
        return M3.l("".concat(this._n, ".createSignaling. message:"), o5), o5;
      } }, { key: "_filterSignaling", value: function(e5) {
        var t5, n5, o5 = false;
        return e5.type && e5.type === R3.MSG_CUSTOM && (t5 = e5.cloudCustomData, e5 = void 0 === (e5 = e5.payload.data) ? "" : e5, t5 = (void 0 === t5 ? "" : t5).match(/"type":"tsignaling"/), n5 = e5.match(/inviteID/), e5 = e5.match(/actionType/), o5 = t5 || n5 && e5), !!o5;
      } }, { key: "startTimer", value: function(t5) {
        var n5, o5, i5, a5 = this, s5 = "".concat(this._n, ".startTimer"), e5 = t5.timeout, r5 = t5.inviteID, c5 = t5.inviter, u5 = t5.groupID, l5 = c5 === this.getMyUserID();
        M3.l("".concat(s5, " timeout:").concat(e5, " isInviter:").concat(l5, " groupID:").concat(u5)), e5 <= 0 || (n5 = l5 ? e5 + 5 : e5, o5 = 1, i5 = setInterval(function() {
          var e6 = a5._hasLocalInviteInfo(t5, l5);
          o5 < n5 && e6 ? ++o5 : (e6 && a5._sendTimeoutNotice(r5, l5), M3.l("".concat(s5, " end.")), clearInterval(i5));
        }, 1e3));
      } }, { key: "_hasLocalInviteInfo", value: function(e5, t5) {
        var n5, o5, i5 = e5.inviteID, e5 = e5.groupID;
        return !!this.hasInviteInfo(i5) && (n5 = "".concat(this._n, "._hasLocalInviteInfo"), o5 = this.getInviteInfo(i5).inviteeList, M3.l("".concat(n5, " inviteID:").concat(i5, " inviteeList:").concat(o5, " groupID:").concat(e5)), !e5 || (t5 ? 0 < o5.length : 0 < o5.length && o5.includes(this.getMyUserID())));
      } }, { key: "_getReceiver", value: function(e5, t5) {
        var n5 = t5.groupID, o5 = t5.inviteeList, t5 = t5.inviter;
        return e5 ? n5 || o5[0] : n5 || t5;
      } }, { key: "_sendTimeoutNotice", value: function(i5, a5) {
        var s5 = this, e5 = this.getInviteInfo(i5), t5 = this._getReceiver(a5, e5), r5 = (M3.l("".concat(this._n, "._sendTimeoutNotice inviteID:").concat(i5, " to:").concat(t5, " isInviter:").concat(a5)), this._localSignalingHandler.createTimeoutCustomData(y2(y2({}, e5), {}, { isInviter: a5 }))), c5 = this.createSignaling(r5, t5);
        return this.sendSignaling(c5, r5).then(function(e6) {
          var t6, n5, o5;
          e6 && 0 === e6.code && (e6 = r5.data, t6 = r5.groupID, n5 = r5.inviteeList, o5 = r5.inviter, s5.emitEvent(_3.INVITATION_TIMEOUT, { data: e6, groupID: t6, inviteID: i5, inviteeList: n5, inviter: o5, isSelfTimeout: true, message: c5 }), a5 ? s5.deleteInviteInfo(i5) : s5.updateInviteInfo(r5));
        });
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._inviteInfoMap.clear(), this._canIUseSignaling = false, this._isHandling = false, this._historySignalingHandler.reset(), this._isC2CUnreadHandleCompleted = false, this._isConvSyncCompleted = false, this._isSyncCompleted = false, this._isCloudConfigCompleted = false;
      } }])), is = ["followDiffList"], as = ["from"], ss2 = { NONE: 0, FOLLOWERS: 1, FOLLOWING: 2, MUTUAL: 3 }, rs = (t4(cs, c4), e4(cs, [{ key: "_onCloudConfig", value: function() {
        var e5 = this.getCloudConfig("follow_req_count");
        N3(e5) || (e5 = Number(e5), this.DEFAULT_COUNT = e5 > this.MAX_COUNT ? this.MAX_COUNT : e5, this._clearFollowList());
      } }, { key: "clearCacheOnReconnected", value: function() {
        this._clearFollowList();
      } }, { key: "onFollowNotify", value: function(e5) {
        var a5 = this, e5 = e5.dataList || [];
        M3.l("".concat(this._n, ".onFollowNotify followChangeList:").concat(e5.length)), e5.forEach(function(e6) {
          var t5 = e6.followDiffList, t5 = void 0 === t5 ? [] : t5, e6 = W2(e6, is), o5 = e6.from, i5 = W2(e6, as);
          t5.forEach(function(e7) {
            var t6 = e7.isAdd, e7 = e7.followType, e7 = void 0 === e7 ? 0 : e7, n5 = a5._initFollowInfo();
            1 === t6 ? (i5.userID = o5, n5[e7].userInfoList.push(i5), n5[e7].isAdd = true) : (n5[e7].userInfoList.push(o5), n5[e7].isAdd = false), a5._emitEvent(n5);
          });
        });
      } }, { key: "_initFollowInfo", value: function() {
        var t5 = {};
        return Object.values(ss2).forEach(function(e5) {
          e5 !== ss2.NONE && (t5[e5] = { userInfoList: [], isAdd: false });
        }), t5;
      } }, { key: "_emitEvent", value: function(n5) {
        var o5 = this;
        Object.keys(n5).forEach(function(e5) {
          var e5 = Number(e5), t5 = n5[e5];
          0 < t5.userInfoList.length && (e5 === ss2.FOLLOWERS && (o5._clearFollowList(ss2.FOLLOWERS), o5.emitOEvt(h4.MY_FOLLOWERS_LIST_UPDATED, t5)), e5 === ss2.FOLLOWING && (o5._clearFollowList(ss2.FOLLOWING), o5.emitOEvt(h4.MY_FOLLOWING_LIST_UPDATED, t5)), e5 === ss2.MUTUAL) && (o5._clearFollowList(ss2.MUTUAL), o5.emitOEvt(h4.MUTUAL_FOLLOWERS_LIST_UPDATED, t5));
        });
      } }, { key: "followUser", value: function(e5) {
        var t5, n5, o5;
        return this.canIUse(g4.FOLLOW) ? (t5 = "".concat(this._n, ".").concat("followUser"), n5 = "userIDList:".concat(e5.length), (o5 = new P3("followUser")).setMessage(n5), M3.l("".concat(t5, " ").concat(n5)), this.req({ P: G2.FOLLOW, data: { fromAccount: this.getMyUserID(), userIDList: e5.map(function(e6) {
          return { userID: e6 };
        }) } }).then(function(e6) {
          return o5.end(), M3.l("".concat(t5, " ok.")), T4(e6.data.resultList);
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse("followUser");
      } }, { key: "unfollowUser", value: function(e5) {
        var t5, n5, o5;
        return this.canIUse(g4.FOLLOW) ? (t5 = "".concat(this._n, ".").concat("unfollowUser"), n5 = "userIDList:".concat(e5.length), (o5 = new P3("unfollowUser")).setMessage(n5), M3.l("".concat(t5, " ").concat(n5)), this.req({ P: G2.UNFOLLOW, data: { fromAccount: this.getMyUserID(), userIDList: e5 } }).then(function(e6) {
          return o5.end(), M3.l("".concat(t5, " ok.")), T4(e6.data.resultList);
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse("unfollowUser");
      } }, { key: "getMyFollowersList", value: function() {
        var t5 = this, n5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o5 = "getMyFollowersList";
        if (!this.canIUse(g4.FOLLOW))
          return this.noUse(o5);
        var i5 = n5 || this.FIRST_PAGE_INDEX;
        if (this._myFollowersList.has(i5)) {
          var e5 = this._myFollowersList.get(i5), a5 = e5.resultList, s5 = e5.nextCursor, e5 = e5.lastUpdateTime;
          if (Date.now() - e5 < this.MAX_CATCH_TIME && 0 < a5.length)
            return M3.l("".concat(this._n, ".").concat(o5, " nextCursor:").concat(n5, " from local.")), D2({ resultList: a5, nextCursor: s5 });
        }
        return this._getFollowList(n5, ss2.FOLLOWERS).then(function(e6) {
          return t5._myFollowersList.set(i5, y2(y2({}, e6), {}, { lastUpdateTime: Date.now() })), M3.l("".concat(t5._n, ".").concat(o5, " nextCursor:").concat(n5, " from remote.")), T4(e6);
        });
      } }, { key: "getMyFollowingList", value: function() {
        var t5 = this, n5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o5 = "getMyFollowingList";
        if (!this.canIUse(g4.FOLLOW))
          return this.noUse(o5);
        var i5 = n5 || this.FIRST_PAGE_INDEX;
        if (this._myFollowingList.has(i5)) {
          var e5 = this._myFollowingList.get(i5), a5 = e5.resultList, s5 = e5.nextCursor, e5 = e5.lastUpdateTime;
          if (Date.now() - e5 < this.MAX_CATCH_TIME && 0 < a5.length)
            return M3.l("".concat(this._n, ".").concat(o5, " nextCursor:").concat(n5, " from local.")), D2({ resultList: a5, nextCursor: s5 });
        }
        return this._getFollowList(n5, ss2.FOLLOWING).then(function(e6) {
          return t5._myFollowingList.set(i5, y2(y2({}, e6), {}, { lastUpdateTime: Date.now() })), M3.l("".concat(t5._n, ".").concat(o5, " nextCursor:").concat(n5, " from remote.")), T4(e6);
        });
      } }, { key: "getMutualFollowersList", value: function() {
        var t5 = this, n5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", o5 = "getMutualFollowersList";
        if (!this.canIUse(g4.FOLLOW))
          return this.noUse(o5);
        var i5 = n5 || this.FIRST_PAGE_INDEX;
        if (this._myMutualFollowersList.has(i5)) {
          var e5 = this._myMutualFollowersList.get(i5), a5 = e5.resultList, s5 = e5.nextCursor, e5 = e5.lastUpdateTime;
          if (Date.now() - e5 < this.MAX_CATCH_TIME && 0 < a5.length)
            return M3.l("".concat(this._n, ".").concat(o5, " nextCursor:").concat(n5, " from local.")), D2({ resultList: a5, nextCursor: s5 });
        }
        return this._getFollowList(n5, ss2.MUTUAL).then(function(e6) {
          return t5._myMutualFollowersList.set(i5, y2(y2({}, e6), {}, { lastUpdateTime: Date.now() })), M3.l("".concat(t5._n, ".").concat(o5, " nextCursor:").concat(n5, " from remote.")), T4(e6);
        });
      } }, { key: "_getFollowList", value: function(e5, t5) {
        var i5 = this, n5 = new P3("_getFollowList");
        return n5.setMessage("nextCursor:".concat(e5, " type:").concat(t5)), this.req({ P: G2.GET_FOLLOW, data: { fromAccount: this.getMyUserID(), count: this.DEFAULT_COUNT, nextCursor: e5, type: t5 } }).then(function(e6) {
          n5.end();
          var e6 = e6.data, t6 = e6.resultList, t6 = void 0 === t6 ? [] : t6, e6 = e6.nextCursor, e6 = void 0 === e6 ? "" : e6, o5 = [];
          return t6.forEach(function(e7) {
            var t7 = e7.userID, n6 = e7.followTime, e7 = e7.profileList;
            o5.push(y2({ userID: t7, followTime: n6 }, i5._handleProfileItem(void 0 === e7 ? [] : e7)));
          }), { resultList: o5, nextCursor: e6 };
        }).catch(function(e6) {
          return n5.setError(e6).end(), M3.e("".concat(i5._n, "._getFollowList failed. error:"), e6), E4(e6);
        });
      } }, { key: "_handleProfileItem", value: function(e5) {
        var t5 = {};
        return e5.forEach(function(e6) {
          switch (e6.tag) {
            case f3.NICK:
              t5.nick = e6.value;
              break;
            case f3.GENDER:
              t5.gender = e6.value;
              break;
            case f3.BIRTHDAY:
              t5.birthday = e6.value;
              break;
            case f3.LOCATION:
              t5.location = e6.value;
              break;
            case f3.SELFSIGNATURE:
              t5.selfSignature = e6.value;
              break;
            case f3.ALLOWTYPE:
              t5.allowType = e6.value;
              break;
            case f3.LANGUAGE:
              t5.language = e6.value;
              break;
            case f3.AVATAR:
              t5.avatar = e6.value;
              break;
            case f3.MESSAGESETTINGS:
              t5.messageSettings = e6.value;
              break;
            case f3.ADMINFORBIDTYPE:
              t5.adminForbidType = e6.value;
              break;
            case f3.LEVEL:
              t5.level = e6.value;
              break;
            case f3.ROLE:
              t5.role = e6.value;
              break;
            default:
              t5[e6.tag] = e6.value;
          }
        }), t5;
      } }, { key: "getUserFollowInfo", value: function(e5) {
        var t5, n5, i5;
        return this.canIUse(g4.FOLLOW) ? (n5 = false, N3(e5 = e5) && (e5 = [this.getMyUserID()], n5 = true), t5 = "".concat(this._n, ".").concat("getUserFollowInfo"), n5 = "userIDList:".concat(e5.length, " isGetMyFollowInfo:").concat(n5), (i5 = new P3("getUserFollowInfo")).setMessage(n5), M3.l("".concat(t5, " ").concat(n5)), this.req({ P: G2.GET_FOLLOW_INFO, data: { fromAccount: this.getMyUserID(), userIDList: e5 } }).then(function(e6) {
          i5.end(), M3.l("".concat(t5, " ok."));
          var e6 = e6.data.followInfoList, o5 = [];
          return (void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.followersCount, n6 = e7.followingCount, e7 = e7.mutualFollowersCount;
            o5.push({ followersCount: t6, followingCount: n6, mutualFollowersCount: e7 });
          }), T4(o5);
        }).catch(function(e6) {
          return i5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        })) : this.noUse("getUserFollowInfo");
      } }, { key: "checkFollowType", value: function(e5) {
        if (!this.canIUse(g4.FOLLOW))
          return this.noUse("checkFollowType");
        100 < e5.length && (e5 = e5.slice(0, 100), M3.w("".concat(t5, " ").concat(Qt2(100))));
        var t5 = "".concat(this._n, ".").concat("checkFollowType"), n5 = "userIDList length:".concat(e5.length, " "), o5 = new P3("checkFollowType");
        return o5.setMessage(n5), M3.l("".concat(t5, " ").concat(n5)), this.req({ P: G2.CHECK_FOLLOW_TYPE, data: { fromAccount: this.getMyUserID(), userIDList: e5 } }).then(function(e6) {
          o5.end(), M3.l("".concat(t5, " ok."));
          var e6 = e6.data.resultList, n6 = [];
          return (void 0 === e6 ? [] : e6).forEach(function(e7) {
            var t6 = e7.userID, e7 = e7.followType;
            n6.push({ userID: t6, followType: e7 });
          }), T4(n6);
        }).catch(function(e6) {
          return o5.setError(e6).end(), M3.e("".concat(t5, " failed. error:"), e6), E4(e6);
        });
      } }, { key: "_clearFollowList", value: function(e5) {
        N3(e5) ? (this._myFollowersList.clear(), this._myFollowingList.clear(), this._myMutualFollowersList.clear()) : e5 !== ss2.FOLLOWERS ? e5 !== ss2.FOLLOWING ? e5 === ss2.MUTUAL && this._myMutualFollowersList.clear() : this._myFollowingList.clear() : this._myFollowersList.clear();
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._clearFollowList();
      } }])), ie2 = Ri(function(e5, t5) {
        var n5 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        t5.assign = function(e6) {
          for (var t6, n6, o6 = Array.prototype.slice.call(arguments, 1); o6.length; ) {
            var i6 = o6.shift();
            if (i6) {
              if ("object" !== z2(i6))
                throw new TypeError(i6 + "must be non-object");
              for (var a5 in i6)
                t6 = i6, n6 = a5, Object.prototype.hasOwnProperty.call(t6, n6) && (e6[a5] = i6[a5]);
            }
          }
          return e6;
        }, t5.shrinkBuf = function(e6, t6) {
          return e6.length === t6 ? e6 : e6.subarray ? e6.subarray(0, t6) : (e6.length = t6, e6);
        };
        var o5 = { arraySet: function(e6, t6, n6, o6, i6) {
          if (t6.subarray && e6.subarray)
            e6.set(t6.subarray(n6, n6 + o6), i6);
          else
            for (var a5 = 0; a5 < o6; a5++)
              e6[i6 + a5] = t6[n6 + a5];
        }, flattenChunks: function(e6) {
          for (var t6, n6, o6, i6 = 0, a5 = 0, s5 = e6.length; a5 < s5; a5++)
            i6 += e6[a5].length;
          for (o6 = new Uint8Array(i6), a5 = t6 = 0, s5 = e6.length; a5 < s5; a5++)
            n6 = e6[a5], o6.set(n6, t6), t6 += n6.length;
          return o6;
        } }, i5 = { arraySet: function(e6, t6, n6, o6, i6) {
          for (var a5 = 0; a5 < o6; a5++)
            e6[i6 + a5] = t6[n6 + a5];
        }, flattenChunks: function(e6) {
          return [].concat.apply([], e6);
        } };
        t5.setTyped = function(e6) {
          e6 ? (t5.Buf8 = Uint8Array, t5.Buf16 = Uint16Array, t5.Buf32 = Int32Array, t5.assign(t5, o5)) : (t5.Buf8 = Array, t5.Buf16 = Array, t5.Buf32 = Array, t5.assign(t5, i5));
        }, t5.setTyped(n5);
      });
      function cs(e5) {
        return p4(this, cs), (e5 = i4(this, cs, [e5]))._n = "FollowModule", e5._myFollowersList = /* @__PURE__ */ new Map(), e5._myFollowingList = /* @__PURE__ */ new Map(), e5._myMutualFollowersList = /* @__PURE__ */ new Map(), e5.MAX_CATCH_TIME = 6e5, e5.FIRST_PAGE_INDEX = gt2(), e5.DEFAULT_COUNT = 500, e5.MAX_COUNT = 1e3, e5.getIEmitInst().on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function us(e5) {
        p4(this, us), (e5 = i4(this, us, [e5]))._n = "SignalingModule", e5._inviteInfoMap = /* @__PURE__ */ new Map(), e5._canIUseSignaling = false, e5._isHandling = false, e5._remoteSignalingHandler = new Za(e5), e5._localSignalingHandler = new Qa(e5), e5._historySignalingHandler = new $a(e5), e5._isC2CUnreadHandleCompleted = false, e5._isConvSyncCompleted = false, e5._isSyncCompleted = false, e5._isCloudConfigCompleted = false;
        var t5 = e5.getIEmitInst();
        return t5.on(U3.C2C_UNREAD_HANDLE_COMPLETED, e5.onC2CUnreadHandleCompleted, e5), t5.on(U3.CONV_SYNC_COMPLETED, e5.onConvSyncCompleted, e5), t5.on(U3.CLOUD_CONFIG, e5.onCloudConfig, e5), e5;
      }
      function ls(e5) {
        return p4(this, ls), (e5 = i4(this, ls, [e5]))._n = "ProfanityFilterModule", e5._plugin = null, e5._filterConfigMap = /* @__PURE__ */ new Map(), e5._startIndex = 0, e5._version = 0, e5._canIUseLexicon = false, e5._isFetching = false, e5._expiredTime = 0, e5;
      }
      function ds(e5) {
        var t5;
        return p4(this, ds), (t5 = i4(this, ds, [e5]))._m = e5, t5._n = "TIMPushModule", t5._pluginName = "TIMPush", t5._pushPlugin = void 0, t5._androidPushConfig = {}, t5._deviceToken = "", t5._businessID = 0, t5._iOSBusinessID = 0, t5._c2cUnreadCount = 0, t5._groupUnreadCount = 0, t5._isWebUniapp = 0, t5._deviceInfo = { notificationStatus: 0, deviceModel: "", systemVersion: "", pushVersion: "1.0.1", packageName: "" }, t5;
      }
      function ps(e5) {
        var t5;
        return p4(this, ps), (t5 = i4(this, ps, [e5]))._m = e5, t5._n = "OfflinePushModule", t5._offlinePushPlugin = void 0, t5._androidPushConfig = { huaweiPushBussinessId: "", xiaomiPushBussinessId: "", xiaomiPushAppId: "", xiaomiPushAppKey: "", meizuPushBussinessId: "", meizuPushAppId: "", meizuPushAppKey: "", vivoPushBussinessId: "", fcmPushBussinessId: "", oppoPushBussinessId: "", oppoPushAppKey: "", oppoPushAppSecret: "", honorPushBussinessId: "" }, t5._deviceToken = "", t5._businessID = 0, t5._iosBusinessID = 0, t5._c2cUnreadCount = 0, t5._groupUnreadCount = 0, t5._isWebUniapp = 0, t5;
      }
      function _s(e5) {
        return p4(this, _s), (e5 = i4(this, _s, [e5]))._n = "WorkerTimerModule", e5._isWorkerEnabled = true, e5._workerTimer = null, e5._timerID = -1, e5._init(), e5.getIEmitInst().on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function hs(e5) {
        return p4(this, hs), (e5 = i4(this, hs, [e5]))._n = "SnsModule", e5._friendHandler = new qa(e5), e5._friendApplicationHandler = new wa(e5), e5._friendGroupHandler = new Va(e5), e5.getIEmitInst().on(U3.A2KEY_AND_TINYID_UPDATED, e5.onContextUpdated, e5), e5;
      }
      function gs(e5) {
        p4(this, gs), (e5 = i4(this, gs, [e5]))._n = "QualityStatModule", e5.TAG = "im-ssolog-quality-stat", e5.reportIndex = 0, e5.wholePeriod = false, e5._qualityItems = [Bn, Hn, Kn, Wn, Yn, jn, Jn, zn, Xn, Zn], e5._messageSentItems = [Kn, Wn, Yn, jn, Jn], e5._messageReceivedItems = [zn, Xn, Zn], e5.REPORT_INTERVAL = 120, e5.REPORT_SDKAPPID_BLACKLIST = [], e5.REPORT_TINYID_WHITELIST = [], e5._statInfoArr = [], e5._avgRTT = new Na(), e5._avgE2EDelay = new Oa(), e5._rateMessageSent = new Ga(), e5._rateMessageReceived = new Pa();
        var t5 = e5.getIEmitInst();
        return t5.on(U3.A2KEY_AND_TINYID_UPDATED, e5._onLoginSuccess, e5), t5.on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      function fs(e5) {
        return p4(this, fs), (e5 = i4(this, fs, [e5]))._n = "RecoverMsgModule", e5.PULL_LIMIT_COUNT = 15, e5;
      }
      function ms(e5) {
        return p4(this, ms), (e5 = i4(this, ms, [e5]))._n = "CloudControlModule", e5._cloudConfig = /* @__PURE__ */ new Map(), e5._expiredTime = 0, e5._version = 0, e5._isFetching = false, e5;
      }
      function vs(e5) {
        return p4(this, vs), (e5 = i4(this, vs, [e5]))._n = "SessionModule", e5._platform = e5.getPlatform(), e5._pHandler = new fa(e5), e5._msgDispatcher = new va(e5), e5._cmdFreqLimitMap = /* @__PURE__ */ new Map(), e5._cmdReqInfoMap = /* @__PURE__ */ new Map(), e5._serverOverloadInfoMap = /* @__PURE__ */ new Map(), e5._incrementalPullContactFlag = true, e5._init(), e5.getIEmitInst().on(U3.CLOUD_CONFIG, e5._onCloudConfig, e5), e5;
      }
      ie2.assign, ie2.shrinkBuf, ie2.setTyped, ie2.Buf8, ie2.Buf16, ie2.Buf32;
      function Is(e5, t5, n5, o5) {
        for (var i5 = 65535 & e5 | 0, a5 = e5 >>> 16 & 65535 | 0, s5 = 0; 0 !== n5; ) {
          for (n5 -= s5 = 2e3 < n5 ? 2e3 : n5; a5 = a5 + (i5 = i5 + t5[o5++] | 0) | 0, --s5; )
            ;
          i5 %= 65521, a5 %= 65521;
        }
        return i5 | a5 << 16 | 0;
      }
      function Ms(e5, t5, n5, o5) {
        var i5 = Cs, a5 = o5 + n5;
        e5 ^= -1;
        for (var s5 = o5; s5 < a5; s5++)
          e5 = e5 >>> 8 ^ i5[255 & (e5 ^ t5[s5])];
        return -1 ^ e5;
      }
      function ys(e5, t5, n5, o5, i5, a5, s5, r5) {
        for (var c5, u5, l5, d4, p5, _4, h5, g5, f4, m4 = r5.bits, v4 = 0, I4 = 0, M4 = 0, y3 = 0, C5 = 0, T5 = 0, D3 = 0, E5 = 0, L4 = 0, S4 = 0, k3 = null, R4 = 0, A4 = new ie2.Buf16(16), O4 = new ie2.Buf16(16), N4 = null, G3 = 0, v4 = 0; v4 <= 15; v4++)
          A4[v4] = 0;
        for (I4 = 0; I4 < o5; I4++)
          A4[t5[n5 + I4]]++;
        for (C5 = m4, y3 = 15; 1 <= y3 && 0 === A4[y3]; y3--)
          ;
        if (y3 < C5 && (C5 = y3), 0 === y3)
          i5[a5++] = 20971520, i5[a5++] = 20971520, r5.bits = 1;
        else {
          for (M4 = 1; M4 < y3 && 0 === A4[M4]; M4++)
            ;
          for (C5 < M4 && (C5 = M4), v4 = E5 = 1; v4 <= 15; v4++)
            if ((E5 = (E5 << 1) - A4[v4]) < 0)
              return -1;
          if (0 < E5 && (0 === e5 || 1 !== y3))
            return -1;
          for (O4[1] = 0, v4 = 1; v4 < 15; v4++)
            O4[v4 + 1] = O4[v4] + A4[v4];
          for (I4 = 0; I4 < o5; I4++)
            0 !== t5[n5 + I4] && (s5[O4[t5[n5 + I4]]++] = I4);
          if (_4 = 0 === e5 ? (k3 = N4 = s5, 19) : 1 === e5 ? (k3 = Ts, R4 -= 257, N4 = Ds, G3 -= 257, 256) : (k3 = Es, N4 = Ls, -1), v4 = M4, p5 = a5, D3 = I4 = S4 = 0, l5 = -1, d4 = (L4 = 1 << (T5 = C5)) - 1, 1 === e5 && 852 < L4 || 2 === e5 && 592 < L4)
            return 1;
          for (; ; ) {
            for (f4 = s5[I4] < _4 ? (g5 = 0, s5[I4]) : s5[I4] > _4 ? (g5 = N4[G3 + s5[I4]], k3[R4 + s5[I4]]) : (g5 = 96, 0), c5 = 1 << (h5 = v4 - D3), M4 = u5 = 1 << T5; i5[p5 + (S4 >> D3) + (u5 -= c5)] = h5 << 24 | g5 << 16 | f4 | 0, 0 !== u5; )
              ;
            for (c5 = 1 << v4 - 1; S4 & c5; )
              c5 >>= 1;
            if (0 !== c5 ? S4 = (S4 & c5 - 1) + c5 : S4 = 0, I4++, 0 == --A4[v4]) {
              if (v4 === y3)
                break;
              v4 = t5[n5 + s5[I4]];
            }
            if (C5 < v4 && (S4 & d4) !== l5) {
              for (p5 += M4, E5 = 1 << (T5 = v4 - (D3 = 0 === D3 ? C5 : D3)); T5 + D3 < y3 && !((E5 -= A4[T5 + D3]) <= 0); )
                T5++, E5 <<= 1;
              if (L4 += 1 << T5, 1 === e5 && 852 < L4 || 2 === e5 && 592 < L4)
                return 1;
              i5[l5 = S4 & d4] = C5 << 24 | T5 << 16 | p5 - a5 | 0;
            }
          }
          0 !== S4 && (i5[p5 + S4] = v4 - D3 << 24 | 64 << 16 | 0), r5.bits = C5;
        }
        return 0;
      }
      var Cs = function() {
        for (var e5 = [], t5 = 0; t5 < 256; t5++) {
          for (var n5 = t5, o5 = 0; o5 < 8; o5++)
            n5 = 1 & n5 ? 3988292384 ^ n5 >>> 1 : n5 >>> 1;
          e5[t5] = n5;
        }
        return e5;
      }(), Ts = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], Ds = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], Es = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], Ls = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      function Ss(e5) {
        return (e5 >>> 24 & 255) + (e5 >>> 8 & 65280) + ((65280 & e5) << 8) + ((255 & e5) << 24);
      }
      function ks() {
        this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new ie2.Buf16(320), this.work = new ie2.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function Rs(e5) {
        var t5;
        return e5 && e5.state ? (t5 = e5.state, e5.total_in = e5.total_out = t5.total = 0, e5.msg = "", t5.wrap && (e5.adler = 1 & t5.wrap), t5.mode = 1, t5.last = 0, t5.havedict = 0, t5.dmax = 32768, t5.head = null, t5.hold = 0, t5.bits = 0, t5.lencode = t5.lendyn = new ie2.Buf32(852), t5.distcode = t5.distdyn = new ie2.Buf32(592), t5.sane = 1, t5.back = -1, 0) : -2;
      }
      function As(e5) {
        var t5;
        return e5 && e5.state ? ((t5 = e5.state).wsize = 0, t5.whave = 0, t5.wnext = 0, Rs(e5)) : -2;
      }
      function Os(e5, t5) {
        var n5, o5;
        return !e5 || !e5.state || (o5 = e5.state, t5 < 0 ? (n5 = 0, t5 = -t5) : (n5 = 1 + (t5 >> 4), t5 < 48 && (t5 &= 15)), t5 && (t5 < 8 || 15 < t5)) ? -2 : (null !== o5.window && o5.wbits !== t5 && (o5.window = null), o5.wrap = n5, o5.wbits = t5, As(e5));
      }
      function Ns(e5, t5) {
        var n5;
        return e5 ? (n5 = new ks(), (e5.state = n5).window = null, 0 !== (n5 = Os(e5, t5)) && (e5.state = null), n5) : -2;
      }
      var Gs, Ps, Us = true;
      function bs(e5, t5, n5, o5) {
        var i5, e5 = e5.state;
        return null === e5.window && (e5.wsize = 1 << e5.wbits, e5.wnext = 0, e5.whave = 0, e5.window = new ie2.Buf8(e5.wsize)), o5 >= e5.wsize ? (ie2.arraySet(e5.window, t5, n5 - e5.wsize, e5.wsize, 0), e5.wnext = 0, e5.whave = e5.wsize) : ((i5 = e5.wsize - e5.wnext) > o5 && (i5 = o5), ie2.arraySet(e5.window, t5, n5 - o5, i5, e5.wnext), (o5 -= i5) ? (ie2.arraySet(e5.window, t5, n5 - o5, o5, 0), e5.wnext = o5, e5.whave = e5.wsize) : (e5.wnext += i5, e5.wnext === e5.wsize && (e5.wnext = 0), e5.whave < e5.wsize && (e5.whave += i5))), 0;
      }
      var ws = { inflateReset: As, inflateReset2: Os, inflateResetKeep: Rs, inflateInit: function(e5) {
        return Ns(e5, 15);
      }, inflateInit2: Ns, inflate: function(e5, b3) {
        var t5, n5, w4, o5, i5, a5, s5, r5, c5, F3, u5, l5, q3, x3, d4, p5, _4, h5, V3, B3, g5, f4, m4, v4, I4 = 0, M4 = new ie2.Buf8(4), H3 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!e5 || !e5.state || !e5.output || !e5.input && 0 !== e5.avail_in)
          return -2;
        12 === (t5 = e5.state).mode && (t5.mode = 13), i5 = e5.next_out, w4 = e5.output, s5 = e5.avail_out, o5 = e5.next_in, n5 = e5.input, a5 = e5.avail_in, r5 = t5.hold, c5 = t5.bits, F3 = a5, u5 = s5, f4 = 0;
        e:
          for (; ; )
            switch (t5.mode) {
              case 1:
                if (0 === t5.wrap)
                  t5.mode = 13;
                else {
                  for (; c5 < 16; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  if (2 & t5.wrap && 35615 === r5)
                    M4[t5.check = 0] = 255 & r5, M4[1] = r5 >>> 8 & 255, t5.check = Ms(t5.check, M4, 2, 0), c5 = r5 = 0, t5.mode = 2;
                  else if (t5.flags = 0, t5.head && (t5.head.done = false), !(1 & t5.wrap) || (((255 & r5) << 8) + (r5 >> 8)) % 31)
                    e5.msg = "incorrect header check", t5.mode = 30;
                  else if (8 != (15 & r5))
                    e5.msg = "unknown compression method", t5.mode = 30;
                  else {
                    if (c5 -= 4, g5 = 8 + (15 & (r5 >>>= 4)), 0 === t5.wbits)
                      t5.wbits = g5;
                    else if (g5 > t5.wbits) {
                      e5.msg = "invalid window size", t5.mode = 30;
                      break;
                    }
                    t5.dmax = 1 << g5, e5.adler = t5.check = 1, t5.mode = 512 & r5 ? 10 : 12, c5 = r5 = 0;
                  }
                }
                break;
              case 2:
                for (; c5 < 16; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                if (t5.flags = r5, 8 != (255 & t5.flags)) {
                  e5.msg = "unknown compression method", t5.mode = 30;
                  break;
                }
                if (57344 & t5.flags) {
                  e5.msg = "unknown header flags set", t5.mode = 30;
                  break;
                }
                t5.head && (t5.head.text = r5 >> 8 & 1), 512 & t5.flags && (M4[0] = 255 & r5, M4[1] = r5 >>> 8 & 255, t5.check = Ms(t5.check, M4, 2, 0)), c5 = r5 = 0, t5.mode = 3;
              case 3:
                for (; c5 < 32; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                t5.head && (t5.head.time = r5), 512 & t5.flags && (M4[0] = 255 & r5, M4[1] = r5 >>> 8 & 255, M4[2] = r5 >>> 16 & 255, M4[3] = r5 >>> 24 & 255, t5.check = Ms(t5.check, M4, 4, 0)), c5 = r5 = 0, t5.mode = 4;
              case 4:
                for (; c5 < 16; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                t5.head && (t5.head.xflags = 255 & r5, t5.head.os = r5 >> 8), 512 & t5.flags && (M4[0] = 255 & r5, M4[1] = r5 >>> 8 & 255, t5.check = Ms(t5.check, M4, 2, 0)), c5 = r5 = 0, t5.mode = 5;
              case 5:
                if (1024 & t5.flags) {
                  for (; c5 < 16; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  t5.length = r5, t5.head && (t5.head.extra_len = r5), 512 & t5.flags && (M4[0] = 255 & r5, M4[1] = r5 >>> 8 & 255, t5.check = Ms(t5.check, M4, 2, 0)), c5 = r5 = 0;
                } else
                  t5.head && (t5.head.extra = null);
                t5.mode = 6;
              case 6:
                if (1024 & t5.flags && ((l5 = (l5 = t5.length) > a5 ? a5 : l5) && (t5.head && (g5 = t5.head.extra_len - t5.length, t5.head.extra || (t5.head.extra = new Array(t5.head.extra_len)), ie2.arraySet(t5.head.extra, n5, o5, l5, g5)), 512 & t5.flags && (t5.check = Ms(t5.check, n5, l5, o5)), a5 -= l5, o5 += l5, t5.length -= l5), t5.length))
                  break e;
                t5.length = 0, t5.mode = 7;
              case 7:
                if (2048 & t5.flags) {
                  if (0 === a5)
                    break e;
                  for (l5 = 0; g5 = n5[o5 + l5++], t5.head && g5 && t5.length < 65536 && (t5.head.name += String.fromCharCode(g5)), g5 && l5 < a5; )
                    ;
                  if (512 & t5.flags && (t5.check = Ms(t5.check, n5, l5, o5)), a5 -= l5, o5 += l5, g5)
                    break e;
                } else
                  t5.head && (t5.head.name = null);
                t5.length = 0, t5.mode = 8;
              case 8:
                if (4096 & t5.flags) {
                  if (0 === a5)
                    break e;
                  for (l5 = 0; g5 = n5[o5 + l5++], t5.head && g5 && t5.length < 65536 && (t5.head.comment += String.fromCharCode(g5)), g5 && l5 < a5; )
                    ;
                  if (512 & t5.flags && (t5.check = Ms(t5.check, n5, l5, o5)), a5 -= l5, o5 += l5, g5)
                    break e;
                } else
                  t5.head && (t5.head.comment = null);
                t5.mode = 9;
              case 9:
                if (512 & t5.flags) {
                  for (; c5 < 16; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  if (r5 !== (65535 & t5.check)) {
                    e5.msg = "header crc mismatch", t5.mode = 30;
                    break;
                  }
                  c5 = r5 = 0;
                }
                t5.head && (t5.head.hcrc = t5.flags >> 9 & 1, t5.head.done = true), e5.adler = t5.check = 0, t5.mode = 12;
                break;
              case 10:
                for (; c5 < 32; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                e5.adler = t5.check = Ss(r5), c5 = r5 = 0, t5.mode = 11;
              case 11:
                if (0 === t5.havedict)
                  return e5.next_out = i5, e5.avail_out = s5, e5.next_in = o5, e5.avail_in = a5, t5.hold = r5, t5.bits = c5, 2;
                e5.adler = t5.check = 1, t5.mode = 12;
              case 12:
                if (5 === b3 || 6 === b3)
                  break e;
              case 13:
                if (t5.last)
                  r5 >>>= 7 & c5, c5 -= 7 & c5, t5.mode = 27;
                else {
                  for (; c5 < 3; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  switch (t5.last = 1 & r5, --c5, 3 & (r5 >>>= 1)) {
                    case 0:
                      t5.mode = 14;
                      break;
                    case 1:
                      y3 = C5 = void 0;
                      var y3, C5 = t5;
                      if (Us) {
                        for (Gs = new ie2.Buf32(512), Ps = new ie2.Buf32(32), y3 = 0; y3 < 144; )
                          C5.lens[y3++] = 8;
                        for (; y3 < 256; )
                          C5.lens[y3++] = 9;
                        for (; y3 < 280; )
                          C5.lens[y3++] = 7;
                        for (; y3 < 288; )
                          C5.lens[y3++] = 8;
                        for (ys(1, C5.lens, 0, 288, Gs, 0, C5.work, { bits: 9 }), y3 = 0; y3 < 32; )
                          C5.lens[y3++] = 5;
                        ys(2, C5.lens, 0, 32, Ps, 0, C5.work, { bits: 5 }), Us = false;
                      }
                      if (C5.lencode = Gs, C5.lenbits = 9, C5.distcode = Ps, C5.distbits = 5, t5.mode = 20, 6 !== b3)
                        break;
                      r5 >>>= 2, c5 -= 2;
                      break e;
                    case 2:
                      t5.mode = 17;
                      break;
                    case 3:
                      e5.msg = "invalid block type", t5.mode = 30;
                  }
                  r5 >>>= 2, c5 -= 2;
                }
                break;
              case 14:
                for (r5 >>>= 7 & c5, c5 -= 7 & c5; c5 < 32; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                if ((65535 & r5) != (r5 >>> 16 ^ 65535)) {
                  e5.msg = "invalid stored block lengths", t5.mode = 30;
                  break;
                }
                if (t5.length = 65535 & r5, c5 = r5 = 0, t5.mode = 15, 6 === b3)
                  break e;
              case 15:
                t5.mode = 16;
              case 16:
                if (l5 = t5.length) {
                  if (0 === (l5 = s5 < (l5 = a5 < l5 ? a5 : l5) ? s5 : l5))
                    break e;
                  ie2.arraySet(w4, n5, o5, l5, i5), a5 -= l5, o5 += l5, s5 -= l5, i5 += l5, t5.length -= l5;
                } else
                  t5.mode = 12;
                break;
              case 17:
                for (; c5 < 14; ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                if (t5.nlen = 257 + (31 & r5), r5 >>>= 5, c5 -= 5, t5.ndist = 1 + (31 & r5), r5 >>>= 5, c5 -= 5, t5.ncode = 4 + (15 & r5), r5 >>>= 4, c5 -= 4, 286 < t5.nlen || 30 < t5.ndist) {
                  e5.msg = "too many length or distance symbols", t5.mode = 30;
                  break;
                }
                t5.have = 0, t5.mode = 18;
              case 18:
                for (; t5.have < t5.ncode; ) {
                  for (; c5 < 3; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  t5.lens[H3[t5.have++]] = 7 & r5, r5 >>>= 3, c5 -= 3;
                }
                for (; t5.have < 19; )
                  t5.lens[H3[t5.have++]] = 0;
                if (t5.lencode = t5.lendyn, t5.lenbits = 7, m4 = { bits: t5.lenbits }, f4 = ys(0, t5.lens, 0, 19, t5.lencode, 0, t5.work, m4), t5.lenbits = m4.bits, f4) {
                  e5.msg = "invalid code lengths set", t5.mode = 30;
                  break;
                }
                t5.have = 0, t5.mode = 19;
              case 19:
                for (; t5.have < t5.nlen + t5.ndist; ) {
                  for (; p5 = (I4 = t5.lencode[r5 & (1 << t5.lenbits) - 1]) >>> 16 & 255, _4 = 65535 & I4, !((d4 = I4 >>> 24) <= c5); ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  if (_4 < 16)
                    r5 >>>= d4, c5 -= d4, t5.lens[t5.have++] = _4;
                  else {
                    if (16 === _4) {
                      for (v4 = d4 + 2; c5 < v4; ) {
                        if (0 === a5)
                          break e;
                        a5--, r5 += n5[o5++] << c5, c5 += 8;
                      }
                      if (r5 >>>= d4, c5 -= d4, 0 === t5.have) {
                        e5.msg = "invalid bit length repeat", t5.mode = 30;
                        break;
                      }
                      g5 = t5.lens[t5.have - 1], l5 = 3 + (3 & r5), r5 >>>= 2, c5 -= 2;
                    } else if (17 === _4) {
                      for (v4 = d4 + 3; c5 < v4; ) {
                        if (0 === a5)
                          break e;
                        a5--, r5 += n5[o5++] << c5, c5 += 8;
                      }
                      g5 = 0, l5 = 3 + (7 & (r5 >>>= d4)), r5 >>>= 3, c5 = c5 - d4 - 3;
                    } else {
                      for (v4 = d4 + 7; c5 < v4; ) {
                        if (0 === a5)
                          break e;
                        a5--, r5 += n5[o5++] << c5, c5 += 8;
                      }
                      g5 = 0, l5 = 11 + (127 & (r5 >>>= d4)), r5 >>>= 7, c5 = c5 - d4 - 7;
                    }
                    if (t5.have + l5 > t5.nlen + t5.ndist) {
                      e5.msg = "invalid bit length repeat", t5.mode = 30;
                      break;
                    }
                    for (; l5--; )
                      t5.lens[t5.have++] = g5;
                  }
                }
                if (30 === t5.mode)
                  break;
                if (0 === t5.lens[256]) {
                  e5.msg = "invalid code -- missing end-of-block", t5.mode = 30;
                  break;
                }
                if (t5.lenbits = 9, m4 = { bits: t5.lenbits }, f4 = ys(1, t5.lens, 0, t5.nlen, t5.lencode, 0, t5.work, m4), t5.lenbits = m4.bits, f4) {
                  e5.msg = "invalid literal/lengths set", t5.mode = 30;
                  break;
                }
                if (t5.distbits = 6, t5.distcode = t5.distdyn, m4 = { bits: t5.distbits }, f4 = ys(2, t5.lens, t5.nlen, t5.ndist, t5.distcode, 0, t5.work, m4), t5.distbits = m4.bits, f4) {
                  e5.msg = "invalid distances set", t5.mode = 30;
                  break;
                }
                if (t5.mode = 20, 6 === b3)
                  break e;
              case 20:
                t5.mode = 21;
              case 21:
                if (6 <= a5 && 258 <= s5) {
                  e5.next_out = i5, e5.avail_out = s5, e5.next_in = o5, e5.avail_in = a5, t5.hold = r5, t5.bits = c5, G3 = W3 = k3 = S4 = L4 = E5 = D3 = T5 = oe3 = ne3 = te3 = ee3 = U4 = P4 = $3 = Q3 = Z3 = X3 = z3 = J3 = j3 = N4 = Y3 = O4 = A4 = void 0;
                  var T5, D3, E5, L4, S4, k3, R4 = e5, K3 = u5, A4 = R4.state, O4 = R4.next_in, W3 = R4.input, Y3 = O4 + (R4.avail_in - 5), N4 = R4.next_out, G3 = R4.output, j3 = N4 - (K3 - R4.avail_out), J3 = N4 + (R4.avail_out - 257), z3 = A4.dmax, X3 = A4.wsize, Z3 = A4.whave, Q3 = A4.wnext, $3 = A4.window, P4 = A4.hold, U4 = A4.bits, ee3 = A4.lencode, te3 = A4.distcode, ne3 = (1 << A4.lenbits) - 1, oe3 = (1 << A4.distbits) - 1;
                  t:
                    do {
                      for (U4 < 15 && (P4 += W3[O4++] << U4, U4 += 8, P4 += W3[O4++] << U4, U4 += 8), T5 = ee3[P4 & ne3]; ; ) {
                        if (P4 >>>= D3 = T5 >>> 24, U4 -= D3, 0 == (D3 = T5 >>> 16 & 255))
                          G3[N4++] = 65535 & T5;
                        else {
                          if (!(16 & D3)) {
                            if (0 == (64 & D3)) {
                              T5 = ee3[(65535 & T5) + (P4 & (1 << D3) - 1)];
                              continue;
                            }
                            if (32 & D3) {
                              A4.mode = 12;
                              break t;
                            }
                            R4.msg = "invalid literal/length code", A4.mode = 30;
                            break t;
                          }
                          for (E5 = 65535 & T5, (D3 &= 15) && (U4 < D3 && (P4 += W3[O4++] << U4, U4 += 8), E5 += P4 & (1 << D3) - 1, P4 >>>= D3, U4 -= D3), U4 < 15 && (P4 += W3[O4++] << U4, U4 += 8, P4 += W3[O4++] << U4, U4 += 8), T5 = te3[P4 & oe3]; ; ) {
                            if (P4 >>>= D3 = T5 >>> 24, U4 -= D3, !(16 & (D3 = T5 >>> 16 & 255))) {
                              if (0 == (64 & D3)) {
                                T5 = te3[(65535 & T5) + (P4 & (1 << D3) - 1)];
                                continue;
                              }
                              R4.msg = "invalid distance code", A4.mode = 30;
                              break t;
                            }
                            if (L4 = 65535 & T5, U4 < (D3 &= 15) && (P4 += W3[O4++] << U4, (U4 += 8) < D3) && (P4 += W3[O4++] << U4, U4 += 8), (L4 += P4 & (1 << D3) - 1) > z3) {
                              R4.msg = "invalid distance too far back", A4.mode = 30;
                              break t;
                            }
                            if (P4 >>>= D3, U4 -= D3, L4 > (D3 = N4 - j3)) {
                              if ((D3 = L4 - D3) > Z3 && A4.sane) {
                                R4.msg = "invalid distance too far back", A4.mode = 30;
                                break t;
                              }
                              if (k3 = $3, (S4 = 0) === Q3) {
                                if (S4 += X3 - D3, D3 < E5) {
                                  for (E5 -= D3; G3[N4++] = $3[S4++], --D3; )
                                    ;
                                  S4 = N4 - L4, k3 = G3;
                                }
                              } else if (Q3 < D3) {
                                if (S4 += X3 + Q3 - D3, (D3 -= Q3) < E5) {
                                  for (E5 -= D3; G3[N4++] = $3[S4++], --D3; )
                                    ;
                                  if (S4 = 0, Q3 < E5) {
                                    for (E5 -= D3 = Q3; G3[N4++] = $3[S4++], --D3; )
                                      ;
                                    S4 = N4 - L4, k3 = G3;
                                  }
                                }
                              } else if (S4 += Q3 - D3, D3 < E5) {
                                for (E5 -= D3; G3[N4++] = $3[S4++], --D3; )
                                  ;
                                S4 = N4 - L4, k3 = G3;
                              }
                              for (; 2 < E5; )
                                G3[N4++] = k3[S4++], G3[N4++] = k3[S4++], G3[N4++] = k3[S4++], E5 -= 3;
                              E5 && (G3[N4++] = k3[S4++], 1 < E5) && (G3[N4++] = k3[S4++]);
                            } else {
                              for (S4 = N4 - L4; G3[N4++] = G3[S4++], G3[N4++] = G3[S4++], G3[N4++] = G3[S4++], 2 < (E5 -= 3); )
                                ;
                              E5 && (G3[N4++] = G3[S4++], 1 < E5) && (G3[N4++] = G3[S4++]);
                            }
                            break;
                          }
                        }
                        break;
                      }
                    } while (O4 < Y3 && N4 < J3);
                  O4 -= E5 = U4 >> 3, P4 &= (1 << (U4 -= E5 << 3)) - 1, R4.next_in = O4, R4.next_out = N4, R4.avail_in = O4 < Y3 ? Y3 - O4 + 5 : 5 - (O4 - Y3), R4.avail_out = N4 < J3 ? J3 - N4 + 257 : 257 - (N4 - J3), A4.hold = P4, A4.bits = U4, i5 = e5.next_out, w4 = e5.output, s5 = e5.avail_out, o5 = e5.next_in, n5 = e5.input, a5 = e5.avail_in, r5 = t5.hold, c5 = t5.bits, 12 === t5.mode && (t5.back = -1);
                  break;
                }
                for (t5.back = 0; p5 = (I4 = t5.lencode[r5 & (1 << t5.lenbits) - 1]) >>> 16 & 255, _4 = 65535 & I4, !((d4 = I4 >>> 24) <= c5); ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                if (p5 && 0 == (240 & p5)) {
                  for (h5 = d4, V3 = p5, B3 = _4; p5 = (I4 = t5.lencode[B3 + ((r5 & (1 << h5 + V3) - 1) >> h5)]) >>> 16 & 255, _4 = 65535 & I4, !(h5 + (d4 = I4 >>> 24) <= c5); ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  r5 >>>= h5, c5 -= h5, t5.back += h5;
                }
                if (r5 >>>= d4, c5 -= d4, t5.back += d4, t5.length = _4, 0 === p5) {
                  t5.mode = 26;
                  break;
                }
                if (32 & p5) {
                  t5.back = -1, t5.mode = 12;
                  break;
                }
                if (64 & p5) {
                  e5.msg = "invalid literal/length code", t5.mode = 30;
                  break;
                }
                t5.extra = 15 & p5, t5.mode = 22;
              case 22:
                if (t5.extra) {
                  for (v4 = t5.extra; c5 < v4; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  t5.length += r5 & (1 << t5.extra) - 1, r5 >>>= t5.extra, c5 -= t5.extra, t5.back += t5.extra;
                }
                t5.was = t5.length, t5.mode = 23;
              case 23:
                for (; p5 = (I4 = t5.distcode[r5 & (1 << t5.distbits) - 1]) >>> 16 & 255, _4 = 65535 & I4, !((d4 = I4 >>> 24) <= c5); ) {
                  if (0 === a5)
                    break e;
                  a5--, r5 += n5[o5++] << c5, c5 += 8;
                }
                if (0 == (240 & p5)) {
                  for (h5 = d4, V3 = p5, B3 = _4; p5 = (I4 = t5.distcode[B3 + ((r5 & (1 << h5 + V3) - 1) >> h5)]) >>> 16 & 255, _4 = 65535 & I4, !(h5 + (d4 = I4 >>> 24) <= c5); ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  r5 >>>= h5, c5 -= h5, t5.back += h5;
                }
                if (r5 >>>= d4, c5 -= d4, t5.back += d4, 64 & p5) {
                  e5.msg = "invalid distance code", t5.mode = 30;
                  break;
                }
                t5.offset = _4, t5.extra = 15 & p5, t5.mode = 24;
              case 24:
                if (t5.extra) {
                  for (v4 = t5.extra; c5 < v4; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  t5.offset += r5 & (1 << t5.extra) - 1, r5 >>>= t5.extra, c5 -= t5.extra, t5.back += t5.extra;
                }
                if (t5.offset > t5.dmax) {
                  e5.msg = "invalid distance too far back", t5.mode = 30;
                  break;
                }
                t5.mode = 25;
              case 25:
                if (0 === s5)
                  break e;
                if (t5.offset > (l5 = u5 - s5)) {
                  if ((l5 = t5.offset - l5) > t5.whave && t5.sane) {
                    e5.msg = "invalid distance too far back", t5.mode = 30;
                    break;
                  }
                  q3 = l5 > t5.wnext ? (l5 -= t5.wnext, t5.wsize - l5) : t5.wnext - l5, l5 > t5.length && (l5 = t5.length), x3 = t5.window;
                } else
                  x3 = w4, q3 = i5 - t5.offset, l5 = t5.length;
                for (s5 -= l5 = s5 < l5 ? s5 : l5, t5.length -= l5; w4[i5++] = x3[q3++], --l5; )
                  ;
                0 === t5.length && (t5.mode = 21);
                break;
              case 26:
                if (0 === s5)
                  break e;
                w4[i5++] = t5.length, s5--, t5.mode = 21;
                break;
              case 27:
                if (t5.wrap) {
                  for (; c5 < 32; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 |= n5[o5++] << c5, c5 += 8;
                  }
                  if (u5 -= s5, e5.total_out += u5, t5.total += u5, u5 && (e5.adler = t5.check = (t5.flags ? Ms : Is)(t5.check, w4, u5, i5 - u5)), u5 = s5, (t5.flags ? r5 : Ss(r5)) !== t5.check) {
                    e5.msg = "incorrect data check", t5.mode = 30;
                    break;
                  }
                  c5 = r5 = 0;
                }
                t5.mode = 28;
              case 28:
                if (t5.wrap && t5.flags) {
                  for (; c5 < 32; ) {
                    if (0 === a5)
                      break e;
                    a5--, r5 += n5[o5++] << c5, c5 += 8;
                  }
                  if (r5 !== (4294967295 & t5.total)) {
                    e5.msg = "incorrect length check", t5.mode = 30;
                    break;
                  }
                  c5 = r5 = 0;
                }
                t5.mode = 29;
              case 29:
                f4 = 1;
                break e;
              case 30:
                f4 = -3;
                break e;
              case 31:
                return -4;
              default:
                return -2;
            }
        return e5.next_out = i5, e5.avail_out = s5, e5.next_in = o5, e5.avail_in = a5, t5.hold = r5, t5.bits = c5, (t5.wsize || u5 !== e5.avail_out && t5.mode < 30 && (t5.mode < 27 || 4 !== b3)) && bs(e5, e5.output, e5.next_out, u5 - e5.avail_out), F3 -= e5.avail_in, u5 -= e5.avail_out, e5.total_in += F3, e5.total_out += u5, t5.total += u5, t5.wrap && u5 && (e5.adler = t5.check = (t5.flags ? Ms : Is)(t5.check, w4, u5, e5.next_out - u5)), e5.data_type = t5.bits + (t5.last ? 64 : 0) + (12 === t5.mode ? 128 : 0) + (20 === t5.mode || 15 === t5.mode ? 256 : 0), f4 = (0 == F3 && 0 === u5 || 4 === b3) && 0 === f4 ? -5 : f4;
      }, inflateEnd: function(e5) {
        var t5;
        return e5 && e5.state ? ((t5 = e5.state).window && (t5.window = null), e5.state = null, 0) : -2;
      }, inflateGetHeader: function(e5, t5) {
        return !e5 || !e5.state || 0 == (2 & (e5 = e5.state).wrap) ? -2 : ((e5.head = t5).done = false, 0);
      }, inflateSetDictionary: function(e5, t5) {
        var n5, o5 = t5.length;
        return !e5 || !e5.state || 0 !== (n5 = e5.state).wrap && 11 !== n5.mode ? -2 : 11 === n5.mode && Is(1, t5, o5, 0) !== n5.check ? -3 : bs(e5, t5, o5, o5) ? (n5.mode = 31, -4) : (n5.havedict = 1, 0);
      }, inflateInfo: "pako inflate (from Nodeca project)" }, Fs = true, qs = true;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch (e5) {
        Fs = false;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch (e5) {
        qs = false;
      }
      for (var xs = new ie2.Buf8(256), Vs = 0; Vs < 256; Vs++)
        xs[Vs] = 252 <= Vs ? 6 : 248 <= Vs ? 5 : 240 <= Vs ? 4 : 224 <= Vs ? 3 : 192 <= Vs ? 2 : 1;
      xs[254] = xs[254] = 1;
      function Bs(e5, t5) {
        for (var n5, o5, i5 = t5 || e5.length, a5 = new Array(2 * i5), s5 = 0, r5 = 0; r5 < i5; )
          if ((n5 = e5[r5++]) < 128)
            a5[s5++] = n5;
          else if (4 < (o5 = xs[n5]))
            a5[s5++] = 65533, r5 += o5 - 1;
          else {
            for (n5 &= 2 === o5 ? 31 : 3 === o5 ? 15 : 7; 1 < o5 && r5 < i5; )
              n5 = n5 << 6 | 63 & e5[r5++], o5--;
            1 < o5 ? a5[s5++] = 65533 : n5 < 65536 ? a5[s5++] = n5 : (n5 -= 65536, a5[s5++] = 55296 | n5 >> 10 & 1023, a5[s5++] = 56320 | 1023 & n5);
          }
        var c5 = a5, u5 = s5;
        if (u5 < 65534 && (c5.subarray && qs || !c5.subarray && Fs))
          return String.fromCharCode.apply(null, ie2.shrinkBuf(c5, u5));
        for (var l5 = "", d4 = 0; d4 < u5; d4++)
          l5 += String.fromCharCode(c5[d4]);
        return l5;
      }
      function Hs() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      }
      function Ks() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
      }
      var Ws = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 }, Ys = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" }, js = Object.prototype.toString;
      function Js(e5) {
        if (!(this instanceof Js))
          return new Js(e5);
        this.options = ie2.assign({ chunkSize: 16384, windowBits: 0, to: "" }, e5 || {});
        var t5 = this.options, e5 = (t5.raw && 0 <= t5.windowBits && t5.windowBits < 16 && (t5.windowBits = -t5.windowBits, 0 === t5.windowBits) && (t5.windowBits = -15), !(0 <= t5.windowBits && t5.windowBits < 16) || e5 && e5.windowBits || (t5.windowBits += 32), 15 < t5.windowBits && t5.windowBits < 48 && 0 == (15 & t5.windowBits) && (t5.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new Hs(), this.strm.avail_out = 0, ws.inflateInit2(this.strm, t5.windowBits));
        if (e5 !== Ws.Z_OK)
          throw new Error(Ys[e5]);
        if (this.header = new Ks(), ws.inflateGetHeader(this.strm, this.header), t5.dictionary && ("string" == typeof t5.dictionary ? t5.dictionary = function(e6) {
          for (var t6, n5, o5, i5, a5 = e6.length, s5 = 0, r5 = 0; r5 < a5; r5++)
            55296 == (64512 & (n5 = e6.charCodeAt(r5))) && r5 + 1 < a5 && 56320 == (64512 & (o5 = e6.charCodeAt(r5 + 1))) && (n5 = 65536 + (n5 - 55296 << 10) + (o5 - 56320), r5++), s5 += n5 < 128 ? 1 : n5 < 2048 ? 2 : n5 < 65536 ? 3 : 4;
          for (t6 = new ie2.Buf8(s5), r5 = i5 = 0; i5 < s5; r5++)
            55296 == (64512 & (n5 = e6.charCodeAt(r5))) && r5 + 1 < a5 && 56320 == (64512 & (o5 = e6.charCodeAt(r5 + 1))) && (n5 = 65536 + (n5 - 55296 << 10) + (o5 - 56320), r5++), n5 < 128 ? t6[i5++] = n5 : (n5 < 2048 ? t6[i5++] = 192 | n5 >>> 6 : (n5 < 65536 ? t6[i5++] = 224 | n5 >>> 12 : (t6[i5++] = 240 | n5 >>> 18, t6[i5++] = 128 | n5 >>> 12 & 63), t6[i5++] = 128 | n5 >>> 6 & 63), t6[i5++] = 128 | 63 & n5);
          return t6;
        }(t5.dictionary) : "[object ArrayBuffer]" === js.call(t5.dictionary) && (t5.dictionary = new Uint8Array(t5.dictionary)), t5.raw) && (e5 = ws.inflateSetDictionary(this.strm, t5.dictionary)) !== Ws.Z_OK)
          throw new Error(Ys[e5]);
      }
      function zs(e5, t5) {
        t5 = new Js(t5);
        if (t5.push(e5, true), t5.err)
          throw t5.msg || Ys[t5.err];
        return t5.result;
      }
      Js.prototype.push = function(e5, t5) {
        var n5, o5, i5, a5, s5, r5 = this.strm, c5 = this.options.chunkSize, u5 = this.options.dictionary, l5 = false;
        if (this.ended)
          return false;
        o5 = t5 === ~~t5 ? t5 : true === t5 ? Ws.Z_FINISH : Ws.Z_NO_FLUSH, "string" == typeof e5 ? r5.input = function(e6) {
          for (var t6 = new ie2.Buf8(e6.length), n6 = 0, o6 = t6.length; n6 < o6; n6++)
            t6[n6] = e6.charCodeAt(n6);
          return t6;
        }(e5) : "[object ArrayBuffer]" === js.call(e5) ? r5.input = new Uint8Array(e5) : r5.input = e5, r5.next_in = 0, r5.avail_in = r5.input.length;
        do {
          if (0 === r5.avail_out && (r5.output = new ie2.Buf8(c5), r5.next_out = 0, r5.avail_out = c5), (n5 = (n5 = ws.inflate(r5, Ws.Z_NO_FLUSH)) === Ws.Z_NEED_DICT && u5 ? ws.inflateSetDictionary(this.strm, u5) : n5) === Ws.Z_BUF_ERROR && true === l5 && (n5 = Ws.Z_OK, l5 = false), n5 !== Ws.Z_STREAM_END && n5 !== Ws.Z_OK)
            return this.onEnd(n5), !(this.ended = true);
          !r5.next_out || 0 !== r5.avail_out && n5 !== Ws.Z_STREAM_END && (0 !== r5.avail_in || o5 !== Ws.Z_FINISH && o5 !== Ws.Z_SYNC_FLUSH) || ("string" === this.options.to ? (i5 = function(e6, t6) {
            for (var n6 = (t6 = (t6 = t6 || e6.length) > e6.length ? e6.length : t6) - 1; 0 <= n6 && 128 == (192 & e6[n6]); )
              n6--;
            return !(n6 < 0 || 0 === n6) && n6 + xs[e6[n6]] > t6 ? n6 : t6;
          }(r5.output, r5.next_out), a5 = r5.next_out - i5, s5 = Bs(r5.output, i5), r5.next_out = a5, r5.avail_out = c5 - a5, a5 && ie2.arraySet(r5.output, r5.output, i5, a5, 0), this.onData(s5)) : this.onData(ie2.shrinkBuf(r5.output, r5.next_out))), 0 === r5.avail_in && 0 === r5.avail_out && (l5 = true);
        } while ((0 < r5.avail_in || 0 === r5.avail_out) && n5 !== Ws.Z_STREAM_END);
        return (o5 = n5 === Ws.Z_STREAM_END ? Ws.Z_FINISH : o5) === Ws.Z_FINISH ? (n5 = ws.inflateEnd(this.strm), this.onEnd(n5), this.ended = true, n5 === Ws.Z_OK) : o5 !== Ws.Z_SYNC_FLUSH || (this.onEnd(Ws.Z_OK), !(r5.avail_out = 0));
      }, Js.prototype.onData = function(e5) {
        this.chunks.push(e5);
      }, Js.prototype.onEnd = function(e5) {
        e5 === Ws.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = ie2.flattenChunks(this.chunks)), this.chunks = [], this.err = e5, this.msg = this.strm.msg;
      };
      var wn = {}, Xs = ((0, ie2.assign)(wn, { Inflate: Js, inflate: zs, inflateRaw: function(e5, t5) {
        return (t5 = t5 || {}).raw = true, zs(e5, t5);
      }, ungzip: zs }, Ws), wn), Zs = e4(function e5(t5) {
        p4(this, e5), this._m = t5, this._n = "InflateModule", this._bLogForInflateOK = false, this._bLogForInflateError = false;
      }, [{ key: "inflate", value: function(e5) {
        var t5, e5 = new Uint8Array(e5).slice(4), n5 = Date.now();
        try {
          t5 = Xs.inflate(e5, { to: "string" }), this._bLogForInflateOK || (this._bLogForInflateOK = true, new P3("inflateOK").end());
        } catch (e6) {
          return this._bLogForInflateError ? void 0 : (this._bLogForInflateError = true, void new P3("inflateError").setMessage(e6).end());
        }
        var e5 = e5.length + 4, o5 = t5.length;
        return M3.d("inflate ok. zipped:".concat(e5, " unzipped:").concat(o5) + " compression ratio:".concat(Math.round(100 * (o5 - e5) / o5), "% cost:").concat(Date.now() - n5)), t5;
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._bLogForInflateOK = false, this._bLogForInflateError = false;
      } }]), Qs = "Message", $s = "User", er = "Group", tr = "GroupMember", nr = ["count"], or = ["conversationID", "timePosition", "timePeriod"], ir = ["miniBirthday", "maxBirthday"], ar = q2(q2(q2(q2({}, Qs, G2.CS), $s, G2.USER_CS), er, G2.GRP_CS), tr, G2.MBR_CS), sr = (t4(dr, c4), e4(dr, [{ key: "searchCloudMessages", value: function(e5) {
        return this.search(Qs, e5);
      } }, { key: "searchCloudUsers", value: function(e5) {
        return this.search($s, e5);
      } }, { key: "searchCloudGroups", value: function(e5) {
        return this.search(er, e5);
      } }, { key: "searchCloudGroupMembers", value: function(e5) {
        return this.search(tr, e5);
      } }, { key: "search", value: function(i5, a5) {
        var s5 = this, e5 = "searchCloud".concat(i5, "s"), r5 = "".concat(this._n, ".").concat(e5);
        if (!a5)
          return E4({ code: k2.OPTIONS_IS_EMPTY, message: this.getErrMsg(k2.OPTIONS_IS_EMPTY, e5) });
        var t5 = a5.keywordList, n5 = rt2(t5), o5 = a5.count;
        if (a5.count && (o5 = parseInt(o5)), i5 === Qs && !n5 && !rt2(a5.senderUserIDList) && !rt2(a5.messageTypeList) || i5 !== Qs && !n5)
          throw M3.e("[".concat(e5, '] Missing required params: "keywordList".')), new Error("Params validate failed.");
        var c5 = Date.now(), u5 = new P3(e5), l5 = "keywordList:".concat(t5, " keywordListMatchType:").concat(a5.keywordListMatchType, " cursor:").concat(a5.cursor, " count:").concat(o5);
        return M3.l("".concat(r5, " ").concat(l5)), this.req({ P: ar[i5], data: this._genParams(i5, a5) }).then(function(e6) {
          var t6 = e6.data, n6 = t6.code, t6 = t6.message;
          if (0 !== n6)
            return 60020 === (o6 = n6) ? o6 = "SearchUnable" : i5 !== Qs && 27003 === n6 ? o6 = "SearchParamsError" : i5 !== Qs && 60018 === n6 && (o6 = "SearchOverLimit"), o6 = s5.getErrMsg(o6) || t6, t6 = new L3({ code: n6, message: o6 }), u5.setMessage(l5).setError(t6).end(), E4(t6);
          s5.get(27).isCSPluginEnabled();
          var n6 = e6.data, o6 = n6.cursor, t6 = void 0 === o6 ? "" : o6, o6 = n6.totalCount, n6 = "totalCount:".concat(o6, " cost:").concat(tn(c5)), n6 = (M3.l("".concat(r5, " ok. cursor:").concat(t6, " ").concat(n6)), u5.setMessage("".concat(l5, " ").concat(n6)).end(), s5._genRes(i5, a5, e6.data));
          return T4({ searchResultList: n6, cursor: t6, totalCount: o6 });
        }).catch(function(e6) {
          return u5.setMessage(l5).setError(e6).end(), E4(e6);
        });
      } }, { key: "_genParams", value: function(e5, t5) {
        var n5 = t5.count, o5 = W2(t5, nr);
        return n5 && (o5.count = parseInt(n5)), e5 === Qs ? this._genMsgParams(o5) : (n5 = t5.keywordList, t5 = t5.keywordListMatchType, o5.keywords = n5, o5.keywordMatchType = "and" === t5 ? 1 : 0, e5 === $s ? this._genUserParams(o5) : o5);
      } }, { key: "_genMsgParams", value: function(e5) {
        var t5 = e5.conversationID, n5 = e5.timePosition, o5 = e5.timePeriod, e5 = W2(e5, or);
        return N3(t5) || (Gt2(t5) && (e5.account = t5.replace(R3.CONV_C2C, "")), Pt2(t5) && (e5.groupID = t5.replace(R3.CONV_GROUP, ""))), A3(o5) && 0 < o5 && (A3(n5) && 0 < n5 ? e5.startTime = n5 - o5 : e5.startTime = xe2() - o5), e5.startTime && e5.startTime < 0 && (e5.startTime = void 0), A3(n5) && 0 < n5 && (e5.endTime = n5), e5;
      } }, { key: "_genUserParams", value: function(e5) {
        var t5 = e5.miniBirthday, n5 = e5.maxBirthday, e5 = W2(e5, ir);
        return A3(t5) && (e5.miniBirthday = parseInt(t5), A3(n5) || (e5.maxBirthday = 4294967295)), A3(n5) && (e5.maxBirthday = parseInt(n5)), e5;
      } }, { key: "_genRes", value: function(e5, t5, n5) {
        switch (e5) {
          case Qs:
            return this._genMsgRes(n5.searchResult, !t5.conversationID);
          case $s:
            return this._genUserRes(n5.userList);
          case er:
            return this._genGrpRes(n5.groupList);
          case tr:
            return this._genMemberRes(n5.groupMemberList);
          default:
            return [];
        }
      } }, { key: "_genMsgRes", value: function(e5, a5) {
        var s5 = this.get(11);
        return O3(e5) && 0 !== e5.length ? e5.map(function(e6) {
          var t5 = e6.groupID, n5 = e6.userID, o5 = e6.messageCount, e6 = e6.messageList, e6 = void 0 === e6 ? [] : e6, n5 = t5 ? "".concat(R3.CONV_GROUP).concat(t5) : "".concat(R3.CONV_C2C).concat(n5), i5 = { conversationID: n5, messageCount: o5, messageList: [] };
          return a5 && 1 < o5 || 0 < (o5 = e6.filter(function(e7) {
            return !!e7;
          })).length && (e6 = s5.onRoamingMessage(o5, n5, false), t5 && e6.reverse(), i5.messageList = e6, i5.messageCount = e6.length), i5;
        }) : [];
      } }, { key: "_genUserRes", value: function(e5) {
        var t5 = this.get(4)._profileHandler;
        if (!O3(e5))
          return [];
        for (var n5 = [], o5 = 0, i5 = e5.length; o5 < i5; o5++) {
          var a5 = e5[o5], s5 = a5.userID, a5 = a5.profileItems;
          "@TLS#NOT_FOUND" !== s5 && "" !== s5 && (s5 = t5._update(s5, t5._getLatestProfileFromResponse(s5, a5)).latestProfile, n5.push(s5));
        }
        return n5;
      } }, { key: "_genGrpRes", value: function(e5) {
        if (!O3(e5))
          return [];
        for (var t5 = [], n5 = 0, o5 = e5.length; n5 < o5; n5++)
          e5[n5] && e5[n5].groupID && t5.push(new qo(e5[n5]));
        return t5;
      } }, { key: "_genMemberRes", value: function(e5) {
        if (!O3(e5))
          return [];
        for (var t5, n5, o5, i5, a5, s5, r5 = /* @__PURE__ */ new Map(), c5 = 0, u5 = e5.length; c5 < u5; c5++)
          e5[c5] && e5[c5].userID && e5[c5].groupID && (n5 = (t5 = e5[c5]).groupID, i5 = t5.name, a5 = t5.type, s5 = t5.avatar, o5 = t5.nick, i5 = { groupID: n5, name: i5, type: a5, avatar: s5 }, a5 = { userID: t5.userID, nick: o5, nameCard: t5.nameCard }, r5.has(n5) ? ((s5 = r5.get(n5)).memberList.push(a5), r5.set(n5, s5)) : r5.set(n5, { groupInfo: i5, memberList: [a5] }));
        return d3(r5.values());
      } }])), rr = e4(function e5(t5) {
        var n5 = this;
        p4(this, e5);
        var o5, i5 = new P3("sdkConstruct"), a5 = (this._n = "ModuleManager", this._isReady = false, this._reason = k2.USER_NOT_LOGGED_IN, this._startLoginTs = 0, this._map = /* @__PURE__ */ new Map(), this._optionalModuleMap = /* @__PURE__ */ new Map(), this._codeMsgForTUIMap = /* @__PURE__ */ new Map(), this._iEmitter = null, this._oEmitter = null, this._checkCount = 0, this._checkTimer = -1, this._map.set(12, new pi(this, t5)), this._map.set(37, new Zs(this)), this._map.set(15, new Si(this)), this._map.set(27, new Wa(this)), this._map.set(23, new Ra(this)), this._map.set(24, new Ha(this)), this._map.set(26, new Ua(this)), this._map.set(21, new _a(this)), this._map.set(20, new ka(this)), this._map.set(1, new hi(this)), this._map.set(2, new xi(this)), this._map.set(3, new Vi(this)), this._map.set(34, new Bi(this)), this._map.set(31, new Hi(this)), this._map.set(4, new di(this)), this._map.set(6, new So(this)), this._map.set(11, new Ko(this)), this._map.set(7, new oi(this)), this._map.set(10, new si(this)), this._map.set(13, new Ci(this)), this._map.set(32, new Xa(this)), this._map.set(14, new Di(this)), this._map.set(17, new Gi(this)), this._map.set(18, new Ki(this)), this._map.set(19, new Wi(this)), this._map.set(25, new Aa(this)), this._map.set(8, new Ba(this)), this._map.set(28, new Ya(this)), this._map.set(36, new ja(this)), this._map.set(29, new Ja(this)), this._map.set(30, new za(this)), this._map.set(33, new os(this)), this._map.set(35, new rs(this)), this._map.set(38, new sr(this)), this._eventThrottleMap = /* @__PURE__ */ new Map(), this._eventThrottling = t5.eventThrottling, this._map.get(12).isPartialUpdatedConvs() && (this._eventThrottling = false), m3(t5.modules) ? (Object.keys(t5.modules).forEach(function(e6) {
          o5 = t5.modules[e6], "group-module" === e6 ? n5._map.set(7, new o5(n5)) : "relationship-module" === e6 ? n5._map.set(8, new o5(n5)) : "signaling-module" === e6 ? n5._map.set(33, new o5(n5)) : "follow-module" === e6 ? n5._map.set(35, new o5(n5)) : "cloud-search-module" === e6 && n5._map.set(38, new o5(n5)), n5._optionalModuleMap.set(e6, 1);
        }), this._map.get(12).setUsingChatCore(true)) : this._map.has(7) || this._map.get(12).setUsingChatCore(true), t5.instanceID), s5 = t5.SDKAppID, r5 = this._map.get(12).isIntl(), c5 = this._map.get(12).isUsingChatCore(), a5 = "instanceID:".concat(a5, " SDKAppID:").concat(s5, " isIntl:").concat(r5, " isUsingChatCore:").concat(c5, " host:").concat(qt2()) + " isIOSWebView:".concat(Ge2, " platform:").concat(ye2, " canIUseInflate:").concat(this.canIUseInflate()) + " workerAvailable:".concat(Ae2, " eventThrottling:").concat(this._eventThrottling, " UserAgent:").concat(Me2);
        P3.bindEventStatModule(this._map.get(14)), P3.bindNetMonitorModule(this._map.get(15)), i5.setMessage("".concat(a5, " ").concat(function() {
          var t6 = "";
          if (v3)
            try {
              var e6 = I3.getSystemInfoSync(), n6 = e6.model, o6 = e6.version, i6 = e6.system, a6 = e6.platform, s6 = e6.SDKVersion, t6 = "model:".concat(n6, " version:").concat(o6, " system:").concat(i6, " platform:").concat(a6, " SDKVersion:").concat(s6);
            } catch (e7) {
              t6 = "";
            }
          return t6;
        }())).end(), M3.i("SDK ".concat(a5)), L3.prototype._getErrMsg = this.getErrMsg.bind(this), this._readyList = void 0, this._ssoLogForReady = null, this._initReadyList();
      }, [{ key: "_startTimer", value: function() {
        var e5 = this._map.get(24), t5 = e5.isWorkerEnabled();
        M3.l("".concat(this._n, ".startTimer isWorkerEnabled:").concat(t5, " seed:").concat(this._checkTimer)), t5 ? e5.startWorkerTimer() : this._startMainThreadTimer();
      } }, { key: "_startMainThreadTimer", value: function() {
        this._checkTimer < 0 && (this._checkTimer = setInterval(this.onCheckTimer.bind(this), 1e3)), M3.l("".concat(this._n, "._startMainThreadTimer seed:").concat(this._checkTimer));
      } }, { key: "stopTimer", value: function() {
        var e5 = this._map.get(24), t5 = e5.isWorkerEnabled();
        M3.l("".concat(this._n, ".stopTimer isWorkerEnabled:").concat(t5, " seed:").concat(this._checkTimer)), t5 ? e5.stopWorkerTimer() : this._stopMainThreadTimer();
      } }, { key: "_stopMainThreadTimer", value: function() {
        M3.l("".concat(this._n, "._stopMainThreadTimer")), 0 < this._checkTimer && (clearInterval(this._checkTimer), this._checkTimer = -1, this._checkCount = 0);
      } }, { key: "_stopMainThreadSocket", value: function() {
        M3.l("".concat(this._n, "._stopMainThreadSocket"));
        var e5 = this._map.get(21);
        e5.setIsWorkerEnabled(true), e5.reConnect();
      } }, { key: "_startMainThreadSocket", value: function() {
        M3.l("".concat(this._n, "._startMainThreadSocket"));
        var e5 = this._map.get(21);
        e5.setIsWorkerEnabled(false), e5.reConnect();
      } }, { key: "onWorkerTimerEnabled", value: function() {
        M3.l("".concat(this._n, ".onWorkerTimerEnabled, disable main thread timer and socket")), this._stopMainThreadTimer(), this._stopMainThreadSocket();
      } }, { key: "onWorkerTimerDisabled", value: function() {
        M3.l("".concat(this._n, ".onWorkerTimerDisabled, enable main thread timer and socket")), this._startMainThreadTimer(), this._startMainThreadSocket();
      } }, { key: "onCheckTimer", value: function() {
        this._checkCount += 1;
        var e5, t5 = F2(this._map);
        try {
          for (t5.s(); !(e5 = t5.n()).done; ) {
            var n5 = j2(e5.value, 2)[1];
            n5.onCheckTimer && n5.onCheckTimer(this._checkCount);
          }
        } catch (e6) {
          t5.e(e6);
        } finally {
          t5.f();
        }
      } }, { key: "_initReadyList", value: function() {
        var t5 = this;
        this._readyList = [this._map.get(1)], this._readyList.forEach(function(e5) {
          e5.ready(function() {
            return t5._onModuleReady();
          });
        });
      } }, { key: "_onModuleReady", value: function() {
        var e5, t5, n5 = true;
        this._readyList.forEach(function(e6) {
          e6.isReady() || (n5 = false);
        }), n5 && !this._isReady && (this._isReady = true, this._oEmitter.emit(h4.SDK_READY), e5 = Date.now() - this._startLoginTs, M3.w("SDK is ready. cost ".concat(e5, " ms")), this._startLoginTs = Date.now(), t5 = this._ssoLogForReady.getStartTs() + Be2, this._ssoLogForReady.setMessage(e5).start(t5).end());
      } }, { key: "login", value: function() {
        0 === this._startLoginTs && (qe2(), this._startLoginTs = Date.now(), this._startTimer(), this._map.get(15).start(), this._ssoLogForReady = new P3("sdkReady"), this._reason = k2.LOGGING_IN);
      } }, { key: "onLoginFailed", value: function() {
        this._startLoginTs = 0;
      } }, { key: "getOEmitInst", value: function() {
        return null === this._oEmitter && (this._oEmitter = new Ai(), e5 = this._oEmitter, Vn = e5, this._oEmitter._emit = this._oEmitter.emit, this._oEmitter.emit = (function(e6, t5) {
          var n5, o5, i5 = this;
          this._canIUseSignaling() && (e6 === h4.MESSAGE_RECEIVED && this.get(33).onNewMessageList(t5), e6 === h4.MESSAGE_MODIFIED) && this.get(33).onMessageModified(t5), e6 === h4.CONVERSATION_LIST_UPDATED || e6 === h4.FRIEND_LIST_UPDATED || e6 === h4.GROUP_LIST_UPDATED || e6 === h4.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? false !== this._eventThrottling ? this._eventThrottleMap.has(e6) ? (n5 = Date.now()) - (o5 = this._eventThrottleMap.get(e6)).last <= 1e3 ? (-1 < o5.timeoutID && clearTimeout(o5.timeoutID), o5.timeoutID = setTimeout(function() {
            o5.last = Date.now(), i5._oEmitter._emit.apply(i5._oEmitter, [e6, { name: e6, data: i5._getEventData(e6) }]);
          }, 1e3)) : (o5.last = n5, this._oEmitter._emit.apply(this._oEmitter, [e6, { name: e6, data: this._getEventData(e6) }])) : (this._eventThrottleMap.set(e6, { last: Date.now(), timeoutID: -1 }), this._oEmitter._emit.apply(this._oEmitter, [e6, { name: e6, data: this._getEventData(e6) }])) : this._oEmitter._emit.apply(this._oEmitter, [e6, { name: e6, data: this._getEventData(e6) }]) : this._oEmitter._emit.apply(this._oEmitter, [e6, { name: e6, data: t5 }]);
        }).bind(this)), this._oEmitter;
        var e5;
      } }, { key: "_canIUseSignaling", value: function() {
        var e5 = this.get(33);
        return !!e5 && e5.canIUseSignaling();
      } }, { key: "_getEventData", value: function(e5) {
        return e5 === h4.CONVERSATION_LIST_UPDATED ? this._map.get(12).isPartialUpdatedConvs() ? this._map.get(11).getPartialUpdatedConvs() : this._map.get(11).getLocalConvList() : e5 === h4.FRIEND_LIST_UPDATED ? this._map.get(8).getLocalFriendList(false) : e5 === h4.GROUP_LIST_UPDATED ? this._map.get(7).getLocalGroupList() : e5 === h4.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? this._map.get(11).getTotalUnreadCount() : e5 === h4.CONVERSATION_ID_LIST_UPDATED ? this._map.get(11).getUpdatedConvIDList() : void 0;
      } }, { key: "getIEmitInst", value: function() {
        return null === this._iEmitter && (this._iEmitter = new Ai(), this._iEmitter._emit = this._iEmitter.emit, this._iEmitter.emit = (function(e5, t5) {
          e5 = m3(t5) && t5.data ? [e5, { name: e5, data: t5.data }] : [e5, { name: e5, data: t5 }];
          this._iEmitter._emit.apply(this._iEmitter, e5);
        }).bind(this)), this._iEmitter;
      } }, { key: "hasModule", value: function(e5) {
        return this._map.has(e5);
      } }, { key: "get", value: function(e5) {
        return this._map.get(e5);
      } }, { key: "canIUseModule", value: function(e5) {
        return !this._map.get(12).isUsingChatCore() || this._optionalModuleMap.has(e5);
      } }, { key: "canIUseInflate", value: function() {
        return !!this._map.get(37);
      } }, { key: "isReady", value: function() {
        return this._isReady;
      } }, { key: "isIntl", value: function() {
        return this.get(12).isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._reason;
      } }, { key: "setNotReadyReason", value: function(e5) {
        this._reason = e5;
      } }, { key: "getErrMsg", value: function(e5, t5, n5) {
        return this._map.get(32).get({ key: e5, replacement1: t5, replacement2: n5, isIntl: this.isIntl() });
      } }, { key: "warn", value: function(e5, t5, n5) {
        e5 = this.getErrMsg(e5, t5, n5);
        e5 && M3.w(e5);
      } }, { key: "onError", value: function(e5) {
        var t5 = "code:".concat(e5.code, " message:").concat(e5.message);
        M3.w("Oops! ".concat(t5)), new P3("error").setMessage(t5).setLevel("error").end(), this.getOEmitInst().emit(h4.ERROR, e5);
      } }, { key: "restartTimer", value: function() {
        M3.l("".concat(this._n, ".restartTimer")), this.stopTimer(), this._startTimer();
        var e5 = this.get(7);
        e5 && e5.restartPolling();
      } }, { key: "getTimerID", value: function() {
        var e5 = this._map.get(24);
        return e5.isWorkerEnabled() ? e5.getTimerID() : this._checkTimer;
      } }, { key: "getPollingTimerID", value: function(e5) {
        return this._map.get(7).getPollingTimerID(e5);
      } }, { key: "statTUIKeyFeatures", value: function(e5) {
        var t5 = e5.code, e5 = e5.msg, e5 = void 0 === e5 ? "" : e5, n5 = t5 + e5;
        this._codeMsgForTUIMap.has(n5) || (this._codeMsgForTUIMap.set(n5, 1), n5 = this.get(12).getUIPlatform(), new P3("tui_key_features").setCode(t5).setMessage(e5).setUIPlatform(n5).end());
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), qe2();
        var e5, t5 = F2(this._map);
        try {
          for (t5.s(); !(e5 = t5.n()).done; ) {
            var n5 = j2(e5.value, 2)[1];
            n5.reset && n5.reset();
          }
        } catch (e6) {
          t5.e(e6);
        } finally {
          t5.f();
        }
        this._startLoginTs = 0, this._initReadyList(), this._isReady = false, this.stopTimer(), this._oEmitter.emit(h4.SDK_NOT_READY);
        var o5, i5 = F2(this._eventThrottleMap);
        try {
          for (i5.s(); !(o5 = i5.n()).done; ) {
            var a5 = j2(o5.value, 2)[1];
            -1 < a5.timeoutID && clearTimeout(a5.timeoutID);
          }
        } catch (e6) {
          i5.e(e6);
        } finally {
          i5.f();
        }
        this._eventThrottleMap.clear(), this._codeMsgForTUIMap.clear();
      } }]), cr = e4(function e5(t5) {
        p4(this, e5), this._funcMap = /* @__PURE__ */ new Map(), this._m = t5, this._n = "SafetyCallback", this._reportCount = 0;
      }, [{ key: "defense", value: function(e5, t5) {
        var n5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0;
        if ("string" != typeof e5)
          return null;
        if (0 === e5.length)
          return null;
        if ("function" != typeof t5)
          return null;
        if (this._funcMap.has(e5) && this._funcMap.get(e5).has(t5))
          return this._funcMap.get(e5).get(t5);
        this._funcMap.has(e5) || this._funcMap.set(e5, /* @__PURE__ */ new Map());
        var o5 = null;
        return this._funcMap.get(e5).has(t5) ? o5 = this._funcMap.get(e5).get(t5) : (o5 = this._pack(e5, t5, n5), this._funcMap.get(e5).set(t5, o5)), o5;
      } }, { key: "defenseOnce", value: function(e5, t5) {
        return "function" != typeof t5 ? null : this._pack(e5, t5, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0);
      } }, { key: "find", value: function(e5, t5) {
        return "string" != typeof e5 || 0 === e5.length || "function" != typeof t5 ? null : this._funcMap.has(e5) && this._funcMap.get(e5).has(t5) ? this._funcMap.get(e5).get(t5) : (this._m.warn("ListenerFnNotFound", e5), null);
      } }, { key: "delete", value: function(e5, t5) {
        return "function" == typeof t5 && !!this._funcMap.has(e5) && !!this._funcMap.get(e5).has(t5) && (this._funcMap.get(e5).delete(t5), 0 === this._funcMap.get(e5).size && this._funcMap.delete(e5), true);
      } }, { key: "_pack", value: function(o5, e5, i5) {
        var a5 = this;
        return function() {
          try {
            e5.apply(i5, Array.from(arguments));
          } catch (e6) {
            var t5 = Object.values(h4).indexOf(o5), n5 = "CallbackError";
            -1 !== t5 && (t5 = Object.keys(h4)[t5], a5._m.warn(n5, t5, e6)), a5._reportCount < 5 && (new P3(n5).setMessage("eventName:".concat(o5)).setMoreMessage(e6.message).end(), a5._reportCount += 1);
          }
        };
      } }, { key: "destroy", value: function() {
        this._funcMap.clear();
      } }, { key: "reset", value: function() {
        M3.l("".concat(this._n, ".reset")), this._reportCount = 0;
      } }]), ur = e4(function e5(t5) {
        p4(this, e5);
        t5 = { SDKAppID: t5.SDKAppID, unlimitedAVChatRoom: t5.unlimitedAVChatRoom || false, scene: t5.scene || "", oversea: t5.oversea || false, instanceID: Ft2(), devMode: t5.devMode || false, testEnv: t5.testEnv || false, proxyServer: t5.proxyServer || void 0, fileUploadProxy: t5.fileUploadProxy || void 0, fileDownloadProxy: t5.fileDownloadProxy || t5.fileUploadProxy || void 0, eventThrottling: false !== t5.eventThrottling, partialUpdatedConversations: true === t5.partialUpdatedConversations, disableIndependentDomain: true === t5.disableIndependentDomain, modules: t5.modules || void 0 };
        this._m = new rr(t5), this._safetyCallbackFactory = new cr(this._m);
      }, [{ key: "onError", value: function(e5) {
        this._m.onError(e5);
      } }, { key: "login", value: function(e5) {
        return this._m.login(), this._get(1).login(e5);
      } }, { key: "logout", value: function() {
        var t5 = this;
        return this._get(1).logout().then(function(e5) {
          return t5._safetyCallbackFactory.reset(), t5._m.reset(), e5;
        });
      } }, { key: "getLoginUser", value: function() {
        return this._get(1).getLoginUser();
      } }, { key: "getServerTime", value: function() {
        return He2();
      } }, { key: "isReady", value: function() {
        return this._m.isReady();
      } }, { key: "isIntl", value: function() {
        return this._m.isIntl();
      } }, { key: "getNotReadyReason", value: function() {
        return this._m.getNotReadyReason();
      } }, { key: "getErrMsg", value: function(e5, t5, n5) {
        return this._m.getErrMsg(e5, t5, n5);
      } }, { key: "_get", value: function(e5) {
        return this._m.get(e5);
      } }, { key: "destroy", value: function() {
        var e5 = this, t5 = this._get(12), n5 = t5.getSDKAppID();
        return M3.w("destroy ".concat(n5, " ").concat(t5.getInstanceID())), this.logout().finally(function() {
          e5._safetyCallbackFactory.destroy(), e5._m.stopTimer(), e5._get(24).terminate(), e5._get(21).dealloc(), e5._m.getOEmitInst().emit(h4.SDK_DESTROY, { SDKAppID: n5 });
        });
      } }, { key: "on", value: function(e5, t5, n5) {
        M3.d("on", "eventName:".concat(e5)), this._m.getOEmitInst().on(e5, this._safetyCallbackFactory.defense(e5, t5, n5), n5);
      } }, { key: "once", value: function(e5, t5, n5) {
        M3.d("once", "eventName:".concat(e5)), this._m.getOEmitInst().once(e5, this._safetyCallbackFactory.defenseOnce(e5, t5, n5), n5 || this);
      } }, { key: "off", value: function(e5, t5, n5, o5) {
        M3.d("off", "eventName:".concat(e5));
        var i5 = this._safetyCallbackFactory.find(e5, t5);
        null !== i5 && (this._m.getOEmitInst().off(e5, i5, n5, o5), this._safetyCallbackFactory.delete(e5, t5));
      } }, { key: "registerPlugin", value: function(e5) {
        (N3(e5["tim-push"]) ? N3(e5["tim-offline-push-plugin"]) ? this._get(18) : this._get(28) : this._get(36)).registerPlugin(e5);
      } }, { key: "setLogLevel", value: function(e5) {
        var t5;
        e5 <= 0 && ((t5 = this.getErrMsg("TIM_ASCII_ART")) && console.log(t5), (t5 = this.getErrMsg("API_REFER")) && (Zt2() ? console.log("%c ".concat("IM SDK API ->", " %c"), "background:#ff9d00; padding:1px; border-radius:3px; color: #fff", "background:transparent", t5) : console.log("IM SDK API ->", t5)), (t5 = this.getErrMsg("DOCS_GUIDE")) && console.log(t5), t5 = this.getErrMsg("IOS_WEBVIEW_WARNING"), Ge2) && t5 && console.warn(t5), M3.setLevel(e5);
      } }, { key: "createTextMessage", value: function(e5) {
        return this._get(2).createTextMessage(e5);
      } }, { key: "createTextAtMessage", value: function(e5) {
        return this._get(2).createTextMessage(e5);
      } }, { key: "createImageMessage", value: function(e5) {
        return this._get(2).createImageMessage(e5);
      } }, { key: "createAudioMessage", value: function(e5) {
        return this._get(2).createAudioMessage(e5);
      } }, { key: "createVideoMessage", value: function(e5) {
        return this._get(2).createVideoMessage(e5);
      } }, { key: "createCustomMessage", value: function(e5) {
        return this._get(2).createCustomMessage(e5);
      } }, { key: "createFaceMessage", value: function(e5) {
        return this._get(2).createFaceMessage(e5);
      } }, { key: "createFileMessage", value: function(e5) {
        return this._get(2).createFileMessage(e5);
      } }, { key: "createLocationMessage", value: function(e5) {
        return this._get(2).createLocationMessage(e5);
      } }, { key: "createMergerMessage", value: function(e5) {
        return this._get(2).createMergerMessage(e5);
      } }, { key: "downloadMergerMessage", value: function(e5) {
        return e5.type !== R3.MSG_MERGER ? E4({ code: k2.MSG_MERGER_TYPE_INVALID }) : S3(e5.payload.downloadKey) ? E4({ code: k2.MSG_MERGER_KEY_INVALID }) : this._get(2).downloadMergerMessage(e5).catch(function(e6) {
          return E4({ code: k2.MSG_MERGER_DOWNLOAD_FAIL });
        });
      } }, { key: "createForwardMessage", value: function(e5) {
        return this._get(2).createForwardMessage(e5);
      } }, { key: "sendMessage", value: function(e5, t5) {
        return e5 instanceof Do ? this._get(2).sendMessageInstance(e5, t5) : E4({ code: k2.MSG_INSTANCE_REQUIRED });
      } }, { key: "callExperimentalAPI", value: function(e5, t5) {
        return "sendComboMessage" === e5 ? this._get(31).sendMessage(t5) : "handleGroupInvitation" === e5 ? this._get(7).handleGroupInvitation(t5) : "isCommercialAbilityEnabled" === e5 ? this._get(27).isFeatureEnabled(t5) : "isFeatureEnabledForStat" === e5 ? this._get(27).isFeatureEnabledForStat(t5) : "isIntl" === e5 ? this.isIntl() : "sendTRTCCustomData" === e5 || "sendRoomCustomData" === e5 ? this._get(30).sendTRTCCustomData(t5) : "getTimerID" === e5 ? this._m.getTimerID() : "getPollingTimerID" === e5 ? this._m.getPollingTimerID(t5) : "setApplicationID" === e5 ? (this._get(12).setApplicationID(t5), void this._get(20).updateProtocolConfig()) : "getServerConfig" === e5 ? this._get(23).getServerConfig(t5) : "canIUseModule" === e5 ? this._m.canIUseModule(t5) : "startMessageLongPolling" === e5 ? this._get(7).startMessageLongPolling(t5) : "stopMessageLongPolling" === e5 ? this._get(7).stopMessageLongPolling(t5) : "disableMessagePullOnInvite" === e5 ? this._get(11).disableMsgPullOnInvite(t5) : "clearLocalMessage" === e5 ? this._get(11).clearMemMsg(t5, false) : "setCustomLoginInfo" === e5 ? this._get(12).setCustomLoginInfo(t5) : "statTUIKeyFeatures" === e5 ? this._m.statTUIKeyFeatures(t5) : "getGroupReceiptsByUsers" === e5 ? this._get(7).getGroupReceiptsByUsers(t5) : E4({ code: k2.INVALID_OPERATION });
      } }, { key: "revokeMessage", value: function(e5) {
        return this._get(2).revokeMessage(e5);
      } }, { key: "resendMessage", value: function(e5, t5) {
        return e5 instanceof Do ? this._get(2).resendMessage(e5, t5) : E4({ code: k2.MSG_INSTANCE_REQUIRED });
      } }, { key: "deleteMessage", value: function(e5) {
        return this._get(2).deleteMessage(e5);
      } }, { key: "translateText", value: function(e5) {
        return this._get(2).translateText(e5);
      } }, { key: "convertVoiceToText", value: function(e5) {
        return this._get(2).convertVoiceToText(e5);
      } }, { key: "setMessageExtensions", value: function(e5, t5) {
        return this._get(3).setMessageExtensions(e5, t5);
      } }, { key: "getMessageExtensions", value: function(e5) {
        return this._get(3).getMessageExtensions(e5);
      } }, { key: "deleteMessageExtensions", value: function(e5, t5) {
        return this._get(3).deleteMessageExtensions(e5, t5);
      } }, { key: "addMessageReaction", value: function(e5, t5) {
        return this._get(34).addMessageReaction(e5, t5);
      } }, { key: "removeMessageReaction", value: function(e5, t5) {
        return this._get(34).removeMessageReaction(e5, t5);
      } }, { key: "getMessageReactions", value: function(e5) {
        return this._get(34).getMessageReactions(e5);
      } }, { key: "getAllUserListOfMessageReaction", value: function(e5) {
        return this._get(34).getAllUserListOfMessageReaction(e5);
      } }, { key: "modifyMessage", value: function(e5) {
        return this._get(2).modifyRemoteMessage(e5);
      } }, { key: "getMessageList", value: function(e5) {
        return this._get(11).getMessageList(e5);
      } }, { key: "getMessageListHopping", value: function(e5) {
        return this._get(11).getMessageListHopping(e5);
      } }, { key: "sendMessageReadReceipt", value: function(e5) {
        return this._get(11).sendReadReceipt(e5);
      } }, { key: "getMessageReadReceiptList", value: function(e5) {
        return this._get(11).getReadReceiptList(e5);
      } }, { key: "getGroupMessageReadMemberList", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getReadReceiptDetail(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "findMessage", value: function(e5) {
        return this._get(11).findMessage(e5);
      } }, { key: "setMessageRead", value: function(e5) {
        return this._get(11).setMessageRead(e5);
      } }, { key: "getConversationList", value: function(e5) {
        return this._get(11).getConvList(e5);
      } }, { key: "getConversationProfile", value: function(e5) {
        return this._get(11).getConversationProfile(e5);
      } }, { key: "deleteConversation", value: function(e5) {
        return this._get(11).deleteConversation(e5);
      } }, { key: "setConversationDraft", value: function(e5) {
        return this._get(11).setConvDraft(e5);
      } }, { key: "clearHistoryMessage", value: function(e5) {
        return this._get(11).clearHistoryMessage(e5);
      } }, { key: "pinConversation", value: function(e5) {
        return this._get(11).pinConversation(e5);
      } }, { key: "setAllMessageRead", value: function(e5) {
        return this._get(11).setAllMessageRead(e5);
      } }, { key: "setMessageRemindType", value: function(e5) {
        return this._get(11).setMessageRemindType(e5);
      } }, { key: "setAllReceiveMessageOpt", value: function(e5) {
        return this._get(11).setAllRcvMsgOpt(e5);
      } }, { key: "getAllReceiveMessageOpt", value: function() {
        return this._get(11).getAllRcvMsgOpt();
      } }, { key: "getTotalUnreadMessageCount", value: function() {
        return this._get(11).getTotalUnreadCount();
      } }, { key: "setConversationCustomData", value: function(e5) {
        return this._get(11).setConvCustomData(e5);
      } }, { key: "markConversation", value: function(e5) {
        return this._get(11).markConv(e5);
      } }, { key: "getConversationGroupList", value: function() {
        return this._get(11).getConvGroupList();
      } }, { key: "createConversationGroup", value: function(e5) {
        return this._get(11).createConvGroup(e5);
      } }, { key: "deleteConversationGroup", value: function(e5) {
        return this._get(11).deleteConvGroup(e5);
      } }, { key: "renameConversationGroup", value: function(e5) {
        return this._get(11).renameConvGroup(e5);
      } }, { key: "addConversationsToGroup", value: function(e5) {
        return this._get(11).addConvsToGroup(e5);
      } }, { key: "deleteConversationsFromGroup", value: function(e5) {
        return this._get(11).deleteConvsFromGroup(e5);
      } }, { key: "searchCloudMessages", value: function(e5) {
        var t5 = this._get(38);
        return t5 ? t5.searchCloudMessages(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "searchCloudUsers", value: function(e5) {
        var t5 = this._get(38);
        return t5 ? t5.searchCloudUsers(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "searchCloudGroups", value: function(e5) {
        var t5 = this._get(38);
        return t5 ? t5.searchCloudGroups(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "searchCloudGroupMembers", value: function(e5) {
        var t5 = this._get(38);
        return t5 ? t5.searchCloudGroupMembers(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getMyProfile", value: function() {
        return this._get(4).getMyProfile();
      } }, { key: "getUserProfile", value: function(e5) {
        return this._get(4).getUserProfile(e5);
      } }, { key: "updateMyProfile", value: function(e5) {
        return this._get(4).updateMyProfile(e5);
      } }, { key: "getBlacklist", value: function() {
        return this._get(4).getLocalBlacklist();
      } }, { key: "addToBlacklist", value: function(e5) {
        return this._get(4).addBlacklist(e5);
      } }, { key: "removeFromBlacklist", value: function(e5) {
        return this._get(4).deleteBlacklist(e5);
      } }, { key: "setSelfStatus", value: function(e5) {
        return this._get(4).setSelfStatus(e5);
      } }, { key: "getUserStatus", value: function(e5) {
        return this._get(4).getUserStatus(e5);
      } }, { key: "subscribeUserStatus", value: function(e5) {
        return this._get(4).subscribeUserStatus(e5);
      } }, { key: "unsubscribeUserStatus", value: function(e5) {
        return this._get(4).unsubscribeUserStatus(e5);
      } }, { key: "getFriendList", value: function() {
        var e5 = this._get(8);
        return e5 ? e5.getLocalFriendList() : E4({ code: k2.NO_MODULE });
      } }, { key: "addFriend", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.addFriend(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "deleteFriend", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.deleteFriend(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "checkFriend", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.checkFriend(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getFriendProfile", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.getFriendProfile(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "updateFriend", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.updateFriend(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getFriendApplicationList", value: function() {
        var e5 = this._get(8);
        return e5 ? e5.getLocalFriendApplicationList() : E4({ code: k2.NO_MODULE });
      } }, { key: "acceptFriendApplication", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.acceptFriendApplication(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "refuseFriendApplication", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.refuseFriendApplication(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "deleteFriendApplication", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.deleteFriendApplication(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setFriendApplicationRead", value: function() {
        var e5 = this._get(8);
        return e5 ? e5.setFriendApplicationRead() : E4({ code: k2.NO_MODULE });
      } }, { key: "getFriendGroupList", value: function() {
        var e5 = this._get(8);
        return e5 ? e5.getLocalFriendGroupList() : E4({ code: k2.NO_MODULE });
      } }, { key: "createFriendGroup", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.createFriendGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "deleteFriendGroup", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.deleteFriendGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "addToFriendGroup", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.addToFriendGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "removeFromFriendGroup", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.removeFromFriendGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "renameFriendGroup", value: function(e5) {
        var t5 = this._get(8);
        return t5 ? t5.renameFriendGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "followUser", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.followUser(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "unfollowUser", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.unfollowUser(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getMyFollowersList", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.getMyFollowersList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getMyFollowingList", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.getMyFollowingList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getMutualFollowersList", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.getMutualFollowersList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getUserFollowInfo", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.getUserFollowInfo(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "checkFollowType", value: function(e5) {
        var t5 = this._get(35);
        return t5 ? t5.checkFollowType(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupList", value: function() {
        var e5 = this._get(7);
        return e5 ? e5.getGroupList() : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupProfile", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupProfile(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "createGroup", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.createGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "dismissGroup", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.dismissGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "updateGroupProfile", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.updateGroupProfile(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "joinGroup", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.joinGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "quitGroup", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.quitGroup(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "searchGroupByID", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.searchGroupByID(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupOnlineMemberCount", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupOnlineMemberCount(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "changeGroupOwner", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.changeGroupOwner(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupApplicationList", value: function() {
        var e5 = this._get(7);
        return e5 ? e5.getGroupApplicationList() : E4({ code: k2.NO_MODULE });
      } }, { key: "handleGroupApplication", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.handleGroupApplication(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "initGroupAttributes", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.initGroupAttributes(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupAttributes", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupAttributes(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "deleteGroupAttributes", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.deleteGroupAttributes(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupAttributes", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupAttributes(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupCounters", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupCounters(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "increaseGroupCounter", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.increaseGroupCounter(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "decreaseGroupCounter", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.decreaseGroupCounter(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupCounters", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupCounters(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupMemberList", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupMemberList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getGroupMemberProfile", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.getGroupMemberProfile(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "addGroupMember", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.addGroupMember(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "deleteGroupMember", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.deleteGroupMember(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupMemberMuteTime", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupMemberMuteTime(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupMemberRole", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupMemberRole(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupMemberNameCard", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupMemberNameCard(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "setGroupMemberCustomField", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.setGroupMemberCustomField(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "markGroupMemberList", value: function(e5) {
        var t5 = this._get(7);
        return t5 ? t5.markGroupMemberList(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getJoinedCommunityList", value: function() {
        return this._get(10).getJoinedCommunityList();
      } }, { key: "createTopicInCommunity", value: function(e5) {
        return this._get(10).createTopicInCommunity(e5);
      } }, { key: "deleteTopicFromCommunity", value: function(e5) {
        return this._get(10).deleteTopicFromCommunity(e5);
      } }, { key: "updateTopicProfile", value: function(e5) {
        return this._get(10).updateTopicProfile(e5);
      } }, { key: "getTopicList", value: function(e5) {
        return this._get(10).getTopicList(e5);
      } }, { key: "addSignalingListener", value: function(e5, t5, n5) {
        var o5 = this._get(33);
        o5 && o5.addSignalingListener(e5, this._safetyCallbackFactory.defense(e5, t5, n5), n5);
      } }, { key: "removeSignalingListener", value: function(e5, t5, n5) {
        var o5, i5 = this._safetyCallbackFactory.find(e5, t5);
        null !== i5 && (o5 = this._get(33)) && (o5.removeSignalingListener(e5, i5, n5), this._safetyCallbackFactory.delete(e5, t5));
      } }, { key: "invite", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.invite(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "inviteSync", value: function(e5, t5, n5) {
        var o5 = this._get(33);
        return o5 ? o5.inviteSync(e5, t5, n5) : "";
      } }, { key: "inviteInGroup", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.invite(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "inviteInGroupSync", value: function(e5, t5, n5) {
        var o5 = this._get(33);
        return o5 ? o5.inviteSync(e5, t5, n5) : "";
      } }, { key: "cancel", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.cancel(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "accept", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.accept(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "reject", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.reject(e5) : E4({ code: k2.NO_MODULE });
      } }, { key: "getSignalingInfo", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.getSignalingInfo(e5) : null;
      } }, { key: "modifyInvitation", value: function(e5) {
        var t5 = this._get(33);
        return t5 ? t5.modifyInvitation(e5) : E4({ code: k2.NO_MODULE });
      } }]), lr = { login: 1, logout: 1, getLoginUser: 1, destroy: 1, on: 1, off: 1, ready: 1, setLogLevel: 1, joinGroup: 1, quitGroup: 1, registerPlugin: 1, getGroupOnlineMemberCount: 1, isReady: 1, addSignalingListener: 1, removeSignalingListener: 1, callExperimentalAPI: 1 };
      function dr(e5) {
        return p4(this, dr), (e5 = i4(this, dr, [e5]))._n = "CSModule", e5;
      }
      var pr = {}, Fn = {};
      return Fn.create = function(e5) {
        var t5 = "TencentCloudChat.create", n5 = 0, o5 = e5.SDKAppID;
        if (A3(o5))
          n5 = o5;
        else if (n5 = parseInt(o5), isNaN(o5))
          return M3.e("".concat(t5, " failed. Failed to parse the SDKAppID, please check the arguments")), null;
        if (n5 && pr[n5])
          return pr[n5];
        M3.l("".concat(t5));
        var s5, i5, o5 = new ur(y2(y2({}, e5), {}, { SDKAppID: n5 })), e5 = (o5.on(h4.SDK_DESTROY, function(e6) {
          pr[e6.data.SDKAppID] = null, delete pr[e6.data.SDKAppID];
        }), s5 = o5, i5 = /* @__PURE__ */ Object.create(null), Object.keys(xn).forEach(function(a5) {
          var t6;
          s5[a5] && (t6 = new Q2(), i5[a5] = function() {
            var e6 = Array.from(arguments);
            return t6.use(function(e7, t7) {
              i6 = a5;
              var n6, o6, i6 = !(!(n6 = s5).isReady() && 1 !== lr[i6]) || (o6 = { code: o6 = n6.getNotReadyReason(), message: "".concat(n6.getErrMsg(o6), " | ").concat(i6, " | ").concat(n6.getErrMsg(k2.SDK_IS_NOT_READY)) }, n6.onError(o6), o6);
              return true === i6 ? t7() : E4(i6);
            }).use(function(e7, t7) {
              if (true === function(n6, o6, i6) {
                if (void 0 === o6)
                  return true;
                var a6 = true;
                if (m3(o6))
                  Object.keys(o6).forEach(function(e9) {
                    var t8 = 1 === n6.length ? n6[0][e9] : void 0;
                    a6 = !!on(t8, o6[e9], i6, e9) && a6;
                  });
                else if (O3(o6))
                  for (var e8 = 0; e8 < o6.length; e8++)
                    a6 = !!on(n6[e8], o6[e8], i6, o6[e8].name) && a6;
                if (a6)
                  return a6;
                throw new Error("Params validate failed.");
              }(e7, qn[a5], a5))
                return t7();
            }).use(function(e7, t7) {
              return s5[a5].apply(s5, e7);
            }), t6.run(e6);
          });
        }), i5);
        return pr[n5] = e5, qn.hookGetAPITips(o5.getErrMsg.bind(o5)), M3.l("".concat(t5, " ok")), e5;
      }, Fn.TYPES = R3, Fn.EVENT = h4, Fn.TSignaling = _3, Fn.VERSION = "3.5.3", M3.l("TencentCloudChat.VERSION:".concat(Fn.VERSION)), Fn;
    });
  }
});

// D:/code/web/node_modules/tim-upload-plugin/index.js
var require_tim_upload_plugin = __commonJS({
  "D:/code/web/node_modules/tim-upload-plugin/index.js"(exports, module) {
    !function(e4, t4) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t4() : "function" == typeof define && define.amd ? define(t4) : (e4 = e4 || self).TIMUploadPlugin = t4();
    }(exports, function() {
      function e4(e5, t5) {
        var o5 = Object.keys(e5);
        if (Object.getOwnPropertySymbols) {
          var n5 = Object.getOwnPropertySymbols(e5);
          t5 && (n5 = n5.filter(function(t6) {
            return Object.getOwnPropertyDescriptor(e5, t6).enumerable;
          })), o5.push.apply(o5, n5);
        }
        return o5;
      }
      function t4(t5) {
        for (var o5 = 1; o5 < arguments.length; o5++) {
          var n5 = null != arguments[o5] ? arguments[o5] : {};
          o5 % 2 ? e4(Object(n5), true).forEach(function(e5) {
            s4(t5, e5, n5[e5]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(n5)) : e4(Object(n5)).forEach(function(e5) {
            Object.defineProperty(t5, e5, Object.getOwnPropertyDescriptor(n5, e5));
          });
        }
        return t5;
      }
      function o4(e5) {
        return (o4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e6) {
          return typeof e6;
        } : function(e6) {
          return e6 && "function" == typeof Symbol && e6.constructor === Symbol && e6 !== Symbol.prototype ? "symbol" : typeof e6;
        })(e5);
      }
      function n4(e5, t5) {
        if (!(e5 instanceof t5))
          throw new TypeError("Cannot call a class as a function");
      }
      function r4(e5, t5) {
        for (var o5 = 0; o5 < t5.length; o5++) {
          var n5 = t5[o5];
          n5.enumerable = n5.enumerable || false, n5.configurable = true, "value" in n5 && (n5.writable = true), Object.defineProperty(e5, n5.key, n5);
        }
      }
      function a4(e5, t5, o5) {
        return t5 && r4(e5.prototype, t5), o5 && r4(e5, o5), Object.defineProperty(e5, "prototype", { writable: false }), e5;
      }
      function s4(e5, t5, o5) {
        return t5 in e5 ? Object.defineProperty(e5, t5, { value: o5, enumerable: true, configurable: true, writable: true }) : e5[t5] = o5, e5;
      }
      function i4(e5, t5) {
        if (null == e5)
          return {};
        var o5, n5, r5 = function(e6, t6) {
          if (null == e6)
            return {};
          var o6, n6, r6 = {}, a6 = Object.keys(e6);
          for (n6 = 0; n6 < a6.length; n6++)
            o6 = a6[n6], t6.indexOf(o6) >= 0 || (r6[o6] = e6[o6]);
          return r6;
        }(e5, t5);
        if (Object.getOwnPropertySymbols) {
          var a5 = Object.getOwnPropertySymbols(e5);
          for (n5 = 0; n5 < a5.length; n5++)
            o5 = a5[n5], t5.indexOf(o5) >= 0 || Object.prototype.propertyIsEnumerable.call(e5, o5) && (r5[o5] = e5[o5]);
        }
        return r5;
      }
      var u4 = "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, l4 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), f3 = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), c4 = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), d3 = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), p4 = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), y2 = "undefined" != typeof uni && "undefined" == typeof window && "function" == typeof uni.requireNativePlugin, h4 = y2 && "ios" === uni.getDeviceInfo().platform.toLocaleLowerCase(), g4 = (y2 && uni.getDeviceInfo().platform.toLocaleLowerCase(), l4 || f3 || c4 || d3 || p4 || y2), m3 = void 0 !== u4 && (void 0 !== u4.nativeModuleProxy || void 0 !== u4.ReactNative), v3 = f3 ? qq : c4 ? tt : d3 ? swan : p4 ? my : l4 ? wx : y2 ? uni : {}, b2 = function(e5) {
        if ("object" !== o4(e5) || null === e5)
          return false;
        var t5 = Object.getPrototypeOf(e5);
        if (null === t5)
          return true;
        for (var n5 = t5; null !== Object.getPrototypeOf(n5); )
          n5 = Object.getPrototypeOf(n5);
        return t5 === n5;
      };
      function w3(e5) {
        if (null == e5)
          return true;
        if ("boolean" == typeof e5)
          return false;
        if ("number" == typeof e5)
          return 0 === e5;
        if ("string" == typeof e5)
          return 0 === e5.length;
        if ("function" == typeof e5)
          return 0 === e5.length;
        if (Array.isArray(e5))
          return 0 === e5.length;
        if (e5 instanceof Error)
          return "" === e5.message;
        if (b2(e5)) {
          for (var t5 in e5)
            if (Object.prototype.hasOwnProperty.call(e5, t5))
              return false;
          return true;
        }
        return false;
      }
      var O3 = function() {
        function e5() {
          n4(this, e5), this._n = "WebRequest";
        }
        return a4(e5, [{ key: "request", value: function(e6, o5) {
          var n5 = this, r5 = "".concat(this._n, ".request"), a5 = e6.downloadUrl || "", s5 = (e6.method || "PUT").toUpperCase(), i5 = e6.url;
          if (console.log("%c tim-upload-plugin %c", "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", "".concat(r5, " URL:").concat(i5)), e6.qs) {
            var u5 = function(e7) {
              var t5 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "&", o6 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "=";
              return w3(e7) ? "" : b2(e7) ? Object.keys(e7).map(function(n6) {
                var r6 = encodeURIComponent(n6) + o6;
                return Array.isArray(e7[n6]) ? e7[n6].map(function(e8) {
                  return r6 + encodeURIComponent(e8);
                }).join(t5) : r6 + encodeURIComponent(e7[n6]);
              }).filter(Boolean).join(t5) : void 0;
            }(e6.qs);
            u5 && (i5 += "".concat(-1 === i5.indexOf("?") ? "?" : "&").concat(u5));
          }
          var l5 = new XMLHttpRequest();
          l5.open(s5, i5, true), l5.responseType = e6.dataType || "text";
          var f4 = e6.headers || {};
          if (e6.uploadByIP && (f4 = t4(t4({}, f4), {}, { host: e6.uploadIP })), !w3(f4))
            for (var c5 in f4)
              f4.hasOwnProperty(c5) && "content-length" !== c5.toLowerCase() && "user-agent" !== c5.toLowerCase() && "origin" !== c5.toLowerCase() && "host" !== c5.toLowerCase() && l5.setRequestHeader(c5, f4[c5]);
          return l5.onload = function() {
            if (200 === l5.status)
              o5(null, n5._xhrRes(l5, n5._xhrBody(l5, a5, e6.uploadByIP && e6.uploadIP), f4));
            else {
              if (e6.uploadIP && -1 === e6.url.indexOf(e6.uploadIP))
                return e6.url = function(e7, t6) {
                  return e7.replace(/^http(s)?:\/\/(.*?)\//, "https://".concat(t6, "/"));
                }(e6.url, e6.uploadIP), e6.uploadByIP = true, n5.request(e6, o5);
              var t5 = { code: l5.status, message: JSON.stringify(l5.responseText) };
              o5(t5, n5._xhrRes(l5, n5._xhrBody(l5, a5, e6.uploadByIP && e6.uploadIP), f4));
            }
          }, l5.onerror = function(t5) {
            var r6 = n5._xhrBody(l5, a5, e6.uploadByIP && e6.uploadIP), s6 = { code: l5.status, message: JSON.stringify(l5.responseText) };
            r6 || l5.statusText || 0 !== l5.status || (t5.message = "CORS blocked or network error"), o5(s6, n5._xhrRes(l5, r6)), s6 = null;
          }, e6.onProgress && l5.upload && (l5.upload.onprogress = function(t5) {
            var o6 = t5.total, n6 = t5.loaded, r6 = Math.floor(100 * n6 / o6);
            e6.onProgress({ total: o6, loaded: n6, percent: (r6 >= 100 ? 100 : r6) / 100 });
          }), l5.send(e6.resources), l5;
        } }, { key: "_xhrRes", value: function(e6, t5) {
          var o5 = {};
          return e6.getAllResponseHeaders().trim().split("\n").forEach(function(e7) {
            if (e7) {
              var t6 = e7.indexOf(":"), n5 = e7.substr(0, t6).trim().toLowerCase(), r5 = e7.substr(t6 + 1).trim();
              o5[n5] = r5;
            }
          }), { statusCode: e6.status, statusMessage: e6.statusText, headers: o5, data: t5 };
        } }, { key: "_xhrBody", value: function(e6, t5, o5) {
          return 200 === e6.status && t5 ? { location: t5, uploadIP: o5 } : { response: e6.responseText, uploadIP: o5 };
        } }]), e5;
      }(), S3 = ["unknown", "image", "video", "audio", "log"], P3 = ["name"], I3 = function() {
        function e5() {
          n4(this, e5);
        }
        return a4(e5, [{ key: "request", value: function(e6, o5) {
          var n5 = this, r5 = e6.resources, a5 = void 0 === r5 ? "" : r5, s5 = e6.headers, u5 = void 0 === s5 ? {} : s5, l5 = e6.url, f4 = e6.downloadUrl, c5 = void 0 === f4 ? "" : f4, d4 = l5, y3 = null, g5 = c5.match(/^(https?:\/\/[^/]+\/)([^/]*\/?)(.*)$/), m4 = decodeURIComponent(g5[3]), b3 = m4.indexOf("?") > -1 ? m4.split("?")[0] : m4, w4 = { key: e6.fileKey ? e6.fileKey : b3, success_action_status: 200, "Content-Type": "" }, O4 = {};
          if (h4) {
            var I4 = l5.split("?sign=");
            if (I4.length > 1) {
              var C5 = I4[1];
              d4 = "".concat(I4[0], "?sign=").concat(encodeURIComponent("".concat(C5))), O4.sign = decodeURIComponent(C5), O4.signature = decodeURIComponent(C5);
            }
          }
          var k2 = { url: d4, header: u5, name: "file", filePath: a5, formData: t4(t4({}, w4), O4), timeout: e6.timeout || 3e5 };
          if (p4) {
            var x2 = k2;
            x2.name;
            k2 = t4(t4({}, i4(x2, P3)), {}, { fileName: "file", fileType: S3[e6.fileType] });
          }
          return (y3 = v3.uploadFile(t4(t4({}, k2), {}, { success: function(e7) {
            n5._handleResponse({ response: e7, downloadUrl: c5, callback: o5 });
          }, fail: function(e7) {
            n5._handleResponse({ response: e7, downloadUrl: c5, callback: o5 });
          } }))).onProgressUpdate && y3.onProgressUpdate(function(t5) {
            e6.onProgress && e6.onProgress({ total: t5.totalBytesExpectedToSend, loaded: t5.totalBytesSent, percent: Math.floor(t5.progress) / 100 });
          }), y3;
        } }, { key: "_handleResponse", value: function(e6) {
          var o5 = e6.downloadUrl, n5 = e6.response, r5 = e6.callback, a5 = n5.header, s5 = {};
          if (a5)
            for (var i5 in a5)
              a5.hasOwnProperty(i5) && (s5[i5.toLowerCase()] = a5[i5]);
          var u5 = +n5.statusCode;
          200 === u5 ? r5(null, { statusCode: u5, headers: s5, data: t4(t4({}, n5.data), {}, { location: o5 }) }) : r5({ code: u5, message: JSON.stringify(n5.data) }, { statusCode: u5, headers: s5, data: void 0 });
        } }]), e5;
      }(), C4 = function() {
        function e5() {
          n4(this, e5);
        }
        return a4(e5, [{ key: "request", value: function(e6, t5) {
          var o5 = this, n5 = e6.resources, r5 = void 0 === n5 ? "" : n5, a5 = e6.fileKey, s5 = void 0 === a5 ? "" : a5, i5 = e6.url, u5 = e6.downloadUrl, l5 = void 0 === u5 ? "" : u5, f4 = new FormData();
          f4.append("key", s5), f4.append("success_action_status", 200), f4.append("file", { uri: r5, type: "application/octet-stream", name: "uploaded_file" }), fetch(i5, { method: "POST", headers: { "Content-Type": "multipart/form-data" }, body: f4 }).then(function(e7) {
            o5._handleResponse({ response: e7, downloadUrl: l5, callback: t5 });
          }).catch(function(e7) {
            o5._handleResponse({ response: e7, downloadUrl: l5, callback: t5 });
          });
        } }, { key: "_handleResponse", value: function(e6) {
          var t5 = e6.downloadUrl, o5 = e6.response, n5 = e6.callback, r5 = o5.headers, a5 = o5.status, s5 = r5 && r5.map || {};
          200 === a5 ? n5(null, { statusCode: 200, headers: s5, data: { location: t5 } }) : n5({ code: a5, message: JSON.stringify(o5) }, { statusCode: a5, headers: s5, data: void 0 });
        } }]), e5;
      }();
      return function() {
        function e5() {
          n4(this, e5), this.retry = 1, this.tryCount = 0, this.systemClockOffset = 0, this.httpRequest = g4 ? new I3() : m3 ? new C4() : new O3(), console.log("TIMUploadPlugin.VERSION: ".concat("1.4.2"));
        }
        return a4(e5, [{ key: "uploadFile", value: function(e6, t5) {
          var o5 = this;
          return this.httpRequest.request(e6, function(n5, r5) {
            n5 && o5.tryCount < o5.retry && o5.allowRetry(n5) ? (o5.tryCount++, o5.uploadFile(e6, t5)) : (o5.tryCount = 0, t5(n5, r5));
          });
        } }, { key: "allowRetry", value: function(e6) {
          var t5 = false, o5 = false;
          if (e6) {
            var n5 = e6.headers && (e6.headers.date || e6.headers.Date) || e6.error && e6.error.ServerTime;
            try {
              var r5 = e6.error && e6.error.Code, a5 = e6.error && e6.error.Message;
              ("RequestTimeTooSkewed" === r5 || "AccessDenied" === r5 && "Request has expired" === a5) && (o5 = true);
            } catch (u5) {
            }
            if (o5 && n5) {
              var s5 = Date.now(), i5 = Date.parse(n5);
              Math.abs(s5 + this.systemClockOffset - i5) >= 3e4 && (this.systemClockOffset = i5 - s5, t5 = true);
            } else
              5 === Math.floor(e6.statusCode / 100) && (t5 = true);
          }
          return t5;
        } }], [{ key: "getVersion", value: function() {
          return "1.4.2";
        } }]), e5;
      }();
    });
  }
});

// D:/code/web/node_modules/tim-profanity-filter-plugin/index.js
var require_tim_profanity_filter_plugin = __commonJS({
  "D:/code/web/node_modules/tim-profanity-filter-plugin/index.js"(exports, module) {
    !function(t4, e4) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e4() : "function" == typeof define && define.amd ? define(e4) : (t4 = t4 || self).TIMProfanityFilterPlugin = e4();
    }(exports, function() {
      function t4(t5, e5) {
        if (!(t5 instanceof e5))
          throw new TypeError("Cannot call a class as a function");
      }
      function e4(t5, e5) {
        for (var r5 = 0; r5 < e5.length; r5++) {
          var i5 = e5[r5];
          i5.enumerable = i5.enumerable || false, i5.configurable = true, "value" in i5 && (i5.writable = true), Object.defineProperty(t5, (n5 = i5.key, o5 = void 0, "symbol" == typeof (o5 = function(t6, e6) {
            if ("object" != typeof t6 || null === t6)
              return t6;
            var r6 = t6[Symbol.toPrimitive];
            if (void 0 !== r6) {
              var i6 = r6.call(t6, e6 || "default");
              if ("object" != typeof i6)
                return i6;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === e6 ? String : Number)(t6);
          }(n5, "string")) ? o5 : String(o5)), i5);
        }
        var n5, o5;
      }
      function r4(t5, r5, i5) {
        return r5 && e4(t5.prototype, r5), i5 && e4(t5, i5), Object.defineProperty(t5, "prototype", { writable: false }), t5;
      }
      function i4(t5, e5) {
        return function(t6) {
          if (Array.isArray(t6))
            return t6;
        }(t5) || function(t6, e6) {
          var r5 = null == t6 ? null : "undefined" != typeof Symbol && t6[Symbol.iterator] || t6["@@iterator"];
          if (null != r5) {
            var i5, n5, o5, s5, a5 = [], c5 = true, h5 = false;
            try {
              if (o5 = (r5 = r5.call(t6)).next, 0 === e6) {
                if (Object(r5) !== r5)
                  return;
                c5 = false;
              } else
                for (; !(c5 = (i5 = o5.call(r5)).done) && (a5.push(i5.value), a5.length !== e6); c5 = true)
                  ;
            } catch (t7) {
              h5 = true, n5 = t7;
            } finally {
              try {
                if (!c5 && null != r5.return && (s5 = r5.return(), Object(s5) !== s5))
                  return;
              } finally {
                if (h5)
                  throw n5;
              }
            }
            return a5;
          }
        }(t5, e5) || o4(t5, e5) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function n4(t5) {
        return function(t6) {
          if (Array.isArray(t6))
            return s4(t6);
        }(t5) || function(t6) {
          if ("undefined" != typeof Symbol && null != t6[Symbol.iterator] || null != t6["@@iterator"])
            return Array.from(t6);
        }(t5) || o4(t5) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function o4(t5, e5) {
        if (t5) {
          if ("string" == typeof t5)
            return s4(t5, e5);
          var r5 = Object.prototype.toString.call(t5).slice(8, -1);
          return "Object" === r5 && t5.constructor && (r5 = t5.constructor.name), "Map" === r5 || "Set" === r5 ? Array.from(t5) : "Arguments" === r5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? s4(t5, e5) : void 0;
        }
      }
      function s4(t5, e5) {
        (null == e5 || e5 > t5.length) && (e5 = t5.length);
        for (var r5 = 0, i5 = new Array(e5); r5 < e5; r5++)
          i5[r5] = t5[r5];
        return i5;
      }
      function a4(t5, e5) {
        var r5 = "undefined" != typeof Symbol && t5[Symbol.iterator] || t5["@@iterator"];
        if (!r5) {
          if (Array.isArray(t5) || (r5 = o4(t5)) || e5 && t5 && "number" == typeof t5.length) {
            r5 && (t5 = r5);
            var i5 = 0, n5 = function() {
            };
            return { s: n5, n: function() {
              return i5 >= t5.length ? { done: true } : { done: false, value: t5[i5++] };
            }, e: function(t6) {
              throw t6;
            }, f: n5 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var s5, a5 = true, c5 = false;
        return { s: function() {
          r5 = r5.call(t5);
        }, n: function() {
          var t6 = r5.next();
          return a5 = t6.done, t6;
        }, e: function(t6) {
          c5 = true, s5 = t6;
        }, f: function() {
          try {
            a5 || null == r5.return || r5.return();
          } finally {
            if (c5)
              throw s5;
          }
        } };
      }
      var c4 = function() {
        for (var t5 = ` 	\r
~!@#$%^&*()_+-=【】、{}|;':"，。、《》？αβγδεζηθικλμνξοπρστυφχψωΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ。，、；：？！…—·ˉ¨‘’“”々～‖∶＂＇｀｜〃〔〕〈〉《》「」『』．〖〗【】（）［］｛｝ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩①②③④⑤⑥⑦⑧⑨⑩⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇≈≡≠＝≤≥＜＞≮≯∷±＋－×÷／∫∮∝∞∧∨∑∏∪∩∈∵∴⊥∥∠⌒⊙≌∽√§№☆★○●◎◇◆□℃‰€■△▲※→←↑↓〓¤°＃＆＠＼︿＿￣―♂♀┌┍┎┐┑┒┓─┄┈├┝┞┟┠┡┢┣│┆┊┬┭┮┯┰┱┲┳┼┽┾┿╀╁╂╃└┕┖┗┘┙┚┛━┅┉┤┥┦┧┨┩┪┫┃┇┋┴┵┶┷┸┹┺┻╋╊╉╈╇╆╅╄`, e5 = /* @__PURE__ */ new Map(), r5 = 0, i5 = t5.length; r5 < i5; r5++)
          e5.set(t5.charCodeAt(0), true);
        return e5;
      }(), h4 = function() {
        function e5(r5) {
          t4(this, e5);
          var i5, o5 = r5.input, s5 = r5.isArray, a5 = r5.isMap;
          this._trieTree = {}, s5(o5) ? i5 = o5 : a5(o5) && (i5 = n4(o5.keys()), this._map = o5);
          for (var c5 = 0, h5 = i5.length; c5 < h5; c5++)
            if (i5[c5]) {
              for (var l5 = this._trieTree, f4 = i5[c5], u5 = 0, d3 = f4.length; u5 < d3; u5++)
                l5[f4[u5]] || (l5[f4[u5]] = {}), l5 = l5[f4[u5]];
              l5.isEnd = true;
            }
        }
        return r4(e5, [{ key: "filter", value: function(t5) {
          var e6 = t5.text, r5 = t5.replacingEnabled;
          if (0 === Object.keys(this._trieTree).length)
            return { isMatched: false, modifiedText: e6 };
          for (var i5 = this._trieTree, n5 = e6.toLowerCase(), o5 = "", s5 = false, a5 = n5.length, h5 = 0; h5 < a5; h5++)
            if (true !== c4.get(n5.charCodeAt(h5))) {
              for (var l5 = 0, f4 = "", u5 = false, d3 = h5; d3 < a5; d3++) {
                if (!i5[n5[d3]]) {
                  i5 = this._trieTree;
                  break;
                }
                if (f4 += n5[d3], i5[n5[d3]].isEnd) {
                  u5 = true, l5 = d3 - h5, i5 = this._trieTree;
                  break;
                }
                i5 = i5[n5[d3]];
              }
              if (l5 > 1 && (h5 += l5), u5) {
                if (s5 = true, !r5)
                  break;
                var p4 = this._map.get(f4) || "*";
                o5 = e6.replace(new RegExp(f4, "gi"), p4);
              }
            }
          return { isMatched: s5, modifiedText: o5 };
        } }, { key: "reset", value: function() {
          this._trieTree = {}, this._map = null;
        } }]), e5;
      }(), l4 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      var f3 = {}, u4 = function(t5, e5) {
        return t5(e5 = { exports: {} }, e5.exports), e5.exports;
      }(function(t5, e5) {
        var r5, i5, n5, o5, s5, a5;
        t5.exports = (a5 = a5 || function(t6, e6) {
          var r6;
          if ("undefined" != typeof window && window.crypto && (r6 = window.crypto), !r6 && "undefined" != typeof window && window.msCrypto && (r6 = window.msCrypto), !r6 && void 0 !== l4 && l4.crypto && (r6 = l4.crypto), !r6)
            try {
              r6 = f3;
            } catch (v3) {
            }
          var i6 = function() {
            if (r6) {
              if ("function" == typeof r6.getRandomValues)
                try {
                  return r6.getRandomValues(new Uint32Array(1))[0];
                } catch (v3) {
                }
              if ("function" == typeof r6.randomBytes)
                try {
                  return r6.randomBytes(4).readInt32LE();
                } catch (v3) {
                }
            }
            throw new Error("Native crypto module could not be used to get secure random number.");
          }, n6 = Object.create || /* @__PURE__ */ function() {
            function t7() {
            }
            return function(e7) {
              var r7;
              return t7.prototype = e7, r7 = new t7(), t7.prototype = null, r7;
            };
          }(), o6 = {}, s6 = o6.lib = {}, a6 = s6.Base = { extend: function(t7) {
            var e7 = n6(this);
            return t7 && e7.mixIn(t7), e7.hasOwnProperty("init") && this.init !== e7.init || (e7.init = function() {
              e7.$super.init.apply(this, arguments);
            }), e7.init.prototype = e7, e7.$super = this, e7;
          }, create: function() {
            var t7 = this.extend();
            return t7.init.apply(t7, arguments), t7;
          }, init: function() {
          }, mixIn: function(t7) {
            for (var e7 in t7)
              t7.hasOwnProperty(e7) && (this[e7] = t7[e7]);
            t7.hasOwnProperty("toString") && (this.toString = t7.toString);
          }, clone: function() {
            return this.init.prototype.extend(this);
          } }, c5 = s6.WordArray = a6.extend({ init: function(t7, e7) {
            t7 = this.words = t7 || [], this.sigBytes = null != e7 ? e7 : 4 * t7.length;
          }, toString: function(t7) {
            return (t7 || u5).stringify(this);
          }, concat: function(t7) {
            var e7 = this.words, r7 = t7.words, i7 = this.sigBytes, n7 = t7.sigBytes;
            if (this.clamp(), i7 % 4)
              for (var o7 = 0; o7 < n7; o7++) {
                var s7 = r7[o7 >>> 2] >>> 24 - o7 % 4 * 8 & 255;
                e7[i7 + o7 >>> 2] |= s7 << 24 - (i7 + o7) % 4 * 8;
              }
            else
              for (o7 = 0; o7 < n7; o7 += 4)
                e7[i7 + o7 >>> 2] = r7[o7 >>> 2];
            return this.sigBytes += n7, this;
          }, clamp: function() {
            var e7 = this.words, r7 = this.sigBytes;
            e7[r7 >>> 2] &= 4294967295 << 32 - r7 % 4 * 8, e7.length = t6.ceil(r7 / 4);
          }, clone: function() {
            var t7 = a6.clone.call(this);
            return t7.words = this.words.slice(0), t7;
          }, random: function(t7) {
            for (var e7 = [], r7 = 0; r7 < t7; r7 += 4)
              e7.push(i6());
            return new c5.init(e7, t7);
          } }), h5 = o6.enc = {}, u5 = h5.Hex = { stringify: function(t7) {
            for (var e7 = t7.words, r7 = t7.sigBytes, i7 = [], n7 = 0; n7 < r7; n7++) {
              var o7 = e7[n7 >>> 2] >>> 24 - n7 % 4 * 8 & 255;
              i7.push((o7 >>> 4).toString(16)), i7.push((15 & o7).toString(16));
            }
            return i7.join("");
          }, parse: function(t7) {
            for (var e7 = t7.length, r7 = [], i7 = 0; i7 < e7; i7 += 2)
              r7[i7 >>> 3] |= parseInt(t7.substr(i7, 2), 16) << 24 - i7 % 8 * 4;
            return new c5.init(r7, e7 / 2);
          } }, d3 = h5.Latin1 = { stringify: function(t7) {
            for (var e7 = t7.words, r7 = t7.sigBytes, i7 = [], n7 = 0; n7 < r7; n7++) {
              var o7 = e7[n7 >>> 2] >>> 24 - n7 % 4 * 8 & 255;
              i7.push(String.fromCharCode(o7));
            }
            return i7.join("");
          }, parse: function(t7) {
            for (var e7 = t7.length, r7 = [], i7 = 0; i7 < e7; i7++)
              r7[i7 >>> 2] |= (255 & t7.charCodeAt(i7)) << 24 - i7 % 4 * 8;
            return new c5.init(r7, e7);
          } }, p4 = h5.Utf8 = { stringify: function(t7) {
            try {
              return decodeURIComponent(escape(d3.stringify(t7)));
            } catch (e7) {
              throw new Error("Malformed UTF-8 data");
            }
          }, parse: function(t7) {
            return d3.parse(unescape(encodeURIComponent(t7)));
          } }, _3 = s6.BufferedBlockAlgorithm = a6.extend({ reset: function() {
            this._data = new c5.init(), this._nDataBytes = 0;
          }, _append: function(t7) {
            "string" == typeof t7 && (t7 = p4.parse(t7)), this._data.concat(t7), this._nDataBytes += t7.sigBytes;
          }, _process: function(e7) {
            var r7, i7 = this._data, n7 = i7.words, o7 = i7.sigBytes, s7 = this.blockSize, a7 = o7 / (4 * s7), h6 = (a7 = e7 ? t6.ceil(a7) : t6.max((0 | a7) - this._minBufferSize, 0)) * s7, l5 = t6.min(4 * h6, o7);
            if (h6) {
              for (var f4 = 0; f4 < h6; f4 += s7)
                this._doProcessBlock(n7, f4);
              r7 = n7.splice(0, h6), i7.sigBytes -= l5;
            }
            return new c5.init(r7, l5);
          }, clone: function() {
            var t7 = a6.clone.call(this);
            return t7._data = this._data.clone(), t7;
          }, _minBufferSize: 0 }), y2 = (s6.Hasher = _3.extend({ cfg: a6.extend(), init: function(t7) {
            this.cfg = this.cfg.extend(t7), this.reset();
          }, reset: function() {
            _3.reset.call(this), this._doReset();
          }, update: function(t7) {
            return this._append(t7), this._process(), this;
          }, finalize: function(t7) {
            return t7 && this._append(t7), this._doFinalize();
          }, blockSize: 16, _createHelper: function(t7) {
            return function(e7, r7) {
              return new t7.init(r7).finalize(e7);
            };
          }, _createHmacHelper: function(t7) {
            return function(e7, r7) {
              return new y2.HMAC.init(t7, r7).finalize(e7);
            };
          } }), o6.algo = {});
          return o6;
        }(Math), s5 = (o5 = a5).lib.WordArray, o5.enc.Base64 = { stringify: function(t6) {
          var e6 = t6.words, r6 = t6.sigBytes, i6 = this._map;
          t6.clamp();
          for (var n6 = [], o6 = 0; o6 < r6; o6 += 3)
            for (var s6 = (e6[o6 >>> 2] >>> 24 - o6 % 4 * 8 & 255) << 16 | (e6[o6 + 1 >>> 2] >>> 24 - (o6 + 1) % 4 * 8 & 255) << 8 | e6[o6 + 2 >>> 2] >>> 24 - (o6 + 2) % 4 * 8 & 255, a6 = 0; a6 < 4 && o6 + 0.75 * a6 < r6; a6++)
              n6.push(i6.charAt(s6 >>> 6 * (3 - a6) & 63));
          var c5 = i6.charAt(64);
          if (c5)
            for (; n6.length % 4; )
              n6.push(c5);
          return n6.join("");
        }, parse: function(t6) {
          var e6 = t6.length, r6 = this._map, i6 = this._reverseMap;
          if (!i6) {
            i6 = this._reverseMap = [];
            for (var n6 = 0; n6 < r6.length; n6++)
              i6[r6.charCodeAt(n6)] = n6;
          }
          var o6 = r6.charAt(64);
          if (o6) {
            var a6 = t6.indexOf(o6);
            -1 !== a6 && (e6 = a6);
          }
          return function(t7, e7, r7) {
            for (var i7 = [], n7 = 0, o7 = 0; o7 < e7; o7++)
              if (o7 % 4) {
                var a7 = r7[t7.charCodeAt(o7 - 1)] << o7 % 4 * 2, c5 = r7[t7.charCodeAt(o7)] >>> 6 - o7 % 4 * 2, h5 = a7 | c5;
                i7[n7 >>> 2] |= h5 << 24 - n7 % 4 * 8, n7++;
              }
            return s5.create(i7, n7);
          }(t6, e6, i6);
        }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.WordArray, n6 = r6.Hasher, o6 = e6.algo, s6 = [];
          !function() {
            for (var e7 = 0; e7 < 64; e7++)
              s6[e7] = 4294967296 * t6.abs(t6.sin(e7 + 1)) | 0;
          }();
          var c5 = o6.MD5 = n6.extend({ _doReset: function() {
            this._hash = new i6.init([1732584193, 4023233417, 2562383102, 271733878]);
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = 0; r7 < 16; r7++) {
              var i7 = e7 + r7, n7 = t7[i7];
              t7[i7] = 16711935 & (n7 << 8 | n7 >>> 24) | 4278255360 & (n7 << 24 | n7 >>> 8);
            }
            var o7 = this._hash.words, a6 = t7[e7 + 0], c6 = t7[e7 + 1], d3 = t7[e7 + 2], p4 = t7[e7 + 3], _3 = t7[e7 + 4], y2 = t7[e7 + 5], v3 = t7[e7 + 6], g4 = t7[e7 + 7], w3 = t7[e7 + 8], B2 = t7[e7 + 9], k2 = t7[e7 + 10], m3 = t7[e7 + 11], b2 = t7[e7 + 12], x2 = t7[e7 + 13], S3 = t7[e7 + 14], A3 = t7[e7 + 15], H2 = o7[0], C4 = o7[1], z2 = o7[2], E4 = o7[3];
            H2 = h5(H2, C4, z2, E4, a6, 7, s6[0]), E4 = h5(E4, H2, C4, z2, c6, 12, s6[1]), z2 = h5(z2, E4, H2, C4, d3, 17, s6[2]), C4 = h5(C4, z2, E4, H2, p4, 22, s6[3]), H2 = h5(H2, C4, z2, E4, _3, 7, s6[4]), E4 = h5(E4, H2, C4, z2, y2, 12, s6[5]), z2 = h5(z2, E4, H2, C4, v3, 17, s6[6]), C4 = h5(C4, z2, E4, H2, g4, 22, s6[7]), H2 = h5(H2, C4, z2, E4, w3, 7, s6[8]), E4 = h5(E4, H2, C4, z2, B2, 12, s6[9]), z2 = h5(z2, E4, H2, C4, k2, 17, s6[10]), C4 = h5(C4, z2, E4, H2, m3, 22, s6[11]), H2 = h5(H2, C4, z2, E4, b2, 7, s6[12]), E4 = h5(E4, H2, C4, z2, x2, 12, s6[13]), z2 = h5(z2, E4, H2, C4, S3, 17, s6[14]), H2 = l5(H2, C4 = h5(C4, z2, E4, H2, A3, 22, s6[15]), z2, E4, c6, 5, s6[16]), E4 = l5(E4, H2, C4, z2, v3, 9, s6[17]), z2 = l5(z2, E4, H2, C4, m3, 14, s6[18]), C4 = l5(C4, z2, E4, H2, a6, 20, s6[19]), H2 = l5(H2, C4, z2, E4, y2, 5, s6[20]), E4 = l5(E4, H2, C4, z2, k2, 9, s6[21]), z2 = l5(z2, E4, H2, C4, A3, 14, s6[22]), C4 = l5(C4, z2, E4, H2, _3, 20, s6[23]), H2 = l5(H2, C4, z2, E4, B2, 5, s6[24]), E4 = l5(E4, H2, C4, z2, S3, 9, s6[25]), z2 = l5(z2, E4, H2, C4, p4, 14, s6[26]), C4 = l5(C4, z2, E4, H2, w3, 20, s6[27]), H2 = l5(H2, C4, z2, E4, x2, 5, s6[28]), E4 = l5(E4, H2, C4, z2, d3, 9, s6[29]), z2 = l5(z2, E4, H2, C4, g4, 14, s6[30]), H2 = f4(H2, C4 = l5(C4, z2, E4, H2, b2, 20, s6[31]), z2, E4, y2, 4, s6[32]), E4 = f4(E4, H2, C4, z2, w3, 11, s6[33]), z2 = f4(z2, E4, H2, C4, m3, 16, s6[34]), C4 = f4(C4, z2, E4, H2, S3, 23, s6[35]), H2 = f4(H2, C4, z2, E4, c6, 4, s6[36]), E4 = f4(E4, H2, C4, z2, _3, 11, s6[37]), z2 = f4(z2, E4, H2, C4, g4, 16, s6[38]), C4 = f4(C4, z2, E4, H2, k2, 23, s6[39]), H2 = f4(H2, C4, z2, E4, x2, 4, s6[40]), E4 = f4(E4, H2, C4, z2, a6, 11, s6[41]), z2 = f4(z2, E4, H2, C4, p4, 16, s6[42]), C4 = f4(C4, z2, E4, H2, v3, 23, s6[43]), H2 = f4(H2, C4, z2, E4, B2, 4, s6[44]), E4 = f4(E4, H2, C4, z2, b2, 11, s6[45]), z2 = f4(z2, E4, H2, C4, A3, 16, s6[46]), H2 = u5(H2, C4 = f4(C4, z2, E4, H2, d3, 23, s6[47]), z2, E4, a6, 6, s6[48]), E4 = u5(E4, H2, C4, z2, g4, 10, s6[49]), z2 = u5(z2, E4, H2, C4, S3, 15, s6[50]), C4 = u5(C4, z2, E4, H2, y2, 21, s6[51]), H2 = u5(H2, C4, z2, E4, b2, 6, s6[52]), E4 = u5(E4, H2, C4, z2, p4, 10, s6[53]), z2 = u5(z2, E4, H2, C4, k2, 15, s6[54]), C4 = u5(C4, z2, E4, H2, c6, 21, s6[55]), H2 = u5(H2, C4, z2, E4, w3, 6, s6[56]), E4 = u5(E4, H2, C4, z2, A3, 10, s6[57]), z2 = u5(z2, E4, H2, C4, v3, 15, s6[58]), C4 = u5(C4, z2, E4, H2, x2, 21, s6[59]), H2 = u5(H2, C4, z2, E4, _3, 6, s6[60]), E4 = u5(E4, H2, C4, z2, m3, 10, s6[61]), z2 = u5(z2, E4, H2, C4, d3, 15, s6[62]), C4 = u5(C4, z2, E4, H2, B2, 21, s6[63]), o7[0] = o7[0] + H2 | 0, o7[1] = o7[1] + C4 | 0, o7[2] = o7[2] + z2 | 0, o7[3] = o7[3] + E4 | 0;
          }, _doFinalize: function() {
            var e7 = this._data, r7 = e7.words, i7 = 8 * this._nDataBytes, n7 = 8 * e7.sigBytes;
            r7[n7 >>> 5] |= 128 << 24 - n7 % 32;
            var o7 = t6.floor(i7 / 4294967296), s7 = i7;
            r7[15 + (n7 + 64 >>> 9 << 4)] = 16711935 & (o7 << 8 | o7 >>> 24) | 4278255360 & (o7 << 24 | o7 >>> 8), r7[14 + (n7 + 64 >>> 9 << 4)] = 16711935 & (s7 << 8 | s7 >>> 24) | 4278255360 & (s7 << 24 | s7 >>> 8), e7.sigBytes = 4 * (r7.length + 1), this._process();
            for (var a6 = this._hash, c6 = a6.words, h6 = 0; h6 < 4; h6++) {
              var l6 = c6[h6];
              c6[h6] = 16711935 & (l6 << 8 | l6 >>> 24) | 4278255360 & (l6 << 24 | l6 >>> 8);
            }
            return a6;
          }, clone: function() {
            var t7 = n6.clone.call(this);
            return t7._hash = this._hash.clone(), t7;
          } });
          function h5(t7, e7, r7, i7, n7, o7, s7) {
            var a6 = t7 + (e7 & r7 | ~e7 & i7) + n7 + s7;
            return (a6 << o7 | a6 >>> 32 - o7) + e7;
          }
          function l5(t7, e7, r7, i7, n7, o7, s7) {
            var a6 = t7 + (e7 & i7 | r7 & ~i7) + n7 + s7;
            return (a6 << o7 | a6 >>> 32 - o7) + e7;
          }
          function f4(t7, e7, r7, i7, n7, o7, s7) {
            var a6 = t7 + (e7 ^ r7 ^ i7) + n7 + s7;
            return (a6 << o7 | a6 >>> 32 - o7) + e7;
          }
          function u5(t7, e7, r7, i7, n7, o7, s7) {
            var a6 = t7 + (r7 ^ (e7 | ~i7)) + n7 + s7;
            return (a6 << o7 | a6 >>> 32 - o7) + e7;
          }
          e6.MD5 = n6._createHelper(c5), e6.HmacMD5 = n6._createHmacHelper(c5);
        }(Math), function() {
          var t6 = a5, e6 = t6.lib, r6 = e6.WordArray, i6 = e6.Hasher, n6 = t6.algo, o6 = [], s6 = n6.SHA1 = i6.extend({ _doReset: function() {
            this._hash = new r6.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = this._hash.words, i7 = r7[0], n7 = r7[1], s7 = r7[2], a6 = r7[3], c5 = r7[4], h5 = 0; h5 < 80; h5++) {
              if (h5 < 16)
                o6[h5] = 0 | t7[e7 + h5];
              else {
                var l5 = o6[h5 - 3] ^ o6[h5 - 8] ^ o6[h5 - 14] ^ o6[h5 - 16];
                o6[h5] = l5 << 1 | l5 >>> 31;
              }
              var f4 = (i7 << 5 | i7 >>> 27) + c5 + o6[h5];
              f4 += h5 < 20 ? 1518500249 + (n7 & s7 | ~n7 & a6) : h5 < 40 ? 1859775393 + (n7 ^ s7 ^ a6) : h5 < 60 ? (n7 & s7 | n7 & a6 | s7 & a6) - 1894007588 : (n7 ^ s7 ^ a6) - 899497514, c5 = a6, a6 = s7, s7 = n7 << 30 | n7 >>> 2, n7 = i7, i7 = f4;
            }
            r7[0] = r7[0] + i7 | 0, r7[1] = r7[1] + n7 | 0, r7[2] = r7[2] + s7 | 0, r7[3] = r7[3] + a6 | 0, r7[4] = r7[4] + c5 | 0;
          }, _doFinalize: function() {
            var t7 = this._data, e7 = t7.words, r7 = 8 * this._nDataBytes, i7 = 8 * t7.sigBytes;
            return e7[i7 >>> 5] |= 128 << 24 - i7 % 32, e7[14 + (i7 + 64 >>> 9 << 4)] = Math.floor(r7 / 4294967296), e7[15 + (i7 + 64 >>> 9 << 4)] = r7, t7.sigBytes = 4 * e7.length, this._process(), this._hash;
          }, clone: function() {
            var t7 = i6.clone.call(this);
            return t7._hash = this._hash.clone(), t7;
          } });
          t6.SHA1 = i6._createHelper(s6), t6.HmacSHA1 = i6._createHmacHelper(s6);
        }(), function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.WordArray, n6 = r6.Hasher, o6 = e6.algo, s6 = [], c5 = [];
          !function() {
            function e7(e8) {
              for (var r8 = t6.sqrt(e8), i8 = 2; i8 <= r8; i8++)
                if (!(e8 % i8))
                  return false;
              return true;
            }
            function r7(t7) {
              return 4294967296 * (t7 - (0 | t7)) | 0;
            }
            for (var i7 = 2, n7 = 0; n7 < 64; )
              e7(i7) && (n7 < 8 && (s6[n7] = r7(t6.pow(i7, 0.5))), c5[n7] = r7(t6.pow(i7, 1 / 3)), n7++), i7++;
          }();
          var h5 = [], l5 = o6.SHA256 = n6.extend({ _doReset: function() {
            this._hash = new i6.init(s6.slice(0));
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = this._hash.words, i7 = r7[0], n7 = r7[1], o7 = r7[2], s7 = r7[3], a6 = r7[4], l6 = r7[5], f4 = r7[6], u5 = r7[7], d3 = 0; d3 < 64; d3++) {
              if (d3 < 16)
                h5[d3] = 0 | t7[e7 + d3];
              else {
                var p4 = h5[d3 - 15], _3 = (p4 << 25 | p4 >>> 7) ^ (p4 << 14 | p4 >>> 18) ^ p4 >>> 3, y2 = h5[d3 - 2], v3 = (y2 << 15 | y2 >>> 17) ^ (y2 << 13 | y2 >>> 19) ^ y2 >>> 10;
                h5[d3] = _3 + h5[d3 - 7] + v3 + h5[d3 - 16];
              }
              var g4 = i7 & n7 ^ i7 & o7 ^ n7 & o7, w3 = (i7 << 30 | i7 >>> 2) ^ (i7 << 19 | i7 >>> 13) ^ (i7 << 10 | i7 >>> 22), B2 = u5 + ((a6 << 26 | a6 >>> 6) ^ (a6 << 21 | a6 >>> 11) ^ (a6 << 7 | a6 >>> 25)) + (a6 & l6 ^ ~a6 & f4) + c5[d3] + h5[d3];
              u5 = f4, f4 = l6, l6 = a6, a6 = s7 + B2 | 0, s7 = o7, o7 = n7, n7 = i7, i7 = B2 + (w3 + g4) | 0;
            }
            r7[0] = r7[0] + i7 | 0, r7[1] = r7[1] + n7 | 0, r7[2] = r7[2] + o7 | 0, r7[3] = r7[3] + s7 | 0, r7[4] = r7[4] + a6 | 0, r7[5] = r7[5] + l6 | 0, r7[6] = r7[6] + f4 | 0, r7[7] = r7[7] + u5 | 0;
          }, _doFinalize: function() {
            var e7 = this._data, r7 = e7.words, i7 = 8 * this._nDataBytes, n7 = 8 * e7.sigBytes;
            return r7[n7 >>> 5] |= 128 << 24 - n7 % 32, r7[14 + (n7 + 64 >>> 9 << 4)] = t6.floor(i7 / 4294967296), r7[15 + (n7 + 64 >>> 9 << 4)] = i7, e7.sigBytes = 4 * r7.length, this._process(), this._hash;
          }, clone: function() {
            var t7 = n6.clone.call(this);
            return t7._hash = this._hash.clone(), t7;
          } });
          e6.SHA256 = n6._createHelper(l5), e6.HmacSHA256 = n6._createHmacHelper(l5);
        }(Math), function() {
          var t6 = a5, e6 = t6.lib.WordArray, r6 = t6.enc;
          function i6(t7) {
            return t7 << 8 & 4278255360 | t7 >>> 8 & 16711935;
          }
          r6.Utf16 = r6.Utf16BE = { stringify: function(t7) {
            for (var e7 = t7.words, r7 = t7.sigBytes, i7 = [], n6 = 0; n6 < r7; n6 += 2) {
              var o6 = e7[n6 >>> 2] >>> 16 - n6 % 4 * 8 & 65535;
              i7.push(String.fromCharCode(o6));
            }
            return i7.join("");
          }, parse: function(t7) {
            for (var r7 = t7.length, i7 = [], n6 = 0; n6 < r7; n6++)
              i7[n6 >>> 1] |= t7.charCodeAt(n6) << 16 - n6 % 2 * 16;
            return e6.create(i7, 2 * r7);
          } }, r6.Utf16LE = { stringify: function(t7) {
            for (var e7 = t7.words, r7 = t7.sigBytes, n6 = [], o6 = 0; o6 < r7; o6 += 2) {
              var s6 = i6(e7[o6 >>> 2] >>> 16 - o6 % 4 * 8 & 65535);
              n6.push(String.fromCharCode(s6));
            }
            return n6.join("");
          }, parse: function(t7) {
            for (var r7 = t7.length, n6 = [], o6 = 0; o6 < r7; o6++)
              n6[o6 >>> 1] |= i6(t7.charCodeAt(o6) << 16 - o6 % 2 * 16);
            return e6.create(n6, 2 * r7);
          } };
        }(), function() {
          if ("function" == typeof ArrayBuffer) {
            var t6 = a5.lib.WordArray, e6 = t6.init;
            (t6.init = function(t7) {
              if (t7 instanceof ArrayBuffer && (t7 = new Uint8Array(t7)), (t7 instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t7 instanceof Uint8ClampedArray || t7 instanceof Int16Array || t7 instanceof Uint16Array || t7 instanceof Int32Array || t7 instanceof Uint32Array || t7 instanceof Float32Array || t7 instanceof Float64Array) && (t7 = new Uint8Array(t7.buffer, t7.byteOffset, t7.byteLength)), t7 instanceof Uint8Array) {
                for (var r6 = t7.byteLength, i6 = [], n6 = 0; n6 < r6; n6++)
                  i6[n6 >>> 2] |= t7[n6] << 24 - n6 % 4 * 8;
                e6.call(this, i6, r6);
              } else
                e6.apply(this, arguments);
            }).prototype = t6;
          }
        }(), /** @preserve
              (c) 2012 by C��dric Mesnil. All rights reserved.
               Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                   - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                  - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
               THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
              */
        function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.WordArray, n6 = r6.Hasher, o6 = e6.algo, s6 = i6.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), c5 = i6.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), h5 = i6.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), l5 = i6.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), f4 = i6.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), u5 = i6.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), d3 = o6.RIPEMD160 = n6.extend({ _doReset: function() {
            this._hash = i6.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = 0; r7 < 16; r7++) {
              var i7 = e7 + r7, n7 = t7[i7];
              t7[i7] = 16711935 & (n7 << 8 | n7 >>> 24) | 4278255360 & (n7 << 24 | n7 >>> 8);
            }
            var o7, a6, d4, B2, k2, m3, b2, x2, S3, A3, H2, C4 = this._hash.words, z2 = f4.words, E4 = u5.words, M3 = s6.words, R3 = c5.words, D2 = h5.words, P3 = l5.words;
            for (m3 = o7 = C4[0], b2 = a6 = C4[1], x2 = d4 = C4[2], S3 = B2 = C4[3], A3 = k2 = C4[4], r7 = 0; r7 < 80; r7 += 1)
              H2 = o7 + t7[e7 + M3[r7]] | 0, H2 += r7 < 16 ? p4(a6, d4, B2) + z2[0] : r7 < 32 ? _3(a6, d4, B2) + z2[1] : r7 < 48 ? y2(a6, d4, B2) + z2[2] : r7 < 64 ? v3(a6, d4, B2) + z2[3] : g4(a6, d4, B2) + z2[4], H2 = (H2 = w3(H2 |= 0, D2[r7])) + k2 | 0, o7 = k2, k2 = B2, B2 = w3(d4, 10), d4 = a6, a6 = H2, H2 = m3 + t7[e7 + R3[r7]] | 0, H2 += r7 < 16 ? g4(b2, x2, S3) + E4[0] : r7 < 32 ? v3(b2, x2, S3) + E4[1] : r7 < 48 ? y2(b2, x2, S3) + E4[2] : r7 < 64 ? _3(b2, x2, S3) + E4[3] : p4(b2, x2, S3) + E4[4], H2 = (H2 = w3(H2 |= 0, P3[r7])) + A3 | 0, m3 = A3, A3 = S3, S3 = w3(x2, 10), x2 = b2, b2 = H2;
            H2 = C4[1] + d4 + S3 | 0, C4[1] = C4[2] + B2 + A3 | 0, C4[2] = C4[3] + k2 + m3 | 0, C4[3] = C4[4] + o7 + b2 | 0, C4[4] = C4[0] + a6 + x2 | 0, C4[0] = H2;
          }, _doFinalize: function() {
            var t7 = this._data, e7 = t7.words, r7 = 8 * this._nDataBytes, i7 = 8 * t7.sigBytes;
            e7[i7 >>> 5] |= 128 << 24 - i7 % 32, e7[14 + (i7 + 64 >>> 9 << 4)] = 16711935 & (r7 << 8 | r7 >>> 24) | 4278255360 & (r7 << 24 | r7 >>> 8), t7.sigBytes = 4 * (e7.length + 1), this._process();
            for (var n7 = this._hash, o7 = n7.words, s7 = 0; s7 < 5; s7++) {
              var a6 = o7[s7];
              o7[s7] = 16711935 & (a6 << 8 | a6 >>> 24) | 4278255360 & (a6 << 24 | a6 >>> 8);
            }
            return n7;
          }, clone: function() {
            var t7 = n6.clone.call(this);
            return t7._hash = this._hash.clone(), t7;
          } });
          function p4(t7, e7, r7) {
            return t7 ^ e7 ^ r7;
          }
          function _3(t7, e7, r7) {
            return t7 & e7 | ~t7 & r7;
          }
          function y2(t7, e7, r7) {
            return (t7 | ~e7) ^ r7;
          }
          function v3(t7, e7, r7) {
            return t7 & r7 | e7 & ~r7;
          }
          function g4(t7, e7, r7) {
            return t7 ^ (e7 | ~r7);
          }
          function w3(t7, e7) {
            return t7 << e7 | t7 >>> 32 - e7;
          }
          e6.RIPEMD160 = n6._createHelper(d3), e6.HmacRIPEMD160 = n6._createHmacHelper(d3);
        }(), function() {
          var t6 = a5, e6 = t6.lib.Base, r6 = t6.enc.Utf8;
          t6.algo.HMAC = e6.extend({ init: function(t7, e7) {
            t7 = this._hasher = new t7.init(), "string" == typeof e7 && (e7 = r6.parse(e7));
            var i6 = t7.blockSize, n6 = 4 * i6;
            e7.sigBytes > n6 && (e7 = t7.finalize(e7)), e7.clamp();
            for (var o6 = this._oKey = e7.clone(), s6 = this._iKey = e7.clone(), a6 = o6.words, c5 = s6.words, h5 = 0; h5 < i6; h5++)
              a6[h5] ^= 1549556828, c5[h5] ^= 909522486;
            o6.sigBytes = s6.sigBytes = n6, this.reset();
          }, reset: function() {
            var t7 = this._hasher;
            t7.reset(), t7.update(this._iKey);
          }, update: function(t7) {
            return this._hasher.update(t7), this;
          }, finalize: function(t7) {
            var e7 = this._hasher, r7 = e7.finalize(t7);
            return e7.reset(), e7.finalize(this._oKey.clone().concat(r7));
          } });
        }(), function() {
          var t6 = a5, e6 = t6.lib, r6 = e6.Base, i6 = e6.WordArray, n6 = t6.algo, o6 = n6.SHA1, s6 = n6.HMAC, c5 = n6.PBKDF2 = r6.extend({ cfg: r6.extend({ keySize: 4, hasher: o6, iterations: 1 }), init: function(t7) {
            this.cfg = this.cfg.extend(t7);
          }, compute: function(t7, e7) {
            for (var r7 = this.cfg, n7 = s6.create(r7.hasher, t7), o7 = i6.create(), a6 = i6.create([1]), c6 = o7.words, h5 = a6.words, l5 = r7.keySize, f4 = r7.iterations; c6.length < l5; ) {
              var u5 = n7.update(e7).finalize(a6);
              n7.reset();
              for (var d3 = u5.words, p4 = d3.length, _3 = u5, y2 = 1; y2 < f4; y2++) {
                _3 = n7.finalize(_3), n7.reset();
                for (var v3 = _3.words, g4 = 0; g4 < p4; g4++)
                  d3[g4] ^= v3[g4];
              }
              o7.concat(u5), h5[0]++;
            }
            return o7.sigBytes = 4 * l5, o7;
          } });
          t6.PBKDF2 = function(t7, e7, r7) {
            return c5.create(r7).compute(t7, e7);
          };
        }(), function() {
          var t6 = a5, e6 = t6.lib, r6 = e6.Base, i6 = e6.WordArray, n6 = t6.algo, o6 = n6.MD5, s6 = n6.EvpKDF = r6.extend({ cfg: r6.extend({ keySize: 4, hasher: o6, iterations: 1 }), init: function(t7) {
            this.cfg = this.cfg.extend(t7);
          }, compute: function(t7, e7) {
            for (var r7, n7 = this.cfg, o7 = n7.hasher.create(), s7 = i6.create(), a6 = s7.words, c5 = n7.keySize, h5 = n7.iterations; a6.length < c5; ) {
              r7 && o7.update(r7), r7 = o7.update(t7).finalize(e7), o7.reset();
              for (var l5 = 1; l5 < h5; l5++)
                r7 = o7.finalize(r7), o7.reset();
              s7.concat(r7);
            }
            return s7.sigBytes = 4 * c5, s7;
          } });
          t6.EvpKDF = function(t7, e7, r7) {
            return s6.create(r7).compute(t7, e7);
          };
        }(), function() {
          var t6 = a5, e6 = t6.lib.WordArray, r6 = t6.algo, i6 = r6.SHA256, n6 = r6.SHA224 = i6.extend({ _doReset: function() {
            this._hash = new e6.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
          }, _doFinalize: function() {
            var t7 = i6._doFinalize.call(this);
            return t7.sigBytes -= 4, t7;
          } });
          t6.SHA224 = i6._createHelper(n6), t6.HmacSHA224 = i6._createHmacHelper(n6);
        }(), function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.Base, n6 = r6.WordArray, o6 = e6.x64 = {};
          o6.Word = i6.extend({ init: function(t7, e7) {
            this.high = t7, this.low = e7;
          } }), o6.WordArray = i6.extend({ init: function(t7, e7) {
            t7 = this.words = t7 || [], this.sigBytes = null != e7 ? e7 : 8 * t7.length;
          }, toX32: function() {
            for (var t7 = this.words, e7 = t7.length, r7 = [], i7 = 0; i7 < e7; i7++) {
              var o7 = t7[i7];
              r7.push(o7.high), r7.push(o7.low);
            }
            return n6.create(r7, this.sigBytes);
          }, clone: function() {
            for (var t7 = i6.clone.call(this), e7 = t7.words = this.words.slice(0), r7 = e7.length, n7 = 0; n7 < r7; n7++)
              e7[n7] = e7[n7].clone();
            return t7;
          } });
        }(), function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.WordArray, n6 = r6.Hasher, o6 = e6.x64.Word, s6 = e6.algo, c5 = [], h5 = [], l5 = [];
          !function() {
            for (var t7 = 1, e7 = 0, r7 = 0; r7 < 24; r7++) {
              c5[t7 + 5 * e7] = (r7 + 1) * (r7 + 2) / 2 % 64;
              var i7 = (2 * t7 + 3 * e7) % 5;
              t7 = e7 % 5, e7 = i7;
            }
            for (t7 = 0; t7 < 5; t7++)
              for (e7 = 0; e7 < 5; e7++)
                h5[t7 + 5 * e7] = e7 + (2 * t7 + 3 * e7) % 5 * 5;
            for (var n7 = 1, s7 = 0; s7 < 24; s7++) {
              for (var a6 = 0, f5 = 0, u6 = 0; u6 < 7; u6++) {
                if (1 & n7) {
                  var d3 = (1 << u6) - 1;
                  d3 < 32 ? f5 ^= 1 << d3 : a6 ^= 1 << d3 - 32;
                }
                128 & n7 ? n7 = n7 << 1 ^ 113 : n7 <<= 1;
              }
              l5[s7] = o6.create(a6, f5);
            }
          }();
          var f4 = [];
          !function() {
            for (var t7 = 0; t7 < 25; t7++)
              f4[t7] = o6.create();
          }();
          var u5 = s6.SHA3 = n6.extend({ cfg: n6.cfg.extend({ outputLength: 512 }), _doReset: function() {
            for (var t7 = this._state = [], e7 = 0; e7 < 25; e7++)
              t7[e7] = new o6.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = this._state, i7 = this.blockSize / 2, n7 = 0; n7 < i7; n7++) {
              var o7 = t7[e7 + 2 * n7], s7 = t7[e7 + 2 * n7 + 1];
              o7 = 16711935 & (o7 << 8 | o7 >>> 24) | 4278255360 & (o7 << 24 | o7 >>> 8), s7 = 16711935 & (s7 << 8 | s7 >>> 24) | 4278255360 & (s7 << 24 | s7 >>> 8), (C4 = r7[n7]).high ^= s7, C4.low ^= o7;
            }
            for (var a6 = 0; a6 < 24; a6++) {
              for (var u6 = 0; u6 < 5; u6++) {
                for (var d3 = 0, p4 = 0, _3 = 0; _3 < 5; _3++)
                  d3 ^= (C4 = r7[u6 + 5 * _3]).high, p4 ^= C4.low;
                var y2 = f4[u6];
                y2.high = d3, y2.low = p4;
              }
              for (u6 = 0; u6 < 5; u6++) {
                var v3 = f4[(u6 + 4) % 5], g4 = f4[(u6 + 1) % 5], w3 = g4.high, B2 = g4.low;
                for (d3 = v3.high ^ (w3 << 1 | B2 >>> 31), p4 = v3.low ^ (B2 << 1 | w3 >>> 31), _3 = 0; _3 < 5; _3++)
                  (C4 = r7[u6 + 5 * _3]).high ^= d3, C4.low ^= p4;
              }
              for (var k2 = 1; k2 < 25; k2++) {
                var m3 = (C4 = r7[k2]).high, b2 = C4.low, x2 = c5[k2];
                x2 < 32 ? (d3 = m3 << x2 | b2 >>> 32 - x2, p4 = b2 << x2 | m3 >>> 32 - x2) : (d3 = b2 << x2 - 32 | m3 >>> 64 - x2, p4 = m3 << x2 - 32 | b2 >>> 64 - x2);
                var S3 = f4[h5[k2]];
                S3.high = d3, S3.low = p4;
              }
              var A3 = f4[0], H2 = r7[0];
              for (A3.high = H2.high, A3.low = H2.low, u6 = 0; u6 < 5; u6++)
                for (_3 = 0; _3 < 5; _3++) {
                  var C4 = r7[k2 = u6 + 5 * _3], z2 = f4[k2], E4 = f4[(u6 + 1) % 5 + 5 * _3], M3 = f4[(u6 + 2) % 5 + 5 * _3];
                  C4.high = z2.high ^ ~E4.high & M3.high, C4.low = z2.low ^ ~E4.low & M3.low;
                }
              C4 = r7[0];
              var R3 = l5[a6];
              C4.high ^= R3.high, C4.low ^= R3.low;
            }
          }, _doFinalize: function() {
            var e7 = this._data, r7 = e7.words, n7 = (this._nDataBytes, 8 * e7.sigBytes), o7 = 32 * this.blockSize;
            r7[n7 >>> 5] |= 1 << 24 - n7 % 32, r7[(t6.ceil((n7 + 1) / o7) * o7 >>> 5) - 1] |= 128, e7.sigBytes = 4 * r7.length, this._process();
            for (var s7 = this._state, a6 = this.cfg.outputLength / 8, c6 = a6 / 8, h6 = [], l6 = 0; l6 < c6; l6++) {
              var f5 = s7[l6], u6 = f5.high, d3 = f5.low;
              u6 = 16711935 & (u6 << 8 | u6 >>> 24) | 4278255360 & (u6 << 24 | u6 >>> 8), d3 = 16711935 & (d3 << 8 | d3 >>> 24) | 4278255360 & (d3 << 24 | d3 >>> 8), h6.push(d3), h6.push(u6);
            }
            return new i6.init(h6, a6);
          }, clone: function() {
            for (var t7 = n6.clone.call(this), e7 = t7._state = this._state.slice(0), r7 = 0; r7 < 25; r7++)
              e7[r7] = e7[r7].clone();
            return t7;
          } });
          e6.SHA3 = n6._createHelper(u5), e6.HmacSHA3 = n6._createHmacHelper(u5);
        }(Math), function() {
          var t6 = a5, e6 = t6.lib.Hasher, r6 = t6.x64, i6 = r6.Word, n6 = r6.WordArray, o6 = t6.algo;
          function s6() {
            return i6.create.apply(i6, arguments);
          }
          var c5 = [s6(1116352408, 3609767458), s6(1899447441, 602891725), s6(3049323471, 3964484399), s6(3921009573, 2173295548), s6(961987163, 4081628472), s6(1508970993, 3053834265), s6(2453635748, 2937671579), s6(2870763221, 3664609560), s6(3624381080, 2734883394), s6(310598401, 1164996542), s6(607225278, 1323610764), s6(1426881987, 3590304994), s6(1925078388, 4068182383), s6(2162078206, 991336113), s6(2614888103, 633803317), s6(3248222580, 3479774868), s6(3835390401, 2666613458), s6(4022224774, 944711139), s6(264347078, 2341262773), s6(604807628, 2007800933), s6(770255983, 1495990901), s6(1249150122, 1856431235), s6(1555081692, 3175218132), s6(1996064986, 2198950837), s6(2554220882, 3999719339), s6(2821834349, 766784016), s6(2952996808, 2566594879), s6(3210313671, 3203337956), s6(3336571891, 1034457026), s6(3584528711, 2466948901), s6(113926993, 3758326383), s6(338241895, 168717936), s6(666307205, 1188179964), s6(773529912, 1546045734), s6(1294757372, 1522805485), s6(1396182291, 2643833823), s6(1695183700, 2343527390), s6(1986661051, 1014477480), s6(2177026350, 1206759142), s6(2456956037, 344077627), s6(2730485921, 1290863460), s6(2820302411, 3158454273), s6(3259730800, 3505952657), s6(3345764771, 106217008), s6(3516065817, 3606008344), s6(3600352804, 1432725776), s6(4094571909, 1467031594), s6(275423344, 851169720), s6(430227734, 3100823752), s6(506948616, 1363258195), s6(659060556, 3750685593), s6(883997877, 3785050280), s6(958139571, 3318307427), s6(1322822218, 3812723403), s6(1537002063, 2003034995), s6(1747873779, 3602036899), s6(1955562222, 1575990012), s6(2024104815, 1125592928), s6(2227730452, 2716904306), s6(2361852424, 442776044), s6(2428436474, 593698344), s6(2756734187, 3733110249), s6(3204031479, 2999351573), s6(3329325298, 3815920427), s6(3391569614, 3928383900), s6(3515267271, 566280711), s6(3940187606, 3454069534), s6(4118630271, 4000239992), s6(116418474, 1914138554), s6(174292421, 2731055270), s6(289380356, 3203993006), s6(460393269, 320620315), s6(685471733, 587496836), s6(852142971, 1086792851), s6(1017036298, 365543100), s6(1126000580, 2618297676), s6(1288033470, 3409855158), s6(1501505948, 4234509866), s6(1607167915, 987167468), s6(1816402316, 1246189591)], h5 = [];
          !function() {
            for (var t7 = 0; t7 < 80; t7++)
              h5[t7] = s6();
          }();
          var l5 = o6.SHA512 = e6.extend({ _doReset: function() {
            this._hash = new n6.init([new i6.init(1779033703, 4089235720), new i6.init(3144134277, 2227873595), new i6.init(1013904242, 4271175723), new i6.init(2773480762, 1595750129), new i6.init(1359893119, 2917565137), new i6.init(2600822924, 725511199), new i6.init(528734635, 4215389547), new i6.init(1541459225, 327033209)]);
          }, _doProcessBlock: function(t7, e7) {
            for (var r7 = this._hash.words, i7 = r7[0], n7 = r7[1], o7 = r7[2], s7 = r7[3], a6 = r7[4], l6 = r7[5], f4 = r7[6], u5 = r7[7], d3 = i7.high, p4 = i7.low, _3 = n7.high, y2 = n7.low, v3 = o7.high, g4 = o7.low, w3 = s7.high, B2 = s7.low, k2 = a6.high, m3 = a6.low, b2 = l6.high, x2 = l6.low, S3 = f4.high, A3 = f4.low, H2 = u5.high, C4 = u5.low, z2 = d3, E4 = p4, M3 = _3, R3 = y2, D2 = v3, P3 = g4, F2 = w3, O3 = B2, L3 = k2, T4 = m3, I3 = b2, W2 = x2, j2 = S3, U3 = A3, K2 = H2, X2 = C4, N3 = 0; N3 < 80; N3++) {
              var q2, V2, Z2 = h5[N3];
              if (N3 < 16)
                V2 = Z2.high = 0 | t7[e7 + 2 * N3], q2 = Z2.low = 0 | t7[e7 + 2 * N3 + 1];
              else {
                var $2 = h5[N3 - 15], G2 = $2.high, J2 = $2.low, Q2 = (G2 >>> 1 | J2 << 31) ^ (G2 >>> 8 | J2 << 24) ^ G2 >>> 7, Y2 = (J2 >>> 1 | G2 << 31) ^ (J2 >>> 8 | G2 << 24) ^ (J2 >>> 7 | G2 << 25), tt3 = h5[N3 - 2], et2 = tt3.high, rt2 = tt3.low, it2 = (et2 >>> 19 | rt2 << 13) ^ (et2 << 3 | rt2 >>> 29) ^ et2 >>> 6, nt2 = (rt2 >>> 19 | et2 << 13) ^ (rt2 << 3 | et2 >>> 29) ^ (rt2 >>> 6 | et2 << 26), ot2 = h5[N3 - 7], st2 = ot2.high, at2 = ot2.low, ct2 = h5[N3 - 16], ht2 = ct2.high, lt2 = ct2.low;
                V2 = (V2 = (V2 = Q2 + st2 + ((q2 = Y2 + at2) >>> 0 < Y2 >>> 0 ? 1 : 0)) + it2 + ((q2 += nt2) >>> 0 < nt2 >>> 0 ? 1 : 0)) + ht2 + ((q2 += lt2) >>> 0 < lt2 >>> 0 ? 1 : 0), Z2.high = V2, Z2.low = q2;
              }
              var ft2, ut2 = L3 & I3 ^ ~L3 & j2, dt2 = T4 & W2 ^ ~T4 & U3, pt2 = z2 & M3 ^ z2 & D2 ^ M3 & D2, _t2 = E4 & R3 ^ E4 & P3 ^ R3 & P3, yt2 = (z2 >>> 28 | E4 << 4) ^ (z2 << 30 | E4 >>> 2) ^ (z2 << 25 | E4 >>> 7), vt2 = (E4 >>> 28 | z2 << 4) ^ (E4 << 30 | z2 >>> 2) ^ (E4 << 25 | z2 >>> 7), gt2 = (L3 >>> 14 | T4 << 18) ^ (L3 >>> 18 | T4 << 14) ^ (L3 << 23 | T4 >>> 9), wt2 = (T4 >>> 14 | L3 << 18) ^ (T4 >>> 18 | L3 << 14) ^ (T4 << 23 | L3 >>> 9), Bt2 = c5[N3], kt2 = Bt2.high, mt2 = Bt2.low, bt2 = K2 + gt2 + ((ft2 = X2 + wt2) >>> 0 < X2 >>> 0 ? 1 : 0), xt2 = vt2 + _t2;
              K2 = j2, X2 = U3, j2 = I3, U3 = W2, I3 = L3, W2 = T4, L3 = F2 + (bt2 = (bt2 = (bt2 = bt2 + ut2 + ((ft2 += dt2) >>> 0 < dt2 >>> 0 ? 1 : 0)) + kt2 + ((ft2 += mt2) >>> 0 < mt2 >>> 0 ? 1 : 0)) + V2 + ((ft2 += q2) >>> 0 < q2 >>> 0 ? 1 : 0)) + ((T4 = O3 + ft2 | 0) >>> 0 < O3 >>> 0 ? 1 : 0) | 0, F2 = D2, O3 = P3, D2 = M3, P3 = R3, M3 = z2, R3 = E4, z2 = bt2 + (yt2 + pt2 + (xt2 >>> 0 < vt2 >>> 0 ? 1 : 0)) + ((E4 = ft2 + xt2 | 0) >>> 0 < ft2 >>> 0 ? 1 : 0) | 0;
            }
            p4 = i7.low = p4 + E4, i7.high = d3 + z2 + (p4 >>> 0 < E4 >>> 0 ? 1 : 0), y2 = n7.low = y2 + R3, n7.high = _3 + M3 + (y2 >>> 0 < R3 >>> 0 ? 1 : 0), g4 = o7.low = g4 + P3, o7.high = v3 + D2 + (g4 >>> 0 < P3 >>> 0 ? 1 : 0), B2 = s7.low = B2 + O3, s7.high = w3 + F2 + (B2 >>> 0 < O3 >>> 0 ? 1 : 0), m3 = a6.low = m3 + T4, a6.high = k2 + L3 + (m3 >>> 0 < T4 >>> 0 ? 1 : 0), x2 = l6.low = x2 + W2, l6.high = b2 + I3 + (x2 >>> 0 < W2 >>> 0 ? 1 : 0), A3 = f4.low = A3 + U3, f4.high = S3 + j2 + (A3 >>> 0 < U3 >>> 0 ? 1 : 0), C4 = u5.low = C4 + X2, u5.high = H2 + K2 + (C4 >>> 0 < X2 >>> 0 ? 1 : 0);
          }, _doFinalize: function() {
            var t7 = this._data, e7 = t7.words, r7 = 8 * this._nDataBytes, i7 = 8 * t7.sigBytes;
            return e7[i7 >>> 5] |= 128 << 24 - i7 % 32, e7[30 + (i7 + 128 >>> 10 << 5)] = Math.floor(r7 / 4294967296), e7[31 + (i7 + 128 >>> 10 << 5)] = r7, t7.sigBytes = 4 * e7.length, this._process(), this._hash.toX32();
          }, clone: function() {
            var t7 = e6.clone.call(this);
            return t7._hash = this._hash.clone(), t7;
          }, blockSize: 32 });
          t6.SHA512 = e6._createHelper(l5), t6.HmacSHA512 = e6._createHmacHelper(l5);
        }(), function() {
          var t6 = a5, e6 = t6.x64, r6 = e6.Word, i6 = e6.WordArray, n6 = t6.algo, o6 = n6.SHA512, s6 = n6.SHA384 = o6.extend({ _doReset: function() {
            this._hash = new i6.init([new r6.init(3418070365, 3238371032), new r6.init(1654270250, 914150663), new r6.init(2438529370, 812702999), new r6.init(355462360, 4144912697), new r6.init(1731405415, 4290775857), new r6.init(2394180231, 1750603025), new r6.init(3675008525, 1694076839), new r6.init(1203062813, 3204075428)]);
          }, _doFinalize: function() {
            var t7 = o6._doFinalize.call(this);
            return t7.sigBytes -= 16, t7;
          } });
          t6.SHA384 = o6._createHelper(s6), t6.HmacSHA384 = o6._createHmacHelper(s6);
        }(), a5.lib.Cipher || function(t6) {
          var e6 = a5, r6 = e6.lib, i6 = r6.Base, n6 = r6.WordArray, o6 = r6.BufferedBlockAlgorithm, s6 = e6.enc, c5 = (s6.Utf8, s6.Base64), h5 = e6.algo.EvpKDF, l5 = r6.Cipher = o6.extend({ cfg: i6.extend(), createEncryptor: function(t7, e7) {
            return this.create(this._ENC_XFORM_MODE, t7, e7);
          }, createDecryptor: function(t7, e7) {
            return this.create(this._DEC_XFORM_MODE, t7, e7);
          }, init: function(t7, e7, r7) {
            this.cfg = this.cfg.extend(r7), this._xformMode = t7, this._key = e7, this.reset();
          }, reset: function() {
            o6.reset.call(this), this._doReset();
          }, process: function(t7) {
            return this._append(t7), this._process();
          }, finalize: function(t7) {
            return t7 && this._append(t7), this._doFinalize();
          }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: /* @__PURE__ */ function() {
            function t7(t8) {
              return "string" == typeof t8 ? w3 : v3;
            }
            return function(e7) {
              return { encrypt: function(r7, i7, n7) {
                return t7(i7).encrypt(e7, r7, i7, n7);
              }, decrypt: function(r7, i7, n7) {
                return t7(i7).decrypt(e7, r7, i7, n7);
              } };
            };
          }() }), f4 = (r6.StreamCipher = l5.extend({ _doFinalize: function() {
            return this._process(true);
          }, blockSize: 1 }), e6.mode = {}), u5 = r6.BlockCipherMode = i6.extend({ createEncryptor: function(t7, e7) {
            return this.Encryptor.create(t7, e7);
          }, createDecryptor: function(t7, e7) {
            return this.Decryptor.create(t7, e7);
          }, init: function(t7, e7) {
            this._cipher = t7, this._iv = e7;
          } }), d3 = f4.CBC = function() {
            var t7 = u5.extend();
            function e7(t8, e8, r7) {
              var i7, n7 = this._iv;
              n7 ? (i7 = n7, this._iv = void 0) : i7 = this._prevBlock;
              for (var o7 = 0; o7 < r7; o7++)
                t8[e8 + o7] ^= i7[o7];
            }
            return t7.Encryptor = t7.extend({ processBlock: function(t8, r7) {
              var i7 = this._cipher, n7 = i7.blockSize;
              e7.call(this, t8, r7, n7), i7.encryptBlock(t8, r7), this._prevBlock = t8.slice(r7, r7 + n7);
            } }), t7.Decryptor = t7.extend({ processBlock: function(t8, r7) {
              var i7 = this._cipher, n7 = i7.blockSize, o7 = t8.slice(r7, r7 + n7);
              i7.decryptBlock(t8, r7), e7.call(this, t8, r7, n7), this._prevBlock = o7;
            } }), t7;
          }(), p4 = (e6.pad = {}).Pkcs7 = { pad: function(t7, e7) {
            for (var r7 = 4 * e7, i7 = r7 - t7.sigBytes % r7, o7 = i7 << 24 | i7 << 16 | i7 << 8 | i7, s7 = [], a6 = 0; a6 < i7; a6 += 4)
              s7.push(o7);
            var c6 = n6.create(s7, i7);
            t7.concat(c6);
          }, unpad: function(t7) {
            var e7 = 255 & t7.words[t7.sigBytes - 1 >>> 2];
            t7.sigBytes -= e7;
          } }, _3 = (r6.BlockCipher = l5.extend({ cfg: l5.cfg.extend({ mode: d3, padding: p4 }), reset: function() {
            var t7;
            l5.reset.call(this);
            var e7 = this.cfg, r7 = e7.iv, i7 = e7.mode;
            this._xformMode == this._ENC_XFORM_MODE ? t7 = i7.createEncryptor : (t7 = i7.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == t7 ? this._mode.init(this, r7 && r7.words) : (this._mode = t7.call(i7, this, r7 && r7.words), this._mode.__creator = t7);
          }, _doProcessBlock: function(t7, e7) {
            this._mode.processBlock(t7, e7);
          }, _doFinalize: function() {
            var t7, e7 = this.cfg.padding;
            return this._xformMode == this._ENC_XFORM_MODE ? (e7.pad(this._data, this.blockSize), t7 = this._process(true)) : (t7 = this._process(true), e7.unpad(t7)), t7;
          }, blockSize: 4 }), r6.CipherParams = i6.extend({ init: function(t7) {
            this.mixIn(t7);
          }, toString: function(t7) {
            return (t7 || this.formatter).stringify(this);
          } })), y2 = (e6.format = {}).OpenSSL = { stringify: function(t7) {
            var e7 = t7.ciphertext, r7 = t7.salt;
            return (r7 ? n6.create([1398893684, 1701076831]).concat(r7).concat(e7) : e7).toString(c5);
          }, parse: function(t7) {
            var e7, r7 = c5.parse(t7), i7 = r7.words;
            return 1398893684 == i7[0] && 1701076831 == i7[1] && (e7 = n6.create(i7.slice(2, 4)), i7.splice(0, 4), r7.sigBytes -= 16), _3.create({ ciphertext: r7, salt: e7 });
          } }, v3 = r6.SerializableCipher = i6.extend({ cfg: i6.extend({ format: y2 }), encrypt: function(t7, e7, r7, i7) {
            i7 = this.cfg.extend(i7);
            var n7 = t7.createEncryptor(r7, i7), o7 = n7.finalize(e7), s7 = n7.cfg;
            return _3.create({ ciphertext: o7, key: r7, iv: s7.iv, algorithm: t7, mode: s7.mode, padding: s7.padding, blockSize: t7.blockSize, formatter: i7.format });
          }, decrypt: function(t7, e7, r7, i7) {
            return i7 = this.cfg.extend(i7), e7 = this._parse(e7, i7.format), t7.createDecryptor(r7, i7).finalize(e7.ciphertext);
          }, _parse: function(t7, e7) {
            return "string" == typeof t7 ? e7.parse(t7, this) : t7;
          } }), g4 = (e6.kdf = {}).OpenSSL = { execute: function(t7, e7, r7, i7) {
            i7 || (i7 = n6.random(8));
            var o7 = h5.create({ keySize: e7 + r7 }).compute(t7, i7), s7 = n6.create(o7.words.slice(e7), 4 * r7);
            return o7.sigBytes = 4 * e7, _3.create({ key: o7, iv: s7, salt: i7 });
          } }, w3 = r6.PasswordBasedCipher = v3.extend({ cfg: v3.cfg.extend({ kdf: g4 }), encrypt: function(t7, e7, r7, i7) {
            var n7 = (i7 = this.cfg.extend(i7)).kdf.execute(r7, t7.keySize, t7.ivSize);
            i7.iv = n7.iv;
            var o7 = v3.encrypt.call(this, t7, e7, n7.key, i7);
            return o7.mixIn(n7), o7;
          }, decrypt: function(t7, e7, r7, i7) {
            i7 = this.cfg.extend(i7), e7 = this._parse(e7, i7.format);
            var n7 = i7.kdf.execute(r7, t7.keySize, t7.ivSize, e7.salt);
            return i7.iv = n7.iv, v3.decrypt.call(this, t7, e7, n7.key, i7);
          } });
        }(), a5.mode.CFB = function() {
          var t6 = a5.lib.BlockCipherMode.extend();
          function e6(t7, e7, r6, i6) {
            var n6, o6 = this._iv;
            o6 ? (n6 = o6.slice(0), this._iv = void 0) : n6 = this._prevBlock, i6.encryptBlock(n6, 0);
            for (var s6 = 0; s6 < r6; s6++)
              t7[e7 + s6] ^= n6[s6];
          }
          return t6.Encryptor = t6.extend({ processBlock: function(t7, r6) {
            var i6 = this._cipher, n6 = i6.blockSize;
            e6.call(this, t7, r6, n6, i6), this._prevBlock = t7.slice(r6, r6 + n6);
          } }), t6.Decryptor = t6.extend({ processBlock: function(t7, r6) {
            var i6 = this._cipher, n6 = i6.blockSize, o6 = t7.slice(r6, r6 + n6);
            e6.call(this, t7, r6, n6, i6), this._prevBlock = o6;
          } }), t6;
        }(), a5.mode.ECB = ((n5 = a5.lib.BlockCipherMode.extend()).Encryptor = n5.extend({ processBlock: function(t6, e6) {
          this._cipher.encryptBlock(t6, e6);
        } }), n5.Decryptor = n5.extend({ processBlock: function(t6, e6) {
          this._cipher.decryptBlock(t6, e6);
        } }), n5), a5.pad.AnsiX923 = { pad: function(t6, e6) {
          var r6 = t6.sigBytes, i6 = 4 * e6, n6 = i6 - r6 % i6, o6 = r6 + n6 - 1;
          t6.clamp(), t6.words[o6 >>> 2] |= n6 << 24 - o6 % 4 * 8, t6.sigBytes += n6;
        }, unpad: function(t6) {
          var e6 = 255 & t6.words[t6.sigBytes - 1 >>> 2];
          t6.sigBytes -= e6;
        } }, a5.pad.Iso10126 = { pad: function(t6, e6) {
          var r6 = 4 * e6, i6 = r6 - t6.sigBytes % r6;
          t6.concat(a5.lib.WordArray.random(i6 - 1)).concat(a5.lib.WordArray.create([i6 << 24], 1));
        }, unpad: function(t6) {
          var e6 = 255 & t6.words[t6.sigBytes - 1 >>> 2];
          t6.sigBytes -= e6;
        } }, a5.pad.Iso97971 = { pad: function(t6, e6) {
          t6.concat(a5.lib.WordArray.create([2147483648], 1)), a5.pad.ZeroPadding.pad(t6, e6);
        }, unpad: function(t6) {
          a5.pad.ZeroPadding.unpad(t6), t6.sigBytes--;
        } }, a5.mode.OFB = (r5 = a5.lib.BlockCipherMode.extend(), i5 = r5.Encryptor = r5.extend({ processBlock: function(t6, e6) {
          var r6 = this._cipher, i6 = r6.blockSize, n6 = this._iv, o6 = this._keystream;
          n6 && (o6 = this._keystream = n6.slice(0), this._iv = void 0), r6.encryptBlock(o6, 0);
          for (var s6 = 0; s6 < i6; s6++)
            t6[e6 + s6] ^= o6[s6];
        } }), r5.Decryptor = i5, r5), a5.pad.NoPadding = { pad: function() {
        }, unpad: function() {
        } }, function(t6) {
          var e6 = a5, r6 = e6.lib.CipherParams, i6 = e6.enc.Hex;
          e6.format.Hex = { stringify: function(t7) {
            return t7.ciphertext.toString(i6);
          }, parse: function(t7) {
            var e7 = i6.parse(t7);
            return r6.create({ ciphertext: e7 });
          } };
        }(), function() {
          var t6 = a5, e6 = t6.lib.BlockCipher, r6 = t6.algo, i6 = [], n6 = [], o6 = [], s6 = [], c5 = [], h5 = [], l5 = [], f4 = [], u5 = [], d3 = [];
          !function() {
            for (var t7 = [], e7 = 0; e7 < 256; e7++)
              t7[e7] = e7 < 128 ? e7 << 1 : e7 << 1 ^ 283;
            var r7 = 0, a6 = 0;
            for (e7 = 0; e7 < 256; e7++) {
              var p5 = a6 ^ a6 << 1 ^ a6 << 2 ^ a6 << 3 ^ a6 << 4;
              p5 = p5 >>> 8 ^ 255 & p5 ^ 99, i6[r7] = p5, n6[p5] = r7;
              var _4 = t7[r7], y2 = t7[_4], v3 = t7[y2], g4 = 257 * t7[p5] ^ 16843008 * p5;
              o6[r7] = g4 << 24 | g4 >>> 8, s6[r7] = g4 << 16 | g4 >>> 16, c5[r7] = g4 << 8 | g4 >>> 24, h5[r7] = g4, g4 = 16843009 * v3 ^ 65537 * y2 ^ 257 * _4 ^ 16843008 * r7, l5[p5] = g4 << 24 | g4 >>> 8, f4[p5] = g4 << 16 | g4 >>> 16, u5[p5] = g4 << 8 | g4 >>> 24, d3[p5] = g4, r7 ? (r7 = _4 ^ t7[t7[t7[v3 ^ _4]]], a6 ^= t7[t7[a6]]) : r7 = a6 = 1;
            }
          }();
          var p4 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], _3 = r6.AES = e6.extend({ _doReset: function() {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (var t7 = this._keyPriorReset = this._key, e7 = t7.words, r7 = t7.sigBytes / 4, n7 = 4 * ((this._nRounds = r7 + 6) + 1), o7 = this._keySchedule = [], s7 = 0; s7 < n7; s7++)
                s7 < r7 ? o7[s7] = e7[s7] : (h6 = o7[s7 - 1], s7 % r7 ? r7 > 6 && s7 % r7 == 4 && (h6 = i6[h6 >>> 24] << 24 | i6[h6 >>> 16 & 255] << 16 | i6[h6 >>> 8 & 255] << 8 | i6[255 & h6]) : (h6 = i6[(h6 = h6 << 8 | h6 >>> 24) >>> 24] << 24 | i6[h6 >>> 16 & 255] << 16 | i6[h6 >>> 8 & 255] << 8 | i6[255 & h6], h6 ^= p4[s7 / r7 | 0] << 24), o7[s7] = o7[s7 - r7] ^ h6);
              for (var a6 = this._invKeySchedule = [], c6 = 0; c6 < n7; c6++) {
                if (s7 = n7 - c6, c6 % 4)
                  var h6 = o7[s7];
                else
                  h6 = o7[s7 - 4];
                a6[c6] = c6 < 4 || s7 <= 4 ? h6 : l5[i6[h6 >>> 24]] ^ f4[i6[h6 >>> 16 & 255]] ^ u5[i6[h6 >>> 8 & 255]] ^ d3[i6[255 & h6]];
              }
            }
          }, encryptBlock: function(t7, e7) {
            this._doCryptBlock(t7, e7, this._keySchedule, o6, s6, c5, h5, i6);
          }, decryptBlock: function(t7, e7) {
            var r7 = t7[e7 + 1];
            t7[e7 + 1] = t7[e7 + 3], t7[e7 + 3] = r7, this._doCryptBlock(t7, e7, this._invKeySchedule, l5, f4, u5, d3, n6), r7 = t7[e7 + 1], t7[e7 + 1] = t7[e7 + 3], t7[e7 + 3] = r7;
          }, _doCryptBlock: function(t7, e7, r7, i7, n7, o7, s7, a6) {
            for (var c6 = this._nRounds, h6 = t7[e7] ^ r7[0], l6 = t7[e7 + 1] ^ r7[1], f5 = t7[e7 + 2] ^ r7[2], u6 = t7[e7 + 3] ^ r7[3], d4 = 4, p5 = 1; p5 < c6; p5++) {
              var _4 = i7[h6 >>> 24] ^ n7[l6 >>> 16 & 255] ^ o7[f5 >>> 8 & 255] ^ s7[255 & u6] ^ r7[d4++], y2 = i7[l6 >>> 24] ^ n7[f5 >>> 16 & 255] ^ o7[u6 >>> 8 & 255] ^ s7[255 & h6] ^ r7[d4++], v3 = i7[f5 >>> 24] ^ n7[u6 >>> 16 & 255] ^ o7[h6 >>> 8 & 255] ^ s7[255 & l6] ^ r7[d4++], g4 = i7[u6 >>> 24] ^ n7[h6 >>> 16 & 255] ^ o7[l6 >>> 8 & 255] ^ s7[255 & f5] ^ r7[d4++];
              h6 = _4, l6 = y2, f5 = v3, u6 = g4;
            }
            _4 = (a6[h6 >>> 24] << 24 | a6[l6 >>> 16 & 255] << 16 | a6[f5 >>> 8 & 255] << 8 | a6[255 & u6]) ^ r7[d4++], y2 = (a6[l6 >>> 24] << 24 | a6[f5 >>> 16 & 255] << 16 | a6[u6 >>> 8 & 255] << 8 | a6[255 & h6]) ^ r7[d4++], v3 = (a6[f5 >>> 24] << 24 | a6[u6 >>> 16 & 255] << 16 | a6[h6 >>> 8 & 255] << 8 | a6[255 & l6]) ^ r7[d4++], g4 = (a6[u6 >>> 24] << 24 | a6[h6 >>> 16 & 255] << 16 | a6[l6 >>> 8 & 255] << 8 | a6[255 & f5]) ^ r7[d4++], t7[e7] = _4, t7[e7 + 1] = y2, t7[e7 + 2] = v3, t7[e7 + 3] = g4;
          }, keySize: 8 });
          t6.AES = e6._createHelper(_3);
        }(), function() {
          var t6 = a5, e6 = t6.lib, r6 = e6.WordArray, i6 = e6.BlockCipher, n6 = t6.algo, o6 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], s6 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], c5 = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], h5 = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], l5 = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], f4 = n6.DES = i6.extend({ _doReset: function() {
            for (var t7 = this._key.words, e7 = [], r7 = 0; r7 < 56; r7++) {
              var i7 = o6[r7] - 1;
              e7[r7] = t7[i7 >>> 5] >>> 31 - i7 % 32 & 1;
            }
            for (var n7 = this._subKeys = [], a6 = 0; a6 < 16; a6++) {
              var h6 = n7[a6] = [], l6 = c5[a6];
              for (r7 = 0; r7 < 24; r7++)
                h6[r7 / 6 | 0] |= e7[(s6[r7] - 1 + l6) % 28] << 31 - r7 % 6, h6[4 + (r7 / 6 | 0)] |= e7[28 + (s6[r7 + 24] - 1 + l6) % 28] << 31 - r7 % 6;
              for (h6[0] = h6[0] << 1 | h6[0] >>> 31, r7 = 1; r7 < 7; r7++)
                h6[r7] = h6[r7] >>> 4 * (r7 - 1) + 3;
              h6[7] = h6[7] << 5 | h6[7] >>> 27;
            }
            var f5 = this._invSubKeys = [];
            for (r7 = 0; r7 < 16; r7++)
              f5[r7] = n7[15 - r7];
          }, encryptBlock: function(t7, e7) {
            this._doCryptBlock(t7, e7, this._subKeys);
          }, decryptBlock: function(t7, e7) {
            this._doCryptBlock(t7, e7, this._invSubKeys);
          }, _doCryptBlock: function(t7, e7, r7) {
            this._lBlock = t7[e7], this._rBlock = t7[e7 + 1], u5.call(this, 4, 252645135), u5.call(this, 16, 65535), d3.call(this, 2, 858993459), d3.call(this, 8, 16711935), u5.call(this, 1, 1431655765);
            for (var i7 = 0; i7 < 16; i7++) {
              for (var n7 = r7[i7], o7 = this._lBlock, s7 = this._rBlock, a6 = 0, c6 = 0; c6 < 8; c6++)
                a6 |= h5[c6][((s7 ^ n7[c6]) & l5[c6]) >>> 0];
              this._lBlock = s7, this._rBlock = o7 ^ a6;
            }
            var f5 = this._lBlock;
            this._lBlock = this._rBlock, this._rBlock = f5, u5.call(this, 1, 1431655765), d3.call(this, 8, 16711935), d3.call(this, 2, 858993459), u5.call(this, 16, 65535), u5.call(this, 4, 252645135), t7[e7] = this._lBlock, t7[e7 + 1] = this._rBlock;
          }, keySize: 2, ivSize: 2, blockSize: 2 });
          function u5(t7, e7) {
            var r7 = (this._lBlock >>> t7 ^ this._rBlock) & e7;
            this._rBlock ^= r7, this._lBlock ^= r7 << t7;
          }
          function d3(t7, e7) {
            var r7 = (this._rBlock >>> t7 ^ this._lBlock) & e7;
            this._lBlock ^= r7, this._rBlock ^= r7 << t7;
          }
          t6.DES = i6._createHelper(f4);
          var p4 = n6.TripleDES = i6.extend({ _doReset: function() {
            var t7 = this._key.words;
            if (2 !== t7.length && 4 !== t7.length && t7.length < 6)
              throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
            var e7 = t7.slice(0, 2), i7 = t7.length < 4 ? t7.slice(0, 2) : t7.slice(2, 4), n7 = t7.length < 6 ? t7.slice(0, 2) : t7.slice(4, 6);
            this._des1 = f4.createEncryptor(r6.create(e7)), this._des2 = f4.createEncryptor(r6.create(i7)), this._des3 = f4.createEncryptor(r6.create(n7));
          }, encryptBlock: function(t7, e7) {
            this._des1.encryptBlock(t7, e7), this._des2.decryptBlock(t7, e7), this._des3.encryptBlock(t7, e7);
          }, decryptBlock: function(t7, e7) {
            this._des3.decryptBlock(t7, e7), this._des2.encryptBlock(t7, e7), this._des1.decryptBlock(t7, e7);
          }, keySize: 6, ivSize: 2, blockSize: 2 });
          t6.TripleDES = i6._createHelper(p4);
        }(), function() {
          var t6 = a5, e6 = t6.lib.StreamCipher, r6 = t6.algo, i6 = r6.RC4 = e6.extend({ _doReset: function() {
            for (var t7 = this._key, e7 = t7.words, r7 = t7.sigBytes, i7 = this._S = [], n7 = 0; n7 < 256; n7++)
              i7[n7] = n7;
            n7 = 0;
            for (var o7 = 0; n7 < 256; n7++) {
              var s6 = n7 % r7, a6 = e7[s6 >>> 2] >>> 24 - s6 % 4 * 8 & 255;
              o7 = (o7 + i7[n7] + a6) % 256;
              var c5 = i7[n7];
              i7[n7] = i7[o7], i7[o7] = c5;
            }
            this._i = this._j = 0;
          }, _doProcessBlock: function(t7, e7) {
            t7[e7] ^= n6.call(this);
          }, keySize: 8, ivSize: 0 });
          function n6() {
            for (var t7 = this._S, e7 = this._i, r7 = this._j, i7 = 0, n7 = 0; n7 < 4; n7++) {
              r7 = (r7 + t7[e7 = (e7 + 1) % 256]) % 256;
              var o7 = t7[e7];
              t7[e7] = t7[r7], t7[r7] = o7, i7 |= t7[(t7[e7] + t7[r7]) % 256] << 24 - 8 * n7;
            }
            return this._i = e7, this._j = r7, i7;
          }
          t6.RC4 = e6._createHelper(i6);
          var o6 = r6.RC4Drop = i6.extend({ cfg: i6.cfg.extend({ drop: 192 }), _doReset: function() {
            i6._doReset.call(this);
            for (var t7 = this.cfg.drop; t7 > 0; t7--)
              n6.call(this);
          } });
          t6.RC4Drop = e6._createHelper(o6);
        }(), /** @preserve
               * Counter block mode compatible with  Dr Brian Gladman fileenc.c
               * derived from CryptoJS.mode.CTR
               * Jan Hruby jhruby.web@gmail.com
               */
        a5.mode.CTRGladman = function() {
          var t6 = a5.lib.BlockCipherMode.extend();
          function e6(t7) {
            if (255 == (t7 >> 24 & 255)) {
              var e7 = t7 >> 16 & 255, r7 = t7 >> 8 & 255, i6 = 255 & t7;
              255 === e7 ? (e7 = 0, 255 === r7 ? (r7 = 0, 255 === i6 ? i6 = 0 : ++i6) : ++r7) : ++e7, t7 = 0, t7 += e7 << 16, t7 += r7 << 8, t7 += i6;
            } else
              t7 += 1 << 24;
            return t7;
          }
          var r6 = t6.Encryptor = t6.extend({ processBlock: function(t7, r7) {
            var i6 = this._cipher, n6 = i6.blockSize, o6 = this._iv, s6 = this._counter;
            o6 && (s6 = this._counter = o6.slice(0), this._iv = void 0), function(t8) {
              0 === (t8[0] = e6(t8[0])) && (t8[1] = e6(t8[1]));
            }(s6);
            var a6 = s6.slice(0);
            i6.encryptBlock(a6, 0);
            for (var c5 = 0; c5 < n6; c5++)
              t7[r7 + c5] ^= a6[c5];
          } });
          return t6.Decryptor = r6, t6;
        }(), function() {
          var t6 = a5, e6 = t6.lib.StreamCipher, r6 = t6.algo, i6 = [], n6 = [], o6 = [], s6 = r6.Rabbit = e6.extend({ _doReset: function() {
            for (var t7 = this._key.words, e7 = this.cfg.iv, r7 = 0; r7 < 4; r7++)
              t7[r7] = 16711935 & (t7[r7] << 8 | t7[r7] >>> 24) | 4278255360 & (t7[r7] << 24 | t7[r7] >>> 8);
            var i7 = this._X = [t7[0], t7[3] << 16 | t7[2] >>> 16, t7[1], t7[0] << 16 | t7[3] >>> 16, t7[2], t7[1] << 16 | t7[0] >>> 16, t7[3], t7[2] << 16 | t7[1] >>> 16], n7 = this._C = [t7[2] << 16 | t7[2] >>> 16, 4294901760 & t7[0] | 65535 & t7[1], t7[3] << 16 | t7[3] >>> 16, 4294901760 & t7[1] | 65535 & t7[2], t7[0] << 16 | t7[0] >>> 16, 4294901760 & t7[2] | 65535 & t7[3], t7[1] << 16 | t7[1] >>> 16, 4294901760 & t7[3] | 65535 & t7[0]];
            for (this._b = 0, r7 = 0; r7 < 4; r7++)
              c5.call(this);
            for (r7 = 0; r7 < 8; r7++)
              n7[r7] ^= i7[r7 + 4 & 7];
            if (e7) {
              var o7 = e7.words, s7 = o7[0], a6 = o7[1], h5 = 16711935 & (s7 << 8 | s7 >>> 24) | 4278255360 & (s7 << 24 | s7 >>> 8), l5 = 16711935 & (a6 << 8 | a6 >>> 24) | 4278255360 & (a6 << 24 | a6 >>> 8), f4 = h5 >>> 16 | 4294901760 & l5, u5 = l5 << 16 | 65535 & h5;
              for (n7[0] ^= h5, n7[1] ^= f4, n7[2] ^= l5, n7[3] ^= u5, n7[4] ^= h5, n7[5] ^= f4, n7[6] ^= l5, n7[7] ^= u5, r7 = 0; r7 < 4; r7++)
                c5.call(this);
            }
          }, _doProcessBlock: function(t7, e7) {
            var r7 = this._X;
            c5.call(this), i6[0] = r7[0] ^ r7[5] >>> 16 ^ r7[3] << 16, i6[1] = r7[2] ^ r7[7] >>> 16 ^ r7[5] << 16, i6[2] = r7[4] ^ r7[1] >>> 16 ^ r7[7] << 16, i6[3] = r7[6] ^ r7[3] >>> 16 ^ r7[1] << 16;
            for (var n7 = 0; n7 < 4; n7++)
              i6[n7] = 16711935 & (i6[n7] << 8 | i6[n7] >>> 24) | 4278255360 & (i6[n7] << 24 | i6[n7] >>> 8), t7[e7 + n7] ^= i6[n7];
          }, blockSize: 4, ivSize: 2 });
          function c5() {
            for (var t7 = this._X, e7 = this._C, r7 = 0; r7 < 8; r7++)
              n6[r7] = e7[r7];
            for (e7[0] = e7[0] + 1295307597 + this._b | 0, e7[1] = e7[1] + 3545052371 + (e7[0] >>> 0 < n6[0] >>> 0 ? 1 : 0) | 0, e7[2] = e7[2] + 886263092 + (e7[1] >>> 0 < n6[1] >>> 0 ? 1 : 0) | 0, e7[3] = e7[3] + 1295307597 + (e7[2] >>> 0 < n6[2] >>> 0 ? 1 : 0) | 0, e7[4] = e7[4] + 3545052371 + (e7[3] >>> 0 < n6[3] >>> 0 ? 1 : 0) | 0, e7[5] = e7[5] + 886263092 + (e7[4] >>> 0 < n6[4] >>> 0 ? 1 : 0) | 0, e7[6] = e7[6] + 1295307597 + (e7[5] >>> 0 < n6[5] >>> 0 ? 1 : 0) | 0, e7[7] = e7[7] + 3545052371 + (e7[6] >>> 0 < n6[6] >>> 0 ? 1 : 0) | 0, this._b = e7[7] >>> 0 < n6[7] >>> 0 ? 1 : 0, r7 = 0; r7 < 8; r7++) {
              var i7 = t7[r7] + e7[r7], s7 = 65535 & i7, a6 = i7 >>> 16, c6 = ((s7 * s7 >>> 17) + s7 * a6 >>> 15) + a6 * a6, h5 = ((4294901760 & i7) * i7 | 0) + ((65535 & i7) * i7 | 0);
              o6[r7] = c6 ^ h5;
            }
            t7[0] = o6[0] + (o6[7] << 16 | o6[7] >>> 16) + (o6[6] << 16 | o6[6] >>> 16) | 0, t7[1] = o6[1] + (o6[0] << 8 | o6[0] >>> 24) + o6[7] | 0, t7[2] = o6[2] + (o6[1] << 16 | o6[1] >>> 16) + (o6[0] << 16 | o6[0] >>> 16) | 0, t7[3] = o6[3] + (o6[2] << 8 | o6[2] >>> 24) + o6[1] | 0, t7[4] = o6[4] + (o6[3] << 16 | o6[3] >>> 16) + (o6[2] << 16 | o6[2] >>> 16) | 0, t7[5] = o6[5] + (o6[4] << 8 | o6[4] >>> 24) + o6[3] | 0, t7[6] = o6[6] + (o6[5] << 16 | o6[5] >>> 16) + (o6[4] << 16 | o6[4] >>> 16) | 0, t7[7] = o6[7] + (o6[6] << 8 | o6[6] >>> 24) + o6[5] | 0;
          }
          t6.Rabbit = e6._createHelper(s6);
        }(), a5.mode.CTR = function() {
          var t6 = a5.lib.BlockCipherMode.extend(), e6 = t6.Encryptor = t6.extend({ processBlock: function(t7, e7) {
            var r6 = this._cipher, i6 = r6.blockSize, n6 = this._iv, o6 = this._counter;
            n6 && (o6 = this._counter = n6.slice(0), this._iv = void 0);
            var s6 = o6.slice(0);
            r6.encryptBlock(s6, 0), o6[i6 - 1] = o6[i6 - 1] + 1 | 0;
            for (var a6 = 0; a6 < i6; a6++)
              t7[e7 + a6] ^= s6[a6];
          } });
          return t6.Decryptor = e6, t6;
        }(), function() {
          var t6 = a5, e6 = t6.lib.StreamCipher, r6 = t6.algo, i6 = [], n6 = [], o6 = [], s6 = r6.RabbitLegacy = e6.extend({ _doReset: function() {
            var t7 = this._key.words, e7 = this.cfg.iv, r7 = this._X = [t7[0], t7[3] << 16 | t7[2] >>> 16, t7[1], t7[0] << 16 | t7[3] >>> 16, t7[2], t7[1] << 16 | t7[0] >>> 16, t7[3], t7[2] << 16 | t7[1] >>> 16], i7 = this._C = [t7[2] << 16 | t7[2] >>> 16, 4294901760 & t7[0] | 65535 & t7[1], t7[3] << 16 | t7[3] >>> 16, 4294901760 & t7[1] | 65535 & t7[2], t7[0] << 16 | t7[0] >>> 16, 4294901760 & t7[2] | 65535 & t7[3], t7[1] << 16 | t7[1] >>> 16, 4294901760 & t7[3] | 65535 & t7[0]];
            this._b = 0;
            for (var n7 = 0; n7 < 4; n7++)
              c5.call(this);
            for (n7 = 0; n7 < 8; n7++)
              i7[n7] ^= r7[n7 + 4 & 7];
            if (e7) {
              var o7 = e7.words, s7 = o7[0], a6 = o7[1], h5 = 16711935 & (s7 << 8 | s7 >>> 24) | 4278255360 & (s7 << 24 | s7 >>> 8), l5 = 16711935 & (a6 << 8 | a6 >>> 24) | 4278255360 & (a6 << 24 | a6 >>> 8), f4 = h5 >>> 16 | 4294901760 & l5, u5 = l5 << 16 | 65535 & h5;
              for (i7[0] ^= h5, i7[1] ^= f4, i7[2] ^= l5, i7[3] ^= u5, i7[4] ^= h5, i7[5] ^= f4, i7[6] ^= l5, i7[7] ^= u5, n7 = 0; n7 < 4; n7++)
                c5.call(this);
            }
          }, _doProcessBlock: function(t7, e7) {
            var r7 = this._X;
            c5.call(this), i6[0] = r7[0] ^ r7[5] >>> 16 ^ r7[3] << 16, i6[1] = r7[2] ^ r7[7] >>> 16 ^ r7[5] << 16, i6[2] = r7[4] ^ r7[1] >>> 16 ^ r7[7] << 16, i6[3] = r7[6] ^ r7[3] >>> 16 ^ r7[1] << 16;
            for (var n7 = 0; n7 < 4; n7++)
              i6[n7] = 16711935 & (i6[n7] << 8 | i6[n7] >>> 24) | 4278255360 & (i6[n7] << 24 | i6[n7] >>> 8), t7[e7 + n7] ^= i6[n7];
          }, blockSize: 4, ivSize: 2 });
          function c5() {
            for (var t7 = this._X, e7 = this._C, r7 = 0; r7 < 8; r7++)
              n6[r7] = e7[r7];
            for (e7[0] = e7[0] + 1295307597 + this._b | 0, e7[1] = e7[1] + 3545052371 + (e7[0] >>> 0 < n6[0] >>> 0 ? 1 : 0) | 0, e7[2] = e7[2] + 886263092 + (e7[1] >>> 0 < n6[1] >>> 0 ? 1 : 0) | 0, e7[3] = e7[3] + 1295307597 + (e7[2] >>> 0 < n6[2] >>> 0 ? 1 : 0) | 0, e7[4] = e7[4] + 3545052371 + (e7[3] >>> 0 < n6[3] >>> 0 ? 1 : 0) | 0, e7[5] = e7[5] + 886263092 + (e7[4] >>> 0 < n6[4] >>> 0 ? 1 : 0) | 0, e7[6] = e7[6] + 1295307597 + (e7[5] >>> 0 < n6[5] >>> 0 ? 1 : 0) | 0, e7[7] = e7[7] + 3545052371 + (e7[6] >>> 0 < n6[6] >>> 0 ? 1 : 0) | 0, this._b = e7[7] >>> 0 < n6[7] >>> 0 ? 1 : 0, r7 = 0; r7 < 8; r7++) {
              var i7 = t7[r7] + e7[r7], s7 = 65535 & i7, a6 = i7 >>> 16, c6 = ((s7 * s7 >>> 17) + s7 * a6 >>> 15) + a6 * a6, h5 = ((4294901760 & i7) * i7 | 0) + ((65535 & i7) * i7 | 0);
              o6[r7] = c6 ^ h5;
            }
            t7[0] = o6[0] + (o6[7] << 16 | o6[7] >>> 16) + (o6[6] << 16 | o6[6] >>> 16) | 0, t7[1] = o6[1] + (o6[0] << 8 | o6[0] >>> 24) + o6[7] | 0, t7[2] = o6[2] + (o6[1] << 16 | o6[1] >>> 16) + (o6[0] << 16 | o6[0] >>> 16) | 0, t7[3] = o6[3] + (o6[2] << 8 | o6[2] >>> 24) + o6[1] | 0, t7[4] = o6[4] + (o6[3] << 16 | o6[3] >>> 16) + (o6[2] << 16 | o6[2] >>> 16) | 0, t7[5] = o6[5] + (o6[4] << 8 | o6[4] >>> 24) + o6[3] | 0, t7[6] = o6[6] + (o6[5] << 16 | o6[5] >>> 16) + (o6[4] << 16 | o6[4] >>> 16) | 0, t7[7] = o6[7] + (o6[6] << 8 | o6[6] >>> 24) + o6[5] | 0;
          }
          t6.RabbitLegacy = e6._createHelper(s6);
        }(), a5.pad.ZeroPadding = { pad: function(t6, e6) {
          var r6 = 4 * e6;
          t6.clamp(), t6.sigBytes += r6 - (t6.sigBytes % r6 || r6);
        }, unpad: function(t6) {
          var e6 = t6.words, r6 = t6.sigBytes - 1;
          for (r6 = t6.sigBytes - 1; r6 >= 0; r6--)
            if (e6[r6 >>> 2] >>> 24 - r6 % 4 * 8 & 255) {
              t6.sigBytes = r6 + 1;
              break;
            }
        } }, a5);
      });
      return function() {
        function e5(r5) {
          t4(this, e5);
          var i5 = r5.isArray, n5 = r5.isMap, o5 = r5.isDevMode;
          this._isArray = i5, this._isMap = n5, this._isDevMode = o5, this._interceptProfanityList = [], this._interceptFilter = null, this._interceptRegExpList = [], this._replacingProfanityMap = /* @__PURE__ */ new Map(), this._replacingFilter = null, this._replacingRegExpMap = /* @__PURE__ */ new Map(), this._key = "", this._iv = "", this._decryptOptions = void 0, this._n = "TIMProfanityFilterPlugin", true === o5 && console.log("".concat(this._n, ".VERSION:").concat("1.1.0"));
        }
        return r4(e5, [{ key: "onToken", value: function(t5) {
          this._key = u4.enc.Utf8.parse(t5.slice(0, 32)), this._iv = this._key, this._decryptOptions = { iv: this._iv, mode: u4.mode.CBC, padding: u4.pad.Pkcs7 };
        } }, { key: "onLexiconSliced", value: function(t5) {
          if (this._isArray(t5) && 0 !== t5.length) {
            var e6, r5, i5, n5 = a4(t5);
            try {
              for (n5.s(); !(i5 = n5.n()).done; ) {
                var o5 = i5.value, s5 = o5.filterType, c5 = o5.profanityType, h5 = o5.profanity, l5 = o5.replacement;
                e6 = this._getDecryptedString(h5), r5 = this._getDecryptedString(l5), 1 === s5 ? 1 === c5 ? this._interceptProfanityList.push(e6) : 2 === c5 && this._interceptRegExpList.push(e6) : 2 === s5 && (1 === c5 ? this._replacingProfanityMap.set(e6, r5) : 2 === c5 && this._replacingRegExpMap.set(e6, r5));
              }
            } catch (f4) {
              n5.e(f4);
            } finally {
              n5.f();
            }
          }
        } }, { key: "_getDecryptedString", value: function(t5) {
          var e6 = u4.AES.decrypt(t5, this._key, this._decryptOptions);
          return u4.enc.Utf8.stringify(e6).toLowerCase();
        } }, { key: "onLexiconCompleted", value: function(t5) {
          this.onLexiconSliced(t5), this._interceptFilter = new h4({ input: this._interceptProfanityList, isArray: this._isArray, isMap: this._isMap }), this._replacingFilter = new h4({ input: this._replacingProfanityMap, isArray: this._isArray, isMap: this._isMap }), true === this._isDevMode && (console.log("".concat(this._n, " _interceptProfanityList ->"), this._interceptProfanityList), console.log("".concat(this._n, " _interceptRegExpList ->"), this._interceptRegExpList), console.log("".concat(this._n, " _replacingProfanityMap ->"), this._replacingProfanityMap), console.log("".concat(this._n, " _replacingRegExpMap ->"), this._replacingRegExpMap));
        } }, { key: "filter", value: function(t5) {
          var e6 = { type: 0, modifiedText: t5 };
          if ("string" != typeof t5)
            return true === this._isDevMode && console.warn("".concat(this._n, ".filter invalid params, string required!")), e6;
          if (true === this._interceptFilter.filter({ text: t5, replacingEnabled: false }).isMatched)
            return e6.type = 1, e6;
          for (var r5 = false, n5 = 0, o5 = this._interceptRegExpList.length; n5 < o5; n5++)
            if (new RegExp(this._interceptRegExpList[n5], "gi").test(t5.toLowerCase())) {
              r5 = true;
              break;
            }
          if (r5)
            return e6.type = 1, e6;
          var s5 = this._replacingFilter.filter({ text: t5, replacingEnabled: true });
          true === s5.isMatched && (e6.type = 2, e6.modifiedText = s5.modifiedText);
          var c5, h5 = e6.modifiedText, l5 = null, f4 = a4(this._replacingRegExpMap);
          try {
            for (f4.s(); !(c5 = f4.n()).done; ) {
              var u5 = i4(c5.value, 2), d3 = u5[0], p4 = u5[1];
              l5 = new RegExp(d3, "gi"), h5 = h5.replace(l5, p4);
            }
          } catch (_3) {
            f4.e(_3);
          } finally {
            f4.f();
          }
          return h5 !== t5 && (e6.type = 2, e6.modifiedText = h5), e6;
        } }, { key: "reset", value: function() {
          this._isArray = null, this._isMap = null, this._interceptProfanityList.length = 0, this._interceptRegExpList.length = 0, this._replacingProfanityMap.clear(), this._replacingRegExpMap.clear(), this._key = "", this._iv = "", this._decryptOptions = {}, this._interceptFilter && this._interceptFilter.reset(), this._replacingFilter && this._replacingFilter.reset();
        } }]), e5;
      }();
    });
  }
});

// D:/code/web/node_modules/@tencentcloud/tui-core/index.js
var import_chat = __toESM(require_chat());
var import_tim_upload_plugin = __toESM(require_tim_upload_plugin());
var import_tim_profanity_filter_plugin = __toESM(require_tim_profanity_filter_plugin());
var i = class {
  constructor() {
    this.serviceMap = /* @__PURE__ */ new Map();
  }
  registerService(e4, t4) {
    this.serviceMap.has(e4) || (console.log(`TUIServiceManager.registerService serviceName:${e4}`), this.serviceMap.set(e4, t4));
  }
  unregisterService(e4) {
    this.serviceMap.has(e4) && (console.log(`TUIServiceManager.unregisterService serviceName:${e4}`), this.serviceMap.delete(e4));
  }
  getService(e4) {
    return this.serviceMap.get(e4);
  }
  callService(e4) {
    const { serviceName: t4, method: n4, params: i4, callback: s4 } = e4, o4 = this.getService(t4);
    if (console.log(`TUIServiceManager.callService serviceName:${t4}, service:`, o4), o4)
      return o4.onCall(n4, i4, s4);
  }
};
var s = class {
  constructor() {
    this.extensionMap = /* @__PURE__ */ new Map();
  }
  registerExtension(e4, t4) {
    if (console.log(`TUIExtensionManager.registerExtension extensionID:${e4}`), !this.extensionMap.has(e4)) {
      const t5 = [];
      this.extensionMap.set(e4, t5);
    }
    const n4 = this.extensionMap.get(e4);
    -1 === n4.indexOf(t4) && n4.push(t4);
  }
  unregisterExtension(e4, t4) {
    if (console.log(`TUIExtensionManager.unregisterExtension extensionID:${e4}`), this.extensionMap.has(e4)) {
      const n4 = this.extensionMap.get(e4), i4 = n4.indexOf(t4);
      i4 > -1 && n4.splice(i4, 1);
    }
  }
  getExtensionList(e4, t4) {
    const n4 = t4 ? `params:${JSON.stringify(t4)}` : "";
    console.log(`TUIExtensionManager.getExtensionList extensionID:${e4} ${n4}`);
    let i4 = [], s4 = [];
    if (this.extensionMap.has(e4)) {
      i4 = this.extensionMap.get(e4);
      for (let n5 = 0; n5 < i4.length; n5++) {
        const o4 = i4[n5].onGetExtension(e4, t4);
        s4 = s4.concat(o4);
      }
    }
    return s4;
  }
};
var o = ["vue2", "vue3", "rn"];
var E = { TUILogin: { EVENT: { LOGIN_STATE_CHANGED: "loginStateChanged" }, EVENT_SUB_KEY: { USER_LOGIN_SUCCESS: "userLoginSuccess", USER_LOGOUT_SUCCESS: "userLogoutSuccess", USER_KICKED_OFFLINE: "userKickedOffline", USER_SIG_EXPIRED: "userSigExpired" } }, TUIConversation: { SERVICE: { NAME: "TUIConversationService", METHOD: { CREATE_CONVERSATION: "createConversation", HIDE_CONVERSATION_HEADER: "hideConversationHeader" } }, EXTENSION: { CONV_POP_MENU: { EXT_ID: "conversationPopMenu" }, CONV_GROUP: { EXT_ID: "conversationGroup" } } }, TUIChat: { SERVICE: { NAME: "TUIChatService", METHOD: { UPDATE_MESSAGE_LIST: "updateMessageList", CLOSE_MESSAGE_POP_MENU: "closeMessagePopMenu", SEND_CUSTOM_MESSAGE: "sendCustomMessage", SEND_TEXT_MESSAGE: "sendTextMessage", SET_CHAT_TYPE: "setChatType", UPDATE_MESSAGE_INFO: "updateMessageInfo" } }, EXTENSION: { INPUT_MORE: { EXT_ID: "inputToolBarMore" }, MSG_POP_MENU: { EXT_ID: "messagePopMenu" }, CHAT_HEADER: { EXT_ID: "chatHeader" } }, TYPE: { C2C: "C2C", GROUP: "GROUP", CUSTOMER_SERVICE: "customerService", ROOM: "room" }, EVENT: { CHAT_STATE_CHANGED: "chatStateChanged", CHAT_TYPE_CHANGED: "chatTypeChanged" }, EVENT_SUB_KEY: { CHAT_OPENED: "chatOpened", CHANGE_SUCCESS: "changeSuccess" }, FEATURE: { DownloadFile: "DownloadFile", CopyMessage: "CopyMessage", DeleteMessage: "DeleteMessage", RevokeMessage: "RevokeMessage", QuoteMessage: "QuoteMessage", ForwardMessage: "ForwardMessage", TranslateMessage: "TranslateMessage", VoiceToText: "VoiceToText", MultiSelection: "MultiSelection", EmojiReaction: "EmojiReaction", InputEmoji: "InputEmoji", InputStickers: "InputStickers", InputImage: "InputImage", InputVoice: "InputVoice", InputVideo: "InputVideo", InputFile: "InputFile", InputEvaluation: "InputEvaluation", InputQuickReplies: "InputQuickReplies", InputMention: "InputMention", MessageSearch: "MessageSearch", ReadStatus: "ReadStatus" } }, TUIGroup: { SERVICE: { NAME: "TUIGroupService", METHOD: { CREATE_GROUP: "createGroup", OPEN_GROUP_MANAGEMENT: "openGroupManagement", SELECT_GROUP_MEMBER: "selectGroupMember" } } }, TUIContact: { SERVICE: { NAME: "TUIContactService", METHOD: { SELECT_FRIEND: "selectFriend" } }, EXTENSION: { CONTACT_LIST: { EXT_ID: "contactList" } } }, TUISearch: { SERVICE: { NAME: "TUISearchService", METHOD: { SEARCH_GROUP: "searchGroup", SEARCH_USER: "searchUser", SEARCH_FRIEND: "searchFriend", SEARCH_GROUP_MEMBER: "searchGroupMember" } }, EXTENSION: { SEARCH_MORE: { EXT_ID: "searchMore" } } }, TUICalling: { SERVICE: { NAME: "TUICallingService", METHOD: { START_CALL: "startCall" } } }, TUIRoom: { SERVICE: { NAME: "TUIRoomService" } }, TUIEmojiPlugin: { SERVICE: { NAME: "TUIEmojiPluginService", METHOD: { CLOSE_EMOJI_DETAIL: "closeEmojiDetail" } } }, TUITranslate: { EVENT: { LANGUAGE_CHANGED: "languageChanged" }, EVENT_SUB_KEY: { CHANGE_SUCCESS: "changeSuccess" } }, TUITranslatePlugin: { SERVICE: { NAME: "TUITranslatePluginService" } }, TUIVoiceToTextPlugin: { SERVICE: { NAME: "TUIVoiceToTextPluginService" } }, TUICustomerServicePlugin: { SERVICE: { NAME: "TUICustomerServicePlugin", METHOD: { ACTIVE_CONVERSATION: "activeConversation", FILTER_MESSAGE: "filterMessage" } }, EXTENSION: {} }, TUIPushPlugin: { SERVICE: { NAME: "TUIPushPluginService" } }, TUIChatbotPlugin: { SERVICE: { NAME: "TUIChatbotPluginService" } }, TUITheme: { EVENT: { THEME_CHANGED: "themeChanged" }, EVENT_SUB_KEY: { CHANGE_SUCCESS: "changeSuccess" } } };
var r = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting);
var a = "undefined" != typeof uni && "undefined" == typeof window;
var g = r || a;
var S = "undefined" != typeof uni;
var c = ("undefined" != typeof uni || "undefined" != typeof window) && !g;
r ? wx : S ? uni : window;
var h = c && window && window.navigator && window.navigator.userAgent || "";
var T = /Android/i.test(h);
var u = /(?:Windows Phone)/.test(h);
var I = /(?:SymbianOS)/.test(h);
var l = /iPad/i.test(h) || /iPhone/i.test(h) || /iPod/i.test(h);
var C = T || u || I || l;
var M = c && !C;
var U = a && !r;
var _ = { [E.TUITranslatePlugin.SERVICE.NAME]: Math.pow(2, 38), [E.TUIVoiceToTextPlugin.SERVICE.NAME]: Math.pow(2, 39), [E.TUICustomerServicePlugin.SERVICE.NAME]: Math.pow(2, 40), [E.TUIPushPlugin.SERVICE.NAME]: Math.pow(2, 41), [E.TUIChatbotPlugin.SERVICE.NAME]: Math.pow(2, 42), [E.TUIEmojiPlugin.SERVICE.NAME]: Math.pow(2, 48) };
var N = class _N {
  constructor(e4) {
    this.loginStatusPromise = /* @__PURE__ */ new Map(), this.SDKAppID = 0, this.userID = "", this.userSig = "", this.TUICore = e4, this.isOnChatEvent = false;
  }
  static getInstance(e4) {
    return !_N.instance && e4 && (_N.instance = new _N(e4)), _N.instance;
  }
  login(t4) {
    const { SDKAppID: n4, userID: i4, userSig: s4, framework: o4 } = t4;
    return this.chat = import_chat.default.create(Object.assign(Object.assign({}, t4), { scene: this.getStatScene(o4) })), this.EVENT = import_chat.default.EVENT, this.TYPES = import_chat.default.TYPES, this.SDKAppID = n4, this.userID = i4, this.userSig = s4, this.offChatEvent(), this.onChatEvent(), this.registerPlugin(t4), this.loginChat(t4);
  }
  logout() {
    return this.chat.logout().then((e4) => (this.userID = "", this.userSig = "", this.TUICore.notifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_LOGOUT_SUCCESS), Promise.resolve(e4)));
  }
  destroy() {
    return this.chat.destroy().then((e4) => (this.userID = "", this.userSig = "", this.TUICore.notifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_LOGOUT_SUCCESS), Promise.resolve(e4)));
  }
  setLogLevel(e4) {
    return this.chat.setLogLevel(e4);
  }
  getContext() {
    return { chat: this.chat, SDKAppID: this.SDKAppID, userID: this.userID, userSig: this.userSig };
  }
  reportPlugin() {
    var e4;
    for (const t4 in _)
      this.TUICore.getService(t4) && (null === (e4 = this.chat.callExperimentalAPI("isFeatureEnabledForStat", _[t4])) || void 0 === e4 || e4.catch((e5) => {
      }));
  }
  loginChat(e4) {
    const { userID: t4, userSig: n4 } = e4;
    return new Promise((e5, i4) => {
      this.chat.login({ userID: t4, userSig: n4 }).then((t5) => {
        t5.data.repeatLogin && this.chat.isReady() && e5(t5), this.reportPlugin(), this.loginStatusPromise.set("login", { resolve: e5, reject: i4, imResponse: t5 });
      }).catch((e6) => {
        i4(e6);
      });
    });
  }
  onChatEvent() {
    this.chat.on(this.EVENT.SDK_READY, this.onSDKReady, this), this.chat.on(this.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.chat.on(this.EVENT.KICKED_OUT, this.onUserKicked, this), this.isOnChatEvent = true;
  }
  offChatEvent() {
    this.isOnChatEvent && (this.chat.off(this.EVENT.SDK_READY, this.onSDKReady, this), this.chat.off(this.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.chat.off(this.EVENT.KICKED_OUT, this.onUserKicked, this), this.isOnChatEvent = false);
  }
  onSDKReady() {
    if (this.loginStatusPromise.has("login")) {
      this.TUICore.notifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS);
      const e4 = setTimeout(() => {
        const t4 = this.loginStatusPromise.get("login");
        t4.resolve(t4.imResponse), clearTimeout(e4), this.loginStatusPromise.delete("login");
      }, 500);
    }
  }
  onSDKNotReady() {
    if (this.loginStatusPromise.has("login")) {
      this.loginStatusPromise.get("login").reject(new Error("sdk not ready"));
    }
    this.loginStatusPromise.delete("login");
  }
  onUserKicked(e4) {
    e4.data.type !== this.TYPES.KICKED_OUT_USERSIG_EXPIRED ? this.TUICore.notifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_KICKED_OFFLINE) : this.TUICore.notifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_SIG_EXPIRED);
  }
  registerPlugin(e4) {
    const { useUploadPlugin: i4 = false, useProfanityFilterPlugin: s4 = false, TUIOfflinePush: o4, offlinePushConfig: E4, TIMPush: r4, pushConfig: a4 } = e4;
    true === i4 && this.chat.registerPlugin({ "tim-upload-plugin": import_tim_upload_plugin.default }), true === s4 && this.chat.registerPlugin({ "tim-profanity-filter-plugin": import_tim_profanity_filter_plugin.default }), U && r4 && a4 && this.chat.registerPlugin({ "tim-push": r4, pushConfig: a4 }), U && o4 && E4 && this.chat.registerPlugin({ "tim-offline-push-plugin": o4, offlinePushConfig: E4 });
  }
  getStatScene(e4) {
    let t4;
    return e4 && o.indexOf(e4) > -1 && (t4 = this.genStatScene(e4)), t4;
  }
  genStatScene(e4) {
    if ("rn" === e4)
      return "k-rn";
    let t4 = "";
    return S ? (M && (t4 = `k-${e4}-pc-uni`), C && (t4 = `k-${e4}-h5-uni`), U && (t4 = `k-${e4}-app-uni`), r && (t4 = `k-${e4}-mp-uni`), t4) : (M && (t4 = `k-${e4}-pc`), C && (t4 = `k-${e4}-h5`), t4);
  }
};
var p = class {
  constructor() {
    this.eventMap = /* @__PURE__ */ new Map();
  }
  registerEvent(e4, t4, n4) {
    const i4 = this.getKey(e4, t4);
    if (console.log(`TUIEventManager.registerEvent eventName:${e4} subKey:${t4}`), !this.eventMap.has(i4)) {
      const e5 = [];
      this.eventMap.set(i4, e5);
    }
    const s4 = this.eventMap.get(i4);
    -1 === s4.indexOf(n4) && (s4.push(n4), this.renotify(e4, t4, n4));
  }
  unregisterEvent(e4, t4, n4) {
    console.log(`TUIEventManager.unregisterEvent eventName:${e4} subKey:${t4}`);
    const i4 = this.getKey(e4, t4);
    if (this.eventMap.has(i4)) {
      const e5 = this.eventMap.get(i4), t5 = e5.indexOf(n4);
      t5 > -1 && e5.splice(t5, 1);
    }
  }
  notifyEvent(e4, t4, n4) {
    const i4 = this.getKey(e4, t4), s4 = n4 ? `params:${JSON.stringify(n4)}` : "";
    if (console.log(`TUIEventManager.notifyEvent eventName:${e4} subKey:${t4} ${s4}`), this.eventMap.has(i4)) {
      this.eventMap.get(i4).forEach((i5) => {
        i5.onNotifyEvent(e4, t4, n4);
      });
    }
  }
  getKey(e4, t4) {
    let n4 = e4;
    return t4 && (n4 = `${e4}-${n4}`), n4;
  }
  renotify(e4, t4, n4) {
    if (e4 === E.TUILogin.EVENT.LOGIN_STATE_CHANGED && t4 === E.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS) {
      const { chat: e5 } = N.getInstance().getContext();
      e5 && e5.isReady() && (n4.onNotifyEvent(E.TUILogin.EVENT.LOGIN_STATE_CHANGED, E.TUILogin.EVENT_SUB_KEY.USER_LOGIN_SUCCESS), console.log("TUIEventManager.renotify success."));
    }
  }
};
var v = class _v {
  constructor() {
    this.serviceManager = new i(), this.extensionManager = new s(), this.eventManager = new p();
  }
  static getInstance() {
    return _v.instance || (console.log("TUICore.getInstance ok."), _v.instance = new _v()), _v.instance;
  }
  registerService(e4, t4) {
    return this.serviceManager.registerService(e4, t4);
  }
  unregisterService(e4) {
    return this.serviceManager.unregisterService(e4);
  }
  getService(e4) {
    return this.serviceManager.getService(e4);
  }
  callService(e4) {
    return this.serviceManager.callService(e4);
  }
  registerExtension(e4, t4) {
    return this.extensionManager.registerExtension(e4, t4);
  }
  unregisterExtension(e4, t4) {
    return this.extensionManager.unregisterExtension(e4, t4);
  }
  getExtensionList(e4, t4) {
    return this.extensionManager.getExtensionList(e4, t4);
  }
  registerEvent(e4, t4, n4) {
    return this.eventManager.registerEvent(e4, t4, n4);
  }
  unregisterEvent(e4, t4, n4) {
    return this.eventManager.unregisterEvent(e4, t4, n4);
  }
  notifyEvent(e4, t4, n4) {
    return this.eventManager.notifyEvent(e4, t4, n4);
  }
};
console.log("TUICore.VERSION:2.4.0");
var R = v.getInstance();
var A = N.getInstance(R);

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/_virtual/_plugin-vue_export-helper.mjs
var _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};

// D:/code/web/node_modules/@tencentcloud/universal-api/index.js
var e2 = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting);
var t2 = "undefined" != typeof uni && "undefined" == typeof window;
var n2 = e2 || t2;
var o2 = "undefined" != typeof uni;
var r2 = ("undefined" != typeof uni || "undefined" != typeof window) && !n2;
var i2 = e2 ? wx : o2 ? uni : "undefined" != typeof window ? window : {};
var s2 = r2 && window && window.navigator && window.navigator.userAgent || "";
var c2 = /Android/i.test(s2);
var l2 = /(?:Windows Phone)/.test(s2);
var a2 = /(?:SymbianOS)/.test(s2);
var u2 = /OpenHarmony/i.test(s2);
var d = r2 && ("ontouchstart" in window || navigator.maxTouchPoints > 0) && function() {
  if (r2) {
    if (/Tablet|Pad/i.test(s2))
      return true;
    if (180 === window.orientation || 0 === window.orientation)
      return window.innerWidth >= 768 && window.innerHeight >= 1024;
    if (90 === window.orientation || -90 === window.orientation)
      return window.innerWidth >= 1024 && window.innerHeight >= 768;
  }
  return false;
}();
var f = /iPhone/i.test(s2) || /iPod/i.test(s2);
var w = e2;
var h2 = c2 || l2 || a2 || f || d || u2;
var m = r2 && !h2;
var p2 = t2 && !e2;
function g2() {
  let e4 = "";
  return m ? e4 = "pc" : h2 ? e4 = "h5" : w ? e4 = "wechat" : p2 && (e4 = "app"), e4;
}
var E2 = /* @__PURE__ */ new Map();
function T2(e4, t4) {
  if (!e4)
    return Promise.reject(new Error(`getBoundingClientRect get error selector ${typeof e4}.`));
  if (window || document) {
    const t5 = "object" == typeof e4 ? e4 : document.querySelector(e4);
    if (!t5)
      return Promise.reject(new Error(`getBoundingClientRect can't find ${e4} dom.`));
    const n4 = t5.getBoundingClientRect();
    return Promise.resolve({ id: t5.id, top: n4.top, left: n4.left, right: n4.right, bottom: n4.bottom, width: n4.width, height: n4.height, x: n4.x, y: n4.y });
  }
  if (o2) {
    if (!t4)
      return Promise.reject(new Error("getBoundingClientRect need instanceName in params."));
    const n4 = uni.createSelectorQuery().in(E2.get(t4));
    return new Promise((t5, o4) => {
      n4.select(e4).boundingClientRect((e5) => {
        e5 && t5(e5);
      }).exec(), setTimeout(() => o4(new Error(`getBoundingClientRect ${e4} timeout.`)), 500);
    });
  }
  return Promise.reject(new Error("getBoundingClientRect occur error"));
}
function C2(e4) {
  if (o2)
    throw new Error("getBoundingClientRectSync can not use in uni-app.");
  if (window || document) {
    const t4 = "object" == typeof e4 ? e4 : document.querySelector(e4);
    if (!t4)
      throw new Error(`getBoundingClientRectSync can't find ${e4} dom.`);
    const n4 = t4.getBoundingClientRect();
    return { id: t4.id, top: n4.top, left: n4.left, right: n4.right, bottom: n4.bottom, width: n4.width, height: n4.height, x: n4.x, y: n4.y };
  }
  throw new Error("getBoundingClientRectSync occur error.");
}
function P(e4, t4) {
  if (!e4)
    return Promise.reject(new Error(`getScrollInfo get error selector ${typeof e4}.`));
  if (!o2 && window) {
    const t5 = "object" == typeof e4 ? e4 : document.querySelector(e4);
    return t5 ? Promise.resolve({ id: t5.id, scrollTop: t5.scrollTop, scrollLeft: t5.scrollLeft, scrollWidth: t5.scrollWidth, scrollHeight: t5.scrollHeight }) : Promise.reject(new Error(`getScrollInfo can't find ${e4} dom.`));
  }
  if (o2) {
    if (!t4)
      return Promise.reject(new Error("getScrollInfo need instanceName in params."));
    const n4 = uni.createSelectorQuery().in(E2.get(t4));
    return new Promise((t5, o4) => {
      n4.select(e4).scrollOffset((e5) => {
        e5 && t5(e5);
      }).exec(), setTimeout(() => o4(new Error(`getScrollInfo ${e4} timeout.`)), 500);
    });
  }
  return Promise.reject(new Error("getScrollInfo occur error"));
}
var L = class _L {
  constructor() {
    if (_L.instance)
      return _L.instance;
    _L.instance = this, this.eventCallback = null, this.listener = null, this.button = 0, this.init();
  }
  init() {
    r2 && (this.eventCallback = (e4) => {
      this.listener && this.listener(e4);
    }, document.addEventListener("mousedown", this.eventCallback));
  }
  listen(e4) {
    if (r2) {
      const { domRefs: t4, ignoreDomRefs: n4, handler: o4, button: r4 = 0 } = e4;
      this.button = r4, this.listener = (e5) => {
        const r5 = Array.isArray(n4) ? n4 : [n4];
        for (const t5 of r5)
          if (t5 && t5.contains(e5.target))
            return;
        const i4 = Array.isArray(t4) ? t4 : [t4];
        for (const t5 of i4)
          if (t5 && t5.contains(e5.target) && this.button === e5.button)
            return;
        o4(e5), this.remove();
      };
    }
  }
  remove() {
    this.listener = null, this.button = -1;
  }
};
console.log("UniversalAPI.VERSION:2.4.0");
var O = new L();

// D:/code/web/node_modules/@tencentcloud/chat-uikit-engine/index.js
var import_chat2 = __toESM(require_chat());
var import_tim_upload_plugin2 = __toESM(require_tim_upload_plugin());
var import_tim_profanity_filter_plugin2 = __toESM(require_tim_profanity_filter_plugin());
function n3(e4, t4) {
  var s4 = {};
  for (var n4 in e4)
    Object.prototype.hasOwnProperty.call(e4, n4) && t4.indexOf(n4) < 0 && (s4[n4] = e4[n4]);
  if (null != e4 && "function" == typeof Object.getOwnPropertySymbols) {
    var i4 = 0;
    for (n4 = Object.getOwnPropertySymbols(e4); i4 < n4.length; i4++)
      t4.indexOf(n4[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(e4, n4[i4]) && (s4[n4[i4]] = e4[n4[i4]]);
  }
  return s4;
}
function i3(e4, t4, s4, n4) {
  return new (s4 || (s4 = Promise))(function(i4, r4) {
    function a4(e5) {
      try {
        u4(n4.next(e5));
      } catch (e6) {
        r4(e6);
      }
    }
    function o4(e5) {
      try {
        u4(n4.throw(e5));
      } catch (e6) {
        r4(e6);
      }
    }
    function u4(e5) {
      var t5;
      e5.done ? i4(e5.value) : (t5 = e5.value, t5 instanceof s4 ? t5 : new s4(function(e6) {
        e6(t5);
      })).then(a4, o4);
    }
    u4((n4 = n4.apply(e4, t4 || [])).next());
  });
}
var r3 = class _r {
  constructor(e4) {
    return _r.instance || (_r.instance = this, this.engine = e4, this.events = {}, this.bindIMEvents()), _r.instance;
  }
  addEvent(e4, t4) {
    this.events[e4] || (this.events[e4] = /* @__PURE__ */ new Map()), this.events[e4].set(t4, 1);
  }
  removeEvents() {
    Object.keys(this.events).forEach((e4) => {
      this.events[e4].clear();
    }), this.events = {};
  }
  dispatch(e4, t4) {
    if (this.events[e4])
      for (const s4 of this.events[e4].keys())
        s4.call(this, t4);
  }
  bindIMEvents() {
    this.engine.chat.on(this.engine.EVENT.SDK_READY, this.onSDKReady, this), this.engine.chat.on(this.engine.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.engine.chat.on(this.engine.EVENT.KICKED_OUT, this.onKickedOut, this), this.engine.chat.on(this.engine.EVENT.NET_STATE_CHANGE, this.onNetStateChange, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_MODIFIED, this.onMessageModified, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_REVOKED, this.onMessageRevoked, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived, this), this.engine.chat.on(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated, this), this.engine.chat.on(this.engine.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated, this), this.engine.chat.on(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalMessageCountUpdated, this), this.engine.chat.on(this.engine.EVENT.PROFILE_UPDATED, this.onProfileUpdated, this), this.engine.chat.on(this.engine.EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated, this), this.engine.chat.on(this.engine.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated, this), this.engine.chat.on(this.engine.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated, this), this.engine.chat.on(this.engine.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated, this), this.engine.chat.on(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated, this);
  }
  unbindIMEvents() {
    this.engine.chat.off(this.engine.EVENT.SDK_READY, this.onSDKReady, this), this.engine.chat.off(this.engine.EVENT.SDK_NOT_READY, this.onSDKNotReady, this), this.engine.chat.off(this.engine.EVENT.KICKED_OUT, this.onKickedOut, this), this.engine.chat.off(this.engine.EVENT.NET_STATE_CHANGE, this.onNetStateChange, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_MODIFIED, this.onMessageModified, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_REVOKED, this.onMessageRevoked, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived, this), this.engine.chat.off(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated, this), this.engine.chat.off(this.engine.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated, this), this.engine.chat.off(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalMessageCountUpdated, this), this.engine.chat.off(this.engine.EVENT.PROFILE_UPDATED, this.onProfileUpdated, this), this.engine.chat.off(this.engine.EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated, this), this.engine.chat.off(this.engine.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated, this), this.engine.chat.off(this.engine.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated, this), this.engine.chat.off(this.engine.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated, this), this.engine.chat.off(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated, this);
  }
  onSDKReady(e4) {
    this.dispatch(this.engine.EVENT.SDK_READY, e4.data);
  }
  onSDKNotReady(e4) {
    this.dispatch(this.engine.EVENT.SDK_NOT_READY, e4.data);
  }
  onKickedOut(e4) {
    this.dispatch(this.engine.EVENT.KICKED_OUT, e4.data);
  }
  onNetStateChange(e4) {
    this.dispatch(this.engine.EVENT.NET_STATE_CHANGE, e4.data);
  }
  onReceiveMessage(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_RECEIVED, e4.data);
  }
  onMessageModified(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_MODIFIED, e4.data);
  }
  onMessageRevoked(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_REVOKED, e4.data);
  }
  onMessageReadByPeer(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_READ_BY_PEER, e4.data);
  }
  onMessageReadReceiptReceived(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, e4.data);
  }
  onMessageReactionsUpdated(e4) {
    this.dispatch(this.engine.EVENT.MESSAGE_REACTIONS_UPDATED, e4.data);
  }
  onConversationListUpdated(e4) {
    this.dispatch(this.engine.EVENT.CONVERSATION_LIST_UPDATED, e4.data);
  }
  onTotalMessageCountUpdated(e4) {
    this.dispatch(this.engine.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, e4.data);
  }
  onProfileUpdated(e4) {
    this.dispatch(this.engine.EVENT.PROFILE_UPDATED, e4.data);
  }
  onBlacklistUpdated(e4) {
    this.dispatch(this.engine.EVENT.BLACKLIST_UPDATED, e4.data);
  }
  onUserStatusUpdated(e4) {
    this.dispatch(this.engine.EVENT.USER_STATUS_UPDATED, e4.data);
  }
  onGroupListUpdated(e4) {
    this.dispatch(this.engine.EVENT.GROUP_LIST_UPDATED, e4.data);
  }
  onGroupAttributesUpdated(e4) {
    this.dispatch(this.engine.EVENT.GROUP_ATTRIBUTES_UPDATED, e4.data);
  }
  onGroupCounterUpdated(e4) {
    this.dispatch(this.engine.EVENT.GROUP_COUNTER_UPDATED, e4.data);
  }
  onFriendListUpdated(e4) {
    this.dispatch(this.engine.EVENT.FRIEND_LIST_UPDATED, e4.data);
  }
  onFriendApplicationListUpdated(e4) {
    this.dispatch(this.engine.EVENT.FRIEND_APPLICATION_LIST_UPDATED, e4.data);
  }
};
var a3;
var o3;
var u3;
var c3;
var g3;
var l3;
var h3;
var p3;
var d2;
!function(e4) {
  e4.TUIStore = "TUIStore", e4.TUITranslate = "TUITranslate", e4.TUIConversation = "TUIConversation", e4.TUIChat = "TUIChat", e4.TUIGroup = "TUIGroup", e4.TUIUser = "TUIUser", e4.TUIFriend = "TUIFriend", e4.TUIReport = "TUIReport";
}(a3 || (a3 = {})), function(e4) {
  e4.APP = "application", e4.CONV = "conversation", e4.CHAT = "chat", e4.GRP = "group", e4.USER = "user", e4.FRIEND = "friend", e4.SEARCH = "search", e4.CUSTOM = "custom";
}(o3 || (o3 = {})), function(e4) {
  e4[e4.UNSUB_USER = -1] = "UNSUB_USER";
}(u3 || (u3 = {})), function(e4) {
  e4.BUSINESS_ID = "user_typing_status", e4[e4.STATUS_START = 1] = "STATUS_START", e4[e4.STATUS_END = 0] = "STATUS_END", e4[e4.VERSION = 1] = "VERSION", e4[e4.ACTION_START_ID = 14] = "ACTION_START_ID", e4[e4.ACTION_END_ID = 0] = "ACTION_END_ID", e4.ACTION_START = "EIMAMSG_InputStatus_Ing", e4.ACTION_END = "EIMAMSG_InputStatus_End", e4[e4.NEED_TYPING = 1] = "NEED_TYPING";
}(c3 || (c3 = {})), function(e4) {
  e4.ADD = "add", e4.REMOVE = "remove";
}(g3 || (g3 = {})), function(e4) {
  e4[e4.MSG_MODIFY_CONFLICT = 2480] = "MSG_MODIFY_CONFLICT", e4[e4.MSG_MODIFY_DISABLED_IN_AVCHATROOM = 2481] = "MSG_MODIFY_DISABLED_IN_AVCHATROOM", e4[e4.MODIFY_MESSAGE_NOT_EXIST = 20026] = "MODIFY_MESSAGE_NOT_EXIST";
}(l3 || (l3 = {})), function(e4) {
  e4[e4.NOT_INIT = -1e5] = "NOT_INIT", e4[e4.INVALID_CONV_ID = -100001] = "INVALID_CONV_ID", e4[e4.CONV_ID_SAME = -100002] = "CONV_ID_SAME", e4[e4.CONV_NOT_EXIST = -100003] = "CONV_NOT_EXIST", e4[e4.GET_MSG_LIST_ERROR = -100004] = "GET_MSG_LIST_ERROR", e4[e4.MISMATCH_TYPE_AND_PAYLOAD = -100005] = "MISMATCH_TYPE_AND_PAYLOAD";
}(h3 || (h3 = {})), function(e4) {
  e4.MSG_MODIFY_CONFLICT = "MODIFY_MESSAGE_ERROR,修改消息发生冲突, data.message 是最新的消息", e4.MSG_MODIFY_DISABLED_IN_AVCHATROOM = "MODIFY_MESSAGE_ERROR,不支持修改直播群消息.", e4.MODIFY_MESSAGE_NOT_EXIST = "MODIFY_MESSAGE_ERROR,消息不存在.";
}(p3 || (p3 = {})), function(e4) {
  e4.NOT_INIT = "TUIChatEngine 初始化未完成，请确认 TUIChatEngine.login 接口调用是否正常。", e4.INVALID_CONV_ID = "会话 ID 无效", e4.CONV_ID_SAME = "您切换的是同一个会话 ID", e4.CONV_NOT_EXIST = "会话不存在", e4.GET_MSG_LIST_ERROR = "Chat SDK is not ready.", e4.MISMATCH_TYPE_AND_PAYLOAD = "type 与 payload 不匹配.";
}(d2 || (d2 = {}));
var f2 = { logout: 1, destroy: 1 };
var m2 = { deleteConversation: 1, pinConversation: 1, muteConversation: 1, switchConversation: 1, getConversationProfile: 1, clearHistoryMessage: 1 };
var v2 = { modifyMessage: 1, revokeMessage: 1, resendMessage: 1, deleteMessage: 1, quoteMessage: 1, replyMessage: 1, setMessageExtensions: 1, deleteMessageExtensions: 1, getMessageExtensions: 1, sendTextMessage: 1, sendTextAtMessage: 1, sendImageMessage: 1, sendAudioMessage: 1, sendVideoMessage: 1, sendFileMessage: 1, sendCustomMessage: 1, sendFaceMessage: 1, sendLocationMessage: 1, sendForwardMessage: 1, enterTypingState: 1, leaveTypingState: 1, sendMessageReadReceipt: 1, getGroupMessageReadMemberList: 1, getMessageList: 1, downloadMergedMessages: 1, setTranslationLanguage: 1, translateText: 1, searchCloudMessages: 1, addMessageReaction: 1, removeMessageReaction: 1, getMessageReactions: 1, getAllUserListOfMessageReaction: 1 };
var T3 = { switchGroup: 1, getGroupProfile: 1, updateGroupProfile: 1, createGroup: 1, dismissGroup: 1, searchGroupByID: 1, joinGroup: 1, quitGroup: 1, getGroupApplicationList: 1, handleGroupApplication: 1, getGroupOnlineMemberCount: 1, changeGroupOwner: 1, initGroupAttributes: 1, setGroupAttributes: 1, deleteGroupAttributes: 1, getGroupAttributes: 1, setGroupCounters: 1, increaseGroupCounter: 1, decreaseGroupCounter: 1, getGroupCounters: 1, getGroupMemberList: 1, getGroupMemberProfile: 1, addGroupMember: 1, deleteGroupMember: 1, setGroupMemberMuteTime: 1, setGroupMemberRole: 1, setGroupMemberNameCard: 1, setGroupMemberCustomField: 1, markGroupMemberList: 1 };
var E3 = { switchUserStatus: 1, switchMessageReadStatus: 1, getUserProfile: 1, updateMyProfile: 1, addToBlacklist: 1, removeFromBlacklist: 1 };
var I2 = { getFriendList: 1, addFriend: 1, deleteFriend: 1, checkFriend: 1, getFriendProfile: 1, updateFriend: 1, acceptFriendApplication: 1, refuseFriendApplication: 1, deleteFriendApplication: 1, setFriendApplicationRead: 1 };
var S2 = function(e4) {
  return void 0 === e4;
};
var y = function(e4) {
  return e4.startsWith("_");
};
var b = function(e4) {
  return /^(https?:\/\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?$/.test(e4);
};
var U2 = function(e4) {
  return e4 && function(e5) {
    if ("string" == typeof e5)
      try {
        return !!JSON.parse(e5);
      } catch (e6) {
        return false;
      }
    return false;
  }(e4) ? JSON.parse(e4) : e4;
};
var C3 = function(e4) {
  let t4 = "";
  return t4 = e4 >= 1048576 ? `${(e4 / 1048576).toFixed(2)} Mb` : e4 >= 1024 ? `${(e4 / 1024).toFixed(2)} Kb` : `${e4.toFixed(2)}B`, t4;
};
var M2 = "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_16.png";
var O2 = "https://web.sdk.qcloud.com/im/demo/TUIkit/web/img/constomer.png";
var _2 = "https://web.sdk.qcloud.com/component/TUIKit/assets/group_avatar.png";
var D = "https://web.sdk.qcloud.com/im/assets/emoji-plugin/";
var P2 = "https://web.sdk.qcloud.com/im/assets/face-elem/";
var R2 = "https://map.qq.com/?type=marker&isopeninfowin=1&markertype=1&";
var L2 = "https://apis.map.qq.com/ws/staticmap/v2/?";
var A2 = { "[TUIEmoji_Expect]": "emoji_0@2x.png", "[TUIEmoji_Blink]": "emoji_1@2x.png", "[TUIEmoji_Guffaw]": "emoji_2@2x.png", "[TUIEmoji_KindSmile]": "emoji_3@2x.png", "[TUIEmoji_Haha]": "emoji_4@2x.png", "[TUIEmoji_Cheerful]": "emoji_5@2x.png", "[TUIEmoji_Smile]": "emoji_6@2x.png", "[TUIEmoji_Sorrow]": "emoji_7@2x.png", "[TUIEmoji_Speechless]": "emoji_8@2x.png", "[TUIEmoji_Amazed]": "emoji_9@2x.png", "[TUIEmoji_Complacent]": "emoji_10@2x.png", "[TUIEmoji_Lustful]": "emoji_11@2x.png", "[TUIEmoji_Stareyes]": "emoji_12@2x.png", "[TUIEmoji_Giggle]": "emoji_13@2x.png", "[TUIEmoji_Daemon]": "emoji_14@2x.png", "[TUIEmoji_Rage]": "emoji_15@2x.png", "[TUIEmoji_Yawn]": "emoji_16@2x.png", "[TUIEmoji_TearsLaugh]": "emoji_17@2x.png", "[TUIEmoji_Silly]": "emoji_18@2x.png", "[TUIEmoji_Wail]": "emoji_19@2x.png", "[TUIEmoji_Kiss]": "emoji_20@2x.png", "[TUIEmoji_Trapped]": "emoji_21@2x.png", "[TUIEmoji_Fear]": "emoji_22@2x.png", "[TUIEmoji_BareTeeth]": "emoji_23@2x.png", "[TUIEmoji_FlareUp]": "emoji_24@2x.png", "[TUIEmoji_Tact]": "emoji_25@2x.png", "[TUIEmoji_Shit]": "emoji_26@2x.png", "[TUIEmoji_ShutUp]": "emoji_27@2x.png", "[TUIEmoji_Sigh]": "emoji_28@2x.png", "[TUIEmoji_Hehe]": "emoji_29@2x.png", "[TUIEmoji_Silent]": "emoji_30@2x.png", "[TUIEmoji_Skull]": "emoji_31@2x.png", "[TUIEmoji_Mask]": "emoji_32@2x.png", "[TUIEmoji_Beer]": "emoji_33@2x.png", "[TUIEmoji_Cake]": "emoji_34@2x.png", "[TUIEmoji_RedPacket]": "emoji_35@2x.png", "[TUIEmoji_Bombs]": "emoji_36@2x.png", "[TUIEmoji_Ai]": "emoji_37@2x.png", "[TUIEmoji_Celebrate]": "emoji_38@2x.png", "[TUIEmoji_Bless]": "emoji_39@2x.png", "[TUIEmoji_Flower]": "emoji_40@2x.png", "[TUIEmoji_Watermelon]": "emoji_41@2x.png", "[TUIEmoji_Cow]": "emoji_42@2x.png", "[TUIEmoji_Fool]": "emoji_43@2x.png", "[TUIEmoji_Surprised]": "emoji_44@2x.png", "[TUIEmoji_Askance]": "emoji_45@2x.png", "[TUIEmoji_Monster]": "emoji_46@2x.png", "[TUIEmoji_Pig]": "emoji_47@2x.png", "[TUIEmoji_Coffee]": "emoji_48@2x.png", "[TUIEmoji_Ok]": "emoji_49@2x.png", "[TUIEmoji_Heart]": "emoji_50@2x.png", "[TUIEmoji_Sun]": "emoji_51@2x.png", "[TUIEmoji_Moon]": "emoji_52@2x.png", "[TUIEmoji_Star]": "emoji_53@2x.png", "[TUIEmoji_Rich]": "emoji_54@2x.png", "[TUIEmoji_Fortune]": "emoji_55@2x.png", "[TUIEmoji_857]": "emoji_56@2x.png", "[TUIEmoji_666]": "emoji_57@2x.png", "[TUIEmoji_Prohibit]": "emoji_58@2x.png", "[TUIEmoji_Convinced]": "emoji_59@2x.png", "[TUIEmoji_Knife]": "emoji_60@2x.png", "[TUIEmoji_Like]": "emoji_61@2x.png" };
var j = { "[TUIEmoji_Smile]": "[微笑]", "[TUIEmoji_Expect]": "[期待]", "[TUIEmoji_Blink]": "[眨眼]", "[TUIEmoji_Guffaw]": "[大笑]", "[TUIEmoji_KindSmile]": "[姨母笑]", "[TUIEmoji_Haha]": "[哈哈哈]", "[TUIEmoji_Cheerful]": "[愉快]", "[TUIEmoji_Speechless]": "[无语]", "[TUIEmoji_Amazed]": "[惊讶]", "[TUIEmoji_Sorrow]": "[悲伤]", "[TUIEmoji_Complacent]": "[得意]", "[TUIEmoji_Silly]": "[傻了]", "[TUIEmoji_Lustful]": "[色]", "[TUIEmoji_Giggle]": "[憨笑]", "[TUIEmoji_Kiss]": "[亲亲]", "[TUIEmoji_Wail]": "[大哭]", "[TUIEmoji_TearsLaugh]": "[哭笑]", "[TUIEmoji_Trapped]": "[困]", "[TUIEmoji_Mask]": "[口罩]", "[TUIEmoji_Fear]": "[恐惧]", "[TUIEmoji_BareTeeth]": "[龇牙]", "[TUIEmoji_FlareUp]": "[发怒]", "[TUIEmoji_Yawn]": "[打哈欠]", "[TUIEmoji_Tact]": "[机智]", "[TUIEmoji_Stareyes]": "[星星眼]", "[TUIEmoji_ShutUp]": "[闭嘴]", "[TUIEmoji_Sigh]": "[叹气]", "[TUIEmoji_Hehe]": "[呵呵]", "[TUIEmoji_Silent]": "[收声]", "[TUIEmoji_Surprised]": "[惊喜]", "[TUIEmoji_Askance]": "[白眼]", "[TUIEmoji_Ok]": "[OK]", "[TUIEmoji_Shit]": "[便便]", "[TUIEmoji_Monster]": "[怪兽]", "[TUIEmoji_Daemon]": "[恶魔]", "[TUIEmoji_Rage]": "[恶魔怒]", "[TUIEmoji_Fool]": "[衰]", "[TUIEmoji_Pig]": "[猪]", "[TUIEmoji_Cow]": "[牛]", "[TUIEmoji_Ai]": "[AI]", "[TUIEmoji_Skull]": "[骷髅]", "[TUIEmoji_Bombs]": "[炸弹]", "[TUIEmoji_Coffee]": "[咖啡]", "[TUIEmoji_Cake]": "[蛋糕]", "[TUIEmoji_Beer]": "[啤酒]", "[TUIEmoji_Flower]": "[花]", "[TUIEmoji_Watermelon]": "[瓜]", "[TUIEmoji_Rich]": "[壕]", "[TUIEmoji_Heart]": "[爱心]", "[TUIEmoji_Moon]": "[月亮]", "[TUIEmoji_Sun]": "[太阳]", "[TUIEmoji_Star]": "[星星]", "[TUIEmoji_RedPacket]": "[红包]", "[TUIEmoji_Celebrate]": "[庆祝]", "[TUIEmoji_Bless]": "[福]", "[TUIEmoji_Fortune]": "[发]", "[TUIEmoji_Convinced]": "[服]", "[TUIEmoji_Prohibit]": "[禁]", "[TUIEmoji_666]": "[666]", "[TUIEmoji_857]": "[857]", "[TUIEmoji_Knife]": "[刀]", "[TUIEmoji_Like]": "[赞]" };
var k = { enabledMessageReadReceipt: Math.pow(2, 5), enabledEmojiPlugin: Math.pow(2, 48), enabledOnlineStatus: Math.pow(2, 7), enabledCustomerServicePlugin: Math.pow(2, 40), enabledTranslationPlugin: Math.pow(2, 38), enabledVoiceToText: Math.pow(2, 39) };
var N2 = ["messageList", "conversationList", "newMessageList"];
var x = ["translateTextInfo", "voiceToTextInfo"];
var G = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting);
var w2 = "undefined" != typeof uni && "undefined" == typeof window;
var V = G || w2;
var F = "undefined" != typeof uni;
var $ = ("undefined" != typeof uni || "undefined" != typeof window) && !V;
var H = G ? wx : F ? uni : window;
var Y = $ && window && window.navigator && window.navigator.userAgent || "";
var B = /Android/i.test(Y);
var K = /(?:Windows Phone)/.test(Y);
var q = /(?:SymbianOS)/.test(Y);
var z = /iPad/i.test(Y) || /iPhone/i.test(Y) || /iPod/i.test(Y);
var J = B || K || q || z;
var W = $ && !J;
var X = class _X {
  constructor() {
    this.global = H, this.isOfficial = false;
  }
  static getInstance() {
    return _X.instance || (_X.instance = new _X()), _X.instance;
  }
  initOfficial(e4) {
    this.isOfficial = e4;
  }
  getPlatform() {
    let e4 = "";
    return W ? e4 = "pc" : J ? e4 = "h5" : G ? e4 = "wechat" : w2 && !G && (e4 = "app"), e4;
  }
};
var Z = "group-module";
var Q = "relationship-module";
var ee = class _ee {
  constructor() {
    this.EVENT = import_chat2.default.EVENT, this.TYPES = import_chat2.default.TYPES, this.loginStatusPromise = /* @__PURE__ */ new Map(), this.userID = "", this.isInited = false;
  }
  static getInstance() {
    return _ee.instance || (_ee.instance = new _ee()), _ee.instance;
  }
  mount(e4, t4) {
    this[e4] = t4;
  }
  login(t4) {
    const { chat: s4, SDKAppID: n4, userID: i4 } = t4, a4 = 1400187352 === n4 || 1400188366 === n4;
    return this.createChat(t4), this.userID = i4, X.getInstance().initOfficial(a4), this.TUIStore.update(o3.APP, "isOfficial", a4), this.TUIStore.update(o3.APP, "SDKVersion", import_chat2.default.VERSION), this.eventCenter = new r3(this), this.eventCenter.removeEvents(), this.resetStore(), this.initService(), s4 && s4.isReady() ? (console.log("TUIChatEngine.login ok, from TUICore."), this.TUIUser.getUserProfile(), this.checkCommercialAbility(), Promise.resolve({})) : (this.registerPlugin(t4), this.eventCenter.addEvent(this.EVENT.SDK_READY, () => {
      this.onSDKReady();
    }), this.eventCenter.addEvent(this.EVENT.SDK_NOT_READY, () => {
      this.onSDKNotReady();
    }), this.loginChat(t4));
  }
  logout() {
    return this.userID = "", this.isInited = false, this.resetStore(), this.chat.logout();
  }
  isReady() {
    var e4;
    return (null === (e4 = this.chat) || void 0 === e4 ? void 0 : e4.isReady()) || false;
  }
  setLogLevel(e4) {
    this.chat ? this.chat.setLogLevel(e4) : console.warn("TUIChatEngine 初始化未完成，请确认 TUIChatEngine.login 接口调用是否正常。");
  }
  destroy() {
    return this.eventCenter.unbindIMEvents(), this.isInited = false, this.resetStore(), this.chat.destroy();
  }
  getMyUserID() {
    return this.userID;
  }
  resetStore() {
    this.TUIStore.reset(o3.CHAT), this.TUIStore.reset(o3.CONV), this.TUIStore.reset(o3.GRP), this.TUIStore.reset(o3.USER), this.TUIStore.reset(o3.SEARCH), this.TUIStore.reset(o3.FRIEND), this.TUIStore.reset(o3.CUSTOM), console.log("TUIChatEngine.resetStore ok.");
  }
  initService() {
    this.TUIChat.init(), this.TUIConversation.init(), this.TUIUser.init(), this.initOptionalServices(), this.isInited = true, console.log("TUIChatEngine.initService ok.");
  }
  initOptionalServices() {
    const t4 = import_chat2.default.VERSION.split(".");
    t4[0] > 3 || 3 === t4[0] && t4[1] >= 3 && t4[2] > 0 ? (true === this.chat.callExperimentalAPI("canIUseModule", [Z]) && this.TUIGroup.init(), true === this.chat.callExperimentalAPI("canIUseModule", [Q]) && this.TUIFriend.init()) : (this.TUIGroup.init(), this.TUIFriend.init());
  }
  createChat(t4) {
    const { chat: s4 } = t4, i4 = n3(t4, ["chat"]);
    S2(s4) ? this.chat = import_chat2.default.create(Object.assign(Object.assign({}, i4), { scene: "chat-uikit-engine" })) : this.chat = s4;
  }
  loginChat(e4) {
    const { userID: t4, userSig: s4 } = e4;
    return new Promise((e5, n4) => {
      this.chat.login({ userID: t4, userSig: s4 }).then((t5) => {
        console.log("TUIChatEngine.loginChat ok."), this.checkCommercialAbility(), t5.data.repeatLogin && this.chat.isReady() && e5(t5), this.loginStatusPromise.set("login", { resolve: e5, reject: n4, imResponse: t5 });
      }).catch((e6) => {
        n4(e6);
      });
    });
  }
  registerPlugin(e4) {
    const { useUploadPlugin: n4 = false, useProfanityFilterPlugin: i4 = false, TIMPush: r4, pushConfig: a4, TUIOfflinePush: o4, offlinePushConfig: u4 } = e4;
    true === n4 && this.chat.registerPlugin({ "tim-upload-plugin": import_tim_upload_plugin2.default }), true === i4 && this.chat.registerPlugin({ "tim-profanity-filter-plugin": import_tim_profanity_filter_plugin2.default }), !w2 || G || S2(r4) || S2(a4) || this.chat.registerPlugin({ "tim-push": r4, pushConfig: a4 }), !w2 || G || S2(o4) || S2(u4) || this.chat.registerPlugin({ "tim-offline-push-plugin": o4, offlinePushConfig: u4 });
  }
  onSDKReady() {
    if (this.loginStatusPromise.has("login")) {
      const e4 = this.loginStatusPromise.get("login");
      e4.resolve(e4.imResponse), this.TUIUser.getUserProfile();
    }
    this.loginStatusPromise.delete("login");
  }
  onSDKNotReady() {
    if (this.loginStatusPromise.has("login")) {
      this.loginStatusPromise.get("login").reject(new Error("sdk not ready"));
    }
    this.loginStatusPromise.delete("login"), this.resetStore();
  }
  checkCommercialAbility() {
    Object.keys(k).forEach((e4) => {
      const t4 = k[e4];
      this.chat.callExperimentalAPI("isCommercialAbilityEnabled", t4).then((t5) => {
        const { enabled: s4 = false } = t5.data;
        this.TUIStore.update(o3.APP, e4, s4);
      });
    });
  }
};
var te = class {
  constructor() {
    this.defaultStore = { enabledMessageReadReceipt: false, enabledEmojiPlugin: false, enabledOnlineStatus: false, enabledCustomerServicePlugin: false, enabledTranslationPlugin: false, enabledVoiceToText: false, enableTyping: true, enableConversationDraft: true, isOfficial: false, SDKVersion: "3.0.0", tasks: { sendMessage: false, revokeMessage: false, modifyNickName: false, groupChat: false, muteGroup: false, dismissGroup: false, call: false, searchCloudMessage: false, customerService: false, translateTextMessage: false } }, this.store = { enabledEmojiPlugin: false, enabledMessageReadReceipt: false, enabledOnlineStatus: false, enabledCustomerServicePlugin: false, enabledTranslationPlugin: false, enabledVoiceToText: false, enableTyping: true, enableConversationDraft: true, isOfficial: false, SDKVersion: "3.0.0", tasks: { sendMessage: false, revokeMessage: false, modifyNickName: false, groupChat: false, muteGroup: false, dismissGroup: false, call: false, searchCloudMessage: false, customerService: false, translateTextMessage: false } };
  }
  update(e4, t4) {
    this.store[e4] = t4;
  }
  getData(e4) {
    return this.store[e4];
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
};
var se = class {
  constructor() {
    this.defaultStore = { userProfile: {}, displayOnlineStatus: false, displayMessageReadReceipt: true, userStatusList: /* @__PURE__ */ new Map(), kickedOut: "", netStateChange: "", userBlacklist: [], targetLanguage: "zh" }, this.store = { userProfile: {}, displayOnlineStatus: false, displayMessageReadReceipt: true, userStatusList: /* @__PURE__ */ new Map(), kickedOut: "", netStateChange: "", userBlacklist: [], targetLanguage: "zh" };
  }
  update(e4, t4) {
    if ("userStatusList" === e4)
      this.updateUserStatusList(t4);
    else
      this.store[e4] = t4;
  }
  getData(e4) {
    return this.store[e4];
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
  updateUserStatusList(e4) {
    0 !== e4.length ? e4.forEach((e5) => {
      const { userID: t4, statusType: s4 = 0, customStatus: n4 = "" } = e5;
      s4 === u3.UNSUB_USER ? this.store.userStatusList.delete(t4) : this.store.userStatusList.set(t4, { statusType: s4, customStatus: n4 });
    }) : this.store.userStatusList.clear();
  }
};
var ne = class {
  getEngine() {
    return ee.getInstance();
  }
};
var ie = function(e4) {
  if (null == e4)
    return true;
  if ("boolean" == typeof e4)
    return false;
  if ("number" == typeof e4)
    return 0 === e4;
  if ("string" == typeof e4)
    return 0 === e4.length;
  if ("function" == typeof e4)
    return 0 === e4.length;
  if (Array.isArray(e4))
    return 0 === e4.length;
  if (e4 instanceof Error)
    return "" === e4.message;
  if (function(e5) {
    if ("object" != typeof e5 || null === e5)
      return false;
    const t4 = Object.getPrototypeOf(e5);
    if (null === t4)
      return true;
    let s4 = t4;
    for (; null !== Object.getPrototypeOf(s4); )
      s4 = Object.getPrototypeOf(s4);
    return t4 === s4;
  }(e4)) {
    for (const t4 in e4)
      if (Object.prototype.hasOwnProperty.call(e4, t4))
        return false;
    return true;
  }
  return false;
};
var re = ["[图片]", "[语音]", "[视频]", "[文件]", "[位置]", "[地理位置]", "[动画表情]", "[自定义消息]", "[群提示消息]", "[聊天记录]"];
var ae = class extends ne {
  constructor(e4) {
    super(), this.initProxy(e4), this.isMuted = this.messageRemindType === this.getEngine().TYPES.MSG_REMIND_ACPT_NOT_NOTE || this.messageRemindType === this.getEngine().TYPES.MSG_REMIND_DISCARD, this.operationType = 0, this._conversation = e4;
  }
  initProxy(e4) {
    Object.keys(e4).forEach((t4) => {
      y(t4) || (this[t4] = e4[t4]);
    });
  }
  updateProperties(e4) {
    Object.keys(e4).forEach((t4) => {
      y(t4) || (this[t4] = e4[t4]);
    });
  }
  updateOperationType(e4) {
    this.operationType = e4;
  }
  getConversation() {
    return this._conversation;
  }
  deleteConversation() {
    return this.getEngine().TUIConversation.deleteConversation(this.conversationID);
  }
  pinConversation() {
    return this.getEngine().TUIConversation.pinConversation({ conversationID: this.conversationID, isPinned: !this.isPinned });
  }
  muteConversation() {
    const e4 = this.getEngine(), t4 = { messageRemindType: true === this.isMuted ? e4.TYPES.MSG_REMIND_ACPT_AND_NOTE : e4.TYPES.MSG_REMIND_ACPT_NOT_NOTE };
    if (this.type === e4.TYPES.CONV_C2C) {
      const s4 = this.conversationID.replace(e4.TYPES.CONV_C2C, "");
      t4.userIDList = [s4];
    } else if (this.type === e4.TYPES.CONV_GROUP) {
      const s4 = this.conversationID.replace(e4.TYPES.CONV_GROUP, "");
      t4.groupID = s4;
    }
    return e4.TUIConversation.muteConversation(t4);
  }
  getAvatar() {
    var e4, t4, s4, n4, i4, r4;
    const a4 = this.getEngine();
    let o4 = "";
    switch (this.type) {
      case a4.TYPES.CONV_C2C:
        o4 = b(null === (e4 = this.userProfile) || void 0 === e4 ? void 0 : e4.avatar) ? null === (t4 = this.userProfile) || void 0 === t4 ? void 0 : t4.avatar : M2;
        break;
      case a4.TYPES.CONV_GROUP:
        o4 = b(null === (s4 = this.groupProfile) || void 0 === s4 ? void 0 : s4.avatar) ? null === (n4 = this.groupProfile) || void 0 === n4 ? void 0 : n4.avatar : O2;
        break;
      case a4.TYPES.CONV_SYSTEM:
        o4 = b(null === (i4 = this.groupProfile) || void 0 === i4 ? void 0 : i4.avatar) ? null === (r4 = this.groupProfile) || void 0 === r4 ? void 0 : r4.avatar : _2;
    }
    return o4;
  }
  getShowName() {
    var e4, t4, s4, n4;
    const i4 = this.getEngine();
    let r4 = "";
    switch (this.type) {
      case i4.TYPES.CONV_C2C:
        r4 = this.remark || (null === (e4 = this.userProfile) || void 0 === e4 ? void 0 : e4.nick) || (null === (t4 = this.userProfile) || void 0 === t4 ? void 0 : t4.userID) || "";
        break;
      case i4.TYPES.CONV_GROUP:
        r4 = (null === (s4 = this.groupProfile) || void 0 === s4 ? void 0 : s4.name) || (null === (n4 = this.groupProfile) || void 0 === n4 ? void 0 : n4.groupID) || "";
        break;
      case i4.TYPES.CONV_SYSTEM:
        r4 = i4.TUITranslate.t("系统通知");
    }
    return r4;
  }
  getGroupAtInfo() {
    const e4 = this.getEngine(), t4 = e4.TUITranslate.t.bind(e4.TUITranslate), s4 = [`[${t4("TUIConversation.有人@我")}]`, `[${t4("TUIConversation.@所有人")}]`, `[${t4("TUIConversation.@所有人")}][${t4("TUIConversation.有人@我")}]`];
    let n4 = "";
    for (let e5 = 0; e5 < this.groupAtInfoList.length; e5++)
      this.groupAtInfoList[e5].atTypeArray[0] && this.unreadCount > 0 && (n4 = s4[this.groupAtInfoList[e5].atTypeArray[0] - 1]);
    return n4;
  }
  getLastMessage(e4) {
    return "time" === e4 ? this.getLastMessageTime() : "text" === e4 ? this.getLastMessageText() : (console.warn(`ConversationModel.getLastMessage key:${e4} is invalid.`), null);
  }
  getLastMessageTime() {
    var e4;
    const t4 = this.getEngine();
    let s4 = "";
    return (null === (e4 = this.lastMessage) || void 0 === e4 ? void 0 : e4.lastTime) > 0 && (s4 = function(e5, t5) {
      const s5 = 6e4, n4 = 36e5, i4 = 24 * n4, r4 = 7 * i4, a4 = (/* @__PURE__ */ new Date()).getTime() - e5;
      let o4 = "";
      if (a4 < 0)
        return o4;
      const u4 = a4 / s5, c4 = a4 / n4, g4 = a4 / i4, l4 = a4 / r4;
      if (l4 >= 1 && l4 <= 4)
        o4 = ` ${parseInt(`${l4}`, 10)} ${t5("time.周")}${t5("time.前")}`;
      else if (g4 >= 1 && g4 <= 6)
        o4 = ` ${parseInt(`${g4}`, 10)} ${t5("time.天")}${t5("time.前")}`;
      else if (c4 >= 1 && c4 <= 23)
        o4 = ` ${parseInt(`${c4}`, 10)} ${t5("time.小时")}${t5("time.前")}`;
      else if (u4 >= 1 && u4 <= 59)
        o4 = ` ${parseInt(`${u4}`, 10)} ${t5("time.分钟")}${t5("time.前")}`;
      else if (a4 >= 0 && a4 <= s5)
        o4 = `${t5("time.刚刚")}`;
      else {
        const t6 = /* @__PURE__ */ new Date();
        t6.setTime(e5), o4 = `${t6.getFullYear()}-${t6.getMonth() + 1 < 10 ? `0${t6.getMonth() + 1}` : t6.getMonth() + 1}-${t6.getDate() < 10 ? `0${t6.getDate()}` : t6.getDate()}`;
      }
      return o4;
    }(1e3 * this.lastMessage.lastTime, t4.TUITranslate.t.bind(t4.TUITranslate))), s4;
  }
  getLastMessageText() {
    var e4;
    if (this.draftText) {
      return U2(this.draftText).abstract;
    }
    const t4 = this.getEngine(), s4 = t4.TUITranslate.t.bind(t4.TUITranslate);
    if (4 === this.operationType)
      return s4("TUIConversation.您已被群管理员移出群聊");
    if (5 === this.operationType)
      return s4("TUIConversation.该群聊已被解散");
    if (8 === this.operationType)
      return s4("TUIConversation.您已退出该群聊");
    const n4 = this._conversation, { lastMessage: i4 } = this;
    let r4 = "", a4 = "";
    const o4 = n4.unreadCount > 0 && n4.messageRemindType === t4.TYPES.MSG_REMIND_ACPT_NOT_NOTE ? `[${n4.unreadCount > 99 ? "99+" : n4.unreadCount}${s4("TUIConversation.条")}]` : "";
    if (n4.type === t4.TYPES.CONV_GROUP)
      if (i4.fromAccount === t4.getMyUserID())
        r4 = s4("TUIConversation.我");
      else {
        const e5 = i4.fromAccount;
        r4 = t4.TUIFriend.getFriendRemark([e5])[e5] || i4.nameCard || i4.nick || e5;
      }
    if (i4.type === t4.TYPES.MSG_TEXT)
      a4 = this.decodeTextMessage(i4.payload.text);
    else if (i4.type === t4.TYPES.MSG_CUSTOM) {
      const n5 = U2(null === (e4 = null == i4 ? void 0 : i4.payload) || void 0 === e4 ? void 0 : e4.data);
      if (1 === (null == n5 ? void 0 : n5.businessID))
        return a4 = t4.TUIChat.messageHandler.handleCallKitSignaling(i4), a4;
      a4 = re.includes(i4.messageForShow) ? s4(`TUIChat.${i4.messageForShow}`) : i4.messageForShow;
    } else
      a4 = re.includes(i4.messageForShow) ? s4(`TUIChat.${i4.messageForShow}`) : i4.messageForShow;
    return i4.isRevoked && (a4 = s4("TUIChat.撤回了一条消息")), n4.type === t4.TYPES.CONV_GROUP && i4.type === t4.TYPES.MSG_GRP_TIP ? a4 : `${o4}${r4 ? `${r4}:` : ""}${a4}`;
  }
  decodeTextMessage(e4) {
    if (ie(e4))
      return e4;
    const t4 = /(\[.+?\])/g;
    let s4 = e4;
    if (t4.test(e4)) {
      const n4 = this.getEngine(), i4 = n4.TUITranslate.t.bind(n4.TUITranslate);
      s4 = e4.replace(t4, (e5) => {
        const t5 = i4(`Emoji.${e5}`);
        return G || !t5 || t5.startsWith("Emoji.") ? j[e5] || e5 : t5;
      });
    }
    return s4;
  }
};
var oe = class {
  constructor() {
    this.defaultStore = { currentConversationID: "", totalUnreadCount: 0, conversationList: [], currentConversation: null, operationTypeMap: /* @__PURE__ */ new Map() }, this.store = { currentConversationID: "", totalUnreadCount: 0, conversationList: [], currentConversation: null, operationTypeMap: /* @__PURE__ */ new Map() };
  }
  update(e4, t4) {
    switch (e4) {
      case "conversationList":
        this.updateConversationList(t4);
        break;
      case "operationTypeMap":
        this.updateOperationTypeMap(t4);
        break;
      default:
        this.store[e4] = t4;
    }
  }
  getData(e4) {
    return this.store[e4];
  }
  getModel(e4) {
    return this.store.conversationList.find((t4) => t4.conversationID === e4);
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
  updateConversationList(e4) {
    const t4 = [];
    e4.forEach((e5) => {
      let s4 = e5;
      e5 instanceof ae ? s4.updateProperties(e5) : s4 = new ae(e5);
      const n4 = this.getOperationType(e5);
      s4.updateOperationType(n4), t4.push(s4);
    }), this.store.conversationList = t4;
  }
  updateOperationTypeMap(e4) {
    const { conversationID: t4, operationType: s4 = 0 } = e4;
    this.store.operationTypeMap.set(t4, s4);
  }
  getOperationType(e4) {
    const { conversationID: t4 } = e4;
    return this.store.operationTypeMap.get(t4) || 0;
  }
};
var ue = class extends ne {
  constructor(e4) {
    super(), this.messageHandlers = { [this.getEngine().TYPES.MSG_TEXT]: (e5) => this.getEngine().TUIChat.messageHandler.handleTextMessage(e5), [this.getEngine().TYPES.MSG_FACE]: (e5) => this.getEngine().TUIChat.messageHandler.handleFaceMessage(e5), [this.getEngine().TYPES.MSG_LOCATION]: (e5) => this.getEngine().TUIChat.messageHandler.handleLocationMessage(e5), [this.getEngine().TYPES.MSG_IMAGE]: (e5) => this.getEngine().TUIChat.messageHandler.handleImageMessage(e5), [this.getEngine().TYPES.MSG_AUDIO]: (e5) => this.getEngine().TUIChat.messageHandler.handleAudioMessage(e5), [this.getEngine().TYPES.MSG_VIDEO]: (e5) => this.getEngine().TUIChat.messageHandler.handleVideoMessage(e5), [this.getEngine().TYPES.MSG_FILE]: (e5) => this.getEngine().TUIChat.messageHandler.handleFileMessage(e5), [this.getEngine().TYPES.MSG_CUSTOM]: (e5) => this.getEngine().TUIChat.messageHandler.handleCustomMessage(e5), [this.getEngine().TYPES.MSG_MERGER]: (e5) => this.getEngine().TUIChat.messageHandler.handleMergeMessage(e5), [this.getEngine().TYPES.MSG_GRP_TIP]: (e5) => this.getEngine().TUIChat.messageHandler.handleGroupTipsMessage(e5) }, this._message = e4, this._signalingInfo = void 0, this.progress = 0, this.reactionList = [], this.initProperties(e4);
  }
  initProperties(e4) {
    Object.keys(e4).forEach((t4) => {
      y(t4) || (this[t4] = e4[t4]);
    });
  }
  updateProperties(e4) {
    this._message = e4, Object.keys(e4).forEach((t4) => {
      y(t4) || (this[t4] = e4[t4]);
    });
  }
  getMessage() {
    return this._message;
  }
  modifyMessage(e4) {
    return e4.type && this._message.type !== e4.type && !e4.payload ? Promise.reject({ code: h3.MISMATCH_TYPE_AND_PAYLOAD, message: d2.MISMATCH_TYPE_AND_PAYLOAD }) : (this._message.type = e4.type || this._message.type, this._message.payload = e4.payload || this._message.payload, this._message.cloudCustomData = e4.cloudCustomData || this._message.cloudCustomData, this.getEngine().TUIChat.modifyMessage(this._message));
  }
  revokeMessage() {
    return this.getEngine().TUIChat.revokeMessage(this._message);
  }
  resendMessage() {
    return this.getEngine().TUIChat.resendMessage(this._message);
  }
  deleteMessage() {
    return this.getEngine().TUIChat.deleteMessage([this._message]);
  }
  quoteMessage() {
    return this.getEngine().TUIChat.quoteMessage(this._message);
  }
  replyMessage() {
    return this.getEngine().TUIChat.replyMessage(this._message);
  }
  setMessageExtensions(e4) {
    return this.getEngine().TUIChat.setMessageExtensions(this._message, e4);
  }
  getMessageExtensions() {
    return this.getEngine().TUIChat.getMessageExtensions(this._message);
  }
  deleteMessageExtensions(e4) {
    return this.getEngine().TUIChat.deleteMessageExtensions(this._message, e4);
  }
  getSignalingInfo() {
    return this.type !== this.getEngine().TYPES.MSG_CUSTOM ? null : S2(this._signalingInfo) ? (this._signalingInfo = this.getEngine().chat.getSignalingInfo(this._message), this._signalingInfo) : this._signalingInfo;
  }
  getMessageContent() {
    const e4 = this.messageHandlers[this.type];
    if (S2(e4))
      return {};
    if (this.type === this.getEngine().TYPES.MSG_GRP_TIP)
      return e4(this._message);
    const t4 = this.getEngine().TUIFriend.getFriendRemark([this.from]);
    return Object.assign(Object.assign({}, e4(this._message)), { showName: t4[this.from] || this.nameCard || this.nick || this.from });
  }
  sendForwardMessage(e4) {
    return this.getEngine().TUIChat.sendForwardMessage(e4, [this._message]);
  }
};
var ce = class {
  constructor() {
    this.defaultStore = { messageList: [], isCompleted: false, nextReqMessageID: "", quoteMessage: {}, newMessageList: [], typingStatus: false, messageSource: void 0, translateTextInfo: void 0, voiceToTextInfo: void 0, userInfo: {} }, this.store = { messageList: [], isCompleted: false, nextReqMessageID: "", quoteMessage: {}, newMessageList: [], typingStatus: false, messageSource: void 0, translateTextInfo: void 0, voiceToTextInfo: void 0, userInfo: {} };
  }
  update(e4, t4) {
    switch (e4) {
      case "messageList":
        this.updateMessageList(t4);
        break;
      case "translateTextInfo":
        this.updateTranslateTextInfo(t4);
        break;
      case "voiceToTextInfo":
        this.updateVoiceToTextInfo(t4);
        break;
      default:
        this.store[e4] = t4;
    }
  }
  getData(e4) {
    return this.store[e4];
  }
  getModel(e4) {
    return this.store.messageList.find((t4) => t4.ID === e4);
  }
  reset(e4 = []) {
    const t4 = e4.filter((e5) => !x.includes(e5));
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), null == t4 ? void 0 : t4.reduce((e5, t5) => Object.assign(Object.assign({}, e5), { [t5]: this.defaultStore[t5] }), {}));
  }
  updateMessageList(e4) {
    const t4 = [];
    e4.forEach((e5) => {
      let s4 = e5;
      e5 instanceof ue || (s4 = this.getModel(e5.ID), s4 ? s4.updateProperties(e5) : s4 = new ue(e5)), t4.push(s4);
    }), this.store.messageList = t4;
  }
  updateTranslateTextInfo(e4) {
    this.updateBykey("translateTextInfo", e4);
  }
  updateVoiceToTextInfo(e4) {
    this.updateBykey("voiceToTextInfo", e4);
  }
  updateBykey(e4, t4) {
    const { conversationID: s4, messageID: n4, visible: i4 = false } = t4;
    this.store[e4] || (this.store[e4] = /* @__PURE__ */ new Map()), this.store[e4].has(s4) || this.store[e4].set(s4, []);
    const r4 = this.store[e4].get(s4) || [];
    let a4 = true;
    for (let e5 = 0; e5 < r4.length; e5++)
      if (r4[e5].messageID === n4) {
        r4[e5].visible = i4, a4 = false;
        break;
      }
    a4 && r4.push({ messageID: n4, visible: i4 }), this.store[e4].set(s4, r4);
  }
};
var ge = class {
  constructor(e4) {
    this.groupAttributes = {}, this.groupCounters = {}, this.initProxy(e4);
  }
  initProxy(e4) {
    Object.keys(e4).forEach((t4) => {
      y(t4) || (this[t4] = e4[t4]);
    });
  }
};
var le = class {
  constructor() {
    this.defaultStore = { currentGroupID: "", currentGroup: {}, currentGroupAttributes: {}, currentGroupCounters: {}, currentGroupMemberList: [], groupList: [], groupSystemNoticeList: [], isCompleted: false, offset: 0 }, this.store = { currentGroupID: "", currentGroup: void 0, currentGroupAttributes: {}, currentGroupCounters: {}, currentGroupMemberList: [], groupList: [], groupSystemNoticeList: [], isCompleted: false, offset: 0 };
  }
  update(e4, t4) {
    switch (e4) {
      case "groupList":
        this.updateGroupList(t4);
        break;
      case "currentGroup":
        this.store.currentGroup = t4 instanceof ge ? t4 : new ge(t4);
        break;
      default:
        this.store[e4] = t4;
    }
  }
  getData(e4) {
    if ("groupSystemNoticeList" === e4) {
      const e5 = [...this.store.groupSystemNoticeList];
      return this.store.groupSystemNoticeList.length = 0, e5;
    }
    return this.store[e4];
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
  updateGroupList(e4) {
    this.store.groupList = e4.map((e5) => e5 instanceof ge ? e5 : new ge(e5));
  }
};
var he = class {
  constructor() {
    this.store = {};
  }
  update(e4, t4) {
    this.store[e4] = t4;
  }
  getData(e4) {
    return this.store[e4];
  }
  reset(e4 = []) {
    0 === e4.length && (this.store = {}), this.store = Object.assign(Object.assign({}, this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: void 0 }), {}));
  }
};
var pe = class {
  constructor() {
    this.defaultStore = { friendList: [], friendApplicationList: [], friendApplicationUnreadCount: 0 }, this.store = { friendList: [], friendApplicationList: [], friendApplicationUnreadCount: 0 };
  }
  update(e4, t4) {
    this.store[e4] = t4;
  }
  getData(e4) {
    return this.store[e4];
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
};
var de = class {
  constructor() {
    this.defaultStore = { currentSearchInputValue: { value: "", searchType: "global" }, currentSearchMessageType: { value: { key: "", label: "", value: "" }, searchType: "global" }, currentSearchMessageTime: { value: { key: "", label: "", value: { timePosition: 0, timePeriod: 0 } }, searchType: "global" }, currentSearchingStatus: { isSearching: false, searchType: "global" }, isShowInConversationSearch: false }, this.store = { currentSearchInputValue: { value: "", searchType: "global" }, currentSearchMessageType: { value: { key: "", label: "", value: "" }, searchType: "global" }, currentSearchMessageTime: { value: { key: "", label: "", value: { timePosition: 0, timePeriod: 0 } }, searchType: "global" }, currentSearchingStatus: { isSearching: false, searchType: "global" }, isShowInConversationSearch: false };
  }
  update(e4, t4) {
    this.store[e4] = t4;
  }
  getData(e4) {
    return this.store[e4];
  }
  reset(e4 = []) {
    this.store = Object.assign(Object.assign(Object.assign({}, this.defaultStore), this.store), null == e4 ? void 0 : e4.reduce((e5, t4) => Object.assign(Object.assign({}, e5), { [t4]: this.defaultStore[t4] }), {}));
  }
};
var fe = class _fe {
  constructor() {
    this.storeMap = { [o3.APP]: new te(), [o3.USER]: new se(), [o3.CONV]: new oe(), [o3.CHAT]: new ce(), [o3.GRP]: new le(), [o3.FRIEND]: new pe(), [o3.SEARCH]: new de() }, this.task = {};
  }
  static getInstance() {
    return _fe.instance || (_fe.instance = new _fe()), _fe.instance;
  }
  watch(e4, t4) {
    this.task[e4] || (this.task[e4] = {});
    const s4 = this.task[e4];
    Object.keys(t4).forEach((n4) => {
      const i4 = t4[n4];
      s4[n4] || (s4[n4] = /* @__PURE__ */ new Map()), s4[n4].set(i4, 1), this.notifyOnWatch(e4, n4, i4);
    });
  }
  unwatch(e4, t4) {
    if (!this.task[e4])
      return;
    const s4 = this.task[e4];
    Object.keys(t4).forEach((e5) => {
      var n4;
      null === (n4 = s4[e5]) || void 0 === n4 || n4.delete(t4[e5]);
    });
  }
  update(e4, t4, s4) {
    var n4;
    e4 !== o3.CUSTOM || this.storeMap[e4] || (this.storeMap[e4] = new he()), null === (n4 = this.storeMap[e4]) || void 0 === n4 || n4.update(t4, s4), this.notify(e4, t4);
  }
  getData(e4, t4) {
    var s4;
    return e4 !== o3.CUSTOM || this.storeMap[e4] || (this.storeMap[e4] = new he()), null === (s4 = this.storeMap[e4]) || void 0 === s4 ? void 0 : s4.getData(t4);
  }
  getConversationModel(e4) {
    var t4;
    return null === (t4 = this.storeMap[o3.CONV]) || void 0 === t4 ? void 0 : t4.getModel(e4);
  }
  getMessageModel(e4) {
    var t4;
    return null === (t4 = this.storeMap[o3.CHAT]) || void 0 === t4 ? void 0 : t4.getModel(e4);
  }
  reset(e4, t4 = [], s4 = false) {
    if (e4 in this.storeMap) {
      const n4 = this.storeMap[e4];
      0 === t4.length && (t4 = Object.keys(null == n4 ? void 0 : n4.store)), n4.reset(t4), s4 && t4.forEach((t5) => {
        this.notify(e4, t5);
      });
    }
  }
  notifyOnWatch(e4, t4, s4) {
    const n4 = this.getData(e4, t4);
    N2.indexOf(t4) > -1 && 0 === n4.length || s4 && s4.call(this, n4);
  }
  notify(e4, t4) {
    if (!this.task[e4])
      return;
    const s4 = this.task[e4];
    if (s4[t4]) {
      const n4 = s4[t4], i4 = this.getData(e4, t4);
      for (const [e5] of n4.entries())
        e5.call(this, i4);
    }
  }
};
function me(e4) {
  return me = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
    return typeof e5;
  } : function(e5) {
    return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
  }, me(e4);
}
function ve(e4, t4) {
  if (!(e4 instanceof t4))
    throw new TypeError("Cannot call a class as a function");
}
function Te(e4) {
  var t4 = function(e5, t5) {
    if ("object" != me(e5) || !e5)
      return e5;
    var s4 = e5[Symbol.toPrimitive];
    if (void 0 !== s4) {
      var n4 = s4.call(e5, t5 || "default");
      if ("object" != me(n4))
        return n4;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === t5 ? String : Number)(e5);
  }(e4, "string");
  return "symbol" == me(t4) ? t4 : t4 + "";
}
function Ee(e4, t4) {
  for (var s4 = 0; s4 < t4.length; s4++) {
    var n4 = t4[s4];
    n4.enumerable = n4.enumerable || false, n4.configurable = true, "value" in n4 && (n4.writable = true), Object.defineProperty(e4, Te(n4.key), n4);
  }
}
function Ie(e4, t4, s4) {
  return t4 && Ee(e4.prototype, t4), s4 && Ee(e4, s4), Object.defineProperty(e4, "prototype", { writable: false }), e4;
}
function Se(e4) {
  if (void 0 === e4)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e4;
}
function ye(e4, t4) {
  return ye = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e5, t5) {
    return e5.__proto__ = t5, e5;
  }, ye(e4, t4);
}
function be(e4, t4) {
  if ("function" != typeof t4 && null !== t4)
    throw new TypeError("Super expression must either be null or a function");
  e4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e4, writable: true, configurable: true } }), Object.defineProperty(e4, "prototype", { writable: false }), t4 && ye(e4, t4);
}
function Ue(e4, t4) {
  if (t4 && ("object" == me(t4) || "function" == typeof t4))
    return t4;
  if (void 0 !== t4)
    throw new TypeError("Derived constructors may only return object or undefined");
  return Se(e4);
}
function Ce(e4) {
  return Ce = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e5) {
    return e5.__proto__ || Object.getPrototypeOf(e5);
  }, Ce(e4);
}
function Me(e4, t4, s4) {
  return (t4 = Te(t4)) in e4 ? Object.defineProperty(e4, t4, { value: s4, enumerable: true, configurable: true, writable: true }) : e4[t4] = s4, e4;
}
function Oe(e4, t4) {
  (null == t4 || t4 > e4.length) && (t4 = e4.length);
  for (var s4 = 0, n4 = Array(t4); s4 < t4; s4++)
    n4[s4] = e4[s4];
  return n4;
}
function _e(e4) {
  return function(e5) {
    if (Array.isArray(e5))
      return e5;
  }(e4) || function(e5) {
    if ("undefined" != typeof Symbol && null != e5[Symbol.iterator] || null != e5["@@iterator"])
      return Array.from(e5);
  }(e4) || function(e5, t4) {
    if (e5) {
      if ("string" == typeof e5)
        return Oe(e5, t4);
      var s4 = {}.toString.call(e5).slice(8, -1);
      return "Object" === s4 && e5.constructor && (s4 = e5.constructor.name), "Map" === s4 || "Set" === s4 ? Array.from(e5) : "Arguments" === s4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s4) ? Oe(e5, t4) : void 0;
    }
  }(e4) || function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function De(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function Pe(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? De(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : De(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
var Re = { type: "logger", log: function(e4) {
  this.output("log", e4);
}, warn: function(e4) {
  this.output("warn", e4);
}, error: function(e4) {
  this.output("error", e4);
}, output: function(e4, t4) {
  console && console[e4] && console[e4].apply(console, t4);
} };
var Le = new (function() {
  function e4(t4) {
    var s4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    ve(this, e4), this.init(t4, s4);
  }
  return Ie(e4, [{ key: "init", value: function(e5) {
    var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    this.prefix = t4.prefix || "i18next:", this.logger = e5 || Re, this.options = t4, this.debug = t4.debug;
  } }, { key: "setDebug", value: function(e5) {
    this.debug = e5;
  } }, { key: "log", value: function() {
    for (var e5 = arguments.length, t4 = new Array(e5), s4 = 0; s4 < e5; s4++)
      t4[s4] = arguments[s4];
    return this.forward(t4, "log", "", true);
  } }, { key: "warn", value: function() {
    for (var e5 = arguments.length, t4 = new Array(e5), s4 = 0; s4 < e5; s4++)
      t4[s4] = arguments[s4];
    return this.forward(t4, "warn", "", true);
  } }, { key: "error", value: function() {
    for (var e5 = arguments.length, t4 = new Array(e5), s4 = 0; s4 < e5; s4++)
      t4[s4] = arguments[s4];
    return this.forward(t4, "error", "");
  } }, { key: "deprecate", value: function() {
    for (var e5 = arguments.length, t4 = new Array(e5), s4 = 0; s4 < e5; s4++)
      t4[s4] = arguments[s4];
    return this.forward(t4, "warn", "WARNING DEPRECATED: ", true);
  } }, { key: "forward", value: function(e5, t4, s4, n4) {
    return n4 && !this.debug ? null : ("string" == typeof e5[0] && (e5[0] = "".concat(s4).concat(this.prefix, " ").concat(e5[0])), this.logger[t4](e5));
  } }, { key: "create", value: function(t4) {
    return new e4(this.logger, Pe(Pe({}, { prefix: "".concat(this.prefix, ":").concat(t4, ":") }), this.options));
  } }, { key: "clone", value: function(t4) {
    return (t4 = t4 || this.options).prefix = t4.prefix || this.prefix, new e4(this.logger, t4);
  } }]), e4;
}())();
var Ae = function() {
  function e4() {
    ve(this, e4), this.observers = {};
  }
  return Ie(e4, [{ key: "on", value: function(e5, t4) {
    var s4 = this;
    return e5.split(" ").forEach(function(e6) {
      s4.observers[e6] = s4.observers[e6] || [], s4.observers[e6].push(t4);
    }), this;
  } }, { key: "off", value: function(e5, t4) {
    this.observers[e5] && (t4 ? this.observers[e5] = this.observers[e5].filter(function(e6) {
      return e6 !== t4;
    }) : delete this.observers[e5]);
  } }, { key: "emit", value: function(e5) {
    for (var t4 = arguments.length, s4 = new Array(t4 > 1 ? t4 - 1 : 0), n4 = 1; n4 < t4; n4++)
      s4[n4 - 1] = arguments[n4];
    this.observers[e5] && [].concat(this.observers[e5]).forEach(function(e6) {
      e6.apply(void 0, s4);
    });
    this.observers["*"] && [].concat(this.observers["*"]).forEach(function(t5) {
      t5.apply(t5, [e5].concat(s4));
    });
  } }]), e4;
}();
function je() {
  var e4, t4, s4 = new Promise(function(s5, n4) {
    e4 = s5, t4 = n4;
  });
  return s4.resolve = e4, s4.reject = t4, s4;
}
function ke(e4) {
  return null == e4 ? "" : "" + e4;
}
function Ne(e4, t4, s4) {
  function n4(e5) {
    return e5 && e5.indexOf("###") > -1 ? e5.replace(/###/g, ".") : e5;
  }
  function i4() {
    return !e4 || "string" == typeof e4;
  }
  for (var r4 = "string" != typeof t4 ? [].concat(t4) : t4.split("."); r4.length > 1; ) {
    if (i4())
      return {};
    var a4 = n4(r4.shift());
    !e4[a4] && s4 && (e4[a4] = new s4()), e4 = Object.prototype.hasOwnProperty.call(e4, a4) ? e4[a4] : {};
  }
  return i4() ? {} : { obj: e4, k: n4(r4.shift()) };
}
function xe(e4, t4, s4) {
  var n4 = Ne(e4, t4, Object);
  n4.obj[n4.k] = s4;
}
function Ge(e4, t4) {
  var s4 = Ne(e4, t4), n4 = s4.obj, i4 = s4.k;
  if (n4)
    return n4[i4];
}
function we(e4, t4, s4) {
  for (var n4 in t4)
    "__proto__" !== n4 && "constructor" !== n4 && (n4 in e4 ? "string" == typeof e4[n4] || e4[n4] instanceof String || "string" == typeof t4[n4] || t4[n4] instanceof String ? s4 && (e4[n4] = t4[n4]) : we(e4[n4], t4[n4], s4) : e4[n4] = t4[n4]);
  return e4;
}
function Ve(e4) {
  return e4.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var Fe = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" };
function $e(e4) {
  return "string" == typeof e4 ? e4.replace(/[&<>"'\/]/g, function(e5) {
    return Fe[e5];
  }) : e4;
}
var He = "undefined" != typeof window && window.navigator && void 0 === window.navigator.userAgentData && window.navigator.userAgent && window.navigator.userAgent.indexOf("MSIE") > -1;
var Ye = [" ", ",", "?", "!", ";"];
function Be(e4, t4) {
  var s4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
  if (e4) {
    if (e4[t4])
      return e4[t4];
    for (var n4 = t4.split(s4), i4 = e4, r4 = 0; r4 < n4.length; ++r4) {
      if (!i4)
        return;
      if ("string" == typeof i4[n4[r4]] && r4 + 1 < n4.length)
        return;
      if (void 0 === i4[n4[r4]]) {
        for (var a4 = 2, o4 = n4.slice(r4, r4 + a4).join(s4), u4 = i4[o4]; void 0 === u4 && n4.length > r4 + a4; )
          a4++, u4 = i4[o4 = n4.slice(r4, r4 + a4).join(s4)];
        if (void 0 === u4)
          return;
        if (null === u4)
          return null;
        if (t4.endsWith(o4)) {
          if ("string" == typeof u4)
            return u4;
          if (o4 && "string" == typeof u4[o4])
            return u4[o4];
        }
        var c4 = n4.slice(r4 + a4).join(s4);
        return c4 ? Be(u4, c4, s4) : void 0;
      }
      i4 = i4[n4[r4]];
    }
    return i4;
  }
}
function Ke(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function qe(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? Ke(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : Ke(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function ze(e4) {
  var t4 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var s4, n4 = Ce(e4);
    if (t4) {
      var i4 = Ce(this).constructor;
      s4 = Reflect.construct(n4, arguments, i4);
    } else
      s4 = n4.apply(this, arguments);
    return Ue(this, s4);
  };
}
var Je = function() {
  be(t4, Ae);
  var e4 = ze(t4);
  function t4(s4) {
    var n4, i4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { ns: ["translation"], defaultNS: "translation" };
    return ve(this, t4), n4 = e4.call(this), He && Ae.call(Se(n4)), n4.data = s4 || {}, n4.options = i4, void 0 === n4.options.keySeparator && (n4.options.keySeparator = "."), void 0 === n4.options.ignoreJSONStructure && (n4.options.ignoreJSONStructure = true), n4;
  }
  return Ie(t4, [{ key: "addNamespaces", value: function(e5) {
    this.options.ns.indexOf(e5) < 0 && this.options.ns.push(e5);
  } }, { key: "removeNamespaces", value: function(e5) {
    var t5 = this.options.ns.indexOf(e5);
    t5 > -1 && this.options.ns.splice(t5, 1);
  } }, { key: "getResource", value: function(e5, t5, s4) {
    var n4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, i4 = void 0 !== n4.keySeparator ? n4.keySeparator : this.options.keySeparator, r4 = void 0 !== n4.ignoreJSONStructure ? n4.ignoreJSONStructure : this.options.ignoreJSONStructure, a4 = [e5, t5];
    s4 && "string" != typeof s4 && (a4 = a4.concat(s4)), s4 && "string" == typeof s4 && (a4 = a4.concat(i4 ? s4.split(i4) : s4)), e5.indexOf(".") > -1 && (a4 = e5.split("."));
    var o4 = Ge(this.data, a4);
    return o4 || !r4 || "string" != typeof s4 ? o4 : Be(this.data && this.data[e5] && this.data[e5][t5], s4, i4);
  } }, { key: "addResource", value: function(e5, t5, s4, n4) {
    var i4 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : { silent: false }, r4 = void 0 !== i4.keySeparator ? i4.keySeparator : this.options.keySeparator, a4 = [e5, t5];
    s4 && (a4 = a4.concat(r4 ? s4.split(r4) : s4)), e5.indexOf(".") > -1 && (n4 = t5, t5 = (a4 = e5.split("."))[1]), this.addNamespaces(t5), xe(this.data, a4, n4), i4.silent || this.emit("added", e5, t5, s4, n4);
  } }, { key: "addResources", value: function(e5, t5, s4) {
    var n4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : { silent: false };
    for (var i4 in s4)
      "string" != typeof s4[i4] && "[object Array]" !== Object.prototype.toString.apply(s4[i4]) || this.addResource(e5, t5, i4, s4[i4], { silent: true });
    n4.silent || this.emit("added", e5, t5, s4);
  } }, { key: "addResourceBundle", value: function(e5, t5, s4, n4, i4) {
    var r4 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : { silent: false }, a4 = [e5, t5];
    e5.indexOf(".") > -1 && (n4 = s4, s4 = t5, t5 = (a4 = e5.split("."))[1]), this.addNamespaces(t5);
    var o4 = Ge(this.data, a4) || {};
    n4 ? we(o4, s4, i4) : o4 = qe(qe({}, o4), s4), xe(this.data, a4, o4), r4.silent || this.emit("added", e5, t5, s4);
  } }, { key: "removeResourceBundle", value: function(e5, t5) {
    this.hasResourceBundle(e5, t5) && delete this.data[e5][t5], this.removeNamespaces(t5), this.emit("removed", e5, t5);
  } }, { key: "hasResourceBundle", value: function(e5, t5) {
    return void 0 !== this.getResource(e5, t5);
  } }, { key: "getResourceBundle", value: function(e5, t5) {
    return t5 || (t5 = this.options.defaultNS), "v1" === this.options.compatibilityAPI ? qe(qe({}, {}), this.getResource(e5, t5)) : this.getResource(e5, t5);
  } }, { key: "getDataByLanguage", value: function(e5) {
    return this.data[e5];
  } }, { key: "hasLanguageSomeTranslations", value: function(e5) {
    var t5 = this.getDataByLanguage(e5);
    return !!(t5 && Object.keys(t5) || []).find(function(e6) {
      return t5[e6] && Object.keys(t5[e6]).length > 0;
    });
  } }, { key: "toJSON", value: function() {
    return this.data;
  } }]), t4;
}();
var We = { processors: {}, addPostProcessor: function(e4) {
  this.processors[e4.name] = e4;
}, handle: function(e4, t4, s4, n4, i4) {
  var r4 = this;
  return e4.forEach(function(e5) {
    r4.processors[e5] && (t4 = r4.processors[e5].process(t4, s4, n4, i4));
  }), t4;
} };
function Xe(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function Ze(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? Xe(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : Xe(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function Qe(e4) {
  var t4 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var s4, n4 = Ce(e4);
    if (t4) {
      var i4 = Ce(this).constructor;
      s4 = Reflect.construct(n4, arguments, i4);
    } else
      s4 = n4.apply(this, arguments);
    return Ue(this, s4);
  };
}
var et = {};
var tt2 = function() {
  be(t4, Ae);
  var e4 = Qe(t4);
  function t4(s4) {
    var n4, i4, r4, a4, o4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    return ve(this, t4), n4 = e4.call(this), He && Ae.call(Se(n4)), i4 = ["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], r4 = s4, a4 = Se(n4), i4.forEach(function(e5) {
      r4[e5] && (a4[e5] = r4[e5]);
    }), n4.options = o4, void 0 === n4.options.keySeparator && (n4.options.keySeparator = "."), n4.logger = Le.create("translator"), n4;
  }
  return Ie(t4, [{ key: "changeLanguage", value: function(e5) {
    e5 && (this.language = e5);
  } }, { key: "exists", value: function(e5) {
    var t5 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} };
    if (null == e5)
      return false;
    var s4 = this.resolve(e5, t5);
    return s4 && void 0 !== s4.res;
  } }, { key: "extractFromKey", value: function(e5, t5) {
    var s4 = void 0 !== t5.nsSeparator ? t5.nsSeparator : this.options.nsSeparator;
    void 0 === s4 && (s4 = ":");
    var n4 = void 0 !== t5.keySeparator ? t5.keySeparator : this.options.keySeparator, i4 = t5.ns || this.options.defaultNS || [], r4 = s4 && e5.indexOf(s4) > -1, a4 = !(this.options.userDefinedKeySeparator || t5.keySeparator || this.options.userDefinedNsSeparator || t5.nsSeparator || function(e6, t6, s5) {
      t6 = t6 || "", s5 = s5 || "";
      var n5 = Ye.filter(function(e7) {
        return t6.indexOf(e7) < 0 && s5.indexOf(e7) < 0;
      });
      if (0 === n5.length)
        return true;
      var i5 = new RegExp("(".concat(n5.map(function(e7) {
        return "?" === e7 ? "\\?" : e7;
      }).join("|"), ")")), r5 = !i5.test(e6);
      if (!r5) {
        var a5 = e6.indexOf(s5);
        a5 > 0 && !i5.test(e6.substring(0, a5)) && (r5 = true);
      }
      return r5;
    }(e5, s4, n4));
    if (r4 && !a4) {
      var o4 = e5.match(this.interpolator.nestingRegexp);
      if (o4 && o4.length > 0)
        return { key: e5, namespaces: i4 };
      var u4 = e5.split(s4);
      (s4 !== n4 || s4 === n4 && this.options.ns.indexOf(u4[0]) > -1) && (i4 = u4.shift()), e5 = u4.join(n4);
    }
    return "string" == typeof i4 && (i4 = [i4]), { key: e5, namespaces: i4 };
  } }, { key: "translate", value: function(e5, s4, n4) {
    var i4 = this;
    if ("object" !== me(s4) && this.options.overloadTranslationOptionHandler && (s4 = this.options.overloadTranslationOptionHandler(arguments)), "object" === me(s4) && (s4 = Ze({}, s4)), s4 || (s4 = {}), null == e5)
      return "";
    Array.isArray(e5) || (e5 = [String(e5)]);
    var r4 = void 0 !== s4.returnDetails ? s4.returnDetails : this.options.returnDetails, a4 = void 0 !== s4.keySeparator ? s4.keySeparator : this.options.keySeparator, o4 = this.extractFromKey(e5[e5.length - 1], s4), u4 = o4.key, c4 = o4.namespaces, g4 = c4[c4.length - 1], l4 = s4.lng || this.language, h4 = s4.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (l4 && "cimode" === l4.toLowerCase()) {
      if (h4) {
        var p4 = s4.nsSeparator || this.options.nsSeparator;
        return r4 ? { res: "".concat(g4).concat(p4).concat(u4), usedKey: u4, exactUsedKey: u4, usedLng: l4, usedNS: g4 } : "".concat(g4).concat(p4).concat(u4);
      }
      return r4 ? { res: u4, usedKey: u4, exactUsedKey: u4, usedLng: l4, usedNS: g4 } : u4;
    }
    var d3 = this.resolve(e5, s4), f3 = d3 && d3.res, m3 = d3 && d3.usedKey || u4, v3 = d3 && d3.exactUsedKey || u4, T4 = Object.prototype.toString.apply(f3), E4 = void 0 !== s4.joinArrays ? s4.joinArrays : this.options.joinArrays, I3 = !this.i18nFormat || this.i18nFormat.handleAsObject;
    if (I3 && f3 && ("string" != typeof f3 && "boolean" != typeof f3 && "number" != typeof f3) && ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(T4) < 0 && ("string" != typeof E4 || "[object Array]" !== T4)) {
      if (!s4.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        var S3 = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(m3, f3, Ze(Ze({}, s4), {}, { ns: c4 })) : "key '".concat(u4, " (").concat(this.language, ")' returned an object instead of string.");
        return r4 ? (d3.res = S3, d3) : S3;
      }
      if (a4) {
        var y2 = "[object Array]" === T4, b2 = y2 ? [] : {}, U3 = y2 ? v3 : m3;
        for (var C4 in f3)
          if (Object.prototype.hasOwnProperty.call(f3, C4)) {
            var M3 = "".concat(U3).concat(a4).concat(C4);
            b2[C4] = this.translate(M3, Ze(Ze({}, s4), { joinArrays: false, ns: c4 })), b2[C4] === M3 && (b2[C4] = f3[C4]);
          }
        f3 = b2;
      }
    } else if (I3 && "string" == typeof E4 && "[object Array]" === T4)
      (f3 = f3.join(E4)) && (f3 = this.extendTranslation(f3, e5, s4, n4));
    else {
      var O3 = false, _3 = false, D2 = void 0 !== s4.count && "string" != typeof s4.count, P3 = t4.hasDefaultValue(s4), R3 = D2 ? this.pluralResolver.getSuffix(l4, s4.count, s4) : "", L3 = s4["defaultValue".concat(R3)] || s4.defaultValue;
      !this.isValidLookup(f3) && P3 && (O3 = true, f3 = L3), this.isValidLookup(f3) || (_3 = true, f3 = u4);
      var A3 = (s4.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && _3 ? void 0 : f3, j2 = P3 && L3 !== f3 && this.options.updateMissing;
      if (_3 || O3 || j2) {
        if (this.logger.log(j2 ? "updateKey" : "missingKey", l4, g4, u4, j2 ? L3 : f3), a4) {
          var k2 = this.resolve(u4, Ze(Ze({}, s4), {}, { keySeparator: false }));
          k2 && k2.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        var N3 = [], x2 = this.languageUtils.getFallbackCodes(this.options.fallbackLng, s4.lng || this.language);
        if ("fallback" === this.options.saveMissingTo && x2 && x2[0])
          for (var G2 = 0; G2 < x2.length; G2++)
            N3.push(x2[G2]);
        else
          "all" === this.options.saveMissingTo ? N3 = this.languageUtils.toResolveHierarchy(s4.lng || this.language) : N3.push(s4.lng || this.language);
        var w3 = function(e6, t5, n5) {
          var r5 = P3 && n5 !== f3 ? n5 : A3;
          i4.options.missingKeyHandler ? i4.options.missingKeyHandler(e6, g4, t5, r5, j2, s4) : i4.backendConnector && i4.backendConnector.saveMissing && i4.backendConnector.saveMissing(e6, g4, t5, r5, j2, s4), i4.emit("missingKey", e6, g4, t5, f3);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && D2 ? N3.forEach(function(e6) {
          i4.pluralResolver.getSuffixes(e6, s4).forEach(function(t5) {
            w3([e6], u4 + t5, s4["defaultValue".concat(t5)] || L3);
          });
        }) : w3(N3, u4, L3));
      }
      f3 = this.extendTranslation(f3, e5, s4, d3, n4), _3 && f3 === u4 && this.options.appendNamespaceToMissingKey && (f3 = "".concat(g4, ":").concat(u4)), (_3 || O3) && this.options.parseMissingKeyHandler && (f3 = "v1" !== this.options.compatibilityAPI ? this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? "".concat(g4, ":").concat(u4) : u4, O3 ? f3 : void 0) : this.options.parseMissingKeyHandler(f3));
    }
    return r4 ? (d3.res = f3, d3) : f3;
  } }, { key: "extendTranslation", value: function(e5, t5, s4, n4, i4) {
    var r4 = this;
    if (this.i18nFormat && this.i18nFormat.parse)
      e5 = this.i18nFormat.parse(e5, Ze(Ze({}, this.options.interpolation.defaultVariables), s4), n4.usedLng, n4.usedNS, n4.usedKey, { resolved: n4 });
    else if (!s4.skipInterpolation) {
      s4.interpolation && this.interpolator.init(Ze(Ze({}, s4), { interpolation: Ze(Ze({}, this.options.interpolation), s4.interpolation) }));
      var a4, o4 = "string" == typeof e5 && (s4 && s4.interpolation && void 0 !== s4.interpolation.skipOnVariables ? s4.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      if (o4) {
        var u4 = e5.match(this.interpolator.nestingRegexp);
        a4 = u4 && u4.length;
      }
      var c4 = s4.replace && "string" != typeof s4.replace ? s4.replace : s4;
      if (this.options.interpolation.defaultVariables && (c4 = Ze(Ze({}, this.options.interpolation.defaultVariables), c4)), e5 = this.interpolator.interpolate(e5, c4, s4.lng || this.language, s4), o4) {
        var g4 = e5.match(this.interpolator.nestingRegexp);
        a4 < (g4 && g4.length) && (s4.nest = false);
      }
      !s4.lng && "v1" !== this.options.compatibilityAPI && n4 && n4.res && (s4.lng = n4.usedLng), false !== s4.nest && (e5 = this.interpolator.nest(e5, function() {
        for (var e6 = arguments.length, n5 = new Array(e6), a5 = 0; a5 < e6; a5++)
          n5[a5] = arguments[a5];
        return i4 && i4[0] === n5[0] && !s4.context ? (r4.logger.warn("It seems you are nesting recursively key: ".concat(n5[0], " in key: ").concat(t5[0])), null) : r4.translate.apply(r4, n5.concat([t5]));
      }, s4)), s4.interpolation && this.interpolator.reset();
    }
    var l4 = s4.postProcess || this.options.postProcess, h4 = "string" == typeof l4 ? [l4] : l4;
    return null != e5 && h4 && h4.length && false !== s4.applyPostProcessor && (e5 = We.handle(h4, e5, t5, this.options && this.options.postProcessPassResolved ? Ze({ i18nResolved: n4 }, s4) : s4, this)), e5;
  } }, { key: "resolve", value: function(e5) {
    var t5, s4, n4, i4, r4, a4 = this, o4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    return "string" == typeof e5 && (e5 = [e5]), e5.forEach(function(e6) {
      if (!a4.isValidLookup(t5)) {
        var u4 = a4.extractFromKey(e6, o4), c4 = u4.key;
        s4 = c4;
        var g4 = u4.namespaces;
        a4.options.fallbackNS && (g4 = g4.concat(a4.options.fallbackNS));
        var l4 = void 0 !== o4.count && "string" != typeof o4.count, h4 = l4 && !o4.ordinal && 0 === o4.count && a4.pluralResolver.shouldUseIntlApi(), p4 = void 0 !== o4.context && ("string" == typeof o4.context || "number" == typeof o4.context) && "" !== o4.context, d3 = o4.lngs ? o4.lngs : a4.languageUtils.toResolveHierarchy(o4.lng || a4.language, o4.fallbackLng);
        g4.forEach(function(e7) {
          a4.isValidLookup(t5) || (r4 = e7, !et["".concat(d3[0], "-").concat(e7)] && a4.utils && a4.utils.hasLoadedNamespace && !a4.utils.hasLoadedNamespace(r4) && (et["".concat(d3[0], "-").concat(e7)] = true, a4.logger.warn('key "'.concat(s4, '" for languages "').concat(d3.join(", "), `" won't get resolved as namespace "`).concat(r4, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), d3.forEach(function(s5) {
            if (!a4.isValidLookup(t5)) {
              i4 = s5;
              var r5, u5 = [c4];
              if (a4.i18nFormat && a4.i18nFormat.addLookupKeys)
                a4.i18nFormat.addLookupKeys(u5, c4, s5, e7, o4);
              else {
                var g5;
                l4 && (g5 = a4.pluralResolver.getSuffix(s5, o4.count, o4));
                var d4 = "".concat(a4.options.pluralSeparator, "zero");
                if (l4 && (u5.push(c4 + g5), h4 && u5.push(c4 + d4)), p4) {
                  var f3 = "".concat(c4).concat(a4.options.contextSeparator).concat(o4.context);
                  u5.push(f3), l4 && (u5.push(f3 + g5), h4 && u5.push(f3 + d4));
                }
              }
              for (; r5 = u5.pop(); )
                a4.isValidLookup(t5) || (n4 = r5, t5 = a4.getResource(s5, e7, r5, o4));
            }
          }));
        });
      }
    }), { res: t5, usedKey: s4, exactUsedKey: n4, usedLng: i4, usedNS: r4 };
  } }, { key: "isValidLookup", value: function(e5) {
    return !(void 0 === e5 || !this.options.returnNull && null === e5 || !this.options.returnEmptyString && "" === e5);
  } }, { key: "getResource", value: function(e5, t5, s4) {
    var n4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(e5, t5, s4, n4) : this.resourceStore.getResource(e5, t5, s4, n4);
  } }], [{ key: "hasDefaultValue", value: function(e5) {
    var t5 = "defaultValue";
    for (var s4 in e5)
      if (Object.prototype.hasOwnProperty.call(e5, s4) && t5 === s4.substring(0, 12) && void 0 !== e5[s4])
        return true;
    return false;
  } }]), t4;
}();
function st(e4) {
  return e4.charAt(0).toUpperCase() + e4.slice(1);
}
var nt = function() {
  function e4(t4) {
    ve(this, e4), this.options = t4, this.supportedLngs = this.options.supportedLngs || false, this.logger = Le.create("languageUtils");
  }
  return Ie(e4, [{ key: "getScriptPartFromCode", value: function(e5) {
    if (!e5 || e5.indexOf("-") < 0)
      return null;
    var t4 = e5.split("-");
    return 2 === t4.length ? null : (t4.pop(), "x" === t4[t4.length - 1].toLowerCase() ? null : this.formatLanguageCode(t4.join("-")));
  } }, { key: "getLanguagePartFromCode", value: function(e5) {
    if (!e5 || e5.indexOf("-") < 0)
      return e5;
    var t4 = e5.split("-");
    return this.formatLanguageCode(t4[0]);
  } }, { key: "formatLanguageCode", value: function(e5) {
    if ("string" == typeof e5 && e5.indexOf("-") > -1) {
      var t4 = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"], s4 = e5.split("-");
      return this.options.lowerCaseLng ? s4 = s4.map(function(e6) {
        return e6.toLowerCase();
      }) : 2 === s4.length ? (s4[0] = s4[0].toLowerCase(), s4[1] = s4[1].toUpperCase(), t4.indexOf(s4[1].toLowerCase()) > -1 && (s4[1] = st(s4[1].toLowerCase()))) : 3 === s4.length && (s4[0] = s4[0].toLowerCase(), 2 === s4[1].length && (s4[1] = s4[1].toUpperCase()), "sgn" !== s4[0] && 2 === s4[2].length && (s4[2] = s4[2].toUpperCase()), t4.indexOf(s4[1].toLowerCase()) > -1 && (s4[1] = st(s4[1].toLowerCase())), t4.indexOf(s4[2].toLowerCase()) > -1 && (s4[2] = st(s4[2].toLowerCase()))), s4.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? e5.toLowerCase() : e5;
  } }, { key: "isSupportedCode", value: function(e5) {
    return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (e5 = this.getLanguagePartFromCode(e5)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(e5) > -1;
  } }, { key: "getBestMatchFromCodes", value: function(e5) {
    var t4, s4 = this;
    return e5 ? (e5.forEach(function(e6) {
      if (!t4) {
        var n4 = s4.formatLanguageCode(e6);
        s4.options.supportedLngs && !s4.isSupportedCode(n4) || (t4 = n4);
      }
    }), !t4 && this.options.supportedLngs && e5.forEach(function(e6) {
      if (!t4) {
        var n4 = s4.getLanguagePartFromCode(e6);
        if (s4.isSupportedCode(n4))
          return t4 = n4;
        t4 = s4.options.supportedLngs.find(function(e7) {
          return e7 === n4 ? e7 : e7.indexOf("-") < 0 && n4.indexOf("-") < 0 ? void 0 : 0 === e7.indexOf(n4) ? e7 : void 0;
        });
      }
    }), t4 || (t4 = this.getFallbackCodes(this.options.fallbackLng)[0]), t4) : null;
  } }, { key: "getFallbackCodes", value: function(e5, t4) {
    if (!e5)
      return [];
    if ("function" == typeof e5 && (e5 = e5(t4)), "string" == typeof e5 && (e5 = [e5]), "[object Array]" === Object.prototype.toString.apply(e5))
      return e5;
    if (!t4)
      return e5.default || [];
    var s4 = e5[t4];
    return s4 || (s4 = e5[this.getScriptPartFromCode(t4)]), s4 || (s4 = e5[this.formatLanguageCode(t4)]), s4 || (s4 = e5[this.getLanguagePartFromCode(t4)]), s4 || (s4 = e5.default), s4 || [];
  } }, { key: "toResolveHierarchy", value: function(e5, t4) {
    var s4 = this, n4 = this.getFallbackCodes(t4 || this.options.fallbackLng || [], e5), i4 = [], r4 = function(e6) {
      e6 && (s4.isSupportedCode(e6) ? i4.push(e6) : s4.logger.warn("rejecting language code not found in supportedLngs: ".concat(e6)));
    };
    return "string" == typeof e5 && e5.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && r4(this.formatLanguageCode(e5)), "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && r4(this.getScriptPartFromCode(e5)), "currentOnly" !== this.options.load && r4(this.getLanguagePartFromCode(e5))) : "string" == typeof e5 && r4(this.formatLanguageCode(e5)), n4.forEach(function(e6) {
      i4.indexOf(e6) < 0 && r4(s4.formatLanguageCode(e6));
    }), i4;
  } }]), e4;
}();
var it = [{ lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"], nr: [1, 2], fc: 1 }, { lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"], nr: [1, 2], fc: 2 }, { lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"], nr: [1], fc: 3 }, { lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"], nr: [1, 2, 5], fc: 4 }, { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 }, { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 }, { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 }, { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 }, { lngs: ["fr"], nr: [1, 2], fc: 9 }, { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 }, { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 }, { lngs: ["is"], nr: [1, 2], fc: 12 }, { lngs: ["jv"], nr: [0, 1], fc: 13 }, { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 }, { lngs: ["lt"], nr: [1, 2, 10], fc: 15 }, { lngs: ["lv"], nr: [1, 2, 0], fc: 16 }, { lngs: ["mk"], nr: [1, 2], fc: 17 }, { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 }, { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 }, { lngs: ["or"], nr: [2, 1], fc: 2 }, { lngs: ["ro"], nr: [1, 2, 20], fc: 20 }, { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 }, { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 }];
var rt = { 1: function(e4) {
  return Number(e4 > 1);
}, 2: function(e4) {
  return Number(1 != e4);
}, 3: function(e4) {
  return 0;
}, 4: function(e4) {
  return Number(e4 % 10 == 1 && e4 % 100 != 11 ? 0 : e4 % 10 >= 2 && e4 % 10 <= 4 && (e4 % 100 < 10 || e4 % 100 >= 20) ? 1 : 2);
}, 5: function(e4) {
  return Number(0 == e4 ? 0 : 1 == e4 ? 1 : 2 == e4 ? 2 : e4 % 100 >= 3 && e4 % 100 <= 10 ? 3 : e4 % 100 >= 11 ? 4 : 5);
}, 6: function(e4) {
  return Number(1 == e4 ? 0 : e4 >= 2 && e4 <= 4 ? 1 : 2);
}, 7: function(e4) {
  return Number(1 == e4 ? 0 : e4 % 10 >= 2 && e4 % 10 <= 4 && (e4 % 100 < 10 || e4 % 100 >= 20) ? 1 : 2);
}, 8: function(e4) {
  return Number(1 == e4 ? 0 : 2 == e4 ? 1 : 8 != e4 && 11 != e4 ? 2 : 3);
}, 9: function(e4) {
  return Number(e4 >= 2);
}, 10: function(e4) {
  return Number(1 == e4 ? 0 : 2 == e4 ? 1 : e4 < 7 ? 2 : e4 < 11 ? 3 : 4);
}, 11: function(e4) {
  return Number(1 == e4 || 11 == e4 ? 0 : 2 == e4 || 12 == e4 ? 1 : e4 > 2 && e4 < 20 ? 2 : 3);
}, 12: function(e4) {
  return Number(e4 % 10 != 1 || e4 % 100 == 11);
}, 13: function(e4) {
  return Number(0 !== e4);
}, 14: function(e4) {
  return Number(1 == e4 ? 0 : 2 == e4 ? 1 : 3 == e4 ? 2 : 3);
}, 15: function(e4) {
  return Number(e4 % 10 == 1 && e4 % 100 != 11 ? 0 : e4 % 10 >= 2 && (e4 % 100 < 10 || e4 % 100 >= 20) ? 1 : 2);
}, 16: function(e4) {
  return Number(e4 % 10 == 1 && e4 % 100 != 11 ? 0 : 0 !== e4 ? 1 : 2);
}, 17: function(e4) {
  return Number(1 == e4 || e4 % 10 == 1 && e4 % 100 != 11 ? 0 : 1);
}, 18: function(e4) {
  return Number(0 == e4 ? 0 : 1 == e4 ? 1 : 2);
}, 19: function(e4) {
  return Number(1 == e4 ? 0 : 0 == e4 || e4 % 100 > 1 && e4 % 100 < 11 ? 1 : e4 % 100 > 10 && e4 % 100 < 20 ? 2 : 3);
}, 20: function(e4) {
  return Number(1 == e4 ? 0 : 0 == e4 || e4 % 100 > 0 && e4 % 100 < 20 ? 1 : 2);
}, 21: function(e4) {
  return Number(e4 % 100 == 1 ? 1 : e4 % 100 == 2 ? 2 : e4 % 100 == 3 || e4 % 100 == 4 ? 3 : 0);
}, 22: function(e4) {
  return Number(1 == e4 ? 0 : 2 == e4 ? 1 : (e4 < 0 || e4 > 10) && e4 % 10 == 0 ? 2 : 3);
} };
var at = ["v1", "v2", "v3"];
var ot = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 };
var ut = function() {
  function e4(t4) {
    var s4, n4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    ve(this, e4), this.languageUtils = t4, this.options = n4, this.logger = Le.create("pluralResolver"), this.options.compatibilityJSON && "v4" !== this.options.compatibilityJSON || "undefined" != typeof Intl && Intl.PluralRules || (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = (s4 = {}, it.forEach(function(e5) {
      e5.lngs.forEach(function(t5) {
        s4[t5] = { numbers: e5.nr, plurals: rt[e5.fc] };
      });
    }), s4);
  }
  return Ie(e4, [{ key: "addRule", value: function(e5, t4) {
    this.rules[e5] = t4;
  } }, { key: "getRule", value: function(e5) {
    var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (this.shouldUseIntlApi())
      try {
        return new Intl.PluralRules(e5, { type: t4.ordinal ? "ordinal" : "cardinal" });
      } catch (e6) {
        return;
      }
    return this.rules[e5] || this.rules[this.languageUtils.getLanguagePartFromCode(e5)];
  } }, { key: "needsPlural", value: function(e5) {
    var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, s4 = this.getRule(e5, t4);
    return this.shouldUseIntlApi() ? s4 && s4.resolvedOptions().pluralCategories.length > 1 : s4 && s4.numbers.length > 1;
  } }, { key: "getPluralFormsOfKey", value: function(e5, t4) {
    var s4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
    return this.getSuffixes(e5, s4).map(function(e6) {
      return "".concat(t4).concat(e6);
    });
  } }, { key: "getSuffixes", value: function(e5) {
    var t4 = this, s4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n4 = this.getRule(e5, s4);
    return n4 ? this.shouldUseIntlApi() ? n4.resolvedOptions().pluralCategories.sort(function(e6, t5) {
      return ot[e6] - ot[t5];
    }).map(function(e6) {
      return "".concat(t4.options.prepend).concat(e6);
    }) : n4.numbers.map(function(n5) {
      return t4.getSuffix(e5, n5, s4);
    }) : [];
  } }, { key: "getSuffix", value: function(e5, t4) {
    var s4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, n4 = this.getRule(e5, s4);
    return n4 ? this.shouldUseIntlApi() ? "".concat(this.options.prepend).concat(n4.select(t4)) : this.getSuffixRetroCompatible(n4, t4) : (this.logger.warn("no plural rule found for: ".concat(e5)), "");
  } }, { key: "getSuffixRetroCompatible", value: function(e5, t4) {
    var s4 = this, n4 = e5.noAbs ? e5.plurals(t4) : e5.plurals(Math.abs(t4)), i4 = e5.numbers[n4];
    this.options.simplifyPluralSuffix && 2 === e5.numbers.length && 1 === e5.numbers[0] && (2 === i4 ? i4 = "plural" : 1 === i4 && (i4 = ""));
    var r4 = function() {
      return s4.options.prepend && i4.toString() ? s4.options.prepend + i4.toString() : i4.toString();
    };
    return "v1" === this.options.compatibilityJSON ? 1 === i4 ? "" : "number" == typeof i4 ? "_plural_".concat(i4.toString()) : r4() : "v2" === this.options.compatibilityJSON || this.options.simplifyPluralSuffix && 2 === e5.numbers.length && 1 === e5.numbers[0] ? r4() : this.options.prepend && n4.toString() ? this.options.prepend + n4.toString() : n4.toString();
  } }, { key: "shouldUseIntlApi", value: function() {
    return !at.includes(this.options.compatibilityJSON);
  } }]), e4;
}();
function ct(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function gt(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? ct(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : ct(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function lt(e4, t4, s4) {
  var n4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ".", i4 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], r4 = function(e5, t5, s5) {
    var n5 = Ge(e5, s5);
    return void 0 !== n5 ? n5 : Ge(t5, s5);
  }(e4, t4, s4);
  return !r4 && i4 && "string" == typeof s4 && void 0 === (r4 = Be(e4, s4, n4)) && (r4 = Be(t4, s4, n4)), r4;
}
var ht = function() {
  function e4() {
    var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    ve(this, e4), this.logger = Le.create("interpolator"), this.options = t4, this.format = t4.interpolation && t4.interpolation.format || function(e5) {
      return e5;
    }, this.init(t4);
  }
  return Ie(e4, [{ key: "init", value: function() {
    var e5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    e5.interpolation || (e5.interpolation = { escapeValue: true });
    var t4 = e5.interpolation;
    this.escape = void 0 !== t4.escape ? t4.escape : $e, this.escapeValue = void 0 === t4.escapeValue || t4.escapeValue, this.useRawValueToEscape = void 0 !== t4.useRawValueToEscape && t4.useRawValueToEscape, this.prefix = t4.prefix ? Ve(t4.prefix) : t4.prefixEscaped || "{{", this.suffix = t4.suffix ? Ve(t4.suffix) : t4.suffixEscaped || "}}", this.formatSeparator = t4.formatSeparator ? t4.formatSeparator : t4.formatSeparator || ",", this.unescapePrefix = t4.unescapeSuffix ? "" : t4.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : t4.unescapeSuffix || "", this.nestingPrefix = t4.nestingPrefix ? Ve(t4.nestingPrefix) : t4.nestingPrefixEscaped || Ve("$t("), this.nestingSuffix = t4.nestingSuffix ? Ve(t4.nestingSuffix) : t4.nestingSuffixEscaped || Ve(")"), this.nestingOptionsSeparator = t4.nestingOptionsSeparator ? t4.nestingOptionsSeparator : t4.nestingOptionsSeparator || ",", this.maxReplaces = t4.maxReplaces ? t4.maxReplaces : 1e3, this.alwaysFormat = void 0 !== t4.alwaysFormat && t4.alwaysFormat, this.resetRegExp();
  } }, { key: "reset", value: function() {
    this.options && this.init(this.options);
  } }, { key: "resetRegExp", value: function() {
    var e5 = "".concat(this.prefix, "(.+?)").concat(this.suffix);
    this.regexp = new RegExp(e5, "g");
    var t4 = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
    this.regexpUnescape = new RegExp(t4, "g");
    var s4 = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
    this.nestingRegexp = new RegExp(s4, "g");
  } }, { key: "interpolate", value: function(e5, t4, s4, n4) {
    var i4, r4, a4, o4 = this, u4 = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
    function c4(e6) {
      return e6.replace(/\$/g, "$$$$");
    }
    var g4 = function(e6) {
      if (e6.indexOf(o4.formatSeparator) < 0) {
        var i5 = lt(t4, u4, e6, o4.options.keySeparator, o4.options.ignoreJSONStructure);
        return o4.alwaysFormat ? o4.format(i5, void 0, s4, gt(gt(gt({}, n4), t4), {}, { interpolationkey: e6 })) : i5;
      }
      var r5 = e6.split(o4.formatSeparator), a5 = r5.shift().trim(), c5 = r5.join(o4.formatSeparator).trim();
      return o4.format(lt(t4, u4, a5, o4.options.keySeparator, o4.options.ignoreJSONStructure), c5, s4, gt(gt(gt({}, n4), t4), {}, { interpolationkey: a5 }));
    };
    this.resetRegExp();
    var l4 = n4 && n4.missingInterpolationHandler || this.options.missingInterpolationHandler, h4 = n4 && n4.interpolation && void 0 !== n4.interpolation.skipOnVariables ? n4.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{ regex: this.regexpUnescape, safeValue: function(e6) {
      return c4(e6);
    } }, { regex: this.regexp, safeValue: function(e6) {
      return o4.escapeValue ? c4(o4.escape(e6)) : c4(e6);
    } }].forEach(function(t5) {
      for (a4 = 0; i4 = t5.regex.exec(e5); ) {
        var s5 = i4[1].trim();
        if (void 0 === (r4 = g4(s5)))
          if ("function" == typeof l4) {
            var u5 = l4(e5, i4, n4);
            r4 = "string" == typeof u5 ? u5 : "";
          } else if (n4 && Object.prototype.hasOwnProperty.call(n4, s5))
            r4 = "";
          else {
            if (h4) {
              r4 = i4[0];
              continue;
            }
            o4.logger.warn("missed to pass in variable ".concat(s5, " for interpolating ").concat(e5)), r4 = "";
          }
        else
          "string" == typeof r4 || o4.useRawValueToEscape || (r4 = ke(r4));
        var c5 = t5.safeValue(r4);
        if (e5 = e5.replace(i4[0], c5), h4 ? (t5.regex.lastIndex += r4.length, t5.regex.lastIndex -= i4[0].length) : t5.regex.lastIndex = 0, ++a4 >= o4.maxReplaces)
          break;
      }
    }), e5;
  } }, { key: "nest", value: function(e5, t4) {
    var s4, n4, i4, r4 = this, a4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
    function o4(e6, t5) {
      var s5 = this.nestingOptionsSeparator;
      if (e6.indexOf(s5) < 0)
        return e6;
      var n5 = e6.split(new RegExp("".concat(s5, "[ ]*{"))), r5 = "{".concat(n5[1]);
      e6 = n5[0];
      var a5 = (r5 = this.interpolate(r5, i4)).match(/'/g), o5 = r5.match(/"/g);
      (a5 && a5.length % 2 == 0 && !o5 || o5.length % 2 != 0) && (r5 = r5.replace(/'/g, '"'));
      try {
        i4 = JSON.parse(r5), t5 && (i4 = gt(gt({}, t5), i4));
      } catch (t6) {
        return this.logger.warn("failed parsing options string in nesting for key ".concat(e6), t6), "".concat(e6).concat(s5).concat(r5);
      }
      return delete i4.defaultValue, e6;
    }
    for (; s4 = this.nestingRegexp.exec(e5); ) {
      var u4 = [];
      (i4 = (i4 = gt({}, a4)).replace && "string" != typeof i4.replace ? i4.replace : i4).applyPostProcessor = false, delete i4.defaultValue;
      var c4 = false;
      if (-1 !== s4[0].indexOf(this.formatSeparator) && !/{.*}/.test(s4[1])) {
        var g4 = s4[1].split(this.formatSeparator).map(function(e6) {
          return e6.trim();
        });
        s4[1] = g4.shift(), u4 = g4, c4 = true;
      }
      if ((n4 = t4(o4.call(this, s4[1].trim(), i4), i4)) && s4[0] === e5 && "string" != typeof n4)
        return n4;
      "string" != typeof n4 && (n4 = ke(n4)), n4 || (this.logger.warn("missed to resolve ".concat(s4[1], " for nesting ").concat(e5)), n4 = ""), c4 && (n4 = u4.reduce(function(e6, t5) {
        return r4.format(e6, t5, a4.lng, gt(gt({}, a4), {}, { interpolationkey: s4[1].trim() }));
      }, n4.trim())), e5 = e5.replace(s4[0], n4), this.regexp.lastIndex = 0;
    }
    return e5;
  } }]), e4;
}();
function pt(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function dt(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? pt(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : pt(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function ft(e4) {
  var t4 = {};
  return function(s4, n4, i4) {
    var r4 = n4 + JSON.stringify(i4), a4 = t4[r4];
    return a4 || (a4 = e4(n4, i4), t4[r4] = a4), a4(s4);
  };
}
var mt = function() {
  function e4() {
    var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    ve(this, e4), this.logger = Le.create("formatter"), this.options = t4, this.formats = { number: ft(function(e5, t5) {
      var s4 = new Intl.NumberFormat(e5, dt({}, t5));
      return function(e6) {
        return s4.format(e6);
      };
    }), currency: ft(function(e5, t5) {
      var s4 = new Intl.NumberFormat(e5, dt(dt({}, t5), {}, { style: "currency" }));
      return function(e6) {
        return s4.format(e6);
      };
    }), datetime: ft(function(e5, t5) {
      var s4 = new Intl.DateTimeFormat(e5, dt({}, t5));
      return function(e6) {
        return s4.format(e6);
      };
    }), relativetime: ft(function(e5, t5) {
      var s4 = new Intl.RelativeTimeFormat(e5, dt({}, t5));
      return function(e6) {
        return s4.format(e6, t5.range || "day");
      };
    }), list: ft(function(e5, t5) {
      var s4 = new Intl.ListFormat(e5, dt({}, t5));
      return function(e6) {
        return s4.format(e6);
      };
    }) }, this.init(t4);
  }
  return Ie(e4, [{ key: "init", value: function(e5) {
    var t4 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { interpolation: {} }).interpolation;
    this.formatSeparator = t4.formatSeparator ? t4.formatSeparator : t4.formatSeparator || ",";
  } }, { key: "add", value: function(e5, t4) {
    this.formats[e5.toLowerCase().trim()] = t4;
  } }, { key: "addCached", value: function(e5, t4) {
    this.formats[e5.toLowerCase().trim()] = ft(t4);
  } }, { key: "format", value: function(e5, t4, s4) {
    var n4 = this, i4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
    return t4.split(this.formatSeparator).reduce(function(e6, t5) {
      var r4 = function(e7) {
        var t6 = e7.toLowerCase().trim(), s5 = {};
        if (e7.indexOf("(") > -1) {
          var n5 = e7.split("(");
          t6 = n5[0].toLowerCase().trim();
          var i5 = n5[1].substring(0, n5[1].length - 1);
          "currency" === t6 && i5.indexOf(":") < 0 ? s5.currency || (s5.currency = i5.trim()) : "relativetime" === t6 && i5.indexOf(":") < 0 ? s5.range || (s5.range = i5.trim()) : i5.split(";").forEach(function(e8) {
            if (e8) {
              var t7 = _e(e8.split(":")), n6 = t7[0], i6 = t7.slice(1).join(":").trim().replace(/^'+|'+$/g, "");
              s5[n6.trim()] || (s5[n6.trim()] = i6), "false" === i6 && (s5[n6.trim()] = false), "true" === i6 && (s5[n6.trim()] = true), isNaN(i6) || (s5[n6.trim()] = parseInt(i6, 10));
            }
          });
        }
        return { formatName: t6, formatOptions: s5 };
      }(t5), a4 = r4.formatName, o4 = r4.formatOptions;
      if (n4.formats[a4]) {
        var u4 = e6;
        try {
          var c4 = i4 && i4.formatParams && i4.formatParams[i4.interpolationkey] || {}, g4 = c4.locale || c4.lng || i4.locale || i4.lng || s4;
          u4 = n4.formats[a4](e6, g4, dt(dt(dt({}, o4), i4), c4));
        } catch (e7) {
          n4.logger.warn(e7);
        }
        return u4;
      }
      return n4.logger.warn("there was no format function for ".concat(a4)), e6;
    }, e5);
  } }]), e4;
}();
function vt(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function Tt(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? vt(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : vt(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function Et(e4) {
  var t4 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var s4, n4 = Ce(e4);
    if (t4) {
      var i4 = Ce(this).constructor;
      s4 = Reflect.construct(n4, arguments, i4);
    } else
      s4 = n4.apply(this, arguments);
    return Ue(this, s4);
  };
}
var It = function() {
  be(t4, Ae);
  var e4 = Et(t4);
  function t4(s4, n4, i4) {
    var r4, a4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
    return ve(this, t4), r4 = e4.call(this), He && Ae.call(Se(r4)), r4.backend = s4, r4.store = n4, r4.services = i4, r4.languageUtils = i4.languageUtils, r4.options = a4, r4.logger = Le.create("backendConnector"), r4.waitingReads = [], r4.maxParallelReads = a4.maxParallelReads || 10, r4.readingCalls = 0, r4.maxRetries = a4.maxRetries >= 0 ? a4.maxRetries : 5, r4.retryTimeout = a4.retryTimeout >= 1 ? a4.retryTimeout : 350, r4.state = {}, r4.queue = [], r4.backend && r4.backend.init && r4.backend.init(i4, a4.backend, a4), r4;
  }
  return Ie(t4, [{ key: "queueLoad", value: function(e5, t5, s4, n4) {
    var i4 = this, r4 = {}, a4 = {}, o4 = {}, u4 = {};
    return e5.forEach(function(e6) {
      var n5 = true;
      t5.forEach(function(t6) {
        var o5 = "".concat(e6, "|").concat(t6);
        !s4.reload && i4.store.hasResourceBundle(e6, t6) ? i4.state[o5] = 2 : i4.state[o5] < 0 || (1 === i4.state[o5] ? void 0 === a4[o5] && (a4[o5] = true) : (i4.state[o5] = 1, n5 = false, void 0 === a4[o5] && (a4[o5] = true), void 0 === r4[o5] && (r4[o5] = true), void 0 === u4[t6] && (u4[t6] = true)));
      }), n5 || (o4[e6] = true);
    }), (Object.keys(r4).length || Object.keys(a4).length) && this.queue.push({ pending: a4, pendingCount: Object.keys(a4).length, loaded: {}, errors: [], callback: n4 }), { toLoad: Object.keys(r4), pending: Object.keys(a4), toLoadLanguages: Object.keys(o4), toLoadNamespaces: Object.keys(u4) };
  } }, { key: "loaded", value: function(e5, t5, s4) {
    var n4 = e5.split("|"), i4 = n4[0], r4 = n4[1];
    t5 && this.emit("failedLoading", i4, r4, t5), s4 && this.store.addResourceBundle(i4, r4, s4), this.state[e5] = t5 ? -1 : 2;
    var a4 = {};
    this.queue.forEach(function(s5) {
      var n5, o4, u4, c4, g4, l4;
      n5 = s5.loaded, o4 = r4, c4 = Ne(n5, [i4], Object), g4 = c4.obj, l4 = c4.k, g4[l4] = g4[l4] || [], u4 && (g4[l4] = g4[l4].concat(o4)), u4 || g4[l4].push(o4), function(e6, t6) {
        void 0 !== e6.pending[t6] && (delete e6.pending[t6], e6.pendingCount--);
      }(s5, e5), t5 && s5.errors.push(t5), 0 !== s5.pendingCount || s5.done || (Object.keys(s5.loaded).forEach(function(e6) {
        a4[e6] || (a4[e6] = {});
        var t6 = s5.loaded[e6];
        t6.length && t6.forEach(function(t7) {
          void 0 === a4[e6][t7] && (a4[e6][t7] = true);
        });
      }), s5.done = true, s5.errors.length ? s5.callback(s5.errors) : s5.callback());
    }), this.emit("loaded", a4), this.queue = this.queue.filter(function(e6) {
      return !e6.done;
    });
  } }, { key: "read", value: function(e5, t5, s4) {
    var n4 = this, i4 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, r4 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.retryTimeout, a4 = arguments.length > 5 ? arguments[5] : void 0;
    if (!e5.length)
      return a4(null, {});
    if (this.readingCalls >= this.maxParallelReads)
      this.waitingReads.push({ lng: e5, ns: t5, fcName: s4, tried: i4, wait: r4, callback: a4 });
    else {
      this.readingCalls++;
      var o4 = function(o5, u5) {
        if (n4.readingCalls--, n4.waitingReads.length > 0) {
          var c5 = n4.waitingReads.shift();
          n4.read(c5.lng, c5.ns, c5.fcName, c5.tried, c5.wait, c5.callback);
        }
        o5 && u5 && i4 < n4.maxRetries ? setTimeout(function() {
          n4.read.call(n4, e5, t5, s4, i4 + 1, 2 * r4, a4);
        }, r4) : a4(o5, u5);
      }, u4 = this.backend[s4].bind(this.backend);
      if (2 !== u4.length)
        return u4(e5, t5, o4);
      try {
        var c4 = u4(e5, t5);
        c4 && "function" == typeof c4.then ? c4.then(function(e6) {
          return o4(null, e6);
        }).catch(o4) : o4(null, c4);
      } catch (e6) {
        o4(e6);
      }
    }
  } }, { key: "prepareLoading", value: function(e5, t5) {
    var s4 = this, n4 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i4 = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return this.logger.warn("No backend was added via i18next.use. Will not load resources."), i4 && i4();
    "string" == typeof e5 && (e5 = this.languageUtils.toResolveHierarchy(e5)), "string" == typeof t5 && (t5 = [t5]);
    var r4 = this.queueLoad(e5, t5, n4, i4);
    if (!r4.toLoad.length)
      return r4.pending.length || i4(), null;
    r4.toLoad.forEach(function(e6) {
      s4.loadOne(e6);
    });
  } }, { key: "load", value: function(e5, t5, s4) {
    this.prepareLoading(e5, t5, {}, s4);
  } }, { key: "reload", value: function(e5, t5, s4) {
    this.prepareLoading(e5, t5, { reload: true }, s4);
  } }, { key: "loadOne", value: function(e5) {
    var t5 = this, s4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", n4 = e5.split("|"), i4 = n4[0], r4 = n4[1];
    this.read(i4, r4, "read", void 0, void 0, function(n5, a4) {
      n5 && t5.logger.warn("".concat(s4, "loading namespace ").concat(r4, " for language ").concat(i4, " failed"), n5), !n5 && a4 && t5.logger.log("".concat(s4, "loaded namespace ").concat(r4, " for language ").concat(i4), a4), t5.loaded(e5, n5, a4);
    });
  } }, { key: "saveMissing", value: function(e5, t5, s4, n4, i4) {
    var r4 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, a4 = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : function() {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(t5))
      this.logger.warn('did not save key "'.concat(s4, '" as the namespace "').concat(t5, '" was not yet loaded'), "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
    else if (null != s4 && "" !== s4) {
      if (this.backend && this.backend.create) {
        var o4 = Tt(Tt({}, r4), {}, { isUpdate: i4 }), u4 = this.backend.create.bind(this.backend);
        if (u4.length < 6)
          try {
            var c4;
            (c4 = 5 === u4.length ? u4(e5, t5, s4, n4, o4) : u4(e5, t5, s4, n4)) && "function" == typeof c4.then ? c4.then(function(e6) {
              return a4(null, e6);
            }).catch(a4) : a4(null, c4);
          } catch (e6) {
            a4(e6);
          }
        else
          u4(e5, t5, s4, n4, a4, o4);
      }
      e5 && e5[0] && this.store.addResource(e5[0], t5, s4, n4);
    }
  } }]), t4;
}();
function St() {
  return { debug: false, initImmediate: true, ns: ["translation"], defaultNS: ["translation"], fallbackLng: ["dev"], fallbackNS: false, supportedLngs: false, nonExplicitSupportedLngs: false, load: "all", preload: false, simplifyPluralSuffix: true, keySeparator: ".", nsSeparator: ":", pluralSeparator: "_", contextSeparator: "_", partialBundledLanguages: false, saveMissing: false, updateMissing: false, saveMissingTo: "fallback", saveMissingPlurals: true, missingKeyHandler: false, missingInterpolationHandler: false, postProcess: false, postProcessPassResolved: false, returnNull: true, returnEmptyString: true, returnObjects: false, joinArrays: false, returnedObjectHandler: false, parseMissingKeyHandler: false, appendNamespaceToMissingKey: false, appendNamespaceToCIMode: false, overloadTranslationOptionHandler: function(e4) {
    var t4 = {};
    if ("object" === me(e4[1]) && (t4 = e4[1]), "string" == typeof e4[1] && (t4.defaultValue = e4[1]), "string" == typeof e4[2] && (t4.tDescription = e4[2]), "object" === me(e4[2]) || "object" === me(e4[3])) {
      var s4 = e4[3] || e4[2];
      Object.keys(s4).forEach(function(e5) {
        t4[e5] = s4[e5];
      });
    }
    return t4;
  }, interpolation: { escapeValue: true, format: function(e4, t4, s4, n4) {
    return e4;
  }, prefix: "{{", suffix: "}}", formatSeparator: ",", unescapePrefix: "-", nestingPrefix: "$t(", nestingSuffix: ")", nestingOptionsSeparator: ",", maxReplaces: 1e3, skipOnVariables: true } };
}
function yt(e4) {
  return "string" == typeof e4.ns && (e4.ns = [e4.ns]), "string" == typeof e4.fallbackLng && (e4.fallbackLng = [e4.fallbackLng]), "string" == typeof e4.fallbackNS && (e4.fallbackNS = [e4.fallbackNS]), e4.supportedLngs && e4.supportedLngs.indexOf("cimode") < 0 && (e4.supportedLngs = e4.supportedLngs.concat(["cimode"])), e4;
}
function bt(e4, t4) {
  var s4 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n4 = Object.getOwnPropertySymbols(e4);
    t4 && (n4 = n4.filter(function(t5) {
      return Object.getOwnPropertyDescriptor(e4, t5).enumerable;
    })), s4.push.apply(s4, n4);
  }
  return s4;
}
function Ut(e4) {
  for (var t4 = 1; t4 < arguments.length; t4++) {
    var s4 = null != arguments[t4] ? arguments[t4] : {};
    t4 % 2 ? bt(Object(s4), true).forEach(function(t5) {
      Me(e4, t5, s4[t5]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(s4)) : bt(Object(s4)).forEach(function(t5) {
      Object.defineProperty(e4, t5, Object.getOwnPropertyDescriptor(s4, t5));
    });
  }
  return e4;
}
function Ct(e4) {
  var t4 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var s4, n4 = Ce(e4);
    if (t4) {
      var i4 = Ce(this).constructor;
      s4 = Reflect.construct(n4, arguments, i4);
    } else
      s4 = n4.apply(this, arguments);
    return Ue(this, s4);
  };
}
function Mt() {
}
var Ot = function() {
  be(t4, Ae);
  var e4 = Ct(t4);
  function t4() {
    var s4, n4, i4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r4 = arguments.length > 1 ? arguments[1] : void 0;
    if (ve(this, t4), s4 = e4.call(this), He && Ae.call(Se(s4)), s4.options = yt(i4), s4.services = {}, s4.logger = Le, s4.modules = { external: [] }, n4 = Se(s4), Object.getOwnPropertyNames(Object.getPrototypeOf(n4)).forEach(function(e5) {
      "function" == typeof n4[e5] && (n4[e5] = n4[e5].bind(n4));
    }), r4 && !s4.isInitialized && !i4.isClone) {
      if (!s4.options.initImmediate)
        return s4.init(i4, r4), Ue(s4, Se(s4));
      setTimeout(function() {
        s4.init(i4, r4);
      }, 0);
    }
    return s4;
  }
  return Ie(t4, [{ key: "init", value: function() {
    var e5 = this, t5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, s4 = arguments.length > 1 ? arguments[1] : void 0;
    "function" == typeof t5 && (s4 = t5, t5 = {}), !t5.defaultNS && false !== t5.defaultNS && t5.ns && ("string" == typeof t5.ns ? t5.defaultNS = t5.ns : t5.ns.indexOf("translation") < 0 && (t5.defaultNS = t5.ns[0]));
    var n4 = St();
    function i4(e6) {
      return e6 ? "function" == typeof e6 ? new e6() : e6 : null;
    }
    if (this.options = Ut(Ut(Ut({}, n4), this.options), yt(t5)), "v1" !== this.options.compatibilityAPI && (this.options.interpolation = Ut(Ut({}, n4.interpolation), this.options.interpolation)), void 0 !== t5.keySeparator && (this.options.userDefinedKeySeparator = t5.keySeparator), void 0 !== t5.nsSeparator && (this.options.userDefinedNsSeparator = t5.nsSeparator), !this.options.isClone) {
      var r4;
      this.modules.logger ? Le.init(i4(this.modules.logger), this.options) : Le.init(null, this.options), this.modules.formatter ? r4 = this.modules.formatter : "undefined" != typeof Intl && (r4 = mt);
      var a4 = new nt(this.options);
      this.store = new Je(this.options.resources, this.options);
      var o4 = this.services;
      o4.logger = Le, o4.resourceStore = this.store, o4.languageUtils = a4, o4.pluralResolver = new ut(a4, { prepend: this.options.pluralSeparator, compatibilityJSON: this.options.compatibilityJSON, simplifyPluralSuffix: this.options.simplifyPluralSuffix }), !r4 || this.options.interpolation.format && this.options.interpolation.format !== n4.interpolation.format || (o4.formatter = i4(r4), o4.formatter.init(o4, this.options), this.options.interpolation.format = o4.formatter.format.bind(o4.formatter)), o4.interpolator = new ht(this.options), o4.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }, o4.backendConnector = new It(i4(this.modules.backend), o4.resourceStore, o4, this.options), o4.backendConnector.on("*", function(t6) {
        for (var s5 = arguments.length, n5 = new Array(s5 > 1 ? s5 - 1 : 0), i5 = 1; i5 < s5; i5++)
          n5[i5 - 1] = arguments[i5];
        e5.emit.apply(e5, [t6].concat(n5));
      }), this.modules.languageDetector && (o4.languageDetector = i4(this.modules.languageDetector), o4.languageDetector.init && o4.languageDetector.init(o4, this.options.detection, this.options)), this.modules.i18nFormat && (o4.i18nFormat = i4(this.modules.i18nFormat), o4.i18nFormat.init && o4.i18nFormat.init(this)), this.translator = new tt2(this.services, this.options), this.translator.on("*", function(t6) {
        for (var s5 = arguments.length, n5 = new Array(s5 > 1 ? s5 - 1 : 0), i5 = 1; i5 < s5; i5++)
          n5[i5 - 1] = arguments[i5];
        e5.emit.apply(e5, [t6].concat(n5));
      }), this.modules.external.forEach(function(t6) {
        t6.init && t6.init(e5);
      });
    }
    if (this.format = this.options.interpolation.format, s4 || (s4 = Mt), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      var u4 = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      u4.length > 0 && "dev" !== u4[0] && (this.options.lng = u4[0]);
    }
    this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined");
    ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(function(t6) {
      e5[t6] = function() {
        var s5;
        return (s5 = e5.store)[t6].apply(s5, arguments);
      };
    });
    ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(function(t6) {
      e5[t6] = function() {
        var s5;
        return (s5 = e5.store)[t6].apply(s5, arguments), e5;
      };
    });
    var c4 = je(), g4 = function() {
      var t6 = function(t7, n5) {
        e5.isInitialized && !e5.initializedStoreOnce && e5.logger.warn("init: i18next is already initialized. You should call init just once!"), e5.isInitialized = true, e5.options.isClone || e5.logger.log("initialized", e5.options), e5.emit("initialized", e5.options), c4.resolve(n5), s4(t7, n5);
      };
      if (e5.languages && "v1" !== e5.options.compatibilityAPI && !e5.isInitialized)
        return t6(null, e5.t.bind(e5));
      e5.changeLanguage(e5.options.lng, t6);
    };
    return this.options.resources || !this.options.initImmediate ? g4() : setTimeout(g4, 0), c4;
  } }, { key: "loadResources", value: function(e5) {
    var t5 = this, s4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Mt, n4 = "string" == typeof e5 ? e5 : this.language;
    if ("function" == typeof e5 && (s4 = e5), !this.options.resources || this.options.partialBundledLanguages) {
      if (n4 && "cimode" === n4.toLowerCase())
        return s4();
      var i4 = [], r4 = function(e6) {
        e6 && t5.services.languageUtils.toResolveHierarchy(e6).forEach(function(e7) {
          i4.indexOf(e7) < 0 && i4.push(e7);
        });
      };
      if (n4)
        r4(n4);
      else
        this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(function(e6) {
          return r4(e6);
        });
      this.options.preload && this.options.preload.forEach(function(e6) {
        return r4(e6);
      }), this.services.backendConnector.load(i4, this.options.ns, function(e6) {
        e6 || t5.resolvedLanguage || !t5.language || t5.setResolvedLanguage(t5.language), s4(e6);
      });
    } else
      s4(null);
  } }, { key: "reloadResources", value: function(e5, t5, s4) {
    var n4 = je();
    return e5 || (e5 = this.languages), t5 || (t5 = this.options.ns), s4 || (s4 = Mt), this.services.backendConnector.reload(e5, t5, function(e6) {
      n4.resolve(), s4(e6);
    }), n4;
  } }, { key: "use", value: function(e5) {
    if (!e5)
      throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!e5.type)
      throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return "backend" === e5.type && (this.modules.backend = e5), ("logger" === e5.type || e5.log && e5.warn && e5.error) && (this.modules.logger = e5), "languageDetector" === e5.type && (this.modules.languageDetector = e5), "i18nFormat" === e5.type && (this.modules.i18nFormat = e5), "postProcessor" === e5.type && We.addPostProcessor(e5), "formatter" === e5.type && (this.modules.formatter = e5), "3rdParty" === e5.type && this.modules.external.push(e5), this;
  } }, { key: "setResolvedLanguage", value: function(e5) {
    if (e5 && this.languages && !(["cimode", "dev"].indexOf(e5) > -1))
      for (var t5 = 0; t5 < this.languages.length; t5++) {
        var s4 = this.languages[t5];
        if (!(["cimode", "dev"].indexOf(s4) > -1) && this.store.hasLanguageSomeTranslations(s4)) {
          this.resolvedLanguage = s4;
          break;
        }
      }
  } }, { key: "changeLanguage", value: function(e5, t5) {
    var s4 = this;
    this.isLanguageChangingTo = e5;
    var n4 = je();
    this.emit("languageChanging", e5);
    var i4 = function(e6) {
      s4.language = e6, s4.languages = s4.services.languageUtils.toResolveHierarchy(e6), s4.resolvedLanguage = void 0, s4.setResolvedLanguage(e6);
    }, r4 = function(r5) {
      e5 || r5 || !s4.services.languageDetector || (r5 = []);
      var a4 = "string" == typeof r5 ? r5 : s4.services.languageUtils.getBestMatchFromCodes(r5);
      a4 && (s4.language || i4(a4), s4.translator.language || s4.translator.changeLanguage(a4), s4.services.languageDetector && s4.services.languageDetector.cacheUserLanguage && s4.services.languageDetector.cacheUserLanguage(a4)), s4.loadResources(a4, function(e6) {
        !function(e7, r6) {
          r6 ? (i4(r6), s4.translator.changeLanguage(r6), s4.isLanguageChangingTo = void 0, s4.emit("languageChanged", r6), s4.logger.log("languageChanged", r6)) : s4.isLanguageChangingTo = void 0, n4.resolve(function() {
            return s4.t.apply(s4, arguments);
          }), t5 && t5(e7, function() {
            return s4.t.apply(s4, arguments);
          });
        }(e6, a4);
      });
    };
    return e5 || !this.services.languageDetector || this.services.languageDetector.async ? !e5 && this.services.languageDetector && this.services.languageDetector.async ? 0 === this.services.languageDetector.detect.length ? this.services.languageDetector.detect().then(r4) : this.services.languageDetector.detect(r4) : r4(e5) : r4(this.services.languageDetector.detect()), n4;
  } }, { key: "getFixedT", value: function(e5, t5, s4) {
    var n4 = this, i4 = function e6(t6, i5) {
      var r4;
      if ("object" !== me(i5)) {
        for (var a4 = arguments.length, o4 = new Array(a4 > 2 ? a4 - 2 : 0), u4 = 2; u4 < a4; u4++)
          o4[u4 - 2] = arguments[u4];
        r4 = n4.options.overloadTranslationOptionHandler([t6, i5].concat(o4));
      } else
        r4 = Ut({}, i5);
      r4.lng = r4.lng || e6.lng, r4.lngs = r4.lngs || e6.lngs, r4.ns = r4.ns || e6.ns, r4.keyPrefix = r4.keyPrefix || s4 || e6.keyPrefix;
      var c4, g4 = n4.options.keySeparator || ".";
      return c4 = r4.keyPrefix && Array.isArray(t6) ? t6.map(function(e7) {
        return "".concat(r4.keyPrefix).concat(g4).concat(e7);
      }) : r4.keyPrefix ? "".concat(r4.keyPrefix).concat(g4).concat(t6) : t6, n4.t(c4, r4);
    };
    return "string" == typeof e5 ? i4.lng = e5 : i4.lngs = e5, i4.ns = t5, i4.keyPrefix = s4, i4;
  } }, { key: "t", value: function() {
    var e5;
    return this.translator && (e5 = this.translator).translate.apply(e5, arguments);
  } }, { key: "exists", value: function() {
    var e5;
    return this.translator && (e5 = this.translator).exists.apply(e5, arguments);
  } }, { key: "setDefaultNamespace", value: function(e5) {
    this.options.defaultNS = e5;
  } }, { key: "hasLoadedNamespace", value: function(e5) {
    var t5 = this, s4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (!this.isInitialized)
      return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), false;
    if (!this.languages || !this.languages.length)
      return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), false;
    var n4 = s4.lng || this.resolvedLanguage || this.languages[0], i4 = !!this.options && this.options.fallbackLng, r4 = this.languages[this.languages.length - 1];
    if ("cimode" === n4.toLowerCase())
      return true;
    var a4 = function(e6, s5) {
      var n5 = t5.services.backendConnector.state["".concat(e6, "|").concat(s5)];
      return -1 === n5 || 2 === n5;
    };
    if (s4.precheck) {
      var o4 = s4.precheck(this, a4);
      if (void 0 !== o4)
        return o4;
    }
    return !!this.hasResourceBundle(n4, e5) || (!(this.services.backendConnector.backend && (!this.options.resources || this.options.partialBundledLanguages)) || !(!a4(n4, e5) || i4 && !a4(r4, e5)));
  } }, { key: "loadNamespaces", value: function(e5, t5) {
    var s4 = this, n4 = je();
    return this.options.ns ? ("string" == typeof e5 && (e5 = [e5]), e5.forEach(function(e6) {
      s4.options.ns.indexOf(e6) < 0 && s4.options.ns.push(e6);
    }), this.loadResources(function(e6) {
      n4.resolve(), t5 && t5(e6);
    }), n4) : (t5 && t5(), Promise.resolve());
  } }, { key: "loadLanguages", value: function(e5, t5) {
    var s4 = je();
    "string" == typeof e5 && (e5 = [e5]);
    var n4 = this.options.preload || [], i4 = e5.filter(function(e6) {
      return n4.indexOf(e6) < 0;
    });
    return i4.length ? (this.options.preload = n4.concat(i4), this.loadResources(function(e6) {
      s4.resolve(), t5 && t5(e6);
    }), s4) : (t5 && t5(), Promise.resolve());
  } }, { key: "dir", value: function(e5) {
    if (e5 || (e5 = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !e5)
      return "rtl";
    var t5 = this.services && this.services.languageUtils || new nt(St());
    return ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"].indexOf(t5.getLanguagePartFromCode(e5)) > -1 || e5.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  } }, { key: "cloneInstance", value: function() {
    var e5 = this, s4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Mt, i4 = Ut(Ut(Ut({}, this.options), s4), { isClone: true }), r4 = new t4(i4);
    void 0 === s4.debug && void 0 === s4.prefix || (r4.logger = r4.logger.clone(s4));
    return ["store", "services", "language"].forEach(function(t5) {
      r4[t5] = e5[t5];
    }), r4.services = Ut({}, this.services), r4.services.utils = { hasLoadedNamespace: r4.hasLoadedNamespace.bind(r4) }, r4.translator = new tt2(r4.services, r4.options), r4.translator.on("*", function(e6) {
      for (var t5 = arguments.length, s5 = new Array(t5 > 1 ? t5 - 1 : 0), n5 = 1; n5 < t5; n5++)
        s5[n5 - 1] = arguments[n5];
      r4.emit.apply(r4, [e6].concat(s5));
    }), r4.init(i4, n4), r4.translator.options = r4.options, r4.translator.backendConnector.services.utils = { hasLoadedNamespace: r4.hasLoadedNamespace.bind(r4) }, r4;
  } }, { key: "toJSON", value: function() {
    return { options: this.options, store: this.store, language: this.language, languages: this.languages, resolvedLanguage: this.resolvedLanguage };
  } }]), t4;
}();
Me(Ot, "createInstance", function() {
  return new Ot(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, arguments.length > 1 ? arguments[1] : void 0);
});
var _t = Ot.createInstance();
_t.createInstance = Ot.createInstance, _t.createInstance, _t.dir, _t.init, _t.loadResources, _t.reloadResources, _t.use, _t.changeLanguage, _t.getFixedT, _t.t, _t.exists, _t.setDefaultNamespace, _t.hasLoadedNamespace, _t.loadNamespaces, _t.loadLanguages;
var Dt = class _Dt extends ne {
  constructor() {
    super(), this.languages = null, this.keyMap = {};
  }
  static getInstance() {
    return _Dt.instance || (_Dt.instance = new _Dt()), _Dt.instance;
  }
  provideLanguages(e4) {
    var t4;
    G || (this.languages = e4, (null === (t4 = e4["zh-CN"]) || void 0 === t4 ? void 0 : t4.Chat) && this.setKeyMap(e4["zh-CN"]), console.log("TUITranslateService.provideLanguages ok."));
  }
  useI18n(e4) {
    var t4;
    if (G)
      return;
    if (!this.languages)
      return void console.warn("TUITranslateService.useI18next not have messages.");
    const s4 = {};
    for (const [e5, t5] of Object.entries(this.languages)) {
      s4["zh_cn" === e5 ? "zh" : e5] = { translation: t5 };
    }
    _t.init({ compatibilityJSON: "v3", lng: e4 || "zh", fallbackLng: "zh", detection: { order: ["querystring", "navigator"], caches: ["localStorage", "cookie"] }, resources: s4 });
    let n4 = this.normalizeLanguageKey(e4 || "zh");
    null === (t4 = this.getEngine().TUIReport) || void 0 === t4 || t4.reportFeature(201, n4);
  }
  changeLanguage(e4) {
    let t4 = this.normalizeLanguageKey(e4);
    return this.getEngine().TUIReport.reportFeature(201, t4), _t.changeLanguage(e4);
  }
  normalizeLanguageKey(e4) {
    return e4.includes("en") ? "en-us" : e4.includes("tw") ? "zh-tw" : e4.includes("zh") || e4.includes("cn") ? "zh-cn" : e4.includes("ko") || e4.includes("kr") ? "ko-kr" : e4.includes("ja") || e4.includes("jp") ? "ja-jp" : "other-" + e4;
  }
  t(e4) {
    if (!this.languages) {
      let t5 = e4;
      return !S2(e4) && e4.indexOf(".") > -1 && (t5 = e4.split(".").pop() || ""), t5;
    }
    const t4 = this.keyMap[e4];
    return t4 ? _t.t(t4) : _t.t(e4);
  }
  setKeyMap(e4, t4) {
    for (const s4 in e4)
      if (Object.prototype.hasOwnProperty.call(e4, s4)) {
        const n4 = t4 ? `${t4}.${s4}` : s4;
        if (e4[s4] && "object" == typeof e4[s4] && !Array.isArray(e4[s4]) && null !== e4[s4])
          this.setKeyMap(e4[s4], n4);
        else {
          let n5 = t4 ? `${t4}.${e4[s4]}` : e4[s4];
          n5 = this.replaceKey(n5), this.keyMap[n5] = `${t4}.${s4}`;
        }
      }
  }
  replaceKey(e4) {
    return e4.startsWith("Chat") ? e4.replace("Chat", "TUIChat") : e4.startsWith("Conversation") ? e4.replace("Conversation", "TUIConversation") : e4.startsWith("Message") ? e4.replace("Message", "message.tip") : e4.startsWith("Call") ? e4.replace("Call", "message.custom") : e4;
  }
};
var Pt = class _Pt extends ne {
  constructor() {
    super(), this.serv = "TUIConversationService";
  }
  static getInstance() {
    return _Pt.instance || (_Pt.instance = new _Pt()), _Pt.instance;
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.CONVERSATION_LIST_UPDATED, this.onConversationListUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED, this.onTotalUnreadCountUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), this.getConversationInitData();
  }
  onConversationListUpdated(e4) {
    const t4 = this.filterSystemConversation(e4);
    this.getEngine().TUIStore.update(o3.CONV, "conversationList", t4), this.updateCurrentConversation();
  }
  onTotalUnreadCountUpdated(e4) {
    this.getEngine().TUIStore.update(o3.CONV, "totalUnreadCount", e4);
  }
  onMessageReceived(e4) {
    const t4 = this.getEngine(), s4 = this.getEngine().TUIStore.getData(o3.CONV, "conversationList");
    let n4 = false;
    for (let i4 = 0; i4 < e4.length; i4++) {
      if (e4[i4].type !== t4.TYPES.MSG_GRP_SYS_NOTICE)
        continue;
      const { operationType: r4 } = e4[i4].payload, a4 = `GROUP${e4[i4].to}`, u4 = 4 === r4 || 5 === r4 || 8 === r4, c4 = 2 === r4 || 6 === r4 || 7 === r4;
      if (u4 || c4) {
        for (let e5 = 0; e5 < s4.length; e5++)
          if (s4[e5].type !== t4.TYPES.CONV_C2C && s4[e5].conversationID === a4) {
            if (u4) {
              this.getEngine().TUIStore.update(o3.CONV, "operationTypeMap", { conversationID: a4, operationType: r4 }), n4 = true;
              break;
            }
            if (c4 && s4[e5].operationType > 0) {
              this.getEngine().TUIStore.update(o3.CONV, "operationTypeMap", { conversationID: a4, operationType: 0 }), n4 = true;
              break;
            }
          }
      }
    }
    if (n4) {
      this.getEngine().TUIStore.update(o3.CONV, "conversationList", s4);
      const e5 = this.getEngine().TUIStore.getData(o3.CONV, "currentConversationID") || "", t5 = this.findConversation(e5);
      t5 && this.getEngine().TUIStore.update(o3.CONV, "currentConversation", t5);
    }
  }
  getConversationInitData() {
    const e4 = this.getEngine();
    e4.chat.isReady() && e4.chat.getConversationList().then((t4) => {
      const { conversationList: s4, isSyncCompleted: n4 } = t4.data;
      if (console.log(`${this.serv}.init, getConversationList count:${s4.length} isSyncCompleted:${n4}`), s4.length > 0) {
        this.onConversationListUpdated(s4);
        const t5 = e4.chat.getTotalUnreadMessageCount();
        this.onTotalUnreadCountUpdated(t5);
      }
    });
  }
  switchConversation(e4) {
    return i3(this, void 0, void 0, function* () {
      const t4 = `${this.serv}.switchConversation`, s4 = this.getEngine();
      if (!e4)
        return s4.TUIStore.reset(o3.CHAT, ["messageList", "isCompleted", "nextReqMessageID"]), s4.TUIStore.update(o3.CONV, "currentConversationID", ""), s4.TUIStore.update(o3.CONV, "currentConversation", null), console.log(`${t4} conversationID is empty, conversationID:${e4}`), Promise.resolve({});
      if (!e4.startsWith(s4.TYPES.CONV_C2C) && !e4.startsWith(s4.TYPES.CONV_GROUP))
        return console.warn(`${t4} conversationID is invalid, conversationID:${e4}`), Promise.reject({ code: h3.INVALID_CONV_ID, message: d2.INVALID_CONV_ID });
      const n4 = s4.TUIStore.getData(o3.CONV, "currentConversationID");
      if (n4 && n4 === e4)
        return this.setMessageRead(n4), console.warn(`${t4} please check conversationID, conversationID:${e4}`), Promise.resolve({ code: h3.CONV_ID_SAME, message: d2.CONV_ID_SAME });
      const i4 = yield this.getConversationModel(e4);
      return S2(i4) ? (console.warn(`${t4} target conversation is not exist, conversationID:${e4}`), Promise.reject({ code: h3.CONV_NOT_EXIST, message: d2.CONV_NOT_EXIST })) : (n4 && this.setMessageRead(n4), e4 && this.setMessageRead(e4), s4.TUIStore.reset(o3.CHAT, ["messageList", "isCompleted", "nextReqMessageID"]), s4.TUIStore.update(o3.CONV, "currentConversationID", e4), s4.TUIStore.update(o3.CONV, "currentConversation", i4), Promise.resolve(i4));
    });
  }
  getConversationModel(e4) {
    return i3(this, void 0, void 0, function* () {
      let t4 = this.findConversation(e4);
      if (S2(t4))
        try {
          const s4 = yield this.getConversationProfile(e4);
          s4.data && s4.data.conversation && (t4 = new ae(s4.data.conversation));
        } catch (e5) {
          t4 = void 0;
        }
      return t4;
    });
  }
  findConversation(e4) {
    let t4;
    const s4 = this.getEngine().TUIStore.getData(o3.CONV, "conversationList");
    for (let n4 = 0; n4 < s4.length; n4++)
      if (s4[n4].conversationID === e4) {
        t4 = s4[n4];
        break;
      }
    return t4;
  }
  updateCurrentConversation() {
    const e4 = this.getEngine(), t4 = e4.TUIStore.getData(o3.CONV, "currentConversationID"), s4 = this.findConversation(t4);
    s4 && e4.TUIStore.update(o3.CONV, "currentConversation", s4);
  }
  getConversationList() {
    return this.getEngine().chat.getConversationList();
  }
  getConversationProfile(e4) {
    return this.getEngine().chat.getConversationProfile(e4);
  }
  deleteConversation(e4) {
    return this.getEngine().chat.deleteConversation(e4).then((t4) => {
      const s4 = this.getEngine().TUIStore.getData(o3.CONV, "currentConversationID");
      return console.log(`${this.serv}.deleteConversation conversationID:${e4} currentConversationID:${s4}`), e4 === s4 && (this.getEngine().TUIStore.update(o3.CONV, "currentConversationID", ""), this.getEngine().TUIStore.update(o3.CONV, "currentConversation", null)), t4;
    });
  }
  pinConversation(e4) {
    return this.getEngine().chat.pinConversation(e4);
  }
  muteConversation(e4) {
    return this.getEngine().chat.setMessageRemindType(e4);
  }
  clearHistoryMessage(e4) {
    return this.getEngine().chat.clearHistoryMessage(e4).then((e5) => (this.getEngine().TUIStore.update(o3.CHAT, "messageList", []), this.getEngine().TUIStore.update(o3.CHAT, "nextReqMessageID", ""), this.getEngine().TUIStore.update(o3.CHAT, "isCompleted", true), e5));
  }
  setMessageRead(e4) {
    return this.getEngine().chat.setMessageRead({ conversationID: e4 });
  }
  setConversationDraft(e4) {
    const { conversationID: t4, draftInfo: s4 } = e4;
    let n4 = "";
    return s4 && (n4 = JSON.stringify(s4)), this.getEngine().chat.setConversationDraft({ conversationID: t4, draftText: n4 }).then((e5) => {
      const { conversation: t5 } = e5.data;
      this.updateConversation(t5);
    });
  }
  updateConversation(e4) {
    let t4 = false;
    const s4 = this.getEngine().TUIStore.getData(o3.CONV, "conversationList");
    for (let n4 = 0; n4 < s4.length; n4++)
      if (s4[n4].conversationID === e4.conversationID) {
        s4[n4] = e4, t4 = true;
        break;
      }
    t4 && this.getEngine().TUIStore.update(o3.CONV, "conversationList", s4);
  }
  filterSystemConversation(e4) {
    return e4.filter((e5) => e5.type !== this.getEngine().TYPES.CONV_SYSTEM);
  }
};
var Rt = class {
  constructor(e4) {
    this.TUIUserService = e4;
  }
  getEngine() {
    return this.TUIUserService.getEngine();
  }
  init() {
    this.getEngine().eventCenter.addEvent(this.getEngine().EVENT.PROFILE_UPDATED, this.onProfileUpdated.bind(this)), this.getEngine().eventCenter.addEvent(this.getEngine().EVENT.BLACKLIST_UPDATED, this.onBlacklistUpdated.bind(this)), this.getUserProfileInitData();
  }
  onProfileUpdated(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.USER, "userProfile");
    e4.forEach((e5) => {
      e5.userID === s4.userID && t4.TUIStore.update(o3.USER, "userProfile", e5);
    });
  }
  onBlacklistUpdated(e4) {
    const t4 = this.getEngine();
    this.getBlacklistProfile(e4).then((e5) => {
      t4.TUIStore.update(o3.USER, "userBlacklist", e5);
    });
  }
  getUserProfileInitData() {
    const e4 = this.getEngine();
    e4.chat.isReady() && e4.chat.getBlacklist().then((e5) => {
      const t4 = e5.data || [];
      console.log(`TUIUserProfileHandler.init, getBlacklist count:${t4.length}`), t4.length > 0 && this.onBlacklistUpdated(t4);
    });
  }
  getBlacklistProfile(e4) {
    const t4 = [];
    let s4 = 0;
    for (; s4 < e4.length; )
      t4.push(e4.slice(s4, s4 += 100));
    const n4 = [];
    t4.forEach((e5) => {
      n4.push(this.TUIUserService.getUserProfile({ userIDList: e5 }));
    });
    const i4 = [];
    return Promise.all(n4).then((e5) => (e5.forEach((e6) => {
      const t5 = e6.data.map((e7) => {
        const { userID: t6, nick: s5, avatar: n5 } = e7;
        return { userID: t6, nick: s5, avatar: n5 };
      });
      i4.push(...t5);
    }), i4));
  }
  getUserProfile(e4) {
    const t4 = this.getEngine();
    return S2(e4) ? t4.chat.getMyProfile().then((e5) => (t4.TUIStore.update(o3.USER, "userProfile", e5.data), e5)).catch((e5) => Promise.reject(e5)) : t4.chat.getUserProfile(e4);
  }
  updateMyProfile(e4) {
    return this.getEngine().chat.updateMyProfile(e4);
  }
  addToBlacklist(e4) {
    return this.getEngine().chat.addToBlacklist(e4);
  }
  removeFromBlacklist(e4) {
    return this.getEngine().chat.removeFromBlacklist(e4);
  }
};
function Lt(e4, t4, s4 = true) {
  !function(e5, t5) {
    V ? H.setStorageSync(e5, t5) : kt() && localStorage.setItem(e5, JSON.stringify(t5));
  }(s4 ? jt(e4) : e4, t4);
}
function At(e4, t4 = true) {
  try {
    return function(e5) {
      if (V)
        return H.getStorageSync(e5);
      if (kt()) {
        const t5 = localStorage.getItem(e5);
        if ("undefined" !== t5)
          return JSON.parse(t5);
      }
      return;
    }(t4 ? jt(e4) : e4);
  } catch (e5) {
    return void console.warn("Storage.getStorageItem error:", e5);
  }
}
function jt(e4) {
  return `chat_engine_${e4}`;
}
function kt() {
  return navigator && navigator.cookieEnabled && localStorage;
}
var Nt = class {
  constructor(e4) {
    this.TUIUserService = e4;
  }
  getEngine() {
    return this.TUIUserService.getEngine();
  }
  init() {
    const e4 = this.getEngine(), t4 = At("displayOnlineStatus") || false;
    e4.TUIStore.update(o3.USER, "displayOnlineStatus", t4), e4.eventCenter.addEvent(e4.EVENT.USER_STATUS_UPDATED, this.onUserStatusUpdated.bind(this)), this.onConversationListUpdated();
  }
  onConversationListUpdated() {
    const e4 = this.getEngine();
    e4.TUIStore.watch(o3.CONV, { conversationList: () => {
      const t4 = e4.TUIStore.getData(o3.APP, "enabledOnlineStatus"), s4 = e4.TUIStore.getData(o3.USER, "displayOnlineStatus");
      t4 && s4 && this.startToSubscribe();
    } });
  }
  onUserStatusUpdated(e4) {
    this.getEngine().TUIStore.update(o3.USER, "userStatusList", e4);
  }
  switchUserStatus(e4) {
    const t4 = this.getEngine(), { displayOnlineStatus: s4 = false } = e4;
    t4.TUIStore.update(o3.USER, "displayOnlineStatus", s4), Lt("displayOnlineStatus", s4);
    const n4 = t4.TUIStore.getData(o3.APP, "enabledOnlineStatus");
    n4 ? true === s4 ? this.startToSubscribe() : this.unsubscribeUserStatus() : console.warn(`UserStatusHandler.switchUserStatus enabledOnlineStatus:${n4} displayOnlineStatus:${s4}`);
  }
  getUserStatus(e4) {
    const t4 = this.getEngine();
    return t4.chat.getUserStatus(e4).then((e5) => {
      const { successUserList: s4 } = e5.data;
      return s4.length > 0 && t4.TUIStore.update(o3.USER, "userStatusList", s4), e5;
    }).catch((e5) => Promise.reject(e5));
  }
  subscribeUserStatus(e4) {
    var t4;
    const s4 = (null === (t4 = null == e4 ? void 0 : e4.userIDList) || void 0 === t4 ? void 0 : t4.length) || 0;
    return 0 === s4 ? (console.warn(`UserStatusHandler.subscribeUserStatus userID count:${s4}`), Promise.resolve()) : this.getEngine().chat.subscribeUserStatus(e4);
  }
  unsubscribeUserStatus(e4) {
    const t4 = this.getEngine(), { userIDList: s4 = [] } = e4 || {};
    return t4.chat.unsubscribeUserStatus({ userIDList: s4 }).then((e5) => {
      const { failureUserList: n4 } = e5.data, i4 = [];
      return s4.forEach((e6) => {
        n4.includes(e6) || i4.push({ userID: e6, statusType: u3.UNSUB_USER });
      }), t4.TUIStore.update(o3.USER, "userStatusList", i4), e5;
    }).catch((e5) => Promise.reject(e5));
  }
  startToSubscribe() {
    const e4 = this.getEngine(), t4 = e4.TUIStore.getData(o3.CONV, "conversationList"), s4 = e4.TUIStore.getData(o3.USER, "userStatusList"), n4 = [];
    t4.forEach((t5) => {
      if (t5.type === e4.TYPES.CONV_C2C) {
        const i4 = t5.conversationID.replace(e4.TYPES.CONV_C2C, "");
        s4.has(i4) || n4.push(i4);
      }
    }), 0 !== n4.length && e4.chat.isReady() && (this.subscribeUserStatus({ userIDList: n4 }), this.getUserStatus({ userIDList: n4 }));
  }
};
var xt = class _xt extends ne {
  constructor() {
    super(), this.userProfileHandler = new Rt(this), this.userStatusHandler = new Nt(this);
  }
  static getInstance() {
    return _xt.instance || (_xt.instance = new _xt()), _xt.instance;
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.KICKED_OUT, this.onKickedOut.bind(this)), e4.eventCenter.addEvent(e4.EVENT.NET_STATE_CHANGE, this.onNetStateChange.bind(this)), this.userProfileHandler.init(), this.userStatusHandler.init(), this.initMessageReadReceipt();
  }
  onKickedOut(e4) {
    this.getEngine().TUIStore.update(o3.USER, "kickedOut", e4.type);
  }
  onNetStateChange(e4) {
    this.getEngine().TUIStore.update(o3.USER, "netStateChange", e4.state);
  }
  initMessageReadReceipt() {
    const e4 = At("displayMessageReadReceipt") || true;
    this.getEngine().TUIStore.update(o3.USER, "displayMessageReadReceipt", e4);
  }
  switchUserStatus(e4) {
    return this.userStatusHandler.switchUserStatus(e4);
  }
  switchMessageReadStatus(e4) {
    this.getEngine().TUIStore.update(o3.USER, "displayMessageReadReceipt", e4), Lt("displayMessageReadReceipt", e4);
  }
  getUserProfile(e4) {
    return this.userProfileHandler.getUserProfile(e4);
  }
  updateMyProfile(e4) {
    return this.userProfileHandler.updateMyProfile(e4);
  }
  addToBlacklist(e4) {
    return this.userProfileHandler.addToBlacklist(e4);
  }
  removeFromBlacklist(e4) {
    return this.userProfileHandler.removeFromBlacklist(e4);
  }
  getUserStatus(e4) {
    return this.userStatusHandler.getUserStatus(e4);
  }
  subscribeUserStatus(e4) {
    return this.userStatusHandler.subscribeUserStatus(e4);
  }
  unsubscribeUserStatus(e4) {
    return this.userStatusHandler.unsubscribeUserStatus(e4);
  }
};
var Gt = class {
  constructor(e4) {
    this.TUIChatService = e4, this.userShowNameMap = /* @__PURE__ */ new Map(), this.requestedUserMap = /* @__PURE__ */ new Map();
  }
  getEngine() {
    return this.TUIChatService.getEngine();
  }
  t(e4) {
    return this.getEngine().TUITranslate.t(e4);
  }
  handleTextMessage(e4) {
    return { text: this.decodeText(e4.payload) };
  }
  handleFaceMessage(e4) {
    const t4 = { name: "", url: "", type: "" };
    return e4.payload.data.indexOf("@custom") > -1 ? (t4.name = e4.payload.data, t4.type = "custom", t4) : (t4.name = e4.payload.data.indexOf("@2x") < 0 ? `${e4.payload.data}@2x` : e4.payload.data, t4.url = `${P2}${t4.name}.png`, t4);
  }
  handleLocationMessage(e4) {
    const t4 = { lon: "", lat: "", href: "", url: "", description: "" };
    return t4.lon = e4.payload.longitude.toFixed(6), t4.lat = e4.payload.latitude.toFixed(6), t4.href = `${R2}pointx=${t4.lon}&pointy=${t4.lat}&name=${e4.payload.description}`, t4.url = `${L2}center=${t4.lat},${t4.lon}&zoom=10&size=300*150&maptype=roadmap&markers=size:large|color:0xFFCCFF|label:k|${t4.lat},${t4.lon}&key=UBNBZ-PTP3P-TE7DB-LHRTI-Y4YLE-VWBBD`, t4.description = e4.payload.description, t4;
  }
  handleImageMessage(e4) {
    return { url: e4.payload.imageInfoArray[0].url, width: e4.payload.imageInfoArray[0].width, height: e4.payload.imageInfoArray[0].height };
  }
  handleAudioMessage(e4) {
    return { url: e4.payload.url, second: e4.payload.second };
  }
  handleVideoMessage(e4) {
    return { url: e4.payload.videoUrl, snapshotUrl: e4.payload.snapshotUrl, snapshotWidth: e4.payload.snapshotWidth, snapshotHeight: e4.payload.snapshotHeight };
  }
  handleFileMessage(e4) {
    return { url: e4.payload.fileUrl, name: e4.payload.fileName, size: C3(e4.payload.fileSize) };
  }
  handleCustomMessage(e4) {
    var t4;
    const s4 = this.handleCreateGroupCustomMessage(e4);
    return { custom: this.handleCallKitSignaling(e4) || s4 || (null === (t4 = null == e4 ? void 0 : e4.payload) || void 0 === t4 ? void 0 : t4.extension) || `${this.t("TUIChat.[自定义消息]")}`, businessID: s4 ? "group_create" : "" };
  }
  handleMergeMessage(e4) {
    return Object.assign({}, e4.payload);
  }
  handleGroupTipsMessage(e4) {
    var t4, s4, n4, i4, r4, a4;
    const o4 = this.getEngine(), u4 = { text: "" };
    let c4 = (null == e4 ? void 0 : e4.nick) || (null === (s4 = null === (t4 = null == e4 ? void 0 : e4.payload) || void 0 === t4 ? void 0 : t4.userIDList) || void 0 === s4 ? void 0 : s4.join(","));
    switch ((null === (i4 = null === (n4 = null == e4 ? void 0 : e4.payload) || void 0 === n4 ? void 0 : n4.memberList) || void 0 === i4 ? void 0 : i4.length) > 0 && (c4 = "", null === (a4 = null === (r4 = null == e4 ? void 0 : e4.payload) || void 0 === r4 ? void 0 : r4.memberList) || void 0 === a4 || a4.map((e5) => {
      const t5 = (null == e5 ? void 0 : e5.nick) || (null == e5 ? void 0 : e5.userID);
      return c4 += `${this.substringByLength(t5)},`, e5;
    }), c4 = null == c4 ? void 0 : c4.slice(0, -1)), e4.payload.operationType) {
      case o4.TYPES.GRP_TIP_MBR_JOIN:
        u4.text = `${c4} ${this.t("message.tip.加入群组")}`;
        break;
      case o4.TYPES.GRP_TIP_MBR_QUIT:
        u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.退出群组")}`;
        break;
      case o4.TYPES.GRP_TIP_MBR_KICKED_OUT:
        u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.被")}${this.t("message.tip.踢出群组")}`;
        break;
      case o4.TYPES.GRP_TIP_MBR_SET_ADMIN:
        u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.成为管理员")}`;
        break;
      case o4.TYPES.GRP_TIP_MBR_CANCELED_ADMIN:
        u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.被撤销管理员")}`;
        break;
      case o4.TYPES.GRP_TIP_GRP_PROFILE_UPDATED:
        u4.text = this.handleGroupProfileUpdated(e4);
        break;
      case o4.TYPES.GRP_TIP_MBR_PROFILE_UPDATED:
        for (const t5 of e4.payload.memberList)
          t5.muteTime > 0 ? u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.被禁言")}` : u4.text = `${this.t("message.tip.群成员")}：${c4} ${this.t("message.tip.被取消禁言")}`;
        break;
      default:
        u4.text = `[${this.t("message.tip.群提示消息")}]`;
    }
    return u4;
  }
  handleGroupSystemMessage(e4) {
    const t4 = e4.payload.groupProfile.name || e4.payload.groupProfile.groupID, s4 = { text: "" };
    switch (e4.payload.operationType) {
      case 1:
        s4.text = `${e4.payload.operatorID} ${this.t("message.tip.申请加入群组")}：${t4}`;
        break;
      case 2:
        s4.text = `${this.t("message.tip.成功加入群组")}：${t4}`;
        break;
      case 3:
        s4.text = `${this.t("message.tip.申请加入群组")}：${t4} ${this.t("message.tip.被拒绝")}`;
        break;
      case 4:
        s4.text = `${this.t("message.tip.你被管理员")}${e4.payload.operatorID} ${this.t("message.tip.踢出群组")}：${t4}`;
        break;
      case 5:
        s4.text = `${this.t("message.tip.群")}：${t4} ${this.t("message.tip.被")} ${e4.payload.operatorID} ${this.t("message.tip.解散")}`;
        break;
      case 6:
        s4.text = `${e4.payload.operatorID} ${this.t("message.tip.创建群")}：${t4}`;
        break;
      case 7:
      case 12:
        s4.text = `${e4.payload.operatorID} ${this.t("message.tip.邀请你加群")}：${t4}`;
        break;
      case 8:
        s4.text = `${this.t("message.tip.你退出群组")}：${t4}`;
        break;
      case 9:
        s4.text = `${this.t("message.tip.你被")}${e4.payload.operatorID} ${this.t("message.tip.设置为群")}：${t4} ${this.t("message.tip.的管理员")}`;
        break;
      case 10:
        s4.text = `${this.t("message.tip.你被")}${e4.payload.operatorID} ${this.t("message.tip.撤销群")}：${t4} ${this.t("message.tip.的管理员身份")}`;
        break;
      case 13:
        s4.text = `${e4.payload.operatorID} ${this.t("message.tip.同意加群")}：${t4}`;
        break;
      case 14:
        s4.text = `${e4.payload.operatorID} ${this.t("message.tip.拒接加群")}：${t4}`;
        break;
      case 255:
        s4.text = `${this.t("message.tip.自定义群系统通知")}: ${e4.payload.userDefinedField}`;
        break;
      default:
        s4.text = "未解析的群系统通知";
    }
    return s4;
  }
  handleCallKitSignaling(e4) {
    var t4, s4, n4, i4, r4, a4, o4, u4, c4, g4;
    const l4 = U2(e4.payload.data);
    if (1 !== (null == l4 ? void 0 : l4.businessID))
      return "";
    const h4 = U2(null == l4 ? void 0 : l4.data), p4 = e4.fromAccount || e4.from, d3 = this.getEngine().TUIFriend.getFriendRemark([p4]), f3 = this.getEngine().getMyUserID();
    let m3 = d3[p4] || e4.nameCard || e4.nick || p4;
    switch (m3 = this.substringByLength(m3), null == l4 ? void 0 : l4.actionType) {
      case 1:
        return "audioCall" !== (null === (t4 = null == h4 ? void 0 : h4.data) || void 0 === t4 ? void 0 : t4.cmd) && "videoCall" !== (null === (s4 = null == h4 ? void 0 : h4.data) || void 0 === s4 ? void 0 : s4.cmd) || !(null == l4 ? void 0 : l4.groupID) ? "hangup" === (null === (n4 = null == h4 ? void 0 : h4.data) || void 0 === n4 ? void 0 : n4.cmd) ? (null == l4 ? void 0 : l4.groupID) ? `${this.t("message.custom.通话结束")}` : `${this.t("message.custom.通话时长")}：${function(e5) {
          const t5 = e5;
          let s5, n5, i5, r5 = "";
          return t5 >= 3600 ? (s5 = parseInt("" + t5 / 3600, 10) < 10 ? `0${parseInt("" + t5 / 3600, 10)}` : parseInt("" + t5 / 3600, 10), n5 = parseInt("" + t5 % 60 / 60, 10) < 10 ? `0${parseInt("" + t5 % 60 / 60, 10)}` : parseInt("" + t5 % 60 / 60, 10), i5 = t5 % 3600 < 10 ? "0" + t5 % 3600 : t5 % 3600, i5 > 60 && (n5 = parseInt("" + i5 / 60, 10) < 10 ? `0${parseInt("" + i5 / 60, 10)}` : parseInt("" + i5 / 60, 10), i5 = i5 % 60 < 10 ? "0" + i5 % 60 : i5 % 60), r5 = `${s5}:${n5}:${i5}`) : t5 >= 60 && t5 < 3600 ? (n5 = parseInt("" + t5 / 60, 10) < 10 ? `0${parseInt("" + t5 / 60, 10)}` : parseInt("" + t5 / 60, 10), i5 = t5 % 60 < 10 ? "0" + t5 % 60 : t5 % 60, r5 = `00:${n5}:${i5}`) : t5 < 60 && (i5 = t5 < 10 ? `0${t5}` : t5, r5 = `00:00:${i5}`), r5;
        }(null == h4 ? void 0 : h4.call_end)}` : "switchToAudio" === (null === (i4 = null == h4 ? void 0 : h4.data) || void 0 === i4 ? void 0 : i4.cmd) ? `${this.t("message.custom.切换语音通话")}` : "switchToVideo" === (null === (r4 = null == h4 ? void 0 : h4.data) || void 0 === r4 ? void 0 : r4.cmd) ? `${this.t("message.custom.切换视频通话")}` : `${this.t("message.custom.发起通话")}` : `${m3} ${this.t("message.custom.发起通话")}`;
      case 2:
        return (null == l4 ? void 0 : l4.groupID) ? `${m3} ${this.t("message.custom.取消通话")}` : this.isOldUIKit("message.custom.已取消") ? this.t("message.custom.取消通话") : (null == l4 ? void 0 : l4.inviter) === f3 ? this.t("message.custom.已取消") : this.t("message.custom.对方已取消");
      case 3:
        return "switchToAudio" === (null === (a4 = null == h4 ? void 0 : h4.data) || void 0 === a4 ? void 0 : a4.cmd) ? `${this.t("message.custom.切换语音通话")}` : "switchToVideo" === (null === (o4 = null == h4 ? void 0 : h4.data) || void 0 === o4 ? void 0 : o4.cmd) ? `${this.t("message.custom.切换视频通话")}` : (null == l4 ? void 0 : l4.groupID) ? `${m3} ${this.t("message.custom.已接听")}` : this.t("message.custom.已接听");
      case 4:
        return (null == l4 ? void 0 : l4.groupID) ? `${m3} ${this.t("message.custom.拒绝通话")}` : this.isOldUIKit("message.custom.已拒绝") ? this.t("message.custom.拒绝通话") : "line_busy" === (null == h4 ? void 0 : h4.line_busy) || "lineBusy" === (null == h4 ? void 0 : h4.data.message) ? (null == l4 ? void 0 : l4.inviter) === f3 ? this.t("message.custom.对方忙线中") : this.t("message.custom.忙线未接听") : (null == l4 ? void 0 : l4.inviter) === f3 ? this.t("message.custom.对方已拒绝") : this.t("message.custom.已拒绝");
      case 5:
        if ("switchToAudio" === (null === (u4 = null == h4 ? void 0 : h4.data) || void 0 === u4 ? void 0 : u4.cmd))
          return `${this.t("message.custom.切换语音通话")}`;
        if ("switchToVideo" === (null === (c4 = null == h4 ? void 0 : h4.data) || void 0 === c4 ? void 0 : c4.cmd))
          return `${this.t("message.custom.切换视频通话")}`;
        if (null == l4 ? void 0 : l4.groupID) {
          if (p4 === (null == l4 ? void 0 : l4.inviter)) {
            this.handleCallkitTimeoutSignaling(l4.inviteeList);
            let e5 = "";
            return null === (g4 = l4.inviteeList) || void 0 === g4 || g4.forEach((t5) => {
              const s5 = this.userShowNameMap.get(t5) || t5;
              e5 += `${this.substringByLength(s5)}、`;
            }), e5 = e5.substring(0, e5.lastIndexOf("、")), `${e5} ${this.t("message.custom.无应答")}`;
          }
          return `${m3} ${this.t("message.custom.无应答")}`;
        }
        return this.isOldUIKit("message.custom.对方无应答") ? this.t("message.custom.无应答") : (null == l4 ? void 0 : l4.inviter) === f3 ? this.t("message.custom.对方无应答") : this.t("message.custom.超时无应答");
      default:
        return "";
    }
  }
  handleCreateGroupCustomMessage(e4) {
    let t4;
    const s4 = U2(e4.payload.data);
    return "group_create" === (null == s4 ? void 0 : s4.businessID) && (t4 = `${s4.opUser} ${s4.content}`), t4;
  }
  decodeText(e4) {
    const t4 = [];
    let s4 = e4.text, n4 = -1, i4 = -1;
    for (; "" !== s4; )
      switch (n4 = s4.indexOf("["), i4 = s4.indexOf("]"), n4) {
        case 0:
          if (-1 === i4)
            t4.push({ name: "text", text: s4 }), s4 = "";
          else {
            const e5 = s4.slice(0, i4 + 1);
            e5.indexOf("@custom") > -1 ? (t4.push({ name: "img", src: "", type: "custom", emojiKey: e5 }), s4 = s4.substring(i4 + 1)) : A2[e5] ? (t4.push({ name: "img", src: D + A2[e5], emojiKey: e5 }), s4 = s4.substring(i4 + 1)) : (t4.push({ name: "text", text: "[" }), s4 = s4.slice(1));
          }
          break;
        case -1:
          t4.push({ name: "text", text: s4 }), s4 = "";
          break;
        default:
          t4.push({ name: "text", text: s4.slice(0, n4) }), s4 = s4.substring(n4);
      }
    return t4;
  }
  handleGroupProfileUpdated(e4) {
    const { nick: t4, payload: s4 } = e4, { newGroupProfile: n4, memberList: i4, operatorID: r4 } = s4;
    let a4 = "";
    const o4 = t4 || r4, u4 = Object.keys(n4)[0];
    switch (u4) {
      case "muteAllMembers":
        a4 = n4[u4] ? `${this.t("message.tip.管理员")} ${o4} ${this.t("message.tip.开启全员禁言")}` : `${this.t("message.tip.管理员")} ${o4} ${this.t("message.tip.取消全员禁言")}`;
        break;
      case "ownerID":
        a4 = `${i4[0].nick || i4[0].userID} ${this.t("message.tip.成为新的群主")}`;
        break;
      case "groupName":
        a4 = `${o4} ${this.t("message.tip.修改群名为")} ${n4[u4]}`;
        break;
      case "notification":
        a4 = this.isOldUIKit("message.tip.把群公告修改为") ? `${o4} ${this.t("message.tip.发布新公告")}` : `${o4} ${this.t("message.tip.把群公告修改为")} "${n4[u4]}"`;
    }
    return a4;
  }
  handleCallkitTimeoutSignaling(e4 = []) {
    if (0 === e4.length)
      return;
    const t4 = this.getEngine().TUIFriend.getFriendRemark(e4), s4 = [];
    e4.forEach((e5) => {
      const n4 = t4[e5];
      n4 ? this.userShowNameMap.set(e5, n4) : this.requestedUserMap.has(e5) || (s4.push(e5), this.requestedUserMap.set(e5, 1));
    }), s4.length > 0 && this.getEngine().TUIUser.getUserProfile({ userIDList: s4 }).then((e5) => {
      (e5.data || []).forEach((e6) => {
        const { userID: t5, nick: s5 } = e6, n4 = s5 || t5;
        this.userShowNameMap.set(t5, n4);
      });
    }).catch(() => {
    });
  }
  substringByLength(e4, t4 = 12) {
    return e4.length > t4 ? `${e4.slice(0, t4)}...` : e4;
  }
  isOldUIKit(e4) {
    var t4;
    const s4 = e4.lastIndexOf("."), n4 = e4.slice(0, s4 + 1);
    return null === (t4 = this.t(e4)) || void 0 === t4 ? void 0 : t4.startsWith(n4);
  }
};
var wt = class {
  constructor(e4) {
    this.TUIChatService = e4, this.typingTo = "", this.timer = null;
  }
  getEngine() {
    return this.TUIChatService.getEngine();
  }
  clearTypingStatus() {
    this.getEngine().TUIStore.getData(o3.CHAT, "typingStatus") && this.getEngine().TUIStore.update(o3.CHAT, "typingStatus", false), this.timer && clearTimeout(this.timer), this.timer = null;
  }
  handleLastMessage(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.CHAT, "typingStatus");
    if (e4.type === this.getEngine().TYPES.MSG_CUSTOM && "in" === e4.flow) {
      const n4 = U2(e4.payload.data);
      if (n4.businessID === c3.BUSINESS_ID) {
        const { typingStatus: e5, userAction: i4 } = n4;
        if (e5 === c3.STATUS_START || i4 === c3.ACTION_START_ID)
          return s4 ? (this.timer && clearTimeout(this.timer), this.timer = null) : t4.TUIStore.update(o3.CHAT, "typingStatus", true), this.timer = setTimeout(() => {
            this.clearTypingStatus();
          }, 3e4), t4.TUIStore.getData(o3.CHAT, "typingStatus");
        e5 !== c3.STATUS_END && i4 !== c3.ACTION_END_ID || this.clearTypingStatus();
      }
    }
  }
  filterTypingMessage(e4 = []) {
    if (0 === e4.length)
      return [];
    return this.getEngine().TUIStore.getData(o3.APP, "enableTyping") && this.handleLastMessage(e4[e4.length - 1]), e4.filter((e5) => {
      if (e5.type === this.getEngine().TYPES.MSG_CUSTOM) {
        return U2(e5.payload.data).businessID !== c3.BUSINESS_ID;
      }
      return true;
    });
  }
  createTypingMessage(e4 = c3.STATUS_END, t4 = "") {
    const { BUSINESS_ID: s4, STATUS_START: n4, VERSION: i4, ACTION_START_ID: r4, ACTION_END_ID: a4, ACTION_START: o4, ACTION_END: u4, NEED_TYPING: g4 } = c3;
    return { to: t4, conversationType: this.getEngine().TYPES.CONV_C2C, payload: { data: JSON.stringify({ businessID: s4, typingStatus: e4, version: i4, userAction: e4 === n4 ? r4 : a4, actionParam: e4 === n4 ? o4 : u4 }), description: "", extension: "" }, cloudCustomData: JSON.stringify({ messageFeature: { needTyping: g4, version: i4 } }) };
  }
  sendTyping(e4 = false, t4 = "") {
    if (e4) {
      this.typingTo = t4;
      const e5 = this.createTypingMessage(c3.STATUS_START, t4);
      this.getEngine().TUIChat.sendCustomMessage(e5, { onlineUserOnly: true });
    } else
      this.sendTypingEnd();
  }
  sendTypingEnd() {
    if (this.typingTo) {
      const e4 = this.createTypingMessage(c3.STATUS_END, this.typingTo);
      this.getEngine().TUIChat.sendCustomMessage(e4, { onlineUserOnly: true });
    }
    this.typingTo = "";
  }
};
var Vt = class {
  constructor(e4) {
    this.TUIChatService = e4;
  }
  getEngine() {
    return this.TUIChatService.getEngine();
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.MESSAGE_READ_RECEIPT_RECEIVED, this.onMessageReadReceiptReceived.bind(this));
  }
  onMessageReadReceiptReceived(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.CONV, "currentConversationID"), n4 = [];
    e4.forEach((e5) => {
      const { messageID: i4 } = e5, r4 = t4.chat.findMessage(i4);
      r4 && s4 === r4.conversationID && n4.push(r4);
    }), n4.length > 0 && t4.TUIChat.updateMessageList(n4, "edit");
  }
  sendMessageReadReceipt(e4) {
    const t4 = [];
    return e4.forEach((e5) => {
      const s4 = e5.getMessage();
      t4.push(s4);
    }), this.getEngine().chat.sendMessageReadReceipt(t4);
  }
  getGroupMessageReadMemberList(e4) {
    const t4 = e4.message.getMessage(), s4 = Object.assign(Object.assign({}, e4), { message: t4 });
    return this.getEngine().chat.getGroupMessageReadMemberList(s4);
  }
  getMessageReadReceiptList(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.APP, "enabledMessageReadReceipt"), n4 = t4.TUIStore.getData(o3.USER, "displayMessageReadReceipt");
    !s4 || !n4 || 0 === e4.length || e4[0].conversationType !== t4.TYPES.CONV_GROUP || t4.chat.getMessageReadReceiptList(e4).then((e5) => {
      const { messageList: t5 } = e5.data;
      this.TUIChatService.updateMessageList(t5, "edit");
    }).catch((e5) => {
      console.warn(`ReadReceiptHandler.getMessageReadReceiptList error:${e5.message}`);
    });
  }
};
var Ft = class _Ft extends ne {
  constructor() {
    super(), this.serv = "TUIChatService", this.messageHandler = new Gt(this), this.typingHandler = new wt(this), this.readReceiptHandler = new Vt(this), this.isSwitching = true, this.delayGetHoppingFunction = void 0, this.hoppingConfigMap = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _Ft.instance || (_Ft.instance = new _Ft()), _Ft.instance;
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_MODIFIED, this.onMessageModified.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_REVOKED, this.onMessageRevoked.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_READ_BY_PEER, this.onMessageReadByPeer.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_REACTIONS_UPDATED, this.onMessageReactionsUpdated.bind(this)), this.onCurrentConversationIDUpdated(), this.onMessageSource(), this.readReceiptHandler.init();
  }
  onMessageReceived(e4) {
    this.updateMessageList(e4, "received"), this.getEngine().TUIStore.update(o3.CHAT, "newMessageList", e4);
  }
  onMessageModified(e4) {
    this.updateMessageList(e4, "edit");
  }
  onMessageRevoked(e4) {
    this.updateMessageList(e4, "edit");
  }
  onMessageReadByPeer(e4) {
    this.updateMessageList(e4, "edit");
  }
  onMessageReactionsUpdated(e4) {
    this.updateMessageReactionList([e4]);
  }
  onCurrentConversationIDUpdated() {
    const e4 = this.getEngine();
    e4.TUIStore.watch(o3.CONV, { currentConversationID: (t4) => {
      this.isSwitching = true, this.delayGetHoppingFunction = void 0, this.hoppingConfigMap.clear(), e4.TUIStore.reset(o3.CHAT), this.typingHandler.clearTypingStatus(), this.typingHandler.sendTypingEnd(), ie(t4) || this.getMessageList().finally(() => {
        this.isSwitching = false, this.delayGetHoppingFunction && this.delayGetHoppingFunction();
      });
    } });
  }
  onMessageSource() {
    const e4 = this.getEngine();
    e4.TUIStore.watch(o3.CHAT, { messageSource: (t4) => {
      const s4 = this.getStoreData(o3.CONV, "currentConversationID");
      if (!s4 || t4 && t4.conversationID !== s4)
        return;
      if (S2(t4))
        return this.hoppingConfigMap.clear(), e4.TUIStore.update(o3.CHAT, "messageList", []), e4.TUIStore.update(o3.CHAT, "nextReqMessageID", ""), e4.TUIStore.update(o3.CHAT, "isCompleted", false), void this.getMessageList();
      const n4 = this.getStoreData(o3.CHAT, "messageList");
      n4 && n4.find((e5) => t4 && e5.ID === t4.ID) || (this.isSwitching ? this.delayGetHoppingFunction = this.getMessageListHoppingForDown : this.getMessageListHoppingForDown());
    } });
  }
  getMessageListHoppingForDown() {
    const e4 = this.getStoreData(o3.CHAT, "messageList"), { conversationID: t4, sequence: s4, time: n4, ID: i4 } = this.getStoreData(o3.CHAT, "messageSource");
    if (e4 && e4.find((e5) => i4 && e5.ID === i4))
      return;
    const r4 = this.getEngine();
    r4.TUIStore.update(o3.CHAT, "messageList", []), r4.TUIStore.update(o3.CHAT, "nextReqMessageID", ""), r4.TUIStore.update(o3.CHAT, "isCompleted", false), this.getMessageListHopping({ conversationID: t4, sequence: s4, time: n4, direction: 1 });
  }
  getStoreData(e4, t4) {
    return this.getEngine().TUIStore.getData(e4, t4);
  }
  sendMessage(e4, t4) {
    this.updateMessageList([e4], "send");
    const s4 = this.getEngine().chat.sendMessage(e4, t4);
    return this.getResponse(s4);
  }
  getResponse(e4, t4 = true, s4 = true) {
    return e4.then((e5) => {
      const s5 = e5.data.messageList ? e5.data.messageList : [e5.data.message];
      return t4 && this.updateMessageList(s5, "edit"), e5;
    }).catch((e5) => {
      var t5;
      return s4 && (null === (t5 = null == e5 ? void 0 : e5.data) || void 0 === t5 ? void 0 : t5.message) && this.updateMessageList([e5.data.message], "edit"), Promise.reject(e5);
    });
  }
  updateMessageList(e4, t4 = "") {
    if (this.getStoreData(o3.CHAT, "messageSource") && "unshift" !== t4 && "edit" !== t4)
      return;
    const s4 = this.getStoreData(o3.CHAT, "messageList"), n4 = this.updateTargetMessageList(e4, s4, t4);
    this.getEngine().TUIStore.update(o3.CHAT, "messageList", n4);
  }
  updateTargetMessageList(e4, t4, s4 = "") {
    const n4 = this.getStoreData(o3.CONV, "currentConversationID");
    let i4 = e4.filter((e5) => e5.conversationID === n4);
    if (i4 = this.handleC2CCallSignaling(i4), !s4 || 0 === i4.length)
      return t4;
    const r4 = t4 || [];
    let a4 = [];
    if ("send" === s4 || "push" === s4) {
      const e5 = this.getStoreData(o3.CHAT, "userInfo");
      Object.keys(e5).length > 0 && this.updateLocalMessage(i4, e5);
    }
    switch (s4) {
      case "edit":
        for (const e5 of t4) {
          const t5 = i4.find((t6) => t6.ID === e5.ID);
          a4.push(t5 || e5);
        }
        break;
      case "resend":
        a4 = r4.filter((e5) => e5.ID !== i4[0].ID).concat(i4);
        break;
      case "send":
        a4 = r4.concat(this.typingHandler.filterTypingMessage(i4));
        break;
      case "push":
        a4 = r4.concat(this.typingHandler.filterTypingMessage(i4)), this.getEngine().chat.setMessageRead({ conversationID: n4 });
        break;
      case "received":
        a4 = r4.concat(this.typingHandler.filterTypingMessage(i4)), a4 = this.sortMessageList(a4), this.getEngine().chat.setMessageRead({ conversationID: n4 });
        break;
      case "unshift":
        a4 = i4.filter((e5) => 0 === r4.length || !r4.find((t5) => t5.ID === e5.ID)), a4.push(...r4), a4 = this.sortMessageList(a4);
    }
    return a4;
  }
  enterTypingState() {
    this.getStoreData(o3.APP, "enableTyping") && this.sendTyping(true);
  }
  leaveTypingState() {
    this.getStoreData(o3.APP, "enableTyping") && this.sendTyping(false);
  }
  sendTyping(e4) {
    const t4 = this.getEngine(), s4 = this.getStoreData(o3.CONV, "currentConversationID");
    if (!s4.startsWith(t4.TYPES.CONV_C2C))
      return;
    const n4 = s4.replace(t4.TYPES.CONV_C2C, "");
    if (e4) {
      const e5 = this.getStoreData(o3.CHAT, "messageList").filter((e6) => "in" === e6.flow);
      if (0 === e5.length)
        return;
      const t5 = 1e3 * e5[e5.length - 1].time;
      if ((/* @__PURE__ */ new Date()).getTime() - t5 > 3e4)
        return;
    }
    this.typingHandler.sendTyping(e4, n4);
  }
  quoteMessage(e4) {
    var t4;
    return this.getEngine().TUIStore.update(o3.CHAT, "quoteMessage", { message: e4, type: "quote" }), null === (t4 = this.getEngine().TUIReport) || void 0 === t4 || t4.reportFeature(205), e4;
  }
  replyMessage(e4) {
    return this.getEngine().TUIStore.update(o3.CHAT, "quoteMessage", { message: e4, type: "reply" }), e4;
  }
  getCurrentConvInfo() {
    const { conversationID: e4 = "", type: t4 } = this.getStoreData(o3.CONV, "currentConversation") || {};
    return { to: e4.replace(t4, ""), conversationType: t4 };
  }
  t(e4) {
    return this.getEngine().TUITranslate.t(e4) || e4;
  }
  getMessageAbstractAndType(e4) {
    var t4, s4;
    const n4 = this.getEngine(), i4 = { abstract: "", type: 0 };
    switch (e4.type) {
      case n4.TYPES.MSG_TEXT:
        i4.abstract = null === (t4 = null == e4 ? void 0 : e4.payload) || void 0 === t4 ? void 0 : t4.text, i4.type = 1;
        break;
      case n4.TYPES.MSG_CUSTOM:
        i4.abstract = "[自定义消息]", i4.type = 2;
        break;
      case n4.TYPES.MSG_IMAGE:
        i4.abstract = "[图片]", i4.type = 3;
        break;
      case n4.TYPES.MSG_AUDIO:
        i4.abstract = "[语音]", i4.type = 4;
        break;
      case n4.TYPES.MSG_VIDEO:
        i4.abstract = "[视频]", i4.type = 5;
        break;
      case n4.TYPES.MSG_FILE:
        i4.abstract = "[文件]", i4.type = 6;
        break;
      case n4.TYPES.MSG_LOCATION:
        i4.type = 7;
        break;
      case n4.TYPES.MSG_FACE:
        i4.abstract = "[表情]", i4.type = 8;
        break;
      case n4.TYPES.MSG_GRP_TIP:
        i4.type = 9;
        break;
      case n4.TYPES.MSG_MERGER:
        i4.abstract = null === (s4 = null == e4 ? void 0 : e4.payload) || void 0 === s4 ? void 0 : s4.title, i4.type = 10;
    }
    return i4;
  }
  genMessageReply(e4, t4) {
    if ("reply" !== t4 && "quote" !== t4)
      return {};
    const { abstract: s4, type: n4 } = this.getMessageAbstractAndType(e4), i4 = { messageAbstract: s4, messageSender: e4.nick || e4.from, messageID: e4.ID }, r4 = Object.assign(Object.assign({}, i4), { messageType: n4, messageTime: null == e4 ? void 0 : e4.time, messageSequence: null == e4 ? void 0 : e4.sequence, version: 1 });
    if ("reply" === t4 && (r4.messageRootID = e4.ID, e4.cloudCustomData)) {
      const t5 = U2(e4.cloudCustomData);
      t5.messageReply && t5.messageReply.messageRootID && (r4.messageRootID = t5.messageReply.messageRootID);
    }
    return { messageReply: r4, messageReplyRoot: i4 };
  }
  getMessageInfo(e4, t4, s4) {
    const { messageReply: n4, messageReplyRoot: i4 } = this.genMessageReply(t4, s4), r4 = e4.cloudCustomData ? U2(e4.cloudCustomData) : {};
    let a4;
    if (r4.messageReply ? r4.messageReply = Object.assign(Object.assign({}, n4), r4.messageReply) : r4.messageReply = n4, "reply" === s4) {
      const { messageRootID: e5 } = n4;
      a4 = this.getEngine().chat.findMessage(e5);
      const t5 = (null == a4 ? void 0 : a4.cloudCustomData) ? U2(a4.cloudCustomData) : {};
      t5.messageReplies || (t5.messageReplies = {}), o4 = t5.messageReplies.replies, ("function" == typeof Array.isArray ? Array.isArray(o4) : "array" === Object.prototype.toString.call(o4).match(/^\[object (.*)\]$/)[1].toLowerCase()) || (t5.messageReplies.replies = []), t5.messageReplies.replies.push(i4), a4.cloudCustomData = JSON.stringify(t5);
    }
    var o4;
    return { cloudCustomData: JSON.stringify(r4), rootMessage: a4 };
  }
  sendTextMessage(e4, t4) {
    const s4 = this.getEngine(), { message: n4, type: i4 } = this.getStoreData(o3.CHAT, "quoteMessage");
    let r4 = { cloudCustomData: e4.cloudCustomData || "", rootMessage: void 0 };
    n4 && (r4 = this.getMessageInfo(e4, n4, i4));
    const a4 = s4.chat.createTextMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { cloudCustomData: r4.cloudCustomData }));
    return this.sendMessage(a4, t4).then((e5) => (r4.rootMessage && this.modifyMessage(r4.rootMessage), s4.TUIStore.reset(o3.CHAT, ["quoteMessage"], true), e5));
  }
  sendTextAtMessage(e4, t4) {
    const s4 = this.getEngine(), { message: n4, type: i4 } = this.getStoreData(o3.CHAT, "quoteMessage");
    let r4 = { cloudCustomData: e4.cloudCustomData || "", rootMessage: void 0 };
    n4 && (r4 = this.getMessageInfo(e4, n4, i4));
    const a4 = s4.chat.createTextAtMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { cloudCustomData: r4.cloudCustomData }));
    return this.sendMessage(a4, t4).then((e5) => (r4.rootMessage && this.modifyMessage(r4.rootMessage), s4.TUIStore.reset(o3.CHAT, ["quoteMessage"], true), e5));
  }
  sendImageMessage(e4, t4) {
    const s4 = this.getEngine().chat.createImageMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { onProgress: (e5) => {
      this.onProgress(s4.ID, e5);
    } }));
    return this.sendMessage(s4, t4);
  }
  sendAudioMessage(e4, t4) {
    const s4 = this.getEngine().chat.createAudioMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { onProgress: (e5) => {
      this.onProgress(s4.ID, e5);
    } }));
    return this.sendMessage(s4, t4);
  }
  sendVideoMessage(e4, t4) {
    const s4 = this.getEngine().chat.createVideoMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { onProgress: (e5) => {
      this.onProgress(s4.ID, e5);
    } }));
    return this.sendMessage(s4, t4);
  }
  sendCustomMessage(e4, t4) {
    const s4 = this.getEngine().chat.createCustomMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4));
    return this.sendMessage(s4, t4);
  }
  sendFaceMessage(e4, t4) {
    const s4 = this.getEngine().chat.createFaceMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4));
    return this.sendMessage(s4, t4);
  }
  sendFileMessage(e4, t4) {
    const s4 = this.getEngine().chat.createFileMessage(Object.assign(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4), { onProgress: (e5) => {
      this.onProgress(s4.ID, e5);
    } }));
    return this.sendMessage(s4, t4);
  }
  sendLocationMessage(e4, t4) {
    const s4 = this.getEngine().chat.createLocationMessage(Object.assign(Object.assign({}, this.getCurrentConvInfo()), e4));
    return this.sendMessage(s4, t4);
  }
  onProgress(e4, t4) {
    const s4 = this.getEngine().TUIStore.getMessageModel(e4);
    if (s4) {
      (t4 - s4.progress >= 0.1 || 1 === t4) && (s4.progress = t4, this.updateMessageList([s4], "edit"));
    }
  }
  setAbstractList(e4) {
    const t4 = this.getEngine(), s4 = e4.nick || e4.from;
    let n4 = "";
    switch (e4.type) {
      case t4.TYPES.MSG_TEXT:
        n4 = e4.payload.text || "", n4.length > 20 && (n4 = n4.slice(0, 20));
        break;
      case t4.TYPES.MSG_MERGER:
        n4 = `${this.t("TUIChat.[聊天记录]")}`;
        break;
      case t4.TYPES.MSG_IMAGE:
        n4 = `${this.t("TUIChat.[图片]")}`;
        break;
      case t4.TYPES.MSG_AUDIO:
        n4 = `${this.t("TUIChat.[音频]")}`;
        break;
      case t4.TYPES.MSG_VIDEO:
        n4 = `${this.t("TUIChat.[视频]")}`;
        break;
      case t4.TYPES.MSG_CUSTOM:
        n4 = `${this.t("TUIChat.[自定义消息]")}`;
        break;
      case t4.TYPES.MSG_FILE:
        n4 = `${this.t("TUIChat.[文件]")}`;
        break;
      case t4.TYPES.MSG_FACE:
        n4 = `${this.t("TUIChat.[动画表情]")}`;
    }
    return `${s4}: ${n4}`;
  }
  genMergerForwardPayload(e4, t4) {
    const { abstractList: s4 = [], compatibleText: n4 = "", title: i4 } = t4;
    return 0 === s4.length && e4.forEach((e5) => {
      s4.push(this.setAbstractList(e5));
    }), { messageList: e4, title: i4, abstractList: s4, compatibleText: n4 || this.t("TUIChat.请升级IMSDK到v2.10.1或更高版本查看此消息") };
  }
  genSendMergerForwardMessage(e4) {
    const { conversationList: t4, messageList: s4, params: n4, mergeInfo: i4, sendMessageOptions: r4 } = e4, a4 = [];
    for (let e5 = 0; e5 < t4.length; e5++) {
      const { conversationID: o4, type: u4 } = t4[e5], c4 = Object.assign({ to: o4.replace(`${u4}`, ""), conversationType: u4, payload: this.genMergerForwardPayload(s4, i4) }, n4), g4 = this.getEngine().chat.createMergerMessage(c4);
      a4.push(this.sendMessage(g4, r4));
    }
    return a4;
  }
  genTitle(e4, t4) {
    const { nick: s4, from: n4, to: i4 } = e4;
    return `${s4 || n4} ${this.t("TUIChat.和")} ${t4 || i4} ${this.t("TUIChat.的聊天记录")}`;
  }
  genMergeInfo(e4) {
    var t4;
    return i3(this, void 0, void 0, function* () {
      const { messageList: s4, mergeInfo: n4 } = e4;
      if (n4.title)
        return n4;
      if (s4[0].conversationType === this.getEngine().TYPES.CONV_GROUP)
        return n4.title = this.t("TUIChat.群聊的聊天记录"), n4;
      try {
        const { data: e5 = [] } = yield this.getEngine().TUIUser.getUserProfile({ userIDList: [s4[0].to] });
        n4.title = this.genTitle(s4[0], null === (t4 = e5[0]) || void 0 === t4 ? void 0 : t4.nick);
      } catch (e5) {
        n4.title = this.genTitle(s4[0]);
      }
      return n4;
    });
  }
  sendMergerForwardMessage(e4) {
    return i3(this, void 0, void 0, function* () {
      return e4.mergeInfo = yield this.genMergeInfo(e4), Promise.all(this.genSendMergerForwardMessage(e4));
    });
  }
  getOriginMessageList(e4) {
    return e4.map((e5) => e5 instanceof ue ? e5.getMessage() : e5);
  }
  sendForwardMessage(e4, t4, s4) {
    t4 = this.getOriginMessageList(t4);
    const i4 = s4 || {}, { needMerge: r4 = false, params: a4 = {}, mergeInfo: o4 = {} } = i4, u4 = n3(i4, ["needMerge", "params", "mergeInfo"]);
    if (r4)
      return this.sendMergerForwardMessage({ conversationList: e4, messageList: t4, params: a4, mergeInfo: o4, sendMessageOptions: u4 });
    const c4 = [];
    for (let s5 = 0; s5 < e4.length; s5++) {
      const { conversationID: n4, type: i5 } = e4[s5], r5 = Object.assign({ to: n4.replace(`${i5}`, ""), conversationType: i5 }, a4), o5 = u4[n4] || u4;
      for (let e5 = 0; e5 < t4.length; e5++) {
        Reflect.set(r5, "payload", t4[e5]);
        const s6 = this.getEngine().chat.createForwardMessage(r5);
        c4.push(this.sendMessage(s6, o5));
      }
    }
    return Promise.all(c4);
  }
  revokeMessage(e4) {
    const t4 = this.getEngine().chat.revokeMessage(e4);
    return this.getResponse(t4, true, false);
  }
  resendMessage(e4) {
    e4.status = "unSend", this.updateMessageList([e4], "resend");
    const t4 = this.getEngine().chat.resendMessage(e4);
    return this.getResponse(t4, true, true);
  }
  deleteMessage(e4) {
    const t4 = this.getEngine().chat.deleteMessage(e4);
    return this.getResponse(t4, true, false);
  }
  setMessageExtensions(e4, t4) {
    return this.getEngine().chat.setMessageExtensions(e4, t4);
  }
  getMessageExtensions(e4) {
    return this.getEngine().chat.getMessageExtensions(e4);
  }
  deleteMessageExtensions(e4, t4) {
    return this.getEngine().chat.deleteMessageExtensions(e4, t4);
  }
  modifyMessage(e4) {
    const t4 = this.getEngine().chat.modifyMessage(e4);
    return this.getResponse(t4, true, false).catch((e5) => {
      const { code: t5 = 0, data: s4 = {} } = e5.code;
      throw t5 === l3.MSG_MODIFY_CONFLICT ? console.warn(`${p3.MSG_MODIFY_CONFLICT} data.message: ${null == s4 ? void 0 : s4.message}`) : t5 === l3.MSG_MODIFY_DISABLED_IN_AVCHATROOM ? console.warn(p3.MSG_MODIFY_DISABLED_IN_AVCHATROOM) : t5 === l3.MODIFY_MESSAGE_NOT_EXIST && console.warn(p3.MODIFY_MESSAGE_NOT_EXIST), e5;
    });
  }
  getMessageList(e4 = { conversationID: this.getStoreData(o3.CONV, "currentConversationID"), nextReqMessageID: this.getStoreData(o3.CHAT, "nextReqMessageID") }) {
    const t4 = this.getEngine();
    if (!t4.chat.isReady())
      return Promise.reject({ code: h3.GET_MSG_LIST_ERROR, message: d2.GET_MSG_LIST_ERROR });
    if (this.getStoreData(o3.CHAT, "isCompleted"))
      return Promise.resolve({ data: { messageList: [], nextReqMessageID: "", isCompleted: true } });
    const s4 = this.getStoreData(o3.CHAT, "messageSource"), n4 = this.hoppingConfigMap.get("nextMessageSeq"), i4 = this.hoppingConfigMap.get("nextMessageTime"), r4 = n4 || i4;
    return s4 && s4.conversationID === (null == e4 ? void 0 : e4.conversationID) && r4 ? this.getMessageListHopping() : t4.chat.getMessageList(e4).then((e5) => {
      var s5;
      const { messageList: n5, nextReqMessageID: i5, isCompleted: r5 } = e5.data, a4 = this.getStoreData(o3.CHAT, "userInfo");
      Object.keys(a4).length > 0 && this.updateLocalMessage(n5, a4), this.updateMessageList(n5, "unshift"), t4.TUIStore.update(o3.CHAT, "nextReqMessageID", i5), t4.TUIStore.update(o3.CHAT, "isCompleted", r5);
      const u4 = null === (s5 = n5[0]) || void 0 === s5 ? void 0 : s5.conversationID, { operationType: c4 = 0 } = this.getEngine().TUIStore.getConversationModel(u4) || {};
      return 0 === c4 && (this.getMessageReactions({ messageList: n5 }), this.readReceiptHandler.getMessageReadReceiptList(n5)), e5;
    }).catch((e5) => Promise.reject(e5));
  }
  getMessageListHopping(e4) {
    var t4;
    void 0 === e4 && (e4 = { conversationID: null === (t4 = this.getStoreData(o3.CHAT, "messageSource")) || void 0 === t4 ? void 0 : t4.conversationID, sequence: this.hoppingConfigMap.get("nextMessageSeq"), time: this.hoppingConfigMap.get("nextMessageTime") });
    const s4 = this.getEngine();
    return s4.chat.getMessageListHopping(e4).then((t5) => {
      const { messageList: n4, nextMessageSeq: i4, nextMessageTime: r4, isCompleted: a4 } = t5.data, u4 = 1 === e4.direction ? e4.sequence : i4, c4 = 1 === e4.direction ? e4.time : r4;
      return this.updateMessageList(n4, "unshift"), this.delayGetHoppingFunction = void 0, this.hoppingConfigMap.set("nextMessageSeq", u4), this.hoppingConfigMap.set("nextMessageTime", c4), s4.TUIStore.update(o3.CHAT, "isCompleted", a4), t5;
    }).catch((e5) => Promise.reject(e5));
  }
  sendMessageReadReceipt(e4) {
    return this.readReceiptHandler.sendMessageReadReceipt(e4);
  }
  getGroupMessageReadMemberList(e4) {
    return this.readReceiptHandler.getGroupMessageReadMemberList(e4).then((e5) => {
      const { isCompleted: t4, cursor: s4, messageID: n4, unreadUserIDList: i4, readUserIDList: r4 } = e5.data, a4 = { code: 0, data: { cursor: s4, isCompleted: t4, messageID: n4, unreadUserInfoList: [], readUserInfoList: [] } }, o4 = [...i4, ...r4];
      return 0 === o4.length ? a4 : this.getEngine().TUIUser.getUserProfile({ userIDList: o4 }).then((e6) => (i4.length > 0 ? e6.data.forEach((e7) => {
        const { userID: t5, nick: s5 = "", avatar: n5 = "" } = e7;
        a4.data.unreadUserInfoList.push({ userID: t5, nick: s5, avatar: n5 });
      }) : e6.data.forEach((e7) => {
        const { userID: t5, nick: s5 = "", avatar: n5 = "" } = e7;
        a4.data.readUserInfoList.push({ userID: t5, nick: s5, avatar: n5 });
      }), a4));
    });
  }
  downloadMergedMessages(e4) {
    return this.getEngine().chat.downloadMergerMessage(e4);
  }
  setTranslationLanguage(e4) {
    this.getEngine().TUIStore.update(o3.USER, "targetLanguage", e4);
  }
  translateText(e4) {
    const t4 = this.getStoreData(o3.USER, "targetLanguage"), s4 = Object.assign({ targetLanguage: t4, sourceLanguage: "auto" }, e4);
    return this.getEngine().chat.translateText(s4);
  }
  searchCloudMessages(e4) {
    const t4 = this.getStoreData(o3.CONV, "conversationList");
    return this.getEngine().chat.searchCloudMessages(e4).then((e5) => {
      const { searchResultList: s4 } = e5.data;
      return e5.data.searchResultList = s4.map((e6) => {
        const { messageList: s5, conversationID: i4 } = e6, r4 = n3(e6, ["messageList", "conversationID"]), a4 = s5.map((e7) => new ue(e7)), o4 = t4.find((e7) => e7.conversationID === i4);
        return Object.assign(Object.assign({}, r4), { messageList: a4.sort((e7, t5) => t5.time - e7.time), conversation: o4 });
      }), e5;
    });
  }
  addMessageReaction(e4, t4) {
    return this.getEngine().chat.addMessageReaction(e4.getMessage(), t4);
  }
  removeMessageReaction(e4, t4) {
    return this.getEngine().chat.removeMessageReaction(e4.getMessage(), t4);
  }
  getMessageReactions(e4) {
    const { messageList: t4 = [] } = e4, s4 = this.getStoreData(o3.APP, "enabledEmojiPlugin");
    console.log(`TUIChatService.getMessageReactions enabledEmojiPlugin:${s4} messageList length:${t4.length}`), s4 && t4.length > 0 && this.getEngine().chat.getMessageReactions(e4).then((e5) => {
      const t5 = e5.data.resultList || e5.data;
      this.updateMessageReactionList(t5);
    }).catch(() => {
    });
  }
  getAllUserListOfMessageReaction(e4) {
    var t4;
    return this.getEngine().chat.getAllUserListOfMessageReaction(Object.assign(Object.assign({}, e4), { message: null === (t4 = null == e4 ? void 0 : e4.message) || void 0 === t4 ? void 0 : t4.getMessage() }));
  }
  updateMessageReactionList(e4) {
    const t4 = [];
    e4.forEach((e5) => {
      const { messageID: s4, reactionList: n4 } = e5, i4 = this.getEngine().TUIStore.getMessageModel(s4);
      if (i4) {
        const e6 = [];
        for (let t5 = 0; t5 < n4.length; t5++) {
          let s5 = true;
          for (let e7 = 0; e7 < i4.reactionList.length; e7++)
            if (n4[t5].reactionID === i4.reactionList[e7].reactionID) {
              i4.reactionList[e7] = n4[t5], s5 = false;
              break;
            }
          s5 && e6.push(n4[t5]);
        }
        i4.reactionList.push(...e6), e6.length = 0, t4.push(i4);
      }
    }), t4.length > 0 && this.updateMessageList(t4, "edit");
  }
  convertVoiceToText(e4) {
    const { message: t4, language: s4 = "zh" } = e4, n4 = t4.getMessage();
    return this.getEngine().chat.convertVoiceToText({ message: n4, language: s4 });
  }
  clearHistoryMessage(e4) {
    const t4 = this.getEngine();
    return t4.chat.clearHistoryMessage(e4).then((e5) => (t4.TUIStore.update(o3.CHAT, "messageList", []), t4.TUIStore.update(o3.CHAT, "nextReqMessageID", ""), t4.TUIStore.update(o3.CHAT, "isCompleted", false), e5));
  }
  updateMessageInfo(e4) {
    const t4 = this.getStoreData(o3.CHAT, "userInfo");
    this.getEngine().TUIStore.update(o3.CHAT, "userInfo", Object.assign(t4, e4));
    const s4 = this.getStoreData(o3.CHAT, "messageList");
    if (s4.length > 0) {
      this.updateLocalMessage(s4, e4) && this.getEngine().TUIStore.update(o3.CHAT, "messageList", s4);
    }
  }
  updateLocalMessage(e4, t4) {
    let s4 = false;
    return e4.forEach((e5) => {
      if (t4[e5.from]) {
        const { nick: n4, nameCard: i4, avatar: r4 } = t4[e5.from];
        n4 && (e5.nick = n4, s4 = true), i4 && (e5.nameCard = i4, s4 = true), r4 && (e5.avatar = r4, s4 = true);
      }
    }), s4;
  }
  handleC2CCallSignaling(e4) {
    const t4 = this.getEngine(), s4 = t4.getMyUserID();
    return e4.filter((e5) => {
      var n4, i4, r4, a4, u4;
      const { conversationType: c4, type: g4, payload: l4 } = e5;
      let h4 = true;
      if (c4 === t4.TYPES.CONV_C2C && g4 === t4.TYPES.MSG_CUSTOM) {
        if (t4.chat.getSignalingInfo(e5)) {
          const t5 = U2(l4.data);
          if (1 === (null == t5 ? void 0 : t5.businessID)) {
            const c5 = U2(t5.data);
            if (h4 = !(e5._isExcludedFromUnreadCount && e5._isExcludedFromLastMessage), h4 && true !== (null === (n4 = null == c5 ? void 0 : c5.data) || void 0 === n4 ? void 0 : n4.consumed)) {
              let n5 = null === (i4 = null == c5 ? void 0 : c5.data) || void 0 === i4 ? void 0 : i4.inviter;
              "line_busy" !== (null == c5 ? void 0 : c5.line_busy) && "lineBusy" !== (null === (r4 = null == c5 ? void 0 : c5.data) || void 0 === r4 ? void 0 : r4.message) || (n5 = t5.inviter);
              const { from: g5, to: l5 } = e5;
              if (n5 !== s4 && e5.from === s4) {
                const t6 = this.getStoreData(o3.CONV, "currentConversation");
                e5.from = l5, e5.to = g5, e5.flow = "in", e5.avatar = (null === (a4 = null == t6 ? void 0 : t6.userProfile) || void 0 === a4 ? void 0 : a4.avatar) || "";
              }
              if (n5 === s4 && e5.from !== s4) {
                const t6 = this.getStoreData(o3.USER, "userProfile");
                e5.from = l5, e5.to = g5, e5.flow = "out", e5.avatar = null == t6 ? void 0 : t6.avatar;
              }
              console.log(`${this.serv}.handleC2CCallSignaling myUserID:${s4} callSignaling.inviter:${t5.inviter} customData.data.inviter:${null === (u4 = null == c5 ? void 0 : c5.data) || void 0 === u4 ? void 0 : u4.inviter}`);
            }
          }
        }
      }
      return h4;
    });
  }
  sortMessageList(e4) {
    const { conversationType: t4 } = e4[0];
    if (t4 === this.getEngine().TYPES.CONV_C2C)
      return e4.sort((e5, t5) => e5.time - t5.time);
    const s4 = e4.filter((e5) => "success" === e5.status).sort((e5, t5) => e5.sequence - t5.sequence);
    for (let t5 = 0; t5 < e4.length; t5++)
      "success" !== e4[t5].status && s4.splice(t5, 0, e4[t5]);
    return s4;
  }
};
var $t = class _$t extends ne {
  constructor() {
    super(), this.groupMap = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _$t.instance || (_$t.instance = new _$t()), _$t.instance;
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.GROUP_LIST_UPDATED, this.onGroupListUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.GROUP_ATTRIBUTES_UPDATED, this.onGroupAttributesUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.GROUP_COUNTER_UPDATED, this.onGroupCounterUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.MESSAGE_RECEIVED, this.onMessageReceived.bind(this)), this.getGroupInitData();
  }
  onGroupListUpdated(e4) {
    const t4 = this.getEngine();
    t4.TUIStore.update(o3.GRP, "groupList", e4);
    const s4 = t4.TUIStore.getData(o3.GRP, "currentGroupID");
    e4.forEach((e5) => {
      e5.groupID === s4 && t4.TUIStore.update(o3.GRP, "currentGroup", e5);
    });
  }
  onGroupAttributesUpdated(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.GRP, "currentGroupID");
    let n4 = t4.TUIStore.getData(o3.GRP, "groupList");
    const { groupID: i4, groupAttributes: r4 } = e4;
    s4 === i4 && t4.TUIStore.update(o3.GRP, "currentGroupAttributes", r4), n4 = n4.map((e5) => (e5.groupID === i4 && (e5.groupAttributes = r4), e5)), t4.TUIStore.update(o3.GRP, "groupList", n4);
  }
  onGroupCounterUpdated(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.GRP, "currentGroupID"), n4 = t4.TUIStore.getData(o3.GRP, "currentGroupCounters") || {};
    let i4 = t4.TUIStore.getData(o3.GRP, "groupList");
    const { groupID: r4, key: a4, value: u4 } = e4;
    s4 === r4 && (n4[a4] = u4, t4.TUIStore.update(o3.GRP, "currentGroupCounters", n4)), i4 = i4.map((e5) => (e5.groupID === r4 && (e5.groupCounters = Object.assign(Object.assign({}, e5.groupCounters), { [a4]: u4 })), e5)), t4.TUIStore.update(o3.GRP, "groupList", i4);
  }
  onMessageReceived(e4) {
    const t4 = this.getEngine(), s4 = [];
    e4.forEach((e5) => {
      if (e5.type === t4.TYPES.MSG_GRP_TIP) {
        const { payload: s5 } = e5, { operationType: n4, userIDList: i4 } = s5;
        switch (n4) {
          case t4.TYPES.GRP_TIP_MBR_JOIN:
            this.addMemberList(i4);
            break;
          case t4.TYPES.GRP_TIP_MBR_QUIT:
          case t4.TYPES.GRP_TIP_MBR_KICKED_OUT:
            this.removeMemberList(i4);
            break;
          case t4.TYPES.GRP_TIP_MBR_SET_ADMIN:
          case t4.TYPES.GRP_TIP_MBR_CANCELED_ADMIN:
            this.updateGroupMember(i4);
            break;
          case t4.TYPES.GRP_TIP_GRP_PROFILE_UPDATED:
            break;
          case t4.TYPES.GRP_TIP_MBR_PROFILE_UPDATED:
          case t4.TYPES.GRP_TIP_BAN_AVCHATROOM_MEMBER:
          case t4.TYPES.GRP_TIP_UNBAN_AVCHATROOM_MEMBER:
            this.updateGroupMember(i4);
        }
      }
      e5.type === t4.TYPES.MSG_GRP_SYS_NOTICE && s4.push(e5);
    }), s4.length > 0 && t4.TUIStore.update(o3.GRP, "groupSystemNoticeList", s4);
  }
  getGroupInitData() {
    const e4 = this.getEngine();
    e4.chat.isReady() && e4.chat.getGroupList().then((e5) => {
      const { groupList: t4 = [] } = e5.data;
      console.log(`TUIGroupService.init, getGroupList count:${t4.length}`), t4.length > 0 && this.onGroupListUpdated(t4);
    });
  }
  updateGroupMember(e4) {
    return i3(this, void 0, void 0, function* () {
      const t4 = this.getEngine().TUIStore.getData(o3.GRP, "currentGroupID");
      if (t4) {
        const s4 = yield this.getGroupMemberProfile({ groupID: t4, userIDList: e4 }), { memberList: n4 } = s4.data;
        this.updateMemberList(n4);
      }
    });
  }
  resetCurrentStore() {
    this.getEngine().TUIStore.reset(o3.GRP, ["currentGroupID", "currentGroup", "currentGroupAttributes", "currentGroupCounters", "currentGroupMemberList"], true);
  }
  switchGroup(e4) {
    return i3(this, void 0, void 0, function* () {
      const t4 = this.getEngine();
      t4.TUIStore.update(o3.GRP, "offset", 0), t4.TUIStore.update(o3.GRP, "isCompleted", false);
      const s4 = t4.TUIStore.getConversationModel(`GROUP${e4}`);
      if ((null == s4 ? void 0 : s4.operationType) > 0) {
        const e5 = t4.TUIStore.getData(o3.GRP, "currentGroup");
        return Promise.resolve(e5);
      }
      const n4 = t4.TUIStore.getData(o3.GRP, "currentGroupID");
      if (!e4)
        return this.resetCurrentStore(), Promise.resolve({});
      if (n4 === e4) {
        const e5 = t4.TUIStore.getData(o3.GRP, "currentGroup");
        return Promise.resolve(e5);
      }
      this.resetCurrentStore(), t4.TUIStore.update(o3.GRP, "currentGroupID", e4);
      try {
        yield this.getGroupInfo(e4);
      } catch (e5) {
        Promise.reject(e5);
      }
      const i4 = setTimeout(() => {
        this.groupMap.delete(e4), clearTimeout(i4);
      }, 5e3), r4 = t4.TUIStore.getData(o3.GRP, "currentGroup");
      return Promise.resolve(r4);
    });
  }
  getGroupInfo(e4) {
    return i3(this, void 0, void 0, function* () {
      const t4 = this.getEngine(), s4 = this.groupMap.get(e4);
      if (s4)
        return this.updateMemberList((null == s4 ? void 0 : s4.memberList) || []), t4.TUIStore.update(o3.GRP, "currentGroup", s4.group), t4.TUIStore.update(o3.GRP, "currentGroupAttributes", s4.groupAttributes || {}), void t4.TUIStore.update(o3.GRP, "currentGroupCounters", s4.counters || {});
      const n4 = { group: {}, memberList: [], groupAttributes: void 0, counters: void 0 }, { data: { group: i4 } } = yield this.getGroupProfile({ groupID: e4 });
      n4.group = i4;
      const { data: { memberList: r4 } } = yield this.getGroupMemberList({ groupID: e4 });
      n4.memberList = r4;
      const a4 = yield this.getGroupAttributes({ groupID: e4, keyList: [] }), { groupAttributes: u4 } = a4.data;
      n4.groupAttributes = u4, t4.TUIStore.update(o3.GRP, "currentGroupAttributes", u4);
      try {
        const s5 = yield this.getGroupCounters({ groupID: e4, keyList: [] }), { counters: i5 } = s5.data;
        n4.counters = i5, t4.TUIStore.update(o3.GRP, "currentGroupCounters", i5);
      } catch (e5) {
        console.warn(null == e5 ? void 0 : e5.message);
      }
      this.groupMap.set(e4, n4);
    });
  }
  getGroupProfile(e4) {
    const t4 = this.getEngine();
    return t4.chat.getGroupProfile(e4).then((s4) => i3(this, void 0, void 0, function* () {
      if (t4.TUIStore.getData(o3.GRP, "currentGroupID") === e4.groupID) {
        const { group: e5 } = s4.data;
        t4.TUIStore.update(o3.GRP, "currentGroup", e5);
      }
      return s4;
    }));
  }
  updateGroupProfile(e4) {
    return this.getEngine().chat.updateGroupProfile(e4);
  }
  createGroup(e4) {
    return this.getEngine().chat.createGroup(e4);
  }
  dismissGroup(e4) {
    return this.getEngine().chat.dismissGroup(e4);
  }
  searchGroupByID(e4) {
    const t4 = this.getEngine();
    return t4.chat.searchGroupByID(e4).then((e5) => {
      const { group: s4 } = e5.data, n4 = t4.TUIStore.getData(o3.GRP, "groupList");
      return e5.data.group.isJoinedGroup = n4.some((e6) => e6.groupID === s4.groupID), e5;
    });
  }
  joinGroup(e4) {
    return this.getEngine().chat.joinGroup(e4);
  }
  quitGroup(e4) {
    return this.getEngine().chat.quitGroup(e4);
  }
  getGroupApplicationList() {
    return this.getEngine().chat.getGroupApplicationList();
  }
  handleGroupApplication(e4) {
    return this.getEngine().chat.handleGroupApplication(e4);
  }
  getGroupOnlineMemberCount(e4) {
    return this.getEngine().chat.getGroupOnlineMemberCount(e4);
  }
  changeGroupOwner(e4) {
    return this.getEngine().chat.changeGroupOwner(e4);
  }
  initGroupAttributes(e4) {
    return this.getEngine().chat.initGroupAttributes(e4);
  }
  setGroupAttributes(e4) {
    return this.getEngine().chat.setGroupAttributes(e4);
  }
  deleteGroupAttributes(e4) {
    return this.getEngine().chat.deleteGroupAttributes(e4);
  }
  getGroupAttributes(e4) {
    return this.getEngine().chat.getGroupAttributes(e4);
  }
  setGroupCounters(e4) {
    return this.getEngine().chat.setGroupCounters(e4);
  }
  increaseGroupCounter(e4) {
    return this.getEngine().chat.increaseGroupCounter(e4);
  }
  decreaseGroupCounter(e4) {
    return this.getEngine().chat.decreaseGroupCounter(e4);
  }
  getGroupCounters(e4) {
    return this.getEngine().chat.getGroupCounters(e4);
  }
  updateMemberList(e4) {
    const t4 = this.getEngine(), s4 = [...(t4.TUIStore.getData(o3.GRP, "currentGroupMemberList") || []).filter((t5) => !e4.find((e5) => e5.userID === t5.userID)), ...e4];
    t4.TUIStore.update(o3.GRP, "currentGroupMemberList", s4);
  }
  addMemberList(e4) {
    return i3(this, void 0, void 0, function* () {
      const t4 = this.getEngine().TUIStore.getData(o3.GRP, "currentGroupID");
      if (t4)
        try {
          const s4 = yield this.getGroupMemberProfile({ groupID: t4, userIDList: e4 }), { memberList: n4 } = s4.data;
          this.updateMemberList(n4);
        } catch (t5) {
          const s4 = e4.map((e5) => ({ userID: e5, avatar: "", nick: "", role: "", joinTime: 0, nameCard: "", muteUntil: 0, memberCustomField: [] }));
          this.updateMemberList(s4);
        }
    });
  }
  removeMemberList(e4) {
    const t4 = this.getEngine(), s4 = t4.TUIStore.getData(o3.GRP, "currentGroupMemberList").filter((t5) => -1 === e4.indexOf(t5.userID));
    t4.TUIStore.update(o3.GRP, "currentGroupMemberList", s4);
  }
  getGroupMemberList(e4) {
    const t4 = this.getEngine();
    if (S2(e4.offset)) {
      const s4 = t4.TUIStore.getData(o3.GRP, "offset");
      e4.offset = s4;
    }
    return t4.chat.getGroupMemberList(e4).then((s4) => {
      if (t4.TUIStore.getData(o3.GRP, "currentGroupID") === e4.groupID) {
        const { memberList: e5, offset: n4 = 0 } = s4.data;
        this.updateMemberList(e5), t4.TUIStore.update(o3.GRP, "offset", n4), 0 === n4 && t4.TUIStore.update(o3.GRP, "isCompleted", true);
      }
      return s4;
    });
  }
  getGroupMemberProfile(e4) {
    return this.getEngine().chat.getGroupMemberProfile(e4);
  }
  addGroupMember(e4) {
    const t4 = this.getEngine();
    return t4.chat.addGroupMember(e4).then((s4) => i3(this, void 0, void 0, function* () {
      if (t4.TUIStore.getData(o3.GRP, "currentGroupID") === e4.groupID) {
        const { successUserIDList: e5, group: n4 } = s4.data;
        t4.TUIStore.update(o3.GRP, "currentGroup", n4), this.addMemberList(e5);
      }
      return s4;
    }));
  }
  deleteGroupMember(e4) {
    const t4 = this.getEngine();
    return t4.chat.deleteGroupMember(e4).then((s4) => {
      if (t4.TUIStore.getData(o3.GRP, "currentGroupID") === e4.groupID) {
        const { userIDList: e5, group: n4 } = s4.data;
        this.removeMemberList(e5), t4.TUIStore.update(o3.GRP, "currentGroup", n4);
      }
      return s4;
    });
  }
  setGroupMemberMuteTime(e4) {
    return this.getEngine().chat.setGroupMemberMuteTime(e4);
  }
  setGroupMemberRole(e4) {
    return this.getEngine().chat.setGroupMemberRole(e4);
  }
  setGroupMemberNameCard(e4) {
    return this.getEngine().chat.setGroupMemberNameCard(e4);
  }
  setGroupMemberCustomField(e4) {
    return this.getEngine().chat.setGroupMemberCustomField(e4);
  }
  markGroupMemberList(e4) {
    return this.getEngine().chat.markGroupMemberList(e4);
  }
};
var Ht = class _Ht extends ne {
  constructor() {
    super(), console.warn("TUIFriendService instance");
  }
  static getInstance() {
    return _Ht.instance || (_Ht.instance = new _Ht()), _Ht.instance;
  }
  init() {
    const e4 = this.getEngine();
    e4.eventCenter.addEvent(e4.EVENT.FRIEND_LIST_UPDATED, this.onFriendListUpdated.bind(this)), e4.eventCenter.addEvent(e4.EVENT.FRIEND_APPLICATION_LIST_UPDATED, this.onFriendApplicationListUpdated.bind(this)), this.getFriendInitData();
  }
  onFriendListUpdated(e4) {
    this.getEngine().TUIStore.update(o3.FRIEND, "friendList", e4);
  }
  onFriendApplicationListUpdated(e4) {
    const { friendApplicationList: t4, unreadCount: s4 = 0 } = e4, n4 = this.getEngine();
    n4.TUIStore.update(o3.FRIEND, "friendApplicationList", t4), n4.TUIStore.update(o3.FRIEND, "friendApplicationUnreadCount", s4);
  }
  getFriendInitData() {
    const e4 = this.getEngine();
    e4.chat.isReady() && (e4.chat.getFriendList().then((e5) => {
      const t4 = e5.data || [];
      console.log(`TUIFriendService.init, getFriendList count:${t4.length}`), t4.length > 0 && this.onFriendListUpdated(t4);
    }), e4.chat.getFriendApplicationList().then((e5) => {
      this.onFriendApplicationListUpdated(e5.data);
    }));
  }
  getFriendList() {
    return this.getEngine().chat.getFriendList();
  }
  getFriendRemark(e4) {
    const t4 = this.getEngine().TUIStore.getData(o3.FRIEND, "friendList"), s4 = {};
    return e4.forEach((e5) => {
      for (let n4 = 0; n4 < t4.length; n4++)
        t4[n4].userID !== e5 || (s4[e5] = t4[n4].remark);
    }), s4;
  }
  addFriend(e4) {
    return this.getEngine().chat.addFriend(e4);
  }
  deleteFriend(e4) {
    return this.getEngine().chat.deleteFriend(e4);
  }
  checkFriend(e4) {
    return this.getEngine().chat.checkFriend(e4);
  }
  getFriendProfile(e4) {
    return this.getEngine().chat.getFriendProfile(e4);
  }
  updateFriend(e4) {
    return this.getEngine().chat.updateFriend(e4);
  }
  acceptFriendApplication(e4) {
    return this.getEngine().chat.acceptFriendApplication(e4);
  }
  refuseFriendApplication(e4) {
    return this.getEngine().chat.refuseFriendApplication({ userID: e4 });
  }
  deleteFriendApplication(e4) {
    return this.getEngine().chat.deleteFriendApplication(e4);
  }
  setFriendApplicationRead() {
    return this.getEngine().chat.setFriendApplicationRead();
  }
};
var Yt = class _Yt extends ne {
  static getInstance() {
    return _Yt.instance || (_Yt.instance = new _Yt()), _Yt.instance;
  }
  reportFeature(e4, t4) {
    var s4;
    return null === (s4 = this.getEngine().chat) || void 0 === s4 ? void 0 : s4.callExperimentalAPI("statTUIKeyFeatures", { code: e4, msg: t4 ? `${e4}-${t4}` : "" });
  }
};
var Bt = class {
  constructor() {
    this.cache = [], this.middlewares = [], this.options = null;
  }
  use(e4) {
    return "function" != typeof e4 && console.error("middleware must be a function"), this.cache.push(e4), this;
  }
  next() {
    if (this.middlewares && this.middlewares.length > 0) {
      return this.middlewares.shift().call(this, this.options, this.next.bind(this));
    }
  }
  run(e4) {
    return this.middlewares = this.cache.map((e5) => e5), this.options = e4, this.next();
  }
};
function Kt(e4, t4, s4) {
  const n4 = /* @__PURE__ */ Object.create(null);
  Object.keys(s4).forEach((s5) => {
    if (!t4[s5])
      return;
    n4[s5] = t4[s5];
    const i4 = new Bt();
    t4[s5] = function() {
      const r4 = Array.from(arguments);
      return i4.use((t5, n5) => e4.isInited ? n5() : Promise.reject({ code: h3.NOT_INIT, message: `${s5} | ${d2.NOT_INIT}` })).use((e5) => n4[s5].apply(t4, e5)), i4.run(r4);
    };
  });
}
console.log("TUIChatEngine.VERSION:2.4.2");
var qt = ee.getInstance();
var zt = X.getInstance();
var Jt = fe.getInstance();
var Wt = Dt.getInstance();
var Xt = Pt.getInstance();
var Zt = xt.getInstance();
var Qt = Ft.getInstance();
var es = $t.getInstance();
var ts = Ht.getInstance();
var ss = Yt.getInstance();
qt.mount(a3.TUIStore, Jt), qt.mount(a3.TUITranslate, Wt), qt.mount(a3.TUIConversation, Xt), qt.mount(a3.TUIUser, Zt), qt.mount(a3.TUIChat, Qt), qt.mount(a3.TUIGroup, es), qt.mount(a3.TUIFriend, ts), qt.mount(a3.TUIReport, ss), Kt(qt, qt, f2), Kt(qt, Xt, m2), Kt(qt, Qt, v2), Kt(qt, es, T3), Kt(qt, Zt, E3), Kt(qt, ts, I2), Kt(qt, ss, f2);

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/components/Chat/ChatKit/utils/env.mjs
var isPC = g2() === "pc";
var isH5 = g2() === "h5";
var isWeChat = g2() === "wechat";
var isApp = g2() === "app";
var isUniFrameWork = typeof uni !== "undefined";
var isMobile = isH5 || isWeChat || isApp;

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/components/Chat/ChatKit/components/TUIChat/config.mjs
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
var _TUIChatConfig = class _TUIChatConfig2 {
  constructor() {
    __publicField(this, "chatType");
    __publicField(this, "features");
    __publicField(this, "theme");
    this.chatType = "";
    this.features = {
      DownloadFile: true,
      CopyMessage: true,
      DeleteMessage: true,
      RevokeMessage: true,
      QuoteMessage: true,
      ForwardMessage: true,
      TranslateMessage: true,
      VoiceToText: true,
      MultiSelection: true,
      EmojiReaction: true,
      InputEmoji: true,
      InputStickers: true,
      InputImage: true,
      InputVoice: true,
      InputVideo: true,
      InputFile: true,
      InputEvaluation: true,
      InputQuickReplies: true,
      InputMention: true,
      MessageSearch: true,
      ReadStatus: true
    };
    this.theme = "light";
  }
  static getInstance() {
    if (!_TUIChatConfig2.instance) {
      _TUIChatConfig2.instance = new _TUIChatConfig2();
    }
    return _TUIChatConfig2.instance;
  }
  setChatType(chatType) {
    this.chatType = chatType;
  }
  getChatType() {
    return this.chatType;
  }
  hideTUIChatFeatures(features) {
    if (!features) {
      return;
    }
    features.forEach((feature) => {
      if (this.features[feature]) {
        this.features[feature] = false;
      }
    });
  }
  getFeatureConfig(key) {
    if (key) {
      return this.features[key];
    }
    return this.features;
  }
  setTheme(theme) {
    this.theme = theme;
  }
  getTheme() {
    return this.theme;
  }
};
__publicField(_TUIChatConfig, "instance");
var TUIChatConfig = _TUIChatConfig;
var ChatConfig = TUIChatConfig.getInstance();
var hideTUIChatFeatures = ChatConfig.hideTUIChatFeatures.bind(ChatConfig);

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/components/Chat/ChatKit/utils/type-check.mjs
var isFunction = (val) => typeof val === "function";
var isObject = (val) => val !== null && typeof val === "object";
var isUrl = (url) => {
  return /^(https?:\/\/(([a-zA-Z0-9]+-?)+[a-zA-Z0-9]+\.)+[a-zA-Z]+)(:\d+)?(\/.*)?(\?.*)?(#.*)?$/.test(
    url
  );
};
var isJSON = (str) => {
  if (typeof str === "string") {
    try {
      const data = JSON.parse(str);
      if (data) {
        return true;
      }
      return false;
    } catch (error) {
      return false;
    }
  }
  return false;
};
var JSONToObject = (str) => {
  if (!str || !isJSON(str)) {
    return str;
  }
  return JSON.parse(str);
};

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/components/Chat/ChatKit/components/TUIChat/emoji-config/locales/zh_cn.mjs
var Emoji = {
  "[TUIEmoji_Smile]": "[微笑]",
  "[TUIEmoji_Expect]": "[期待]",
  "[TUIEmoji_Blink]": "[眨眼]",
  "[TUIEmoji_Guffaw]": "[大笑]",
  "[TUIEmoji_KindSmile]": "[姨母笑]",
  "[TUIEmoji_Haha]": "[哈哈哈]",
  "[TUIEmoji_Cheerful]": "[愉快]",
  "[TUIEmoji_Speechless]": "[无语]",
  "[TUIEmoji_Amazed]": "[惊讶]",
  "[TUIEmoji_Sorrow]": "[悲伤]",
  "[TUIEmoji_Complacent]": "[得意]",
  "[TUIEmoji_Silly]": "[傻了]",
  "[TUIEmoji_Lustful]": "[色]",
  "[TUIEmoji_Giggle]": "[憨笑]",
  "[TUIEmoji_Kiss]": "[亲亲]",
  "[TUIEmoji_Wail]": "[大哭]",
  "[TUIEmoji_TearsLaugh]": "[哭笑]",
  "[TUIEmoji_Trapped]": "[困]",
  "[TUIEmoji_Mask]": "[口罩]",
  "[TUIEmoji_Fear]": "[恐惧]",
  "[TUIEmoji_BareTeeth]": "[龇牙]",
  "[TUIEmoji_FlareUp]": "[发怒]",
  "[TUIEmoji_Yawn]": "[打哈欠]",
  "[TUIEmoji_Tact]": "[机智]",
  "[TUIEmoji_Stareyes]": "[星星眼]",
  "[TUIEmoji_ShutUp]": "[闭嘴]",
  "[TUIEmoji_Sigh]": "[叹气]",
  "[TUIEmoji_Hehe]": "[呵呵]",
  "[TUIEmoji_Silent]": "[收声]",
  "[TUIEmoji_Surprised]": "[惊喜]",
  "[TUIEmoji_Askance]": "[白眼]",
  "[TUIEmoji_Ok]": "[OK]",
  "[TUIEmoji_Shit]": "[便便]",
  "[TUIEmoji_Monster]": "[怪兽]",
  "[TUIEmoji_Daemon]": "[恶魔]",
  "[TUIEmoji_Rage]": "[恶魔怒]",
  "[TUIEmoji_Fool]": "[衰]",
  "[TUIEmoji_Pig]": "[猪]",
  "[TUIEmoji_Cow]": "[牛]",
  "[TUIEmoji_Ai]": "[AI]",
  "[TUIEmoji_Skull]": "[骷髅]",
  "[TUIEmoji_Bombs]": "[炸弹]",
  "[TUIEmoji_Coffee]": "[咖啡]",
  "[TUIEmoji_Cake]": "[蛋糕]",
  "[TUIEmoji_Beer]": "[啤酒]",
  "[TUIEmoji_Flower]": "[花]",
  "[TUIEmoji_Watermelon]": "[瓜]",
  "[TUIEmoji_Rich]": "[壕]",
  "[TUIEmoji_Heart]": "[爱心]",
  "[TUIEmoji_Moon]": "[月亮]",
  "[TUIEmoji_Sun]": "[太阳]",
  "[TUIEmoji_Star]": "[星星]",
  "[TUIEmoji_RedPacket]": "[红包]",
  "[TUIEmoji_Celebrate]": "[庆祝]",
  "[TUIEmoji_Bless]": "[福]",
  "[TUIEmoji_Fortune]": "[发]",
  "[TUIEmoji_Convinced]": "[服]",
  "[TUIEmoji_Prohibit]": "[禁]",
  "[TUIEmoji_666]": "[666]",
  "[TUIEmoji_857]": "[857]",
  "[TUIEmoji_Knife]": "[刀]",
  "[TUIEmoji_Like]": "[赞]"
};

// D:/code/web/node_modules/@tencentcloud/roomkit-web-vue3/es/components/Chat/ChatKit/components/TUIChat/emoji-config/locales/en.mjs
var Emoji2 = {
  "[TUIEmoji_Smile]": "[Smile]",
  "[TUIEmoji_Expect]": "[Expect]",
  "[TUIEmoji_Blink]": "[Blink]",
  "[TUIEmoji_Guffaw]": "[Guffaw]",
  "[TUIEmoji_KindSmile]": "[KindSmile]",
  "[TUIEmoji_Haha]": "[Haha]",
  "[TUIEmoji_Cheerful]": "[Cheerful]",
  "[TUIEmoji_Speechless]": "[Speechless]",
  "[TUIEmoji_Amazed]": "[Amazed]",
  "[TUIEmoji_Sorrow]": "[Sorrow]",
  "[TUIEmoji_Complacent]": "[Complacent]",
  "[TUIEmoji_Silly]": "[Silly]",
  "[TUIEmoji_Lustful]": "[Lustful]",
  "[TUIEmoji_Giggle]": "[Giggle]",
  "[TUIEmoji_Kiss]": "[Kiss]",
  "[TUIEmoji_Wail]": "[Wail]",
  "[TUIEmoji_TearsLaugh]": "[TearsLaugh]",
  "[TUIEmoji_Trapped]": "[Trapped]",
  "[TUIEmoji_Mask]": "[Mask]",
  "[TUIEmoji_Fear]": "[Fear]",
  "[TUIEmoji_BareTeeth]": "[BareTeeth]",
  "[TUIEmoji_FlareUp]": "[FlareUp]",
  "[TUIEmoji_Yawn]": "[Yawn]",
  "[TUIEmoji_Tact]": "[Tact]",
  "[TUIEmoji_Stareyes]": "[StarEyes]",
  "[TUIEmoji_ShutUp]": "[ShutUp]",
  "[TUIEmoji_Sigh]": "[Sigh]",
  "[TUIEmoji_Hehe]": "[Hehe]",
  "[TUIEmoji_Silent]": "[Silent]",
  "[TUIEmoji_Surprised]": "[Surprised]",
  "[TUIEmoji_Askance]": "[Askance]]",
  "[TUIEmoji_Ok]": "[OK]",
  "[TUIEmoji_Shit]": "[Shit]",
  "[TUIEmoji_Monster]": "[Monster]",
  "[TUIEmoji_Daemon]": "[Daemon]",
  "[TUIEmoji_Rage]": "[Rage]",
  "[TUIEmoji_Fool]": "[Fool]",
  "[TUIEmoji_Pig]": "[Pig]",
  "[TUIEmoji_Cow]": "[Cow]",
  "[TUIEmoji_Ai]": "[AI]",
  "[TUIEmoji_Skull]": "[Skull]",
  "[TUIEmoji_Bombs]": "[Bombs]",
  "[TUIEmoji_Coffee]": "[Coffee]",
  "[TUIEmoji_Cake]": "[Cake]",
  "[TUIEmoji_Beer]": "[Beer]",
  "[TUIEmoji_Flower]": "[Flower]",
  "[TUIEmoji_Watermelon]": "[Watermelon]",
  "[TUIEmoji_Rich]": "[Rich]",
  "[TUIEmoji_Heart]": "[Heart]",
  "[TUIEmoji_Moon]": "[Moon]",
  "[TUIEmoji_Sun]": "[Sun]",
  "[TUIEmoji_Star]": "[Star]",
  "[TUIEmoji_RedPacket]": "[RedPacket]",
  "[TUIEmoji_Celebrate]": "[Celebrate]",
  "[TUIEmoji_Bless]": "[Bless]",
  "[TUIEmoji_Fortune]": "[Fortune]",
  "[TUIEmoji_Convinced]": "[Convinced]",
  "[TUIEmoji_Prohibit]": "[Prohibit]",
  "[TUIEmoji_666]": "[666]",
  "[TUIEmoji_857]": "[857]",
  "[TUIEmoji_Knife]": "[Knife]",
  "[TUIEmoji_Like]": "[Like]"
};

export {
  require_chat,
  i2 as i,
  f,
  g2 as g,
  T2 as T,
  C2 as C,
  P,
  O,
  E,
  R,
  A,
  _export_sfc,
  o3 as o,
  qt,
  Jt,
  Wt,
  Xt,
  Zt,
  Qt,
  es,
  isFunction,
  isObject,
  isUrl,
  JSONToObject,
  isPC,
  isH5,
  isWeChat,
  isApp,
  isUniFrameWork,
  isMobile,
  Emoji2 as Emoji,
  Emoji as Emoji2,
  ChatConfig,
  hideTUIChatFeatures
};
//# sourceMappingURL=chunk-XGGGNUJG.js.map
