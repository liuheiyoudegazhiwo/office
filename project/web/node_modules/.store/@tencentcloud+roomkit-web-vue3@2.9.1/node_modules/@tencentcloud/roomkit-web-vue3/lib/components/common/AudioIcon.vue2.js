"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const SvgIcon = require("./base/SvgIcon.vue.js");
const room = require("../../stores/room.js");
const pinia = require("pinia");
const utils = require("../../utils/utils.js");
const MicOnIcon = require("./icons/MicOnIcon.vue.js");
const MicOffIcon = require("./icons/MicOffIcon.vue.js");
const _hoisted_1 = { class: "audio-level-container" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "AudioIcon",
  props: {
    userId: {},
    audioVolume: {},
    isMuted: { type: Boolean },
    size: {},
    isDisabled: { type: Boolean }
  },
  setup(__props) {
    const roomStore = room.useRoomStore();
    const { userVolumeObj } = pinia.storeToRefs(roomStore);
    const currentAudioVolume = Vue.computed(() => {
      if (!utils.isUndefined(props.audioVolume)) {
        return props.audioVolume;
      }
      if (userVolumeObj.value && props.userId) {
        return userVolumeObj.value[props.userId];
      }
      return 0;
    });
    const props = __props;
    const icon = Vue.computed(() => props.isMuted ? MicOffIcon.default : MicOnIcon.default);
    const audioLevelStyle = Vue.computed(() => {
      if (props.isMuted || !currentAudioVolume.value) {
        return "";
      }
      return `height: ${currentAudioVolume.value * 4}%`;
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass(["audio-icon-container", `${_ctx.size == "small" && "small"}`])
      }, [
        Vue.createElementVNode("div", _hoisted_1, [
          Vue.createElementVNode("div", {
            class: "audio-level",
            style: Vue.normalizeStyle(audioLevelStyle.value)
          }, null, 4)
        ]),
        Vue.createVNode(SvgIcon.default, {
          class: "audio-icon",
          icon: icon.value
        }, null, 8, ["icon"])
      ], 2);
    };
  }
});
exports.default = _sfc_main;
