interface MessageItem {
    ID: string;
    type: string;
    payload: {
        text: string;
    };
    nick: string;
    from: string;
    flow: string;
    sequence: number;
}
interface ChatState {
    messageList: MessageItem[];
    isMessageDisabled: boolean;
    unReadCount: number;
    isCompleted: boolean;
    nextReqMessageId: string;
}
export declare const useChatStore: import('pinia').StoreDefinition<"chat", ChatState, {}, {
    updateMessageList(message: MessageItem): void;
    setMessageListInfo(messageList: MessageItem[], isCompleted: boolean, nextReqMessageId: string): void;
    updateUnReadCount(count: number): void;
    addHistoryMessages(messageList: MessageItem[]): void;
    setSendMessageDisableChanged(isDisable: boolean): void;
    reset(): void;
}>;
export {};
