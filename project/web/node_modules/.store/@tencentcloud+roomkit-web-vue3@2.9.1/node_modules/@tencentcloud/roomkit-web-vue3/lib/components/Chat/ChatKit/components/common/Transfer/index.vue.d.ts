declare function __VLS_template(): {
    left?(_: {
        data: {
            [x: string]: any;
            isDisabled?: boolean | undefined;
            avatar?: string | undefined;
            nick?: string | undefined;
            userID?: string | undefined;
        };
    }): any;
    right?(_: {
        data: {
            [x: string]: any;
            isDisabled?: boolean | undefined;
            avatar?: string | undefined;
            nick?: string | undefined;
            userID?: string | undefined;
        };
    }): any;
};
declare const __VLS_component: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    list: {
        type: ArrayConstructor;
        default: () => never[];
    };
    selectedList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    isSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    isRadio: {
        type: BooleanConstructor;
        default: boolean;
    };
    isCustomItem: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    resultShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    total: {
        type: NumberConstructor;
        default: number;
    };
    isHiddenBackIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
}>, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    search: (...args: any[]) => void;
    cancel: (...args: any[]) => void;
    submit: (...args: any[]) => void;
    getMore: (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    list: {
        type: ArrayConstructor;
        default: () => never[];
    };
    selectedList: {
        type: ArrayConstructor;
        default: () => never[];
    };
    isSearch: {
        type: BooleanConstructor;
        default: boolean;
    };
    isRadio: {
        type: BooleanConstructor;
        default: boolean;
    };
    isCustomItem: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    type: {
        type: StringConstructor;
        default: string;
    };
    resultShow: {
        type: BooleanConstructor;
        default: boolean;
    };
    total: {
        type: NumberConstructor;
        default: number;
    };
    isHiddenBackIcon: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & Readonly<{
    onSearch?: ((...args: any[]) => any) | undefined;
    onCancel?: ((...args: any[]) => any) | undefined;
    onSubmit?: ((...args: any[]) => any) | undefined;
    onGetMore?: ((...args: any[]) => any) | undefined;
}>, {
    title: string;
    type: string;
    list: unknown[];
    selectedList: unknown[];
    isSearch: boolean;
    isRadio: boolean;
    isCustomItem: boolean;
    resultShow: boolean;
    total: number;
    isHiddenBackIcon: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, ReturnType<typeof __VLS_template>>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
