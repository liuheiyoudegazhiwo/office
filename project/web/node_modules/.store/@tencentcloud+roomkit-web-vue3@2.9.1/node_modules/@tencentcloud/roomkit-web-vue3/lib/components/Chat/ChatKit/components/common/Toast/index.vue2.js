"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../adapter-vue.js");
const env = require("../../../utils/env.js");
const type = require("./type.js");
const _hoisted_1 = { key: 0 };
const _hoisted_2 = { key: 1 };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  props: {
    message: {
      type: String,
      default: ""
    },
    duration: {
      type: Number,
      default: 3e3
    },
    repeatNum: {
      type: Number,
      default: 1
    },
    id: {
      type: String,
      default: ""
    },
    onClose: {
      type: Function,
      required: false
    },
    offset: {
      type: Number,
      default: 20
    },
    zIndex: {
      type: Number,
      default: 0
    },
    type: {
      type: String,
      default: ""
    }
  },
  setup(__props) {
    const props = __props;
    const visible = Vue.ref(false);
    let timer;
    const startTimer = () => {
      if (props.duration > 0) {
        timer = setTimeout(() => {
          if (visible.value) {
            close();
          }
        }, props.duration);
      }
    };
    const clearTimer = () => {
      clearTimeout(timer);
    };
    const close = () => {
      visible.value = false;
      if (typeof props.onClose === "function") {
        props.onClose();
      }
    };
    Vue.watch(
      () => props.repeatNum,
      () => {
        clearTimer();
        startTimer();
      }
    );
    const customStyle = Vue.computed(() => ({
      top: `${props.offset}px`,
      zIndex: props.zIndex
    }));
    Vue.onMounted(() => {
      startTimer();
      visible.value = true;
    });
    const handleStyle = (type$1) => {
      if (type$1 && (type$1 === type.default.ERROR || type$1 === type.default.SUCCESS || type$1 === type.default.WARNING))
        return type$1;
      return type.default.NORMAL;
    };
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createBlock(Vue.Transition, {
        name: "fade",
        onAfterLeave: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("destroy"))
      }, {
        default: Vue.withCtx(() => [
          Vue.withDirectives(Vue.createElementVNode("div", {
            class: Vue.normalizeClass(["message", [handleStyle(__props.type), Vue.unref(env.isH5) && "message-h5"]]),
            style: Vue.normalizeStyle(Vue.unref(customStyle))
          }, [
            !Vue.unref(env.isH5) ? (Vue.openBlock(), Vue.createElementBlock("p", _hoisted_1, Vue.toDisplayString(__props.message), 1)) : Vue.createCommentVNode("", true),
            Vue.unref(env.isH5) ? (Vue.openBlock(), Vue.createElementBlock("span", _hoisted_2, Vue.toDisplayString(__props.message), 1)) : Vue.createCommentVNode("", true)
          ], 6), [
            [Vue.vShow, Vue.unref(visible)]
          ])
        ]),
        _: 1
      });
    };
  }
});
exports.default = _sfc_main;
