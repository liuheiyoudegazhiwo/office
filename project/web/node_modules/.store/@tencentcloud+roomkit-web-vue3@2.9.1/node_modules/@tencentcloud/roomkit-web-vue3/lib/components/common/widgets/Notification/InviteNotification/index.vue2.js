"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const Button = require("../../../base/Button.vue.js");
const SvgIcon = require("../../../base/SvgIcon.vue.js");
const useZIndex = require("../../../../../hooks/useZIndex.js");
const EnterRoomIcon = require("../../../icons/EnterRoomIcon.vue.js");
const index = require("../../../../../locales/index.js");
const Avatar = require("../../../Avatar.vue.js");
const _hoisted_1 = { class: "tui-notification-message" };
const _hoisted_2 = { class: "invitation-notification-inviter-container" };
const _hoisted_3 = { class: "invitation-notification-inviter" };
const _hoisted_4 = { class: "invitation-notification-title" };
const _hoisted_5 = { class: "invitation-notification-room-name" };
const _hoisted_6 = { class: "invitation-notification-room-info-container" };
const _hoisted_7 = { class: "invitation-notification-room-text-container" };
const _hoisted_8 = { class: "invitation-notification-room-text" };
const _hoisted_9 = { class: "invitation-notification-room-text" };
const _hoisted_10 = { class: "invitation-notification-room-text" };
const _hoisted_11 = { class: "invitation-notification-room-text" };
const _hoisted_12 = { class: "invitation-notification-bottom-container" };
const _hoisted_13 = { class: "button-text" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  props: {
    appendTo: { default: "" },
    customClass: { default: "" },
    message: { default: {
      userId: "",
      userName: "",
      avatarUrl: "",
      roomName: "",
      roomMemberCount: 0,
      roomOwner: "",
      roomId: ""
    } },
    onConfirm: { type: [Function, null], default: null },
    onCancel: { type: [Function, null], default: null },
    close: { type: [Function, null], default: null },
    confirmButtonText: { default: "" },
    cancelButtonText: { default: "" }
  },
  setup(__props) {
    const { t } = index.useI18n();
    const visible = Vue.ref(false);
    const overlayContainerStyle = Vue.ref({});
    const { nextZIndex } = useZIndex.default();
    const props = __props;
    Vue.watch(visible, (val) => {
      if (val) {
        overlayContainerStyle.value = { zIndex: nextZIndex() };
      }
    });
    function onOpen() {
      visible.value = true;
    }
    const handleConfirm = () => {
      handleAction(props.onConfirm);
    };
    const handleCancel = () => {
      handleAction(props.onCancel);
    };
    const handleAction = (fn) => {
      if (fn) {
        fn();
      }
      if (props.close) {
        props.close();
      }
    };
    Vue.onMounted(() => {
      onOpen();
    });
    return (_ctx, _cache) => {
      return Vue.withDirectives((Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass(["tui-notification", _ctx.customClass])
      }, [
        Vue.createElementVNode("div", {
          class: "tui-notification-container",
          style: Vue.normalizeStyle(overlayContainerStyle.value)
        }, [
          Vue.createElementVNode("div", _hoisted_1, [
            Vue.createElementVNode("div", _hoisted_2, [
              Vue.createElementVNode("div", _hoisted_3, [
                Vue.createVNode(Avatar.default, {
                  class: "avatar",
                  "img-src": _ctx.message.avatarUrl
                }, null, 8, ["img-src"]),
                Vue.createElementVNode("span", _hoisted_4, Vue.toDisplayString(Vue.unref(t)("sb invites you to join the conference", {
                  name: _ctx.message.userName || _ctx.message.userId
                })), 1)
              ]),
              Vue.createElementVNode("span", _hoisted_5, Vue.toDisplayString(_ctx.message.roomName), 1),
              Vue.createElementVNode("div", _hoisted_6, [
                Vue.createElementVNode("div", _hoisted_7, [
                  Vue.createElementVNode("span", _hoisted_8, Vue.toDisplayString(Vue.unref(t)("Host")) + ": ", 1),
                  Vue.createElementVNode("span", _hoisted_9, Vue.toDisplayString(_ctx.message.roomOwner), 1)
                ]),
                _cache[0] || (_cache[0] = Vue.createElementVNode("i", { class: "invitation-notification-room-text-split" }, null, -1)),
                Vue.createElementVNode("div", null, [
                  Vue.createElementVNode("span", _hoisted_10, Vue.toDisplayString(Vue.unref(t)("Attendees")) + ": ", 1),
                  Vue.createElementVNode("span", _hoisted_11, Vue.toDisplayString(`${_ctx.message.roomMemberCount} ${Vue.unref(t)("people")}`), 1)
                ])
              ])
            ])
          ]),
          _cache[1] || (_cache[1] = Vue.createElementVNode("i", { class: "invitation-notification-bottom-split" }, null, -1)),
          Vue.createElementVNode("div", _hoisted_12, [
            Vue.createElementVNode("span", {
              class: "invitation-notification-bottom",
              onClick: handleCancel
            }, Vue.toDisplayString(_ctx.cancelButtonText), 1),
            Vue.createVNode(Button.default, {
              class: "button-item",
              style: { "width": "110px" },
              onClick: handleConfirm
            }, {
              default: Vue.withCtx(() => [
                Vue.createVNode(SvgIcon.default, {
                  class: "icon",
                  icon: EnterRoomIcon.default
                }),
                Vue.createElementVNode("span", _hoisted_13, Vue.toDisplayString(_ctx.confirmButtonText), 1)
              ]),
              _: 1
            })
          ])
        ], 4)
      ], 2)), [
        [Vue.vShow, visible.value]
      ]);
    };
  }
});
exports.default = _sfc_main;
