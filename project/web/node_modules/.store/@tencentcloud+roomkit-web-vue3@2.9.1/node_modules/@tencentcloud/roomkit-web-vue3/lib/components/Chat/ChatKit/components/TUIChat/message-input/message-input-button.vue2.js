"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../adapter-vue.js");
const TUIChatEngine = require("@tencentcloud/chat-uikit-engine");
const TUICore = require("@tencentcloud/tui-core");
const env = require("../../../utils/env.js");
const config = require("../config.js");
const _hoisted_1 = {
  key: 0,
  class: "message-input-button-hover"
};
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "message-input-button",
  props: {
    enableSend: {
      type: Boolean,
      default: true
    }
  },
  emits: ["sendMessage"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const displayHover = Vue.ref(config.default.getChatType() !== TUICore.TUIConstants.TUIChat.TYPE.ROOM);
    const emits = __emit;
    const sendMessage = () => {
      emits("sendMessage");
    };
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass(["message-input-button", !Vue.unref(env.isPC) && "message-input-button-h5"])
      }, [
        props.enableSend ? (Vue.openBlock(), Vue.createElementBlock("button", {
          key: 0,
          class: "message-input-button-cont",
          "data-type": "text",
          disabled: false,
          onClick: sendMessage
        }, [
          Vue.unref(displayHover) ? (Vue.openBlock(), Vue.createElementBlock("p", _hoisted_1, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.按Enter发送，Ctrl+Enter换行")), 1)) : Vue.createCommentVNode("", true),
          Vue.createTextVNode(" " + Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("发送")), 1)
        ])) : Vue.createCommentVNode("", true)
      ], 2);
    };
  }
});
exports.default = _sfc_main;
