"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const useDeviceManager = require("../../../hooks/useDeviceManager.js");
const SvgIcon = require("../../common/base/SvgIcon.vue.js");
const SpeakerPhoneIcon = require("../../common/icons/SpeakerPhoneIcon.vue.js");
const EarpieceIcon = require("../../common/icons/EarpieceIcon.vue.js");
const TUIRoomEngine = require("@tencentcloud/tuiroom-engine-js");
const vTap = require("../../../directives/vTap.js");
const _hoisted_1 = { class: "audio-route-icon" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "SwitchAudioRoute",
  setup(__props) {
    const { deviceManager } = useDeviceManager.default();
    const currentAudioRoute = Vue.ref(
      TUIRoomEngine.TUIAudioRoute.kAudioRouteSpeakerphone
    );
    const icon = Vue.computed(
      () => currentAudioRoute.value === TUIRoomEngine.TUIAudioRoute.kAudioRouteSpeakerphone ? SpeakerPhoneIcon.default : EarpieceIcon.default
    );
    async function handleSwitchAudioRoute() {
      var _a;
      const audioRoute = currentAudioRoute.value === TUIRoomEngine.TUIAudioRoute.kAudioRouteSpeakerphone ? TUIRoomEngine.TUIAudioRoute.kAudioRouteEarpiece : TUIRoomEngine.TUIAudioRoute.kAudioRouteSpeakerphone;
      await ((_a = deviceManager.instance) == null ? void 0 : _a.setAudioRoute({
        route: audioRoute
      }));
      currentAudioRoute.value = audioRoute;
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.withDirectives(Vue.createVNode(SvgIcon.default, { icon: icon.value }, null, 8, ["icon"]), [
          [Vue.unref(vTap.default), handleSwitchAudioRoute]
        ])
      ]);
    };
  }
});
exports.default = _sfc_main;
