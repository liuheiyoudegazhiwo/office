"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const useRoomMoreHooks = require("./useRoomMoreHooks.js");
const SvgIcon = require("../common/base/SvgIcon.vue.js");
const CopyIcon = require("../common/icons/CopyIcon.vue.js");
const vTap = require("../../directives/vTap.js");
const _hoisted_1 = { class: "contact-container-main" };
const _hoisted_2 = { class: "contact-title-main" };
const _hoisted_3 = { class: "cancel" };
const _hoisted_4 = { class: "contact-title" };
const _hoisted_5 = { class: "contact-content" };
const _hoisted_6 = { class: "contact-bottom" };
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "indexH5",
  emits: ["on-close-contact"],
  setup(__props, { emit: __emit }) {
    const { t, onCopy, contactContentList } = useRoomMoreHooks.default();
    const emit = __emit;
    function handleCloseContact() {
      emit("on-close-contact");
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.createElementVNode("div", _hoisted_2, [
          Vue.createElementVNode("div", null, Vue.toDisplayString(Vue.unref(t)("Contact us")), 1),
          Vue.withDirectives((Vue.openBlock(), Vue.createElementBlock("span", _hoisted_3, [
            Vue.createTextVNode(Vue.toDisplayString(Vue.unref(t)("Cancel")), 1)
          ])), [
            [Vue.unref(vTap.default), handleCloseContact]
          ])
        ]),
        (Vue.openBlock(true), Vue.createElementBlock(Vue.Fragment, null, Vue.renderList(Vue.unref(contactContentList), (item) => {
          return Vue.openBlock(), Vue.createElementBlock("div", {
            key: item.id,
            class: "contact-content-main"
          }, [
            Vue.createElementVNode("span", _hoisted_4, Vue.toDisplayString(Vue.unref(t)(item.title)), 1),
            Vue.createElementVNode("span", _hoisted_5, Vue.toDisplayString(item.content), 1),
            Vue.withDirectives(Vue.createVNode(SvgIcon.default, {
              icon: CopyIcon.default,
              class: "copy"
            }, null, 512), [
              [Vue.unref(vTap.default), () => Vue.unref(onCopy)(item.copyLink)]
            ])
          ]);
        }), 128)),
        Vue.createElementVNode("span", _hoisted_6, Vue.toDisplayString(Vue.unref(t)(
          "If you have any questions, please feel free to join our QQ group or send an email"
        )), 1)
      ]);
    };
  }
});
exports.default = _sfc_main;
