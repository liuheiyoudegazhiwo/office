/**
 * i18n Instructions for useï¼š
 *
 * <script>
 * import i18n, { useI18n } from '../locale';
 * const { t } = useI18n();
 *
 * // case 1: There are no variables in the translation text
 * t('happy');
 * i18n.t('happy');
 * // case 2: Variable exists in translation text
 * t('kick sb. out of room', { someOneName: 'xiaoming' });
 * i18n.t('kick sb. out of room', { someOneName: 'xiaoming' });
 *
 * // switch language
 * switch (i18n.global.locale.value) {
 *  case 'en-US':
 *    i18n.global.locale.value = 'zh-CN';
 *    break;
 *  case 'zh-CN':
 *    i18n.global.locale.value = 'en-US';
 *    break;
 * }
 * </script>
 */
declare class TUIKitI18n {
    messages: Record<string, any>;
    global: Record<string, any>;
    constructor(options: {
        messages: Record<string, any>;
        locale: string;
    });
    private getNamed;
    private t;
    install(): void;
}
declare const i18n: TUIKitI18n;
export default i18n;
export declare function useI18n(): {
    t: any;
};
