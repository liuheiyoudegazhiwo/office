"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
const IconButton = require("../../common/base/IconButton.vue.js");
const MoreIcon = require("../../common/icons/MoreIcon.vue.js");
const useMoreControlHooks = require("./useMoreControlHooks.js");
require("../../../services/main.js");
const roomService = require("../../../services/roomService.js");
require("../../../locales/index.js");
require("@tencentcloud/tuiroom-engine-js");
require("../../../utils/environment.js");
require("mitt");
require("../../../services/manager/roomActionManager.js");
require("@tencentcloud/tui-core");
const _hoisted_1 = {
  key: 0,
  class: "more-control-container"
};
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "MoreControlPC",
  setup(__props) {
    const moreControlConfig = roomService.roomService.getComponentConfig("MoreControl");
    const { t, basicStore, sidebarName } = useMoreControlHooks.default();
    function toggleMoreSidebar() {
      if (basicStore.setSidebarOpenStatus && basicStore.sidebarName === "more") {
        basicStore.setSidebarOpenStatus(false);
        basicStore.setSidebarName("");
        return;
      }
      basicStore.setSidebarOpenStatus(true);
      basicStore.setSidebarName("more");
    }
    return (_ctx, _cache) => {
      return Vue.unref(moreControlConfig).visible ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, [
        Vue.createVNode(IconButton.default, {
          "is-active": Vue.unref(sidebarName) === "more",
          title: Vue.unref(t)("More"),
          icon: MoreIcon.default,
          onClickIcon: toggleMoreSidebar
        }, null, 8, ["is-active", "title"])
      ])) : Vue.createCommentVNode("", true);
    };
  }
});
exports.default = _sfc_main;
