import { createVNode, render } from "vue";
import TUINotification from "./index.vue.mjs";
function NotificationFactory() {
  let notificationInstance = null;
  let container = null;
  let timer = null;
  let fullscreenElement = null;
  function openInviteNotification(options) {
    if (document.getElementById(options.appendTo)) {
      fullscreenElement = document.getElementById(
        options.appendTo
      );
    } else {
      fullscreenElement = document.fullscreenElement || document.body;
    }
    if (!notificationInstance) {
      container = document.createElement("div");
      container.className = "tui-room-notification";
      fullscreenElement == null ? void 0 : fullscreenElement.appendChild(container);
    }
    const {
      appendTo,
      customClass,
      message,
      onConfirm,
      onCancel,
      confirmButtonText,
      cancelButtonText
    } = options;
    const vnode = createVNode(TUINotification, {
      appendTo,
      customClass,
      message,
      onConfirm,
      onCancel,
      confirmButtonText,
      cancelButtonText,
      close
    });
    if (container) {
      render(vnode, container);
      notificationInstance = vnode;
    }
    if (timer) {
      clearTimeout(timer);
    }
    timer = setTimeout(close, options.duration || 3e4);
  }
  function close() {
    if (container) {
      render(null, container);
      fullscreenElement == null ? void 0 : fullscreenElement.removeChild(container);
      notificationInstance = null;
      container = null;
    }
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  return {
    openInviteNotification
  };
}
const inviteNotification = NotificationFactory();
export {
  inviteNotification
};
