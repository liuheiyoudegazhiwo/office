"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../adapter-vue.js");
const env = require("../../../utils/env.js");
const _hoisted_1 = ["src"];
const _hoisted_2 = ["src"];
const _hoisted_3 = ["src"];
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  props: {
    url: { default: "https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png" },
    size: { default: "36px" },
    borderRadius: { default: "5px" },
    useSkeletonAnimation: { type: Boolean, default: false }
  },
  emits: ["onLoad", "onError"],
  setup(__props, { emit: __emit }) {
    const defaultAvatarUrl = Vue.ref("https://web.sdk.qcloud.com/component/TUIKit/assets/avatar_21.png");
    const emits = __emit;
    const props = __props;
    const {
      size: avatarSize,
      url: avatarImageUrl,
      borderRadius: avatarBorderRadius,
      useSkeletonAnimation: useAvatarSkeletonAnimation
    } = Vue.toRefs(props);
    let reloadAvatarTime = 0;
    const isImgLoaded = Vue.ref(false);
    const loadErrorInUniapp = Vue.ref(false);
    function avatarLoadSuccess(e) {
      isImgLoaded.value = true;
      emits("onLoad", e);
    }
    function avatarLoadFailed(e) {
      reloadAvatarTime += 1;
      if (reloadAvatarTime > 3) {
        return;
      }
      if (env.isUniFrameWork) {
        loadErrorInUniapp.value = true;
      } else {
        e.currentTarget.src = defaultAvatarUrl.value;
      }
      emits("onError", e);
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: "avatar-container",
        style: Vue.normalizeStyle({
          width: Vue.unref(avatarSize),
          height: Vue.unref(avatarSize),
          borderRadius: Vue.unref(avatarBorderRadius)
        })
      }, [
        Vue.unref(env.isUniFrameWork) ? (Vue.openBlock(), Vue.createElementBlock(Vue.Fragment, { key: 0 }, [
          !Vue.unref(loadErrorInUniapp) ? (Vue.openBlock(), Vue.createElementBlock("image", {
            key: 0,
            class: "avatar-image",
            src: Vue.unref(avatarImageUrl) || Vue.unref(defaultAvatarUrl),
            onLoad: avatarLoadSuccess,
            onError: avatarLoadFailed
          }, null, 40, _hoisted_1)) : (Vue.openBlock(), Vue.createElementBlock("image", {
            key: 1,
            class: "avatar-image",
            src: Vue.unref(defaultAvatarUrl),
            onLoad: avatarLoadSuccess,
            onError: avatarLoadFailed
          }, null, 40, _hoisted_2))
        ], 64)) : (Vue.openBlock(), Vue.createElementBlock("img", {
          key: 1,
          class: "avatar-image",
          src: Vue.unref(avatarImageUrl) || Vue.unref(defaultAvatarUrl),
          onLoad: avatarLoadSuccess,
          onError: avatarLoadFailed
        }, null, 40, _hoisted_3)),
        Vue.unref(useAvatarSkeletonAnimation) && !Vue.unref(isImgLoaded) ? (Vue.openBlock(), Vue.createElementBlock("div", {
          key: 2,
          class: Vue.normalizeClass({
            placeholder: true,
            hidden: Vue.unref(isImgLoaded),
            "skeleton-animation": Vue.unref(useAvatarSkeletonAnimation)
          })
        }, null, 2)) : Vue.createCommentVNode("", true)
      ], 4);
    };
  }
});
exports.default = _sfc_main;
