import '../../../../styles/index.css';import { defineComponent, onMounted, openBlock, createElementBlock, renderSlot } from "vue";
import { useTheme } from "./useThemeProvider.js";
const _hoisted_1 = { class: "uikit-theme-context" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ThemeProvider",
  props: {
    theme: {}
  },
  setup(__props) {
    const { setTheme } = useTheme();
    const props = __props;
    onMounted(() => {
      if (typeof props.theme === "object") {
        const { themeStyle, primaryColor } = props.theme;
        setTheme({ themeStyle, primaryColor });
      } else {
        setTheme(props.theme);
      }
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        renderSlot(_ctx.$slots, "default", {}, void 0, true)
      ]);
    };
  }
});
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const ThemeProvider = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-544f96f7"]]);
export {
  ThemeProvider as default
};
