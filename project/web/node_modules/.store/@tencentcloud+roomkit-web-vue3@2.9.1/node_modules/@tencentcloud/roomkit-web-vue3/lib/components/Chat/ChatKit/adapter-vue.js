"use strict";
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const Vue = require("vue");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const Vue__namespace = /* @__PURE__ */ _interopNamespaceDefault(Vue);
exports.vueVersion = void 0;
exports.framework = "vue2";
exports.createVNode = (arg1, arg2) => {
  return {};
};
exports.render = (arg1, arg2) => {
  return;
};
try {
  if (((_a = Vue__namespace == null ? void 0 : Vue__namespace.default) == null ? void 0 : _a.version) && ((_c = (_b = Vue__namespace == null ? void 0 : Vue__namespace.default) == null ? void 0 : _b.version) == null ? void 0 : _c.startsWith("2.7."))) {
    exports.vueVersion = 2.7;
  } else if (((_d = Vue__namespace == null ? void 0 : Vue__namespace.default) == null ? void 0 : _d.version) && ((_f = (_e = Vue__namespace == null ? void 0 : Vue__namespace.default) == null ? void 0 : _e.version) == null ? void 0 : _f.startsWith("2."))) {
    exports.vueVersion = 2;
  } else {
    exports.vueVersion = 3;
    exports.framework = "vue3";
    exports.createVNode = Vue__namespace == null ? void 0 : Vue__namespace.createVNode;
    exports.render = Vue__namespace == null ? void 0 : Vue__namespace.render;
  }
} catch (error) {
  exports.vueVersion = 3;
  exports.framework = "vue3";
  exports.createVNode = Vue__namespace == null ? void 0 : Vue__namespace.createVNode;
  exports.render = Vue__namespace == null ? void 0 : Vue__namespace.render;
}
console.warn(`[adapter-vue]: vue version is ${exports.vueVersion}`);
Object.keys(Vue).forEach((k) => {
  if (k !== "default" && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
    enumerable: true,
    get: () => Vue[k]
  });
});
