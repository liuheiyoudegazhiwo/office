import { CUSTOM_BASIC_EMOJI_URL, CUSTOM_BIG_EMOJI_URL, CUSTOM_BASIC_EMOJI_URL_MAPPING } from './custom-emoji';
import { DEFAULT_BIG_EMOJI_URL } from './default-emoji';
import { IEmojiGroupList } from '../../../interface';

declare const BASIC_EMOJI_URL_MAPPING: Record<string, string>;
declare const EMOJI_GROUP_LIST: IEmojiGroupList;
/**
 * Converts a basic emoji key into its corresponding name.
 * Example:
 * '[Smile]' => '[TUIEmoji_Smile]'
 * @param {string} key - The emoji key.
 * @return {string} The corresponding emoji name.
 */
declare const convertKeyToEmojiName: (key: string) => string;
/**
 * Transforms a text containing emoji keys into a text with Chinese or English basic emoji names
 * Example:
 * 'hello[TUIEmoji_Smile]!' => 'hello[Smile]!''
 * @param {string} text - The text containing emoji keys.
 * @return {string} The transformed text with emoji keys replaced by emoji names.
 */
declare const transformTextWithKeysToEmojiNames: (text: string) => string;
/**
 * Transforms a text containing Chinese or English basic emoji names into a text with emoji keys.
 * Example:
 * 'hello[Smile]!' => 'hello[TUIEmoji_Smile]!'
 * @param {string} text - The text containing emoji names.
 * @return {string} The transformed text with emoji names replaced by emoji keys.
 */
declare const transformTextWithEmojiNamesToKeys: (text: string) => string;
/**
* The configuration aims to provide compatibility with versions prior to 2.2.0
*/
declare const emojiConfig: {
    emojiBaseUrl: string;
    emojiUrlMapping: Record<string, string>;
    emojiNameMapping: {
        [x: string]: string;
    };
};
/**
 * Transform text message to renderable array contains image and text.
 * Example: hello[TUIEmoji_Smile], I am happy.
 * -> [{type: 'text', content: 'hello'}, {type: 'image', content: 'https://.../smile.png'}, {type: 'text', content: ', I am happy.'}]
 * @param text
 * @returns Array<{ type: 'text' | 'image'; content: string; emojiKey?: string; }>
 */
declare const parseTextToRenderArray: (text: string) => Array<{
    type: "text" | "image";
    content: string;
    emojiKey?: string;
}>;
export { EMOJI_GROUP_LIST, CUSTOM_BIG_EMOJI_URL, DEFAULT_BIG_EMOJI_URL, CUSTOM_BASIC_EMOJI_URL, BASIC_EMOJI_URL_MAPPING, CUSTOM_BASIC_EMOJI_URL_MAPPING, convertKeyToEmojiName, parseTextToRenderArray, transformTextWithKeysToEmojiNames, transformTextWithEmojiNamesToKeys, emojiConfig, };
