"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../adapter-vue.js");
const TUIChatEngine = require("@tencentcloud/chat-uikit-engine");
const Icon = require("../../common/Icon.vue.js");
const forwardEach = require("../../../assets/icon/forward-each.svg.js");
const forwardMerge = require("../../../assets/icon/forward-merge.svg.js");
const addCircle = require("../../../assets/icon/add-circle.svg.js");
const env = require("../../../utils/env.js");
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "index",
  emits: ["oneByOneForwardMessage", "mergeForwardMessage", "toggleMultipleSelectMode"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const iconSize = Vue.ref(env.isMobile ? "25px" : "30px");
    function oneByOneForwardMessage() {
      emits("oneByOneForwardMessage");
    }
    function mergeForwardMessage() {
      emits("mergeForwardMessage");
    }
    function cancelMultipleSelect() {
      emits("toggleMultipleSelectMode");
    }
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock("div", {
        class: Vue.normalizeClass({
          "mulitple-select-panel": true,
          "mulitple-select-panel-mobile": Vue.unref(env.isMobile)
        })
      }, [
        Vue.createElementVNode("div", {
          class: "forward-button",
          onClick: oneByOneForwardMessage
        }, [
          Vue.createVNode(Icon.default, {
            file: Vue.unref(forwardEach.default),
            size: Vue.unref(iconSize)
          }, null, 8, ["file", "size"]),
          Vue.createElementVNode("span", {
            class: Vue.normalizeClass({
              "forward-button-text": true,
              "forward-button-text-mobile": Vue.unref(env.isMobile)
            })
          }, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.逐条转发")), 3)
        ]),
        Vue.createElementVNode("div", {
          class: "forward-button",
          onClick: mergeForwardMessage
        }, [
          Vue.createVNode(Icon.default, {
            file: Vue.unref(forwardMerge.default),
            size: Vue.unref(iconSize)
          }, null, 8, ["file", "size"]),
          Vue.createElementVNode("span", {
            class: Vue.normalizeClass({
              "forward-button-text": true,
              "forward-button-text-mobile": Vue.unref(env.isMobile)
            })
          }, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.合并转发")), 3)
        ]),
        Vue.createElementVNode("div", {
          class: "forward-button",
          onClick: cancelMultipleSelect
        }, [
          Vue.createVNode(Icon.default, {
            class: "cancel-button-icon",
            file: Vue.unref(addCircle.default),
            size: Vue.unref(iconSize)
          }, null, 8, ["file", "size"]),
          Vue.createElementVNode("span", {
            class: Vue.normalizeClass({
              "forward-button-text": true,
              "forward-button-text-mobile": Vue.unref(env.isMobile)
            })
          }, Vue.toDisplayString(Vue.unref(TUIChatEngine.TUITranslateService).t("TUIChat.取消")), 3)
        ])
      ], 2);
    };
  }
});
exports.default = _sfc_main;
