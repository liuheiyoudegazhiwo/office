declare const RoomControl: import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    userName: {
        type: import('vue').PropType<string>;
        required: true;
    };
    givenRoomId: {
        type: import('vue').PropType<string | null>;
        required: true;
    };
}>, {
    getRoomParam: () => {
        isOpenCamera: boolean;
        isOpenMicrophone: boolean;
        defaultCameraId: string;
        defaultMicrophoneId: string;
        defaultSpeakerId: string;
    };
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "update-user-name": (...args: any[]) => void;
    "create-room": (...args: any[]) => void;
    "enter-room": (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    userName: {
        type: import('vue').PropType<string>;
        required: true;
    };
    givenRoomId: {
        type: import('vue').PropType<string | null>;
        required: true;
    };
}>> & Readonly<{
    "onUpdate-user-name"?: ((...args: any[]) => any) | undefined;
    "onCreate-room"?: ((...args: any[]) => any) | undefined;
    "onEnter-room"?: ((...args: any[]) => any) | undefined;
}>, {}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any> | import('vue').DefineComponent<import('vue').ExtractPropTypes<{
    userName: {
        type: import('vue').PropType<string>;
        default: string;
    };
    givenRoomId: {
        type: import('vue').PropType<string | null>;
        required: true;
    };
    enableScheduledConference: {
        type: import('vue').PropType<boolean>;
        default: boolean;
    };
}>, {
    getRoomParam: () => {
        isOpenCamera: boolean;
        isOpenMicrophone: boolean;
        defaultCameraId: string;
        defaultMicrophoneId: string;
        defaultSpeakerId: string;
    };
    startStreamPreview: () => Promise<void>;
}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    "create-room": (...args: any[]) => void;
    "enter-room": (...args: any[]) => void;
}, string, import('vue').PublicProps, Readonly<import('vue').ExtractPropTypes<{
    userName: {
        type: import('vue').PropType<string>;
        default: string;
    };
    givenRoomId: {
        type: import('vue').PropType<string | null>;
        required: true;
    };
    enableScheduledConference: {
        type: import('vue').PropType<boolean>;
        default: boolean;
    };
}>> & Readonly<{
    "onCreate-room"?: ((...args: any[]) => any) | undefined;
    "onEnter-room"?: ((...args: any[]) => any) | undefined;
}>, {
    userName: string;
    enableScheduledConference: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, true, {}, any>;
export default RoomControl;
