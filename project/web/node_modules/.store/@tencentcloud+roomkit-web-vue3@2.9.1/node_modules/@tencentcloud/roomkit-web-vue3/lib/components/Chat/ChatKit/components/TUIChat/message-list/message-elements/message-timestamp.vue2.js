"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const Vue = require("vue");
require("../../../../adapter-vue.js");
const utils = require("../../utils/utils.js");
const _hoisted_1 = {
  key: 0,
  class: "message-timestamp"
};
const _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  __name: "message-timestamp",
  props: {
    currTime: {
      type: Number,
      default: 0
    },
    prevTime: {
      type: Number,
      default: 0
    }
  },
  setup(__props) {
    const props = __props;
    const { currTime, prevTime } = Vue.toRefs(props);
    const timestampShowFlag = Vue.ref(false);
    const timestampShowContent = Vue.ref("");
    const handleItemTime = (currTime2, prevTime2) => {
      timestampShowFlag.value = false;
      if (currTime2 <= 0) {
        return "";
      } else if (!prevTime2 || prevTime2 <= 0) {
        timestampShowFlag.value = true;
        return utils.calculateTimestamp(currTime2 * 1e3);
      } else {
        const minDiffToShow = 10 * 60;
        const diff = currTime2 - prevTime2;
        if (diff >= minDiffToShow) {
          timestampShowFlag.value = true;
          return utils.calculateTimestamp(currTime2 * 1e3);
        }
      }
      return "";
    };
    Vue.watch(
      () => [currTime.value, prevTime.value],
      (newVal, oldVal) => {
        if ((newVal == null ? void 0 : newVal.toString()) === (oldVal == null ? void 0 : oldVal.toString())) {
          return;
        } else {
          timestampShowContent.value = handleItemTime(
            currTime.value,
            prevTime.value
          );
        }
      },
      {
        immediate: true
      }
    );
    return (_ctx, _cache) => {
      return Vue.unref(timestampShowFlag) ? (Vue.openBlock(), Vue.createElementBlock("div", _hoisted_1, Vue.toDisplayString(Vue.unref(timestampShowContent)), 1)) : Vue.createCommentVNode("", true);
    };
  }
});
exports.default = _sfc_main;
